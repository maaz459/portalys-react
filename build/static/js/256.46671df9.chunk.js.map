{"version":3,"file":"static/js/256.46671df9.chunk.js","mappings":";wGAgBA,SAAgBA,EAAOC,GACrB,GAAIC,MAAMC,QAAQF,GAAQ,CAExB,IADA,IAAMG,EAAuB,GACpBC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAChCD,EAAOG,KAAKP,EAAOC,EAAMI,KAE3B,IAAMG,EAAMC,EAAW,aAAIL,GAC3B,OAAOK,EAAYC,EAAaF,EAAIF,OAAQ,KAAME,GAEpD,IAAMG,EAAWC,EAAQX,GACzB,OAAwB,IAApBU,EAASL,QAAgBK,EAAS,GAAK,IAClCA,EAEFF,EAAYC,EAAaC,EAASL,OAAQ,KAAMK,EACzD,CASA,SAASE,EAAUZ,EAAmBa,EAAeC,GACnD,GAAIA,EAAMd,EAAMK,OACd,MAAM,IAAIU,MAAM,kEAElB,OAAOf,EAAMgB,MAAMH,EAAOC,EAC5B,CAMA,SAASG,EAAaC,GACpB,GAAa,IAATA,EAAE,GACJ,MAAM,IAAIH,MAAM,4BAElB,OAAOI,EAAaC,EAAWF,GACjC,CAEA,SAAST,EAAaY,EAAaC,GACjC,GAAID,EAAM,GACR,OAAOE,WAAWC,KAAK,CAACH,EAAMC,IAEhC,IAAMG,EAAYC,EAAYL,GAExBM,EAAYD,EAAYJ,EAAS,GADvBG,EAAUpB,OAAS,GAEnC,OAAOkB,WAAWC,KAAKI,EAAWD,EAAYF,GAChD,CAUA,SAAgBI,EAAO7B,GAA4B,IAAd8B,EAAS,UAAH,8CACzC,GAAqB,qBAAV9B,GAAmC,OAAVA,GAA4C,IAAzBA,EAAcK,OACnE,OAAOkB,WAAWC,KAAK,IAGzB,IAAMO,EAAapB,EAAQX,GACrBgC,EAAUC,EAAQF,GAExB,GAAID,EACF,OAAOE,EAET,GAAiC,IAA7BA,EAAQE,UAAU7B,OACpB,MAAM,IAAIU,MAAM,uCAGlB,OAAOiB,EAAQG,IACjB,CAGA,SAASF,EAAQjC,GACf,IAAIK,EAAgB+B,EAAiBD,EAAkBE,EAA4BC,EAC7EN,EAAU,GACVL,EAAY3B,EAAM,GAExB,GAAI2B,GAAa,IAEf,MAAO,CACLQ,KAAMnC,EAAMgB,MAAM,EAAG,GACrBkB,UAAWlC,EAAMgB,MAAM,IAEpB,GAAIW,GAAa,IAAM,CAY5B,GATAtB,EAASsB,EAAY,IAInBQ,EADgB,MAAdR,EACKJ,WAAWC,KAAK,IAEhBZ,EAAUZ,EAAO,EAAGK,GAGd,IAAXA,GAAgB8B,EAAK,GAAK,IAC5B,MAAM,IAAIpB,MAAM,6EAGlB,MAAO,CACLoB,KAAAA,EACAD,UAAWlC,EAAMgB,MAAMX,IAEpB,GAAIsB,GAAa,IAAM,CAI5B,GADAS,EAAUT,EAAY,IAClB3B,EAAMK,OAAS,EAAI+B,EACrB,MAAM,IAAIrB,MAAM,mDAGlB,IADAV,EAASY,EAAaL,EAAUZ,EAAO,EAAGoC,MAC5B,GACZ,MAAM,IAAIrB,MAAM,6DAIlB,MAAO,CACLoB,KAHFA,EAAOvB,EAAUZ,EAAOoC,EAAS/B,EAAS+B,GAIxCF,UAAWlC,EAAMgB,MAAMX,EAAS+B,IAE7B,GAAIT,GAAa,IAAM,CAI5B,IADAU,EAAiBzB,EAAUZ,EAAO,EADlCK,EAASsB,EAAY,KAEdU,EAAehC,QACpBiC,EAAIL,EAAQI,GACZL,EAAQ1B,KAAKgC,EAAEH,MACfE,EAAiBC,EAAEJ,UAGrB,MAAO,CACLC,KAAMH,EACNE,UAAWlC,EAAMgB,MAAMX,IAMzB,IADAA,EAASY,EAAaL,EAAUZ,EAAO,EADvCoC,EAAUT,EAAY,OAET,GACX,MAAM,IAAIZ,MAAM,uCAElB,IAAMwB,EAAcH,EAAU/B,EAC9B,GAAIkC,EAAcvC,EAAMK,OACtB,MAAM,IAAIU,MAAM,qDAKlB,IAFAsB,EAAiBzB,EAAUZ,EAAOoC,EAASG,GAEpCF,EAAehC,QACpBiC,EAAIL,EAAQI,GACZL,EAAQ1B,KAAKgC,EAAEH,MACfE,EAAiBC,EAAEJ,UAGrB,MAAO,CACLC,KAAMH,EACNE,UAAWlC,EAAMgB,MAAMuB,GAG7B,yFArKAC,EAAAA,OAAAA,EA2DAA,EAAAA,OAAAA,EA4GA,IAAMC,EAAcxC,MAAMuB,KAAK,CAAEnB,OAAQ,MAAO,SAACqC,EAAItC,GAAC,OAAKA,EAAEuC,SAAS,IAAIC,SAAS,EAAG,IAAI,IAC1F,SAASxB,EAAWyB,GAGlB,IADA,IAAIC,EAAM,GACD1C,EAAI,EAAGA,EAAIyC,EAAOxC,OAAQD,IACjC0C,GAAOL,EAAYI,EAAOzC,IAE5B,OAAO0C,CACT,CAEA,SAAS3B,EAAa4B,GACpB,IAAMC,EAAOC,OAAOC,SAASH,EAAS,IACtC,GAAIE,OAAOE,MAAMH,GAAO,MAAM,IAAIjC,MAAM,yBACxC,OAAOiC,CACT,CAGA,SAASpB,EAAWkB,GAClB,GAAmB,kBAARA,EACT,MAAM,IAAIM,UAAU,2CAA6CN,GAEnE,GAAIA,EAAIzC,OAAS,EAAG,MAAM,IAAIU,MAAM,6CAEpC,IADA,IAAMsC,EAAQ,IAAI9B,WAAWuB,EAAIzC,OAAS,GACjCD,EAAI,EAAGA,EAAIiD,EAAMhD,OAAQD,IAAK,CACrC,IAAMkD,EAAQ,EAAJlD,EACViD,EAAMjD,GAAKe,EAAa2B,EAAI9B,MAAMsC,EAAGA,EAAI,IAE3C,OAAOD,CACT,CAGA,SAAS7C,IAAmC,2BAApB+C,EAAoB,yBAApBA,EAAoB,gBAC1C,GAAsB,IAAlBA,EAAOlD,OAAc,OAAOkD,EAAO,GAGvC,IAFA,IAAMlD,EAASkD,EAAOC,QAAO,SAACC,EAAGC,GAAG,OAAKD,EAAIC,EAAIrD,MAAM,GAAE,GACnDsD,EAAS,IAAIpC,WAAWlB,GACrBD,EAAI,EAAGwD,EAAM,EAAGxD,EAAImD,EAAOlD,OAAQD,IAAK,CAC/C,IAAMsD,EAAMH,EAAOnD,GACnBuD,EAAOE,IAAIH,EAAKE,GAChBA,GAAOF,EAAIrD,OAEb,OAAOsD,CACT,CAOA,SAASG,EAAYC,GACnB,OAAO,IAAIC,aAAcjE,OAAOgE,EAClC,CAGA,SAASrC,EAAYuC,GACnB,GAAIA,EAAU,EACZ,MAAM,IAAIlD,MAAM,kDAElB,IAAM+B,EAAMmB,EAAQtB,SAAS,IAC7B,OAAOG,EAAIzC,OAAS,EAAI,IAAH,OAAOyC,GAAQA,CACtC,CAQA,SAASoB,EAAcC,GACrB,OAAOA,EAAI9D,QAAU,GAAgB,MAAX8D,EAAI,IAAyB,MAAXA,EAAI,EAClD,CAWA,SAASxD,EAAQO,GACf,GAAIA,aAAaK,WACf,OAAOL,EAET,GAAiB,kBAANA,EACT,OAAIgD,EAAchD,GACTU,GAxBM6B,EAWE,kBADGU,EAcyBjD,GAZtCiD,EAEFD,EAAcC,GAAOA,EAAInD,MAAM,GAAKmD,GAblC9D,OAAS,EAAI,IAAH,OAAOoD,GAAMA,GAyBvBK,EAAY5C,GA1BvB,IAAmBuC,EAUKU,EAkBtB,GAAiB,kBAANjD,GAA+B,kBAANA,EAClC,OAAKA,EAGEU,EAAWF,EAAYR,IAFrBK,WAAWC,KAAK,IAI3B,GAAU,OAANN,QAAoBkD,IAANlD,EAChB,OAAOK,WAAWC,KAAK,IAEzB,MAAM,IAAIT,MAAM,6CAA+CG,EACjE,CAEasB,EAAAA,MAAQ,CACnBpB,WAAAA,EACAZ,YAAAA,EACAoB,WAAAA,EACAkC,YAAAA,GAGWtB,EAAAA,IAAM,CAAEzC,OAAAA,EAAQ8B,OAAAA,4eCpS7B,eACA,UACA,WACA,WAEA,WASA,WACA,WACA,WAIMwC,EAAMC,OAAO,GAWNC,EAAO,WAqClB,aAA8F,IAAlFC,EAAQ,UAAH,6CAAGH,EAAKI,EAAU,UAAH,6CAAGJ,EAAKK,EAAc,UAAH,6CAAGC,EAAAA,cAAeC,EAAW,UAAH,6CAAGD,EAAAA,eAAc,UAC5FE,KAAKL,MAAQA,EACbK,KAAKJ,QAAUA,EACfI,KAAKH,YAAcA,EACnBG,KAAKD,SAAWA,EAEhBC,KAAKC,WACP,CAbC,OAaA,4BAEO,WACN,GAAID,KAAKL,MAAQH,EACf,MAAM,IAAItD,MAAM,mCAElB,GAAI8D,KAAKJ,QAAUJ,EACjB,MAAM,IAAItD,MAAM,qCAElB,GAAgC,KAA5B8D,KAAKH,YAAYrE,OACnB,MAAM,IAAIU,MAAM,wCAElB,GAA6B,KAAzB8D,KAAKD,SAASvE,OAChB,MAAM,IAAIU,MAAM,oCAEpB,GAEA,iBAGA,WACE,MAAO,EACL,IAAAgE,wBAAuBF,KAAKL,QAC5B,IAAAO,wBAAuBF,KAAKJ,SAC5BI,KAAKH,YACLG,KAAKD,SAET,GAEA,uBAGA,WACE,OAAOI,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAYL,KAAKM,QACjD,GAEA,wBAGA,WACE,OAAQN,KAAKD,SAASQ,OAAOT,EAAAA,eAC/B,GAEA,qBAKA,WACE,OAAOE,KAAKJ,UAAYJ,GAAOQ,KAAKL,QAAUH,GAAOQ,KAAKD,SAASQ,OAAOT,EAAAA,eAC5E,IAAC,8BAxFD,SAAuBU,GACrB,IAAQb,EAA0Ca,EAA1Cb,MAAOC,EAAmCY,EAAnCZ,QAASC,EAA0BW,EAA1BX,YAAaE,EAAaS,EAAbT,SAErC,OAAO,IAAIL,OACCH,IAAVI,GAAsB,IAAAc,iBAAe,IAAAC,UAASf,SAAUJ,OAC5CA,IAAZK,GAAwB,IAAAa,iBAAe,IAAAC,UAASd,SAAYL,OAC5CA,IAAhBM,GAA4B,IAAAa,UAASb,QAAeN,OACvCA,IAAbQ,GAAyB,IAAAW,UAASX,QAAYR,EAElD,GAAC,sCAEM,SAAgCoB,GACrC,IAAMC,GAAS,IAAAC,aAAYT,EAAAA,IAAIpD,OAAON,WAAWC,KAAKgE,KAEtD,IAAKvF,MAAMC,QAAQuF,GACjB,MAAM,IAAI1E,MAAM,mDAGlB,OAAO8D,KAAKc,gBAAgBF,EAC9B,GAAC,6BAEM,SAAuBA,GAC5B,QAAgDA,EAAM,GAA/CjB,EAAK,KAAEC,EAAO,KAAEC,EAAW,KAAEE,EAAQ,KAE5C,OAAO,IAAIL,GAAQ,IAAAe,gBAAed,IAAQ,IAAAc,gBAAeb,GAAUC,EAAaE,EAClF,KAAC,EA/BiB,GAApBpC,EAAAA,QAAAA,EAoGaA,EAAAA,eAAiB,SAAUoD,GACtC,KACE,IAAAC,gBAAeD,GACf,MAAOE,GACP,OAAO,EAGT,MAAO,sBAAsBC,KAAKH,EACpC,EAcapD,EAAAA,kBAAoB,SAC/BoD,EACAI,IAEA,IAAAC,mBAAkBL,GAClB,IAAMM,GAAU,IAAAC,gBAAeP,GAAYQ,cAEvCC,EAAS,QACUjC,IAAnB4B,IAEFK,GADgB,IAAAf,iBAAe,IAAAC,UAASS,IACvBrD,WAAa,MAOhC,IAJA,IAAMpC,EAAMyE,EAAOxD,KAAK6E,EAASH,EAAS,QACpCI,GAAO,IAAAlF,aAAW,IAAAmF,WAAUhG,IAC9BiG,EAAM,KAEDpG,EAAI,EAAGA,EAAI8F,EAAQ7F,OAAQD,IAC9B8C,SAASoD,EAAKlG,GAAI,KAAO,EAC3BoG,GAAON,EAAQ9F,GAAGqG,cAElBD,GAAON,EAAQ9F,GAInB,OAAOoG,CACT,EAOahE,EAAAA,uBAAyB,SACpCoD,EACAI,GAEA,OAAO,IAAAU,gBAAed,KAAe,IAAAe,mBAAkBf,EAAYI,KAAoBJ,CACzF,EAOapD,EAAAA,gBAAkB,SAAUhB,EAAcgD,GAIrD,OAHA,IAAAoC,gBAAepF,IACf,IAAAoF,gBAAepC,IAEX,IAAAc,gBAAed,KAAWF,OAAO,GAG5BU,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY,CAAC1D,EAAM,UAAiBR,OAAO,IAI9EgE,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY,CAAC1D,EAAMgD,OAAWxD,OAAO,GAC/E,EAQawB,EAAAA,iBAAmB,SAAUhB,EAAcqF,EAAcC,GAKpE,IAJA,IAAAF,gBAAepF,IACf,IAAAoF,gBAAeC,IACf,IAAAD,gBAAeE,GAEK,KAAhBtF,EAAKnB,OACP,MAAM,IAAIU,MAAM,oCAElB,GAAoB,KAAhB8F,EAAKxG,OACP,MAAM,IAAIU,MAAM,oCAGlB,IAAMmF,GAAU,IAAAK,WACdvB,EAAO+B,OAAO,CAAC/B,EAAOxD,KAAK,KAAM,OAAQA,EAAMqF,GAAM,IAAAN,WAAUO,MAGjE,OAAO,IAAAvB,UAASW,GAASlF,OAAO,GAClC,EAKawB,EAAAA,eAAiB,SAAUwE,GACtC,OAAOC,EAAAA,MAAMC,kBAAkBF,EACjC,EAQaxE,EAAAA,cAAgB,SAAU2E,GAA4C,IAAzBC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,IAAAA,UAAAA,GAExD,IADA,IAAAR,gBAAeO,GACU,KAArBA,EAAU9G,OAGZ,IAEE,OADA4G,EAAAA,MAAMI,QAAQrC,EAAO+B,OAAO,CAAC/B,EAAOxD,KAAK,CAAC,IAAK2F,MACxC,EACP,MAAOrB,GACP,OAAO,EAIX,IAAKsB,EACH,OAAO,EAGT,IAEE,OADAH,EAAAA,MAAMI,QAAQF,IACP,EACP,MAAOrB,GACP,OAAO,EAEX,EAQatD,EAAAA,aAAe,SAAU8E,GAAyC,IAAzBF,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,IAAAA,UAAAA,GAKpD,IAJA,IAAAR,gBAAeU,GACXF,GAA8B,KAAlBE,EAAOjH,SACrBiH,EAAStC,EAAOxD,KAAKyF,EAAAA,MAAMI,QAAQC,GAAQC,YAAW,GAAOvG,MAAM,KAE/C,KAAlBsG,EAAOjH,OACT,MAAM,IAAIU,MAAM,sCAGlB,OAAOiE,EAAOxD,MAAK,IAAA+E,WAAUe,IAAStG,OAAO,GAC/C,EACawB,EAAAA,gBAAkBA,EAAAA,aAMlBA,EAAAA,gBAAkB,SAAUwE,GAGvC,OAFA,IAAAJ,gBAAeI,GAERhC,EAAOxD,KAAKyF,EAAAA,MAAMO,eAAeR,GAAYO,YAAW,GAAOvG,MAAM,GAC9E,EAMawB,EAAAA,iBAAmB,SAAUwE,GACxC,OAAO,IAAAS,kBAAgB,IAAAC,iBAAgBV,GACzC,EAKaxE,EAAAA,aAAe,SAAU2E,GAKpC,OAJA,IAAAP,gBAAeO,GACU,KAArBA,EAAU9G,SACZ8G,EAAYnC,EAAOxD,KAAKyF,EAAAA,MAAMI,QAAQF,GAAWI,YAAW,GAAOvG,MAAM,KAEpEmG,CACT,EAKa3E,EAAAA,YAAc,WACzB,IACMmF,GAAO,IAAAC,OADS,IAEtB,OAAO,IAAAC,aAAYF,EACrB,EAgBA,SAAgBG,EAAoBC,GAClC,QAAgDA,EAAI,GAA7CvD,EAAK,KAAEC,EAAO,KAAEC,EAAW,KAAEE,EAAQ,KAC5C,MAAO,CACLJ,EACAC,EACoC,KAApC,IAAAiB,aAAYhB,GAAarE,OAAesE,EAAAA,cAAgBD,EACvB,KAAjC,IAAAgB,aAAYd,GAAUvE,OAAesE,EAAAA,eAAiBC,EAE1D,CAnBapC,EAAAA,cAAgB,SAAUoD,GACrC,KACE,IAAAC,gBAAeD,GACf,MAAOE,GACP,OAAO,EAIT,OADiB,IAAAkC,iBACGpC,CACtB,EAEApD,EAAAA,oBAAAA,EAUA,IAAMyF,EAAgB,IAAI1G,WAAW,GACrCiB,EAAAA,kBAAA,SAAkCuF,GAChC,QAAgDA,EAAI,GAA7CvD,EAAK,KAAEC,EAAO,KAAEC,EAAW,KAAEE,EAAQ,KAC5C,MAAO,CACLJ,EACAC,GACA,IAAAiB,aAAYhB,GAAaU,OAAOT,EAAAA,eAAiBsD,EAAgBvD,GACjE,IAAAgB,aAAYd,GAAUQ,OAAOT,EAAAA,gBAAkBsD,EAAgBrD,EAEnE,EAKApC,EAAAA,iBAAA,SAAiCuF,GAA2C,IAAlBG,IAAc,UAAH,+CAC7DC,EAAcD,EAAcJ,EAAoBC,GAAQA,EAC9D,OAAO,IAAArC,aAAYT,EAAAA,IAAIlF,OAAOoI,GAChC,oKCrXA,eAOA,WAKaC,EAAO,WAGlB,WAAY7H,GACV,GADqB,UACF,KAAfA,EAAIF,OACN,MAAM,IAAIU,MAAM,0BAElB8D,KAAKtE,IAAMA,CACb,CAsEC,OApED,yBAyEA,SAAO2F,GACL,OAAOrB,KAAKtE,IAAI6E,OAAOc,EAAQ3F,IACjC,GAEA,oBAGA,WACE,OAAOsE,KAAKO,OAAOgD,EAAQC,OAC7B,GAEA,yCAIA,WACE,IAAMnC,GAAU,IAAAZ,gBAAeT,KAAKtE,KAC9B+H,EAAWhE,OAAO,GAClBiE,EAAWjE,OAAO,UACxB,OAAO4B,GAAWoC,GAAYpC,GAAWqC,CAC3C,GAEA,sBAGA,WACE,MAAO,KAAO1D,KAAKtE,IAAIoC,SAAS,MAClC,GAEA,sBAGA,WACE,OAAOqC,EAAOxD,KAAKqD,KAAKtE,IAC1B,IAAC,mBAxGD,WACE,OAAO,IAAI6H,GAAQ,IAAAR,OAAM,IAC3B,GAEA,wBAIA,SAAkBzD,GAChB,KAAK,IAAAuC,gBAAevC,GAClB,MAAM,IAAIpD,MAAM,mBAElB,OAAO,IAAIqH,GAAQ,IAAA7C,UAASpB,GAC9B,GAEA,2BAIA,SAAqBmD,GACnB,IAAKtC,EAAOwD,SAASlB,GACnB,MAAM,IAAIvG,MAAM,+BAGlB,OAAO,IAAIqH,GADC,IAAAK,cAAanB,GAE3B,GAEA,4BAIA,SAAsBN,GACpB,IAAKhC,EAAOwD,SAASxB,GACnB,MAAM,IAAIjG,MAAM,gCAGlB,OAAO,IAAIqH,GADC,IAAAM,kBAAiB1B,GAE/B,GAEA,sBAKA,SAAgBxF,EAAegD,GAC7B,GAAqB,kBAAVA,EACT,MAAM,IAAIzD,MAAM,iCAElB,OAAO,IAAIqH,GAAQ,IAAAO,iBAAgBnH,EAAKjB,KAAK,IAAAqI,gBAAepE,IAC9D,GAEA,uBAMA,SAAiBhD,EAAeqF,EAAcC,GAC5C,IAAK9B,EAAOwD,SAAS3B,GACnB,MAAM,IAAI9F,MAAM,gCAElB,IAAKiE,EAAOwD,SAAS1B,GACnB,MAAM,IAAI/F,MAAM,oCAElB,OAAO,IAAIqH,GAAQ,IAAAS,kBAAiBrH,EAAKjB,IAAKsG,EAAMC,GACtD,KAAC,EA9EiB,GAApBtE,EAAAA,QAAAA,sCCZA,kMASA,eASasG,EAAsC,oFAuLhD,OAvLgD,uBACjD,SAAwBC,GAA4C,6BAAtBC,EAAsB,iCAAtBA,EAAsB,kBAClE,IAAK7G,EAAkB6G,EAAI,GAAhBC,EAAYD,EAAI,GACrBE,EAAOrE,KAETsE,EAAwC,QAA3B,EAAAD,EAAaE,QAAQL,UAAM,QAAI,GA2ChD,YAxCiB3E,IAAb6E,GAA0C,oBAAT9G,IACnC8G,EAAW9G,EACXA,OAAOiC,GAIK,gBAAV2E,GAAqC,mBAAVA,IAC7B5G,EAAO,CACL4G,MAAO5G,EACPkH,GAAIJ,GAGNA,OAAW7E,GAIb+E,EAAYlJ,MAAMC,QAAQiJ,GAAaA,EAAY,CAACA,IAEpD,IAAAG,YACEH,EAAUnI,SACV,SAAUqI,EAASE,GACjB,IAAIC,EAGJ,GAAIH,EAAGhJ,OAAS,EAAG,CACjB,IACEgJ,EAAGI,KAAKP,EAAM/G,GACd,MAAO2D,GACP0D,EAAM1D,EAGR,OAAOyD,EAAKC,GAIdH,EAAGI,KAAKP,EAAM/G,EAAMoH,EACtB,GACAN,GAGKC,EAAKQ,cAAcX,GAAS,CACrC,GAAC,kBAED,SAAwBA,EAAmBY,GACzC,IACIC,EADEV,EAAOrE,KAGb,GAAwB,oBAAb8E,EACT,MAAM,IAAIvG,UAAU,+BAkBtB,OAbEwG,EADED,EAAStJ,QAAU,EACjB,SAAUyF,EAAMyD,GAClBL,EAAKW,eAAed,EAAOa,GACtBD,EAAS7D,EAAGyD,EACnB,EAEI,SAAUzD,GACZoD,EAAKW,eAAed,EAAOa,GACtBD,EAAS7D,EAAG8D,EACnB,EAGFV,EAAKY,GAAGf,EAAOa,GAERV,CACT,GAAC,mBAED,SAAyBH,EAAmBY,GAAc,MACpDR,EAAwC,QAA3B,EAAAtE,KAAauE,QAAQL,UAAM,QAAI,GAGhD,GAAwB,oBAAbY,EACT,MAAM,IAAIvG,UAAU,+BAUtB,OANKnD,MAAMC,QAAQiJ,KACftE,KAAauE,QAAQL,GAASI,EAAY,CAACA,IAG/CA,EAAUY,QAAQJ,GAEX9E,IACT,GAAC,oBAED,SAA0BkE,EAAmBiB,EAAcL,GACzD,OAAO9E,KAAKoF,cAAclB,EAAOiB,EAAQL,EAC3C,GAAC,mBAED,SAAyBZ,EAAmBiB,EAAcL,GACxD,OAAO9E,KAAKoF,cAAclB,EAAOiB,EAAQL,EAAU,QACrD,GAAC,2BAEO,SACNZ,EACAiB,EACAL,EACAM,GAAsB,MAGlB7J,EACA8J,EAFAf,EAAwC,QAA3B,EAAAtE,KAAauE,QAAQL,UAAM,QAAI,GAG1CoB,EAAwB,UAAlBF,EAA4B,EAAI,EAG5C,GAAwB,oBAAbN,EACT,MAAM,IAAIvG,UAAU,+BAEtB,GAAsB,oBAAX4G,EACT,MAAM,IAAI5G,UAAU,6BAUtB,IANKnD,MAAMC,QAAQiJ,KACftE,KAAauE,QAAQL,GAASI,EAAY,CAACA,IAG/Ce,EAAQf,EAAU9I,OAEbD,EAAI+I,EAAU9I,OAAQD,KACzB,GAAI+I,EAAU/I,KAAO4J,EAAQ,CAC3BE,EAAQ9J,EAAI+J,EACZ,MAMJ,OAFAhB,EAAUiB,OAAOF,EAAO,EAAGP,GAEpB9E,IACT,GAAC,gBAED,SAAsBkE,EAAmBY,GACvC,OAAO,EAAP,oCAAgBZ,EAAOY,EACzB,GAAC,yBAED,SAA+BZ,EAAmBY,GAChD,OAAO,EAAP,6CAAyBZ,EAAOY,EAClC,GAAC,6BAED,SAAmCZ,EAAmBY,GACpD,OAAO,EAAP,iDAA6BZ,EAAOY,EACtC,GAAC,iCAED,SAAuCZ,EAAmBY,GACxD,OAAO,EAAP,qDAAiCZ,EAAOY,EAC1C,GAAC,gCAED,SAAmBZ,GACjB,OAAO,EAAP,oDAAgCA,EAClC,GAAC,4BAED,SAAkCA,EAAmBY,GACnD,OAAO,EAAP,gDAA4BZ,EAAOY,EACrC,GAAC,wBAED,WACE,OAAO,EAAP,4CACF,GAAC,uBAED,SAA6BZ,GAC3B,OAAO,EAAP,2CAAuBA,EACzB,GAAC,2BAED,SAAcA,GACZ,OAAO,EAAP,+CAA2BA,EAC7B,GAAC,6BAED,WACE,OAAO,EAAP,iDACF,GAAC,6BAED,SAAgBsB,GACd,OAAO,EAAP,iDAA6BA,EAC/B,KAAC,EAvLgD,CARnD,SAQ2DC,cAA3D9H,EAAAA,kBAAAA,sfClBA,eACA,WAeaA,EAAAA,SAAW,SAAUpC,GAChC,IAAK6C,OAAOsH,cAAcnK,IAAMA,EAAI,EAClC,MAAM,IAAIW,MAAM,qCAAD,OAAsCX,IAEvD,MAAO,KAAP,OAAYA,EAAEuC,SAAS,IACzB,EAOaH,EAAAA,YAAc,SAAUpC,GACnC,IAAM0C,GAAM,IAAA0H,UAASpK,GACrB,OAAO4E,EAAOxD,MAAK,IAAAiJ,WAAU3H,EAAI9B,MAAM,IAAK,MAC9C,EAMawB,EAAAA,MAAQ,SAAUkI,GAC7B,OAAO1F,EAAO2F,YAAYD,GAAOE,KAAK,EACxC,EAUA,IAAMC,EAAY,SAAUC,EAAazK,EAAgB0K,GACvD,IAAMxK,GAAM,IAAAqH,OAAMvH,GAClB,OAAI0K,EACED,EAAIzK,OAASA,GACfyK,EAAIE,KAAKzK,GACFA,GAEFuK,EAAI9J,MAAM,EAAGX,GAEhByK,EAAIzK,OAASA,GACfyK,EAAIE,KAAKzK,EAAKF,EAASyK,EAAIzK,QACpBE,GAEFuK,EAAI9J,OAAOX,EAEtB,EASamC,EAAAA,cAAgB,SAAUsI,EAAazK,GAElD,OADA,IAAAuG,gBAAekE,GACRD,EAAUC,EAAKzK,GAAQ,EAChC,EASamC,EAAAA,eAAiB,SAAUsI,EAAazK,GAEnD,OADA,IAAAuG,gBAAekE,GACRD,EAAUC,EAAKzK,GAAQ,EAChC,EAOA,IAAM4K,EAAa,SAAUxH,GAE3B,IADA,IAAIyH,EAAQzH,EAAE,GACPA,EAAEpD,OAAS,GAA0B,MAArB6K,EAAMvI,YAE3BuI,GADAzH,EAAIA,EAAEzC,MAAM,IACF,GAEZ,OAAOyC,CACT,EAOajB,EAAAA,YAAc,SAAUiB,GAEnC,OADA,IAAAmD,gBAAenD,GACRwH,EAAWxH,EACpB,EAOajB,EAAAA,WAAa,SAAUiB,GAElC,OADA,IAAA0H,eAAc1H,GACPwH,EAAWxH,EACpB,EAOajB,EAAAA,eAAiB,SAAUiB,GAGtC,OAFA,IAAAwC,mBAAkBxC,GAClBA,GAAI,IAAA0C,gBAAe1C,GACX,KAAOwH,EAAWxH,EAC5B,EAoBajB,EAAAA,SAAW,SAAUtB,GAChC,GAAU,OAANA,QAAoBkD,IAANlD,EAChB,OAAO8D,EAAO2F,YAAY,GAG5B,GAAI3F,EAAOwD,SAAStH,GAClB,OAAO8D,EAAOxD,KAAKN,GAGrB,GAAIjB,MAAMC,QAAQgB,IAAMA,aAAaK,WACnC,OAAOyD,EAAOxD,KAAKN,GAGrB,GAAiB,kBAANA,EAAgB,CACzB,KAAK,IAAAkK,aAAYlK,GACf,MAAM,IAAIH,MAAM,8GAAD,OACiGG,IAGlH,OAAO8D,EAAOxD,MAAK,IAAAiJ,YAAU,IAAAtE,gBAAejF,IAAK,OAGnD,GAAiB,kBAANA,EACT,OAAO,IAAAmK,aAAYnK,GAGrB,GAAiB,kBAANA,EAAgB,CACzB,GAAIA,EAAIoD,OAAO,GACb,MAAM,IAAIvD,MAAM,oDAAD,OAAqDG,IAEtE,IAAIoK,EAAIpK,EAAEyB,SAAS,IAEnB,OADI2I,EAAEjL,OAAS,IAAGiL,EAAI,IAAMA,GACrBtG,EAAOxD,KAAK8J,EAAG,OAGxB,GAAIpK,EAAEqK,QAEJ,OAAOvG,EAAOxD,KAAKN,EAAEqK,WAGvB,GAAIrK,EAAEqE,SACJ,OAAOP,EAAOxD,KAAKN,EAAEqE,YAGvB,MAAM,IAAIxE,MAAM,eAClB,EAcA,SAAgBuE,EAAe/E,GAC7B,IAAMuC,GAAM,IAAA+E,aAAYtH,GACxB,MAAY,OAARuC,EACKwB,OAAO,GAETA,OAAOxB,EAChB,CAKA,SAAgB8F,EAAe4C,GAC7B,OAAO,IAAAjG,UAAS,KAAOiG,EAAI7I,SAAS,IACtC,CArBaH,EAAAA,YAAc,SAAUjC,GAEnC,MAAO,MADPA,GAAM,IAAAgF,UAAShF,IACGoC,SAAS,MAC7B,EAKAH,EAAAA,eAAAA,EAWAA,EAAAA,eAAAA,EASaA,EAAAA,YAAc,SAAUjC,GACnC,IAAMkL,EAAMxI,OAAOqC,EAAe/E,IAClC,IAAK0C,OAAOsH,cAAckB,GAAM,MAAM,IAAI1K,MAAM,0BAChD,OAAO0K,CACT,EAMajJ,EAAAA,WAAa,SAAUgJ,GAClC,OAAOlH,OAAOoH,OAAO,IAAKpG,EAAekG,GAC3C,EAMahJ,EAAAA,WAAa,SAAUgJ,GAClC,OAAO5C,EAAetE,OAAOqH,QAAQ,IAAKH,GAC5C,EAKahJ,EAAAA,aAAe,SAAU2B,GACpC,MAAmB,kBAARA,IAIJ,IAAAD,eAAcC,GAHZA,EAGyB,KAAOA,CAC3C,EAUA3B,EAAAA,MAAA,SAAsBoJ,GAA+C,IAAtBC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAoB,GAC3DC,EAAY9G,EAAOwD,SAASoD,GAAUA,EAAOjJ,SAAS,OAASiJ,EACrE,OAAIE,EAAUzL,QAAUwL,EACfC,EAEFA,EAAU9K,MAAM,EAAG6K,GAAa,QACzC,EAmBarJ,EAAAA,OAAS,SAAUM,GAG9B,IADAA,GAAM,IAAAqD,gBAAerD,IACbzC,OAAS,IAAM,EACrB,MAAM,IAAIU,MAAM,2DAIlB,OAFkBiE,EAAOxD,KAAKsB,EAAIiJ,QALd,iBAKmC,IAAK,OAE3CpJ,SAAS,OAC5B,EAOaH,EAAAA,SAAW,SAAUwJ,GAChC,GAAIhH,EAAOwD,SAASwD,GAClB,MAAO,KAAP,OAAYA,EAAGrJ,SAAS,QACnB,GAAIqJ,aAAc/L,MAAO,CAE9B,IADA,IAAMoD,EAAQ,GACLjD,EAAI,EAAGA,EAAI4L,EAAG3L,OAAQD,IAC7BiD,EAAM/C,MAAK,IAAA2L,UAASD,EAAG5L,KAEzB,OAAOiD,EAEX,EAeab,EAAAA,wBAA0B,SAAUiD,GAC/C,IAAK,IAAL,MAAqByG,OAAOC,QAAQ1G,GAAO,eAAE,CAAxC,gBAAO2G,EAAC,KAAElL,EAAC,KACd,QAAUkD,IAANlD,GAAmBA,EAAEb,OAAS,GAAc,IAATa,EAAE,GACvC,MAAM,IAAIH,MAAM,GAAD,OAAIqL,EAAC,kDAA0ClL,EAAEyB,SAAS,SAG/E,EAQAH,EAAAA,YAAA,SAAgBkD,EAAYhC,GAC1B,OAAKzD,MAAMC,QAAQwD,GAGZA,EAAI2I,KAAI,SAAC5I,GAAC,OAAKiC,EAAYjC,EAAE,IAF3BuB,EAAOxD,KAAKkC,EAGvB,EAQAlB,EAAAA,YAAA,SAAgB0C,EAAYxB,GAC1B,OAAKzD,MAAMC,QAAQwD,GAGZA,EAAI2I,KAAI,SAAC5I,GAAC,OAAKyB,EAAYzB,EAAE,IAF3BlC,WAAWC,KAAQ,OAAHkC,QAAG,IAAHA,EAAAA,EAAO,GAGlC,EAKalB,EAAAA,YAAc,SAACgJ,GAC1B,MAAO,KAAOA,EAAI7I,SAAS,GAC7B,EAOAH,EAAAA,uBAAA,SAAuC8J,GACrC,OAAO,IAAAC,aAAY3D,EAAe0D,GACpC,EAEA9J,EAAAA,oBAAA,SAAoC8J,GAClC,OAAO,IAAAC,cAAY,IAAAlB,aAAYiB,GACjC,4UCvYA,eACA,WAKa9J,EAAAA,WAAa8B,OAAO,sBAKpB9B,EAAAA,YAAc8B,OACzB,sEAMW9B,EAAAA,mBAAqB,SAAA8B,OAAO,GAAMA,OAAO,MAAOA,OAAO,GAEvD9B,EAAAA,gBAAkByE,EAAAA,MAAMqE,EACxB9I,EAAAA,sBAAwByE,EAAAA,MAAMqE,EAAIhH,OAAO,GAKzC9B,EAAAA,WAAa8B,OACxB,uEAMW9B,EAAAA,iBAAmB,mEAKnBA,EAAAA,eAAiBgK,EAAAA,OAAOhL,KAAKgB,EAAAA,iBAAkB,OAK/CA,EAAAA,sBACX,mEAKWA,EAAAA,oBAAsBgK,EAAAA,OAAOhL,KAAKgB,EAAAA,sBAAuB,OAKzDA,EAAAA,gBAAkB,mEAKlBA,EAAAA,cAAgBgK,EAAAA,OAAOhL,KAAKgB,EAAAA,gBAAiB,OAK7CA,EAAAA,iBAAmBgK,EAAAA,OAAOhL,KAAK,CAAC,8LChE7C,eAMagB,EAAAA,kBAAoB,SAAUxC,GACzC,KAAK,IAAAoL,aAAYpL,GAAQ,CACvB,IAAM8K,EAAM,oEAAH,OAAuE9K,GAChF,MAAM,IAAIe,MAAM+J,GAEpB,EAMatI,EAAAA,eAAiB,SAAUxC,GACtC,IAAKgF,EAAOwD,SAASxI,GAAQ,CAC3B,IAAM8K,EAAM,mDAAH,OAAsD9K,GAC/D,MAAM,IAAIe,MAAM+J,GAEpB,EAMatI,EAAAA,cAAgB,SAAUxC,GACrC,IAAKC,MAAMC,QAAQF,GAAQ,CACzB,IAAM8K,EAAM,0DAAH,OAA6D9K,GACtE,MAAM,IAAIe,MAAM+J,GAEpB,EAMatI,EAAAA,eAAiB,SAAUxC,GACtC,GAAqB,kBAAVA,EAAoB,CAC7B,IAAM8K,EAAM,oDAAH,OAAuD9K,GAChE,MAAM,IAAIe,MAAM+J,GAEpB,6pBCzCA2B,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GAKAA,EAAAA,EAAAA,OAAAA,GACA,eACEP,OAAAA,eAAAA,EAAAA,qBAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAC,kBAAkB,IAClBV,OAAAA,eAAAA,EAAAA,YAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAE,SAAS,IACTX,OAAAA,eAAAA,EAAAA,WAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAG,QAAQ,IACRZ,OAAAA,eAAAA,EAAAA,gBAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAI,aAAa,IACbb,OAAAA,eAAAA,EAAAA,UAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAK,OAAO,IACPd,OAAAA,eAAAA,EAAAA,gBAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAzI,aAAa,IACbgI,OAAAA,eAAAA,EAAAA,cAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAvB,WAAW,IACXc,OAAAA,eAAAA,EAAAA,YAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAlC,SAAS,IACTyB,OAAAA,eAAAA,EAAAA,iBAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAxG,cAAc,IACd+F,OAAAA,eAAAA,EAAAA,UAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAM,OAAO,IAETR,EAAAA,EAAAA,OAAAA,6DCrBA,SAAgBvI,EAAcC,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAIpD,MAAM,8DAAD,cAAsEoD,IAGvF,MAAkB,MAAXA,EAAI,IAAyB,MAAXA,EAAI,EAC/B,oMANA3B,EAAAA,cAAAA,EAyBA,SAAgBiI,EAAU6B,GACxB,IAAI7I,EAAI6I,EAER,GAAiB,kBAAN7I,EACT,MAAM,IAAI1C,MAAM,qDAAD,cAA6D0C,IAK9E,OAFIA,EAAEpD,OAAS,IAAGoD,EAAI,IAAH,OAAOA,IAEnBA,CACT,CAtBajB,EAAAA,eAAiB,SAAC2B,GAC7B,GAAmB,kBAARA,EACT,MAAM,IAAIpD,MAAM,0DAAD,cAAkEoD,IAEnF,OAAOD,EAAcC,GAAOA,EAAInD,MAAM,GAAKmD,CAC7C,EAOA3B,EAAAA,UAAAA,EAiBAA,EAAAA,cAAA,SAA8B2B,GAC5B,GAAmB,kBAARA,EACT,MAAM,IAAIpD,MAAM,iEAAD,cAAyEoD,IAG1F,OAAOa,EAAOkI,WAAW/I,EAAK,OAChC,EAUA3B,EAAAA,mBAAA,SACE2K,EACAC,EACAC,GAEA,IAAgC,IAA5BpN,MAAMC,QAAQiN,GAChB,MAAM,IAAIpM,MAAM,mFAAD,cAC6EoM,EAAQ,MAGtG,IAA8B,IAA1BlN,MAAMC,QAAQkN,GAChB,MAAM,IAAIrM,MAAM,iFAAD,cAC2EqM,EAAM,MAIlG,OAAOA,GAAgB,IAATC,EAAgB,OAAS,UAAS,SAACf,GAAK,OAAKa,EAASG,QAAQhB,IAAU,CAAC,GACzF,EAQA9J,EAAAA,QAAA,SAAwBM,GACtB,IAAIqB,EAAM,GACN/D,EAAI,EACFmN,EAAIzK,EAAIzC,OAId,IAF4B,OAAxByC,EAAI0K,UAAU,EAAG,KAAapN,EAAI,GAE/BA,EAAImN,EAAGnN,GAAK,EAAG,CACpB,IAAMqN,EAAOvK,SAASJ,EAAI4K,OAAOtN,EAAG,GAAI,IACxC+D,GAAOwJ,OAAOC,aAAaH,GAG7B,OAAOtJ,CACT,EASA3B,EAAAA,SAAA,SAAyBqL,GACvB,IAAM1J,EAAMa,EAAOxD,KAAKqM,EAAa,QAErC,MAAO,KAAP,OAAYpD,EAAUtG,EAAIxB,SAAS,QAAQoJ,QAAQ,WAAY,IACjE,EASAvJ,EAAAA,UAAA,SAA0BqL,GAExB,IADA,IAAI/K,EAAM,GACD1C,EAAI,EAAGA,EAAIyN,EAAYxN,OAAQD,IAAK,CAC3C,IACMkL,EADOuC,EAAYC,WAAW1N,GACrBuC,SAAS,IACxBG,GAAOwI,EAAEjL,OAAS,EAAI,IAAH,OAAOiL,GAAMA,EAGlC,MAAO,KAAP,OAAYxI,EACd,EAaAN,EAAAA,QAAA,SAAwBuL,EAAkCC,EAAaC,GACrE,IAAKhO,MAAMC,QAAQ6N,GACjB,MAAM,IAAIhN,MAAM,+DAAD,cAAuEgN,IAExF,GAAmB,kBAARC,EACT,MAAM,IAAIjN,MAAM,iEAAD,cAC2DgN,IAM5E,IAFA,IAAMpK,EAAS,GAENvD,EAAI,EAAGA,EAAI2N,EAAO1N,OAAQD,IAAK,CACtC,IAAIkM,EAAQyB,EAAO3N,GAAG4N,GACtB,IAAmB,IAAfC,GAAwB3B,GAErB,GAAqB,kBAAVA,EAChB,MAAM,IAAIvL,MAAM,kDAAD,cAA0DuL,SAFzEA,EAAQ,GAIV3I,EAAOrD,KAAKgM,GAGd,OAAO3I,CACT,EASAnB,EAAAA,YAAA,SAA4B8J,EAAejM,GACzC,QAAqB,kBAAViM,IAAuBA,EAAM4B,MAAM,wBAExB,qBAAX7N,GAA0BA,EAAS,GAAKiM,EAAMjM,SAAW,EAAI,EAAIA,EAG9E,qLChNA,IACa8N,EAAI,WAAjB,uBACU,KAAAC,QAAkB,EAClB,KAAAC,qBAAoD,EAsC9D,CADG,OAnCD,uDAIO,8FACDxJ,KAAKuJ,QAAU,GAAC,gBACD,OAAjBvJ,KAAKuJ,SAAW,EAAC,kBACVE,QAAQC,SAAQ,IAAK,gCAKvB,IAAID,SAAiB,SAACE,GAAQ,OAAK,EAAKH,qBAAqB/N,KAAKkO,EAAS,KAAC,gDACpF,kDAbD,IAeA,qBAIO,WAGL,GAFA3J,KAAKuJ,SAAW,EAEZvJ,KAAKuJ,QAAU,GAAKvJ,KAAKwJ,qBAAqBhO,OAAS,EAEzDoO,QAAQC,KAAK,wEACR,GAAqB,IAAjB7J,KAAKuJ,SAAiBvJ,KAAKwJ,qBAAqBhO,OAAS,EAAG,CAGrEwE,KAAKuJ,SAAW,EAEhB,IAAMO,EAAe9J,KAAKwJ,qBAAqBO,QAC3CD,GACFA,GAAa,GAGnB,KAAC,EAvCc,GAAjBnM,EAAAA,KAAAA,4OCDA,cACA,WAEA,WACA,WACA,WA4BA,SAASqM,EAAqB3N,EAAW4N,GACvC,OAAI5N,IAAMoD,OAAO,IAAMpD,IAAMoD,OAAO,GAAWpD,OAE/BkD,IAAZ0K,EACK5N,EAAIoD,OAAO,IAEbpD,GAAK4N,EAAUxK,OAAO,GAAKA,OAAO,IAC3C,CAEA,SAASyK,EAAmBC,GAC1B,OAAOA,IAAa1K,OAAO,IAAM0K,IAAa1K,OAAO,EACvD,CAzBA9B,EAAAA,OAAA,SAAuByM,EAAiBjI,EAAoB8H,GAC1D,OAA8B,IAAAI,UAASD,EAASjI,EAAY,CAAEmI,WAAW,EAAMC,KAAK,IAAQ,SAArFC,EAAS,KAAEL,EAAQ,KAU1B,MAAO,CAAEM,EARCtK,EAAOxD,KAAK6N,EAAUrO,MAAM,EAAG,KAQ7BuO,EAPFvK,EAAOxD,KAAK6N,EAAUrO,MAAM,GAAI,KAO3BE,OAJDkD,IAAZ0K,EACIxK,OAAO0K,EAAW,IAClB1K,OAAO0K,EAAW,IAAM1K,OAAOwK,GAAWxK,OAAO,GAGzD,EAoBa9B,EAAAA,UAAY,SACvByM,EACA/N,EACAoO,EACAC,EACAT,GAEA,IAAMO,EAAYrK,EAAO+B,OAAO,EAAC,IAAAyI,eAAcF,EAAG,KAAK,IAAAE,eAAcD,EAAG,KAAM,IACxEP,EAAWH,EAAqB3N,EAAG4N,GACzC,IAAKC,EAAmBC,GACtB,MAAM,IAAIjO,MAAM,6BAGlB,IAAM0O,GAAe,IAAAC,kBAAiBT,EAASI,EAAWpM,OAAO+L,IACjE,OAAOhK,EAAOxD,KAAKiO,EAAazO,MAAM,GACxC,EAOawB,EAAAA,SAAW,SAAUtB,EAAWoO,EAAWC,EAAWT,GAEjE,IAAKC,EADYF,EAAqB3N,EAAG4N,IAEvC,MAAM,IAAI/N,MAAM,6BAIlB,OAAO,IAAA8G,aAAY7C,EAAO+B,OAAO,EAAC,IAAAyI,eAAcF,EAAG,KAAK,IAAAE,eAAcD,EAAG,KAAK,IAAAhK,UAASrE,KACzF,EAOasB,EAAAA,aAAe,SAAUtB,EAAWoO,EAAWC,EAAWT,GAErE,IAAKC,EADYF,EAAqB3N,EAAG4N,IAEvC,MAAM,IAAI/N,MAAM,6BAGlB,IAAI4O,EAAKJ,EAMT,OALKrO,EAAIoD,OAAO,KAAOpD,EAAIoD,OAAO,KAAOA,OAAO,IAAOpD,IAAMoD,OAAO,IAAMpD,IAAMoD,OAAO,QACrFqL,EAAK3K,EAAOxD,KAAK+N,IACd,IAAM,MAGJ,IAAA1H,aAAY7C,EAAO+B,OAAO,EAAC,IAAAyI,eAAcF,EAAG,KAAK,IAAAE,eAAcG,EAAI,MAC5E,EAUanN,EAAAA,WAAa,SAAUoN,GAClC,IAEIN,EACAC,EACArO,EAJEX,GAAc,IAAAgF,UAASqK,GAK7B,GAAIrP,EAAIF,QAAU,GAChBiP,EAAI/O,EAAIS,MAAM,EAAG,IACjBuO,EAAIhP,EAAIS,MAAM,GAAI,IAClBE,GAAI,IAAAoE,gBAAe/E,EAAIS,MAAM,SACxB,IAAmB,KAAfT,EAAIF,OAOb,MAAM,IAAIU,MAAM,4BALhBuO,EAAI/O,EAAIS,MAAM,EAAG,IACjBuO,EAAIhP,EAAIS,MAAM,GAAI,IAClBE,EAAIoD,QAAO,IAAAuL,aAAYtP,EAAIS,MAAM,GAAI,MAAQ,GAC7CuO,EAAE,IAAM,IAUV,OAJIrO,EAAI,KACNA,GAAQoD,OAAO,KAGV,CACLpD,EAAAA,EACAoO,EAAAA,EACAC,EAAAA,EAEJ,EAOa/M,EAAAA,iBAAmB,SAC9BtB,EACAoO,EACAC,GAEgB,IADhBO,IAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,KAAAA,UAAAA,GACAhB,EAAgB,uCAEhB,GAAiB,KAAbQ,EAAEjP,QAA8B,KAAbkP,EAAElP,OACvB,OAAO,EAGT,IAAK0O,EAAmBF,EAAqB3N,EAAG4N,IAC9C,OAAO,EAGT,IAAMiB,GAAU,IAAAzK,gBAAegK,GACzBU,GAAU,IAAA1K,gBAAeiK,GAE/B,QACEQ,IAAYzL,OAAO,IACnByL,GAAWpL,EAAAA,iBACXqL,IAAY1L,OAAO,IACnB0L,GAAWrL,EAAAA,oBAKTmL,GAAoBE,GAAWrL,EAAAA,sBAKrC,EAQanC,EAAAA,oBAAsB,SAAUyN,IAC3C,IAAArJ,gBAAeqJ,GACf,IAAM5J,EAASrB,EAAOxD,KAAK,iCAAD,OAAoCyO,EAAQ5P,QAAU,SAChF,OAAO2E,EAAOxD,MAAK,IAAA+E,WAAUvB,EAAO+B,OAAO,CAACV,EAAQ4J,KACtD,oHChMA,IAuDYC,EAvDZ,WACA,YAsDA,SAAYA,GACVA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,kBAAAA,GAAAA,mBACD,CALD,CAAYA,EAAA1N,EAAAA,aAAAA,EAAAA,WAAU,KA0BtBA,EAAAA,OAAA,SACExC,EACAmQ,GAEA,GAAc,OAAVnQ,EACF,OAAO,KAET,QAAcoE,IAAVpE,EAAJ,CAIA,GAAqB,kBAAVA,KAAuB,IAAAoL,aAAYpL,GAC5C,MAAM,IAAIe,MAAM,sDAAD,OAAuDf,IACjE,GAAqB,kBAAVA,IAAuBiD,OAAOsH,cAAcvK,GAC5D,MAAM,IAAIe,MACR,+FAIJ,IAAMZ,GAAS,IAAAoF,UAASvF,GAExB,OAAQmQ,GACN,KAAKD,EAAWlL,OACd,OAAO7E,EACT,KAAK+P,EAAW5L,OACd,OAAO,IAAAgB,gBAAenF,GACxB,KAAK+P,EAAWjN,OACd,IAAMmN,GAAS,IAAA9K,gBAAenF,GAC9B,GAAIiQ,EAAS9L,OAAOrB,OAAOoN,kBACzB,MAAM,IAAItP,MACR,gGAGJ,OAAOkC,OAAOmN,GAEhB,KAAKF,EAAWI,kBACd,OAAO,IAAAzI,aAAY1H,GACrB,QACE,MAAM,IAAIY,MAAM,uBAEtB,0LCzHA,eACA,WACA,WA6BawP,EAAU,WAKrB,WACkBrG,EACAsG,EACAtK,EACAuK,GAAc,UAHd,KAAAvG,MAAAA,EACA,KAAAsG,eAAAA,EACA,KAAAtK,QAAAA,EACA,KAAAuK,OAAAA,CACf,CAoDF,OApDG,sBAsDJ,WACE,OAAOF,EAAWG,cAAc7L,KAClC,GAAC,oBAED,WACE,MAAO,CACLqF,OAAO,IAAAyG,aAAY9L,KAAKqF,OACxBsG,gBAAgB,IAAAG,aAAY9L,KAAK2L,gBACjCtK,QAAS,KAAOrB,KAAKqB,QAAQ3F,IAAIoC,SAAS,OAC1C8N,QAAQ,IAAAE,aAAY9L,KAAK4L,QAE7B,IAAC,iCA/DM,SAA0BG,GAC/B,IACSC,EAILD,EAJF1G,MACgB4G,EAGdF,EAHFJ,eACSO,EAEPH,EAFF1K,QACQ8K,EACNJ,EADFH,OAOF,OAAO,IAAIF,GALG,IAAAU,QAAOJ,EAAWK,EAAAA,WAAW5M,SACpB,IAAA2M,QAAOH,EAAoBI,EAAAA,WAAW5M,QAC7C,IAAI6M,EAAAA,SAAQ,IAAAF,QAAOF,EAAaG,EAAAA,WAAWlM,UAC5C,IAAAiM,QAAOD,EAAYE,EAAAA,WAAW5M,QAG/C,GAAC,6BAEM,SAAuB8M,GAC5B,GAA+B,IAA3BA,EAAgB/Q,OAClB,MAAMU,MAAM,oDAAD,OAAqDqQ,EAAgB/Q,SAElF,QAAiD+Q,EAAe,GAAzDlH,EAAK,KAAEsG,EAAc,KAAEtK,EAAO,KAAEuK,EAAM,KAC7C,OAAOF,EAAWc,mBAAmB,CAAEnH,MAAAA,EAAOsG,eAAAA,EAAgBtK,QAAAA,EAASuK,OAAAA,GACzE,GAEA,2BAKO,SAAqBa,GAC1B,IAAQpH,EAA2CoH,EAA3CpH,MAAOsG,EAAoCc,EAApCd,eAAgBtK,EAAoBoL,EAApBpL,QAASuK,EAAWa,EAAXb,OAoBxC,MAAO,EAlBL,IAAAQ,QAAO/G,EAAOgH,EAAAA,WAAW5M,UAAYA,OAAO,GACxCU,EAAOuM,MAAM,IACb,IAAAN,QAAO/G,EAAOgH,EAAAA,WAAWlM,SAE7B,IAAAiM,QAAOT,EAAgBU,EAAAA,WAAW5M,UAAYA,OAAO,GACjDU,EAAOuM,MAAM,IACb,IAAAN,QAAOT,EAAgBU,EAAAA,WAAWlM,QAEpCkB,aAAmBiL,EAAAA,QACKjL,EAAS3F,KAEnB,IAAA0Q,QAAO/K,EAASgL,EAAAA,WAAWlM,SAG3C,IAAAiM,QAAOR,EAAQS,EAAAA,WAAW5M,UAAYA,OAAO,GACzCU,EAAOuM,MAAM,IACb,IAAAN,QAAOR,EAAQS,EAAAA,WAAWlM,QAGlC,KAAC,EA9DoB,GAAvBxC,EAAAA,WAAAA,kCC7BA,SAAUgP,GAEN,SAASC,EAASnF,GACd,OAAQpJ,SAASoJ,KAAWA,CAChC,CAEA,SAASoF,EAAUC,GACf,IAAKF,EAASE,EAAStR,QAAW,OAAO,EAEzC,IAAK,IAAID,EAAI,EAAGA,EAAIuR,EAAStR,OAAQD,IACjC,IAAKqR,EAASE,EAASvR,KAAOuR,EAASvR,GAAK,GAAKuR,EAASvR,GAAK,IAC3D,OAAO,EAIf,OAAO,CACX,CAEA,SAASwR,EAAYC,EAAK7G,GAGtB,GAAI6G,EAAIjG,QAAUkG,YAAYC,OAAOF,IAAqB,eAAbA,EAAIG,KAU7C,OARIhH,IAEI6G,EADAA,EAAI7Q,MACE6Q,EAAI7Q,QAEJf,MAAMgS,UAAUjR,MAAMyI,KAAKoI,IAIlCA,EAIX,GAAI5R,MAAMC,QAAQ2R,GAAM,CACpB,IAAKH,EAAUG,GACX,MAAM,IAAI9Q,MAAM,iCAAmC8Q,GAGvD,OAAO,IAAItQ,WAAWsQ,EAC1B,CAGA,GAAIJ,EAASI,EAAIxR,SAAWqR,EAAUG,GAClC,OAAO,IAAItQ,WAAWsQ,GAG1B,MAAM,IAAI9Q,MAAM,gCACpB,CAEA,SAASmR,EAAY7R,GACjB,OAAO,IAAIkB,WAAWlB,EAC1B,CAEA,SAAS8R,EAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAChD,MAAfD,GAAoC,MAAbC,IAEnBJ,EADAA,EAAYpR,MACEoR,EAAYpR,MAAMuR,EAAaC,GAE/BvS,MAAMgS,UAAUjR,MAAMyI,KAAK2I,EAAaG,EAAaC,IAG3EH,EAAYxO,IAAIuO,EAAaE,EACjC,CAIA,IAAIG,EA0CO,CACH9R,QA1CJ,SAAiB+R,GACb,IAAI/O,EAAS,GAAIvD,EAAI,EAErB,IADAsS,EAAOC,UAAUD,GACVtS,EAAIsS,EAAKrS,QAAQ,CACpB,IAAIuS,EAAIF,EAAK5E,WAAW1N,KAGd,KAANwS,GACAjP,EAAOrD,KAAK4C,SAASwP,EAAKhF,OAAOtN,EAAG,GAAI,KACxCA,GAAK,GAILuD,EAAOrD,KAAKsS,EAEpB,CAEA,OAAOhB,EAAYjO,EACvB,EAyBIkP,UAvBJ,SAAmBnI,GAGf,IAFA,IAAI/G,EAAS,GAAIvD,EAAI,EAEdA,EAAIsK,EAAMrK,QAAQ,CACrB,IAAIuS,EAAIlI,EAAMtK,GAEVwS,EAAI,KACJjP,EAAOrD,KAAKqN,OAAOC,aAAagF,IAChCxS,KACOwS,EAAI,KAAOA,EAAI,KACtBjP,EAAOrD,KAAKqN,OAAOC,cAAmB,GAAJgF,IAAa,EAAqB,GAAflI,EAAMtK,EAAI,KAC/DA,GAAK,IAELuD,EAAOrD,KAAKqN,OAAOC,cAAmB,GAAJgF,IAAa,IAAuB,GAAflI,EAAMtK,EAAI,KAAc,EAAqB,GAAfsK,EAAMtK,EAAI,KAC/FA,GAAK,EAEb,CAEA,OAAOuD,EAAOmP,KAAK,GACvB,GAQAC,EAAc,WAWd,IAAIC,EAAM,mBAWV,MAAO,CACHrS,QAtBJ,SAAiB+R,GAEb,IADA,IAAI/O,EAAS,GACJvD,EAAI,EAAGA,EAAIsS,EAAKrS,OAAQD,GAAK,EAClCuD,EAAOrD,KAAK4C,SAASwP,EAAKhF,OAAOtN,EAAG,GAAI,KAG5C,OAAOuD,CACX,EAgBIkP,UAXJ,SAAmBnI,GAEX,IADA,IAAI/G,EAAS,GACJvD,EAAI,EAAGA,EAAIsK,EAAMrK,OAAQD,IAAK,CACnC,IAAIc,EAAIwJ,EAAMtK,GACduD,EAAOrD,KAAK0S,GAAS,IAAJ9R,IAAa,GAAK8R,EAAQ,GAAJ9R,GAC3C,CACA,OAAOyC,EAAOmP,KAAK,GAC3B,EAMJ,CA1BkB,GA8BdG,EAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAGtCC,EAAO,CAAC,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAGtevJ,GAEpB,IADA,IAAI/G,EAAS,GACJvD,EAAI,EAAGA,EAAIsK,EAAMrK,OAAQD,GAAK,EACnCuD,EAAOrD,KACFoK,EAAMtK,IAAU,GAChBsK,EAAMtK,EAAI,IAAM,GAChBsK,EAAMtK,EAAI,IAAO,EACjBsK,EAAMtK,EAAI,IAGnB,OAAOuD,CACX,CAEA,IAAIuQ,EAAM,SAANA,EAAelG,GACf,KAAMnJ,gBAAgBqP,GAClB,MAAMnT,MAAM,uCAGhBmL,OAAOiI,eAAetP,KAAM,MAAO,CAC/ByH,MAAOsF,EAAY5D,GAAK,KAG5BnJ,KAAKuP,UACT,EAGAF,EAAIjC,UAAUmC,SAAW,WAErB,IAAIC,EAASpB,EAAepO,KAAKmJ,IAAI3N,QACrC,GAAc,MAAVgU,EACA,MAAM,IAAItT,MAAM,iDAIpB8D,KAAKyP,IAAM,GAGXzP,KAAK0P,IAAM,GAEX,IAAK,IAAInU,EAAI,EAAGA,GAAKiU,EAAQjU,IACzByE,KAAKyP,IAAIhU,KAAK,CAAC,EAAG,EAAG,EAAG,IACxBuE,KAAK0P,IAAIjU,KAAK,CAAC,EAAG,EAAG,EAAG,IAG5B,IAOI4J,EAPAsK,EAA+B,GAAdH,EAAS,GAC1BI,EAAK5P,KAAKmJ,IAAI3N,OAAS,EAGvBqU,EAAKT,EAAepP,KAAKmJ,KAI7B,IAAS5N,EAAI,EAAGA,EAAIqU,EAAIrU,IACpB8J,EAAQ9J,GAAK,EACbyE,KAAKyP,IAAIpK,GAAO9J,EAAI,GAAKsU,EAAGtU,GAC5ByE,KAAK0P,IAAIF,EAASnK,GAAO9J,EAAI,GAAKsU,EAAGtU,GAMzC,IAFA,IACYuU,EADRC,EAAc,EACdC,EAAIJ,EACDI,EAAIL,GAAe,CAUtB,GATAG,EAAKD,EAAGD,EAAK,GACbC,EAAG,IAAQvB,EAAGwB,GAAM,GAAM,MAAS,GACxBxB,EAAGwB,GAAO,EAAK,MAAS,GACxBxB,EAAe,IAAZwB,IAAsB,EACzBxB,EAAGwB,GAAM,GAAM,KACfzB,EAAK0B,IAAgB,GAChCA,GAAe,EAGL,GAANH,EACA,IAASrU,EAAI,EAAGA,EAAIqU,EAAIrU,IACpBsU,EAAGtU,IAAMsU,EAAGtU,EAAI,OAIjB,CACH,IAASA,EAAI,EAAGA,EAAKqU,EAAK,EAAIrU,IAC1BsU,EAAGtU,IAAMsU,EAAGtU,EAAI,GAEpBuU,EAAKD,EAAID,EAAK,EAAK,GAEnBC,EAAGD,EAAK,IAAOtB,EAAe,IAAZwB,GACHxB,EAAGwB,GAAO,EAAK,MAAU,EACzBxB,EAAGwB,GAAM,GAAM,MAAS,GACxBxB,EAAGwB,GAAM,GAAM,MAAS,GAEvC,IAASvU,EAAKqU,EAAK,EAAK,EAAGrU,EAAIqU,EAAIrU,IAC/BsU,EAAGtU,IAAMsU,EAAGtU,EAAI,EAExB,CAIA,IADIA,EAAI,EACDA,EAAIqU,GAAMI,EAAIL,GACjBlF,EAAIuF,GAAK,EACTjC,EAAIiC,EAAI,EACRhQ,KAAKyP,IAAIhF,GAAGsD,GAAK8B,EAAGtU,GACpByE,KAAK0P,IAAIF,EAAS/E,GAAGsD,GAAK8B,EAAGtU,KAC7ByU,GAER,CAGA,IAAK,IAAIvF,EAAI,EAAGA,EAAI+E,EAAQ/E,IACxB,IAAK,IAAIsD,EAAI,EAAGA,EAAI,EAAGA,IACnB+B,EAAK9P,KAAK0P,IAAIjF,GAAGsD,GACjB/N,KAAK0P,IAAIjF,GAAGsD,GAAMiB,EAAIc,GAAM,GAAM,KAChBb,EAAIa,GAAM,GAAM,KAChBZ,EAAIY,GAAO,EAAK,KAChBX,EAAgB,IAAZW,EAGlC,EAEAT,EAAIjC,UAAU6C,QAAU,SAASC,GAC7B,GAAwB,IAApBA,EAAU1U,OACV,MAAM,IAAIU,MAAM,6CAQpB,IALA,IAAIsT,EAASxP,KAAKyP,IAAIjU,OAAS,EAC3BoD,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdoR,EAAIZ,EAAec,GACd3U,EAAI,EAAGA,EAAI,EAAGA,IACnByU,EAAEzU,IAAMyE,KAAKyP,IAAI,GAAGlU,GAIxB,IAAK,IAAIkP,EAAI,EAAGA,EAAI+E,EAAQ/E,IAAK,CAC7B,IAASlP,EAAI,EAAGA,EAAI,EAAGA,IACnBqD,EAAErD,GAAMiT,EAAIwB,EAAGzU,IAAe,GAAM,KAC5BkT,EAAIuB,GAAGzU,EAAI,GAAK,IAAM,GAAM,KAC5BmT,EAAIsB,GAAGzU,EAAI,GAAK,IAAO,EAAK,KAC5BoT,EAA4B,IAAxBqB,GAAGzU,EAAI,GAAK,IAChByE,KAAKyP,IAAIhF,GAAGlP,GAExByU,EAAIpR,EAAEzC,OACV,CAGA,IAA8B2T,EAA1BhR,EAASuO,EAAY,IACzB,IAAS9R,EAAI,EAAGA,EAAI,EAAGA,IACnBuU,EAAK9P,KAAKyP,IAAID,GAAQjU,GACtBuD,EAAO,EAAIvD,GAA2D,KAAjD+S,EAAG0B,EAAGzU,IAAe,GAAM,KAASuU,GAAM,IAC/DhR,EAAO,EAAIvD,EAAI,GAAuD,KAAjD+S,EAAG0B,GAAGzU,EAAI,GAAK,IAAM,GAAM,KAASuU,GAAM,IAC/DhR,EAAO,EAAIvD,EAAI,GAAuD,KAAjD+S,EAAG0B,GAAGzU,EAAI,GAAK,IAAO,EAAK,KAASuU,GAAO,GAChEhR,EAAO,EAAIvD,EAAI,GAAuD,KAAjD+S,EAA2B,IAAxB0B,GAAGzU,EAAI,GAAK,IAAqBuU,GAG7D,OAAOhR,CACX,EAEAuQ,EAAIjC,UAAU+C,QAAU,SAASC,GAC7B,GAAyB,IAArBA,EAAW5U,OACX,MAAM,IAAIU,MAAM,8CAQpB,IALA,IAAIsT,EAASxP,KAAK0P,IAAIlU,OAAS,EAC3BoD,EAAI,CAAC,EAAG,EAAG,EAAG,GAGdoR,EAAIZ,EAAegB,GACd7U,EAAI,EAAGA,EAAI,EAAGA,IACnByU,EAAEzU,IAAMyE,KAAK0P,IAAI,GAAGnU,GAIxB,IAAK,IAAIkP,EAAI,EAAGA,EAAI+E,EAAQ/E,IAAK,CAC7B,IAASlP,EAAI,EAAGA,EAAI,EAAGA,IACnBqD,EAAErD,GAAMqT,EAAIoB,EAAGzU,IAAgB,GAAM,KAC7BsT,EAAImB,GAAGzU,EAAI,GAAK,IAAM,GAAM,KAC5BuT,EAAIkB,GAAGzU,EAAI,GAAK,IAAO,EAAK,KAC5BwT,EAA4B,IAAxBiB,GAAGzU,EAAI,GAAK,IAChByE,KAAK0P,IAAIjF,GAAGlP,GAExByU,EAAIpR,EAAEzC,OACV,CAGA,IAA8B2T,EAA1BhR,EAASuO,EAAY,IACzB,IAAS9R,EAAI,EAAGA,EAAI,EAAGA,IACnBuU,EAAK9P,KAAK0P,IAAIF,GAAQjU,GACtBuD,EAAO,EAAIvD,GAA4D,KAAlDgT,EAAIyB,EAAGzU,IAAe,GAAM,KAASuU,GAAM,IAChEhR,EAAO,EAAIvD,EAAI,GAAwD,KAAlDgT,EAAIyB,GAAGzU,EAAI,GAAK,IAAM,GAAM,KAASuU,GAAM,IAChEhR,EAAO,EAAIvD,EAAI,GAAwD,KAAlDgT,EAAIyB,GAAGzU,EAAI,GAAK,IAAO,EAAK,KAASuU,GAAO,GACjEhR,EAAO,EAAIvD,EAAI,GAAwD,KAAlDgT,EAA4B,IAAxByB,GAAGzU,EAAI,GAAK,IAAqBuU,GAG9D,OAAOhR,CACX,EAMA,IAAIuR,EAAqB,SAArBA,EAA8BlH,GAC9B,KAAMnJ,gBAAgBqQ,GAClB,MAAMnU,MAAM,uCAGhB8D,KAAKsQ,YAAc,wBACnBtQ,KAAKmN,KAAO,MAEZnN,KAAKuQ,KAAO,IAAIlB,EAAIlG,EACxB,EAEAkH,EAAmBjD,UAAU6C,QAAU,SAASC,GAG5C,IAFAA,EAAYnD,EAAYmD,IAET1U,OAAS,KAAQ,EAC5B,MAAM,IAAIU,MAAM,yDAMpB,IAHA,IAAIkU,EAAa/C,EAAY6C,EAAU1U,QACnCgV,EAAQnD,EAAY,IAEf9R,EAAI,EAAGA,EAAI2U,EAAU1U,OAAQD,GAAK,GACvC+R,EAAU4C,EAAWM,EAAO,EAAGjV,EAAGA,EAAI,IAEtC+R,EADAkD,EAAQxQ,KAAKuQ,KAAKN,QAAQO,GACTJ,EAAY7U,GAGjC,OAAO6U,CACX,EAEAC,EAAmBjD,UAAU+C,QAAU,SAASC,GAG5C,IAFAA,EAAarD,EAAYqD,IAET5U,OAAS,KAAQ,EAC7B,MAAM,IAAIU,MAAM,0DAMpB,IAHA,IAAIgU,EAAY7C,EAAY+C,EAAW5U,QACnCgV,EAAQnD,EAAY,IAEf9R,EAAI,EAAGA,EAAI6U,EAAW5U,OAAQD,GAAK,GACxC+R,EAAU8C,EAAYI,EAAO,EAAGjV,EAAGA,EAAI,IAEvC+R,EADAkD,EAAQxQ,KAAKuQ,KAAKJ,QAAQK,GACTN,EAAW3U,GAGhC,OAAO2U,CACX,EAMA,IAAIO,EAAqB,SAArBA,EAA8BtH,EAAKuH,GACnC,KAAM1Q,gBAAgByQ,GAClB,MAAMvU,MAAM,uCAMhB,GAHA8D,KAAKsQ,YAAc,wBACnBtQ,KAAKmN,KAAO,MAEPuD,GAGE,GAAiB,IAAbA,EAAGlV,OACV,MAAM,IAAIU,MAAM,4DAHhBwU,EAAKrD,EAAY,IAMrBrN,KAAK2Q,iBAAmB5D,EAAY2D,GAAI,GAExC1Q,KAAKuQ,KAAO,IAAIlB,EAAIlG,EACxB,EAEAsH,EAAmBrD,UAAU6C,QAAU,SAASC,GAG5C,IAFAA,EAAYnD,EAAYmD,IAET1U,OAAS,KAAQ,EAC5B,MAAM,IAAIU,MAAM,yDAMpB,IAHA,IAAIkU,EAAa/C,EAAY6C,EAAU1U,QACnCgV,EAAQnD,EAAY,IAEf9R,EAAI,EAAGA,EAAI2U,EAAU1U,OAAQD,GAAK,GAAI,CAC3C+R,EAAU4C,EAAWM,EAAO,EAAGjV,EAAGA,EAAI,IAEtC,IAAK,IAAIkD,EAAI,EAAGA,EAAI,GAAIA,IACpB+R,EAAM/R,IAAMuB,KAAK2Q,iBAAiBlS,GAGtCuB,KAAK2Q,iBAAmB3Q,KAAKuQ,KAAKN,QAAQO,GAC1ClD,EAAUtN,KAAK2Q,iBAAkBP,EAAY7U,EACjD,CAEA,OAAO6U,CACX,EAEAK,EAAmBrD,UAAU+C,QAAU,SAASC,GAG5C,IAFAA,EAAarD,EAAYqD,IAET5U,OAAS,KAAQ,EAC7B,MAAM,IAAIU,MAAM,0DAMpB,IAHA,IAAIgU,EAAY7C,EAAY+C,EAAW5U,QACnCgV,EAAQnD,EAAY,IAEf9R,EAAI,EAAGA,EAAI6U,EAAW5U,OAAQD,GAAK,GAAI,CAC5C+R,EAAU8C,EAAYI,EAAO,EAAGjV,EAAGA,EAAI,IACvCiV,EAAQxQ,KAAKuQ,KAAKJ,QAAQK,GAE1B,IAAK,IAAI/R,EAAI,EAAGA,EAAI,GAAIA,IACpByR,EAAU3U,EAAIkD,GAAK+R,EAAM/R,GAAKuB,KAAK2Q,iBAAiBlS,GAGxD6O,EAAU8C,EAAYpQ,KAAK2Q,iBAAkB,EAAGpV,EAAGA,EAAI,GAC3D,CAEA,OAAO2U,CACX,EAMA,IAAIU,EAAqB,SAArBA,EAA8BzH,EAAKuH,EAAIG,GACvC,KAAM7Q,gBAAgB4Q,GAClB,MAAM1U,MAAM,uCAMhB,GAHA8D,KAAKsQ,YAAc,kBACnBtQ,KAAKmN,KAAO,MAEPuD,GAGE,GAAiB,IAAbA,EAAGlV,OACV,MAAM,IAAIU,MAAM,2DAHhBwU,EAAKrD,EAAY,IAMhBwD,IAAeA,EAAc,GAElC7Q,KAAK6Q,YAAcA,EAEnB7Q,KAAK8Q,eAAiB/D,EAAY2D,GAAI,GAEtC1Q,KAAKuQ,KAAO,IAAIlB,EAAIlG,EACxB,EAEAyH,EAAmBxD,UAAU6C,QAAU,SAASC,GAC5C,GAAKA,EAAU1U,OAASwE,KAAK6Q,aAAgB,EACzC,MAAM,IAAI3U,MAAM,sDAMpB,IAHA,IAEI6U,EAFAC,EAAYjE,EAAYmD,GAAW,GAG9B3U,EAAI,EAAGA,EAAIyV,EAAUxV,OAAQD,GAAKyE,KAAK6Q,YAAa,CACzDE,EAAa/Q,KAAKuQ,KAAKN,QAAQjQ,KAAK8Q,gBACpC,IAAK,IAAIrS,EAAI,EAAGA,EAAIuB,KAAK6Q,YAAapS,IAClCuS,EAAUzV,EAAIkD,IAAMsS,EAAWtS,GAInC6O,EAAUtN,KAAK8Q,eAAgB9Q,KAAK8Q,eAAgB,EAAG9Q,KAAK6Q,aAC5DvD,EAAU0D,EAAWhR,KAAK8Q,eAAgB,GAAK9Q,KAAK6Q,YAAatV,EAAGA,EAAIyE,KAAK6Q,YACjF,CAEA,OAAOG,CACX,EAEAJ,EAAmBxD,UAAU+C,QAAU,SAASC,GAC5C,GAAKA,EAAW5U,OAASwE,KAAK6Q,aAAgB,EAC1C,MAAM,IAAI3U,MAAM,uDAMpB,IAHA,IAEI6U,EAFAb,EAAYnD,EAAYqD,GAAY,GAG/B7U,EAAI,EAAGA,EAAI2U,EAAU1U,OAAQD,GAAKyE,KAAK6Q,YAAa,CACzDE,EAAa/Q,KAAKuQ,KAAKN,QAAQjQ,KAAK8Q,gBAEpC,IAAK,IAAIrS,EAAI,EAAGA,EAAIuB,KAAK6Q,YAAapS,IAClCyR,EAAU3U,EAAIkD,IAAMsS,EAAWtS,GAInC6O,EAAUtN,KAAK8Q,eAAgB9Q,KAAK8Q,eAAgB,EAAG9Q,KAAK6Q,aAC5DvD,EAAU8C,EAAYpQ,KAAK8Q,eAAgB,GAAK9Q,KAAK6Q,YAAatV,EAAGA,EAAIyE,KAAK6Q,YAClF,CAEA,OAAOX,CACX,EAKA,IAAIe,EAAqB,SAArBA,EAA8B9H,EAAKuH,GACnC,KAAM1Q,gBAAgBiR,GAClB,MAAM/U,MAAM,uCAMhB,GAHA8D,KAAKsQ,YAAc,kBACnBtQ,KAAKmN,KAAO,MAEPuD,GAGE,GAAiB,IAAbA,EAAGlV,OACV,MAAM,IAAIU,MAAM,4DAHhBwU,EAAKrD,EAAY,IAMrBrN,KAAKkR,eAAiBnE,EAAY2D,GAAI,GACtC1Q,KAAKmR,oBAAsB,GAE3BnR,KAAKuQ,KAAO,IAAIlB,EAAIlG,EACxB,EAEA8H,EAAmB7D,UAAU6C,QAAU,SAASC,GAG5C,IAFA,IAAIc,EAAYjE,EAAYmD,GAAW,GAE9B3U,EAAI,EAAGA,EAAIyV,EAAUxV,OAAQD,IACD,KAA7ByE,KAAKmR,sBACLnR,KAAKkR,eAAiBlR,KAAKuQ,KAAKN,QAAQjQ,KAAKkR,gBAC7ClR,KAAKmR,oBAAsB,GAE/BH,EAAUzV,IAAMyE,KAAKkR,eAAelR,KAAKmR,uBAG7C,OAAOH,CACX,EAGAC,EAAmB7D,UAAU+C,QAAUc,EAAmB7D,UAAU6C,QAMpE,IAAImB,EAAU,SAAVA,EAAmBC,GACnB,KAAMrR,gBAAgBoR,GAClB,MAAMlV,MAAM,2CAIK,IAAjBmV,GAAuBA,IAAgBA,EAAe,GAE7B,kBAAlBA,GACPrR,KAAKsR,SAAWjE,EAAY,IAC5BrN,KAAKuR,SAASF,IAGdrR,KAAKwR,SAASH,EAEtB,EAEAD,EAAQhE,UAAUmE,SAAW,SAAS9J,GAClC,GAAsB,kBAAXA,GAAuBpJ,SAASoJ,IAAUA,EACjD,MAAM,IAAIvL,MAAM,8CAGpB,IAAK,IAAImJ,EAAQ,GAAIA,GAAS,IAAKA,EAC/BrF,KAAKsR,SAASjM,GAASoC,EAAQ,IAC/BA,IAAiB,CAEzB,EAEA2J,EAAQhE,UAAUoE,SAAW,SAAS3L,GAGlC,GAAoB,KAFpBA,EAAQkH,EAAYlH,GAAO,IAEjBrK,OACN,MAAM,IAAIU,MAAM,iDAGpB8D,KAAKsR,SAAWzL,CACpB,EAEAuL,EAAQhE,UAAUqE,UAAY,WAC1B,IAAK,IAAIlW,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC1B,GAAyB,MAArByE,KAAKsR,SAAS/V,GAEX,CACHyE,KAAKsR,SAAS/V,KACd,KACJ,CAJIyE,KAAKsR,SAAS/V,GAAK,CAK3B,CACJ,EAMA,IAAImW,EAAqB,SAArBA,EAA8BvI,EAAKwI,GACnC,KAAM3R,gBAAgB0R,GAClB,MAAMxV,MAAM,uCAGhB8D,KAAKsQ,YAAc,UACnBtQ,KAAKmN,KAAO,MAENwE,aAAmBP,IACrBO,EAAU,IAAIP,EAAQO,IAG1B3R,KAAKsR,SAAWK,EAEhB3R,KAAK4R,kBAAoB,KACzB5R,KAAK6R,uBAAyB,GAE9B7R,KAAKuQ,KAAO,IAAIlB,EAAIlG,EACxB,EAEAuI,EAAmBtE,UAAU6C,QAAU,SAASC,GAG5C,IAFA,IAAIc,EAAYjE,EAAYmD,GAAW,GAE9B3U,EAAI,EAAGA,EAAIyV,EAAUxV,OAAQD,IACE,KAAhCyE,KAAK6R,yBACL7R,KAAK4R,kBAAoB5R,KAAKuQ,KAAKN,QAAQjQ,KAAKsR,SAASA,UACzDtR,KAAK6R,uBAAyB,EAC9B7R,KAAKsR,SAASG,aAElBT,EAAUzV,IAAMyE,KAAK4R,kBAAkB5R,KAAK6R,0BAGhD,OAAOb,CACX,EAGAU,EAAmBtE,UAAU+C,QAAUuB,EAAmBtE,UAAU6C,QA0CpE,IAAI6B,EAAQ,CACRzC,IAAKA,EACL+B,QAASA,EAETW,gBAAiB,CACbC,IAAK3B,EACL4B,IAAKxB,EACLyB,IAAKtB,EACLuB,IAAKlB,EACLmB,IAAKV,GAGTW,MAAO,CACHpU,IAAKiQ,EACLoE,KAAM1E,GAGV2E,QAAS,CACLC,MAAO,CACHzT,IAtDZ,SAAkBzB,GAEd,IAAImV,EAAS,IADbnV,EAAOyP,EAAYzP,GAAM,IACD9B,OAAS,GAC7BsD,EAASuO,EAAY/P,EAAK9B,OAASiX,GACvCnF,EAAUhQ,EAAMwB,GAChB,IAAK,IAAIvD,EAAI+B,EAAK9B,OAAQD,EAAIuD,EAAOtD,OAAQD,IACzCuD,EAAOvD,GAAKkX,EAEhB,OAAO3T,CACX,EA8CY4T,MA5CZ,SAAoBpV,GAEhB,IADAA,EAAOyP,EAAYzP,GAAM,IAChB9B,OAAS,GAAM,MAAM,IAAIU,MAAM,yBAExC,IAAIuW,EAASnV,EAAKA,EAAK9B,OAAS,GAChC,GAAIiX,EAAS,GAAM,MAAM,IAAIvW,MAAM,oCAGnC,IADA,IAAIV,EAAS8B,EAAK9B,OAASiX,EAClBlX,EAAI,EAAGA,EAAIkX,EAAQlX,IACxB,GAAI+B,EAAK9B,EAASD,KAAOkX,EACrB,MAAM,IAAIvW,MAAM,+BAIxB,IAAI4C,EAASuO,EAAY7R,GAEzB,OADA8R,EAAUhQ,EAAMwB,EAAQ,EAAG,EAAGtD,GACvBsD,CACX,IA+BI6T,WAAY,CACR5F,YAAaA,EACbM,YAAaA,EACbC,UAAWA,IAOfsF,EAAOjV,QAAUmU,CAoBxB,CA3xBD,s0BCFA,kBACA,cAEA,WAkBA,SAAgB7B,EAAQ,GAQvB,IAPC3N,EAAS,EAATA,UACAhF,EAAI,EAAJA,KACAuV,EAAO,EAAPA,QAMA,IAAI,IAAAC,WAAUxQ,GACZ,MAAM,IAAIpG,MAAM,+BACX,IAAI,IAAA4W,WAAUxV,GACnB,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAUD,GACnB,MAAM,IAAI3W,MAAM,6BAGlB,GACO,6BADC2W,EACN,CACE,GAAoB,kBAATvV,EACT,MAAM,IAAIpB,MAAM,0CAGlB,IAGI6W,EAHEC,EAAmBC,EAAKC,IAAIC,UAIlC,IACEJ,EAAmBK,EAASC,aAAa/Q,GACzC,MAAOqC,GACP,MAAM,IAAIzI,MAAM,kBAGlB,IAAMoX,EAAsBF,EAASG,WAAWjW,GAC1CqC,EAAQsT,EAAKO,YAAYP,EAAKC,IAAIO,aAGlCC,EAAmBT,EAAKC,IAC5BI,EACA3T,EACAoT,EACAC,EAAiBW,WAWnB,MAPe,CACbd,QAAS,2BACTlT,MAAOyT,EAASQ,aAAajU,GAC7BkU,eAAgBT,EAASQ,aAAaZ,EAAiB1Q,WACvD8N,WAAYgD,EAASQ,aAAaF,IAOpC,MAAM,IAAIxX,MAAM,wCAEtB,CAyEA,SAAgBiU,EAAQ,GAMvB,IALC2D,EAAa,EAAbA,cACA3R,EAAU,EAAVA,WAKA,IAAI,IAAA2Q,WAAUgB,GACZ,MAAM,IAAI5X,MAAM,mCACX,IAAI,IAAA4W,WAAU3Q,GACnB,MAAM,IAAIjG,MAAM,gCAGlB,GACO,6BADC4X,EAAcjB,QACpB,CAEE,IAqBIvX,EArBEyY,EAA+BC,EAAe7R,GAC9C8R,EAA+BhB,EAAKC,IAAIC,QAAQe,cACpDH,GACAJ,UAGIhU,EAAQyT,EAASC,aAAaS,EAAcnU,OAC5CyQ,EAAagD,EAASC,aAAaS,EAAc1D,YACjDyD,EAAiBT,EAASC,aAC9BS,EAAcD,gBAIVM,EAAmBlB,EAAKC,IAAIkB,KAChChE,EACAzQ,EACAkU,EACAI,GAKF,IACE3Y,EAAS8X,EAASiB,WAAWF,GAC7B,MAAOxP,GACP,MAAM,IAAIzI,MAAM,sBAGlB,GAAIZ,EACF,OAAOA,EAET,MAAM,IAAIY,MAAM,sBAIhB,MAAM,IAAIA,MAAM,yCAEtB,CA8CA,SAAS8X,EAAeM,GACtB,IAAMC,EAAYpU,EAAOxD,KAAK2X,EAAQ,OAAOxW,SAAS,UACtD,OAAOsV,EAASC,aAAakB,EAC/B,CAzOA5W,EAAAA,QAAAA,EAwEAA,EAAAA,cAAA,SAA8B,GAQ7B,IAPC2E,EAAS,EAATA,UACAhF,EAAI,EAAJA,KACAuV,EAAO,EAAPA,QAMA,IAAI,IAAAC,WAAUxQ,GACZ,MAAM,IAAIpG,MAAM,+BACX,IAAI,IAAA4W,WAAUxV,GACnB,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAUD,GACnB,MAAM,IAAI3W,MAAM,6BAGlB,IAAMsY,EAAyB,KAAH,IAAG,EAAK,IAGpC,GAAoB,kBAATlX,GAAqB,WAAYA,EAG1C,MAAM,IAAIpB,MACR,uEAKJ,IAAMuY,EAAkB,CACtBnX,KAAAA,EACAiV,QAAS,IAQLmC,EAJavU,EAAOkI,WACxBsM,KAAKC,UAAUH,GACf,SAE0BD,EACxBK,EAAY,EAQhB,OANIH,EAAS,IACXG,EAAYL,EAAyBE,EAzBd,IA2BzBD,EAAgBlC,QAAU,IAAIuC,OAAOD,GAG9B5E,EAAQ,CAAE3N,UAAAA,EAAWhF,KADNqX,KAAKC,UAAUH,GACY5B,QAAAA,GACnD,EAUAlV,EAAAA,QAAAA,EA+DAA,EAAAA,cAAA,SAA8B,GAM7B,IALCmW,EAAa,EAAbA,cACA3R,EAAU,EAAVA,WAKA,IAAI,IAAA2Q,WAAUgB,GACZ,MAAM,IAAI5X,MAAM,mCACX,IAAI,IAAA4W,WAAU3Q,GACnB,MAAM,IAAIjG,MAAM,gCAIlB,OADwByY,KAAKI,MAAM5E,EAAQ,CAAE2D,cAAAA,EAAe3R,WAAAA,KACrC7E,IACzB,EAQAK,EAAAA,uBAAA,SAAuCwE,GACrC,IAAM6S,EAAuBhB,EAAe7R,GACtC8S,EACJhC,EAAKC,IAAIC,QAAQe,cAAcc,GAAsB1S,UACvD,OAAO8Q,EAASQ,aAAaqB,EAC/B,4OC9OA,eAOA,WACA,cACA,WAoCA,SAAS5Z,EAAQ6Z,GACf,OAAOA,EAAKC,YAAY,OAASD,EAAK1Z,OAAS,CACjD,CAQA,SAAS4Z,EAAeF,GACtB,IAAMG,EAAMH,EAAK7L,MAAM,4UACvB,OAAIgM,EACgB,KAAXA,EAAI,GAAY,UAAYhX,SAASgX,EAAI,GAAI,IAE/C,IACT,CAQA,SAASC,EAAWJ,GAClB,OAAO7W,SAAS,sJAAckX,KAAKL,GAAM,GAAI,GAC/C,CAQA,SAAgBM,EAAYxI,GAC1B,IAAMkI,SAAclI,EACpB,GAAa,WAATkI,EACF,OAAI,IAAA7V,eAAc2N,GACT,IAAIyI,EAAAA,SAAG,IAAAnU,gBAAe0L,GAAM,IAE9B,IAAIyI,EAAAA,QAAGzI,EAAK,IACd,GAAa,WAATkI,EACT,OAAO,IAAIO,EAAAA,QAAGzI,GACT,GAAIA,EAAItG,QAEb,OAAOsG,EAET,MAAM,IAAI9Q,MAAM,2BAClB,CAUA,SAASwZ,EAAiBR,EAAMzN,EAAOkO,GAErC,IAAIC,EAAMjP,EACV,GAAItL,EAAQ6Z,GAAO,CACjB,IAAMW,EAAUX,EAAKhO,QAAQ,uKAAY,IACzC,IAAK7L,EAAQwa,GAAU,CACrB,IAAMC,EAAYV,EAAeF,GACjC,GACgB,YAAdY,GACc,IAAdA,GACArO,EAAMjM,OAASsa,EAEf,MAAM,IAAI5Z,MAAM,+BAAD,OAAgC4Z,IAGnD,IAAMC,EAActO,EAAMD,KAAI,SAAUnL,GACtC,OAAOqZ,EAAiBG,EAASxZ,EAAG,IACtC,IACA,OAAO8D,EAAO+B,OAAO6T,GAChB,GAAa,UAATb,EACT,OAAOzN,EACF,GAAa,WAATyN,EACT,OAAO/U,EAAOxD,KAAK8K,EAAO,QACrB,GAAa,SAATyN,EAAiB,CAC1BS,EAAUA,GAAW,EACrB,IAAMpD,EAAUnX,MAAMua,EAAU,GAAG1H,KAAK,KACxC,OAAO9N,EAAOxD,KAAa,GAAH,OAAM4V,EAAX9K,EAAkB,IAAgB,KAAK,OACrD,GAAa,YAATyN,EAAoB,CAC7B,IAAIc,EAAW,GAIf,OAHIL,IACFK,EAAWL,EAAU,IAEhB,IAAAhL,gBAAc,IAAAjK,UAAS+G,GAAQuO,GACjC,GAAId,EAAKe,WAAW,SAAU,CAEnC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GACrB,MAAM,IAAI1Z,MAAM,2BAAD,OAA4B0Z,IAM7C,MAHqB,kBAAVnO,IACTA,GAAQ,IAAAyO,WAAUzO,KAEb,IAAA0O,iBAAe,IAAAzV,UAAS+G,GAAQmO,GAClC,GAAIV,EAAKe,WAAW,QAAS,CAElC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GAAKA,EAAO,IACjC,MAAM,IAAI1Z,MAAM,0BAAD,OAA2B0Z,IAI5C,IADAjP,EAAM6O,EAAY/N,IACV2O,YAAcR,EACpB,MAAM,IAAI1Z,MAAM,gCAAD,OACmB0Z,EAAI,eAAOjP,EAAIyP,cAKnD,OADAT,EAAUA,GAAWC,EACdjP,EAAI0P,YAAYlW,EAAQ,KAAMwV,EAAU,GAC1C,GAAIT,EAAKe,WAAW,OAAQ,CAEjC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GAAKA,EAAO,IACjC,MAAM,IAAI1Z,MAAM,yBAAD,OAA0B0Z,IAI3C,IADAjP,EAAM6O,EAAY/N,IACV2O,YAAcR,EACpB,MAAM,IAAI1Z,MAAM,+BAAD,OACkB0Z,EAAI,eAAOjP,EAAIyP,cAKlD,OADAT,EAAUA,GAAWC,EACdjP,EAAI2P,OAAOV,GAAMS,YAAYlW,EAAQ,KAAMwV,EAAU,GAG9D,MAAM,IAAIzZ,MAAM,gCAAD,OAAiCgZ,GAClD,CAQA,SAASqB,EAAepJ,GACtB,OAAIA,EAAK8I,WAAW,QACX,SAAP,OAAgB9I,EAAKhR,MAAM,IACT,QAATgR,EACF,SACEA,EAAK8I,WAAW,SAClB,UAAP,OAAiB9I,EAAKhR,MAAM,IACV,SAATgR,EACF,UACEA,EAAK8I,WAAW,UAClB,eAAP,OAAsB9I,EAAKhR,MAAM,IACf,UAATgR,EACF,eACEA,EAAK8I,WAAW,WAClB,gBAAP,OAAuB9I,EAAKhR,MAAM,IAChB,WAATgR,EACF,gBAEFA,CACT,CAkDA,SAASqJ,EAAatB,EAAMlI,GAC1B,IAAI4I,EAAMjP,EAAKhF,EAAKpG,EAEpB,GAAa,YAAT2Z,EACF,OAAOsB,EAAa,UAAWhB,EAAYxI,IACtC,GAAa,SAATkI,EACT,OAAOsB,EAAa,QAASxJ,EAAM,EAAI,GAClC,GAAa,WAATkI,EACT,OAAOsB,EAAa,QAASrW,EAAOxD,KAAKqQ,EAAK,SACzC,GAAI3R,EAAQ6Z,GAAO,CAGxB,GAA0B,qBAAflI,EAAIxR,OACb,MAAM,IAAIU,MAAM,iBAGlB,GAAa,aADb0Z,EAAOR,EAAeF,KACa,IAATU,GAAc5I,EAAIxR,OAASoa,EACnD,MAAM,IAAI1Z,MAAM,+BAAD,OAAgC0Z,IAQjD,IAAKra,KANLoG,EAAM,GACNuT,EAAOA,EAAK/Y,MAAM,EAAG+Y,EAAKC,YAAY,MACnB,kBAARnI,IACTA,EAAM2H,KAAKI,MAAM/H,IAGTA,EACJ3F,OAAO+F,UAAUqJ,eAAe7R,KAAKoI,EAAKzR,IAC5CoG,EAAIlG,KAAK+a,EAAatB,EAAMlI,EAAIzR,KAIpC,GAAa,YAATqa,EAAoB,CACtB,IAAMpa,EAASgb,EAAa,UAAWxJ,EAAIxR,QAC3CmG,EAAIuD,QAAQ1J,GAEd,OAAO2E,EAAO+B,OAAOP,GAChB,GAAa,UAATuT,EAST,OARAlI,EAAM7M,EAAOxD,KAAKqQ,GAElBrL,EAAMxB,EAAO+B,OAAO,CAACsU,EAAa,UAAWxJ,EAAIxR,QAASwR,IAEtDA,EAAIxR,OAAS,KAAO,IACtBmG,EAAMxB,EAAO+B,OAAO,CAACP,GAAK,IAAAoB,OAAM,GAAMiK,EAAIxR,OAAS,OAG9CmG,EACF,GAAIuT,EAAKe,WAAW,SAAU,CAEnC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GACrB,MAAM,IAAI1Z,MAAM,2BAAD,OAA4B0Z,IAM7C,MAHmB,kBAAR5I,IACTA,GAAM,IAAAkJ,WAAUlJ,KAEX,IAAAmJ,iBAAe,IAAAzV,UAASsM,GAAM,IAChC,GAAIkI,EAAKe,WAAW,QAAS,CAElC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GAAKA,EAAO,IACjC,MAAM,IAAI1Z,MAAM,0BAAD,OAA2B0Z,IAI5C,IADAjP,EAAM6O,EAAYxI,IACVoJ,YAAcR,EACpB,MAAM,IAAI1Z,MAAM,gCAAD,OACmB0Z,EAAI,eAAOjP,EAAIyP,cAInD,GAAIzP,EAAM,EACR,MAAM,IAAIzK,MAAM,6BAGlB,OAAOyK,EAAI0P,YAAYlW,EAAQ,KAAM,IAChC,GAAI+U,EAAKe,WAAW,OAAQ,CAEjC,IADAL,EAAON,EAAWJ,IACP,GAAKU,EAAO,GAAKA,EAAO,IACjC,MAAM,IAAI1Z,MAAM,yBAAD,OAA0B0Z,IAI3C,IADAjP,EAAM6O,EAAYxI,IACVoJ,YAAcR,EACpB,MAAM,IAAI1Z,MAAM,+BAAD,OACkB0Z,EAAI,eAAOjP,EAAIyP,cAIlD,OAAOzP,EAAI2P,OAAO,KAAKD,YAAYlW,EAAQ,KAAM,IAC5C,GAAI+U,EAAKe,WAAW,UAAW,CAKpC,GAJAL,EAAOc,EAAaxB,IAEpBvO,EAAM6O,EAAYxI,IAER,EACR,MAAM,IAAI9Q,MAAM,+BAGlB,OAAOsa,EAAa,UAAW7P,EAAIgQ,IAAI,IAAIlB,EAAAA,QAAG,GAAGmB,IAAI,IAAInB,EAAAA,QAAGG,EAAK,OAC5D,GAAIV,EAAKe,WAAW,SAGzB,OAFAL,EAAOc,EAAaxB,GAEbsB,EACL,SACAhB,EAAYxI,GAAK2J,IAAI,IAAIlB,EAAAA,QAAG,GAAGmB,IAAI,IAAInB,EAAAA,QAAGG,EAAK,OAInD,MAAM,IAAI1Z,MAAM,gCAAD,OAAiCgZ,GAClD,CAMA,SAAS2B,EAAU3B,GAEjB,MACW,WAATA,GAA8B,UAATA,GAA6C,YAAzBE,EAAeF,EAE5D,CAMA,SAASwB,EAAaxB,GACpB,IAAMG,EAAM,+JAAoBE,KAAKL,GACrC,MAAO,CAAC7W,SAASgX,EAAI,GAAI,IAAKhX,SAASgX,EAAI,GAAI,IACjD,CAzWA1X,EAAAA,aAAA,SAA6BmZ,EAAiBlW,GAC5C,GAAIkW,EAAMtb,SAAWoF,EAAOpF,OAC1B,MAAM,IAAIU,MAAM,+CAKlB,IAFA,IAAMyF,EAAM,GAEHpG,EAAI,EAAGA,EAAIub,EAAMtb,OAAQD,IAAK,CACrC,IAAM2Z,EAAOqB,EAAeO,EAAMvb,IAC5BkM,EAAQ7G,EAAOrF,GACrBoG,EAAIlG,KAAKia,EAAiBR,EAAMzN,EAAO,OAGzC,OAAOtH,EAAO+B,OAAOP,EACvB,EA0CAhE,EAAAA,YAAAA,EAqIAA,EAAAA,UAAA,SAA0BmZ,EAAOlW,GAC/B,IAAMtF,EAAS,GACTgC,EAAO,GAETyZ,EAAa,EAEjBD,EAAME,SAAQ,SAAU9B,GACtB,GAAI7Z,EAAQ6Z,GAAO,CACjB,IAAMU,EAA2BR,EAAeF,GAG9C6B,GADW,YAATnB,EACY,GAAKA,EAEL,QAGhBmB,GAAc,EAElB,IAEA,IAAK,IAAIxb,EAAI,EAAGA,EAAIub,EAAMtb,OAAQD,IAAK,CACrC,IAAM2Z,EAAOqB,EAAeO,EAAMvb,IAE5B0b,EAAMT,EAAatB,EADXtU,EAAOrF,IAIjBsb,EAAU3B,IACZ5Z,EAAOG,KAAK+a,EAAa,UAAWO,IACpCzZ,EAAK7B,KAAKwb,GACVF,GAAcE,EAAIzb,QAElBF,EAAOG,KAAKwb,GAIhB,OAAO9W,EAAO+B,OAAO5G,EAAO4G,OAAO5E,GACrC,yiBC7PAsK,EAAAA,EAAAA,OAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,OAAAA,GACA,eAASP,OAAAA,eAAAA,EAAAA,YAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAoP,SAAS,IAAE7P,OAAAA,eAAAA,EAAAA,YAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAoO,SAAS,6JCH7B,eASA,WAmGA,SAASiB,EACP/L,EACAZ,GAEA,IAAM4M,GAAc,IAAAC,sBAAoB,IAAAC,gBAAelM,IACvD,OAAO,IAAAP,kBAAiBuM,EAAa5M,EACvC,CAvFA7M,EAAAA,aAAA,SAA6B,GAM5B,IALCwE,EAAU,EAAVA,WACA7E,EAAI,EAAJA,KAKA,IAAI,IAAAwV,WAAUxV,GACZ,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAU3Q,GACnB,MAAM,IAAIjG,MAAM,gCAGlB,IAAMkP,GAAU,IAAAkM,gBAAeha,GACzB8M,GAAU,IAAAiN,qBAAoBjM,GAC9BL,GAAM,IAAAwM,QAAOnN,EAASjI,GAE5B,OADmB,IAAA+U,YAAU,IAAAxW,UAASqK,EAAI1O,GAAI0O,EAAIN,EAAGM,EAAIL,EAE3D,EAWA/M,EAAAA,yBAAA,SAAyC,GAMxC,IALCL,EAAI,EAAJA,KACAkN,EAAS,EAATA,UAKA,IAAI,IAAAsI,WAAUxV,GACZ,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAUtI,GACnB,MAAM,IAAItO,MAAM,+BAGlB,IAAMoG,EAAY6U,EAAgB7Z,EAAMkN,GAClCgN,GAAS,IAAA5U,iBAAgBN,GAE/B,OADkB,IAAAU,aAAYwU,EAEhC,EAWA7Z,EAAAA,iBAAA,SAAiC,GAMhC,IALCL,EAAI,EAAJA,KACAkN,EAAS,EAATA,UAKA,IAAI,IAAAsI,WAAUxV,GACZ,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAUtI,GACnB,MAAM,IAAItO,MAAM,+BAGlB,IAAMoG,EAAY6U,EAAgB7Z,EAAMkN,GACxC,MAAO,KAAP,OAAYlI,EAAUxE,SAAS,OACjC,sSCnGA,IA+CY2Z,EA/CZ,WACA,WAOA,UACA,UACA,WAkHA,SAASC,EACP7E,EACA8E,GAEA,IAAKtQ,OAAOuQ,KAAKH,GAAsBI,SAAShF,GAC9C,MAAM,IAAI3W,MAAM,qBAAD,OAAsB2W,EAAO,MACvC,GAAI8E,IAAoBA,EAAgBE,SAAShF,GACtD,MAAM,IAAI3W,MAAM,sCAAD,OACyB2W,EAAO,oCAA4B8E,EAAgB1J,KACvF,OAIR,CAYA,SAAS6J,EACPhB,EACA3J,EACA+H,EACAzN,EACAoL,GAIA,GAFA6E,EAAgB7E,EAAS,CAAC4E,EAAqBM,GAAIN,EAAqBO,UAEpDzY,IAAhBuX,EAAM5B,GACR,MAAO,CACL,UACArC,IAAY4E,EAAqBO,IAAe,MAATvQ,EACnC,sEACA,IAAA5G,cAAY,IAAAa,WAAUuW,EAAW/C,EAAMzN,EAAOqP,EAAOjE,MAI7D,QAActT,IAAVkI,EACF,MAAM,IAAIvL,MAAM,2BAAD,OAA4BiR,EAAI,oBAAY+H,IAG7D,GAAa,UAATA,EAAkB,CACpB,GAAqB,kBAAVzN,EACTA,GAAQ,IAAAyQ,gBAAezQ,QAClB,IAAI,IAAAlB,aAAYkB,GAAQ,CAC7B,IAAM0Q,EAAU1Q,EAAMjM,OAAS,EAAI,IAAM,GACzCiM,EAAQtH,EAAOxD,KAAKwb,EAAU1Q,EAAMtL,MAAM,GAAI,YAE9CsL,EAAQtH,EAAOxD,KAAK8K,EAAO,QAE7B,MAAO,CAAC,WAAW,IAAA5G,cAAY,IAAAa,WAAU+F,KAG3C,GAAa,WAATyN,EAMF,OAJEzN,EADmB,kBAAVA,GACD,IAAAyQ,gBAAezQ,GAEftH,EAAOxD,KAAU,OAAL8K,QAAK,IAALA,EAAAA,EAAS,GAAI,QAE5B,CAAC,WAAW,IAAA5G,cAAY,IAAAa,WAAU+F,KAG3C,GAAIyN,EAAKC,YAAY,OAASD,EAAK1Z,OAAS,EAAG,CAC7C,GAAIqX,IAAY4E,EAAqBM,GACnC,MAAM,IAAI7b,MACR,4DAGJ,IAAMkc,EAAalD,EAAK/Y,MAAM,EAAG+Y,EAAKC,YAAY,MAC5CkD,EAAiB5Q,EAAMD,KAAI,SAAC8Q,GAAI,OACpCR,EAAYhB,EAAO3J,EAAMiL,EAAYE,EAAMzF,EAAQ,IAErD,MAAO,CACL,WACA,IAAAhS,cACE,IAAAa,YACE,IAAA6W,WACEF,EAAe7Q,KAAI,YAAG,OAAH,OAAG,EAAO,IAC7B6Q,EAAe7Q,KAAI,YAAK,OAAL,OAAK,EAAO,QAOzC,MAAO,CAAC0N,EAAMzN,EAChB,CAWA,SAASwQ,EACPO,EACAlb,EACAwZ,EACAjE,GAEA6E,EAAgB7E,EAAS,CAAC4E,EAAqBM,GAAIN,EAAqBO,KAExE,IAGsC,EAHhCS,EAAe,CAAC,WAChBC,EAA2B,CAACC,EAASH,EAAa1B,IAAQ,IAE5CA,EAAM0B,IAAY,IAAtC,IAAK,EAAL,qBAAwC,KAA7BI,EAAK,QACd,GAAI/F,IAAY4E,EAAqBM,SAA2BxY,IAArBjC,EAAKsb,EAAMzL,MAAtD,CAGA,MAAsB2K,EACpBhB,EACA8B,EAAMzL,KACNyL,EAAM1D,KACN5X,EAAKsb,EAAMzL,MACX0F,GACD,SANMqC,EAAI,KAAEzN,EAAK,KAOlBgR,EAAahd,KAAKyZ,GAClBwD,EAAcjd,KAAKgM,IACpB,+BAED,OAAO,IAAA8Q,WAAUE,EAAcC,EACjC,CASA,SAASG,EACPL,EACA1B,GAEA,IAAIhY,EAAS,GACPga,EAAeC,EAAqBP,EAAa1B,GACvDgC,EAAaE,OAAOR,GAEpB,IACuB,EADjBS,EAAO,CAACT,GAAW,SAAKpd,MAAMuB,KAAKmc,GAAcI,SAAQ,IAC5CD,GAAI,IAAvB,IAAK,EAAL,qBAAyB,KAAd/D,EAAI,QAEb,IADiB4B,EAAM5B,GAErB,MAAM,IAAIhZ,MAAM,iCAAD,OAAkCgZ,IAGnDpW,GAAU,GAAJ,OAAOoW,EAAI,YAAI4B,EAAM5B,GACxB1N,KAAI,gBAAG2F,EAAI,EAAJA,KAAY6C,EAAC,EAAPkF,KAAI,gBAAalF,EAAC,YAAI7C,EAAI,IACvCc,KAAK,KAAI,KACb,+BAED,OAAOnP,CACT,CAUA,SAASia,EACPP,EACA1B,GACgC,IAAhCqC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAuB,IAAIC,IAAK,EAEhBZ,EAAYnP,MAAM,kBAAQ,SAC1C,GADCmP,EAAW,KACRW,EAAQE,IAAIb,SAAuCjZ,IAAvBuX,EAAM0B,GACpC,OAAOW,EAGTA,EAAQ7T,IAAIkT,GAAa,IAEa,EAFb,IAEL1B,EAAM0B,IAAY,IAAtC,IAAK,EAAL,qBAAwC,KAA7BI,EAAK,QACdG,EAAqBH,EAAM1D,KAAM4B,EAAOqC,GACzC,+BACD,OAAOA,CACT,CAWA,SAASG,EACPd,EACAlb,EACAwZ,EACAjE,GAIA,OAFA6E,EAAgB7E,EAAS,CAAC4E,EAAqBM,GAAIN,EAAqBO,MAEjE,IAAAnX,cAAY,IAAAa,WAAUuW,EAAWO,EAAalb,EAAMwZ,EAAOjE,IACpE,CASA,SAAS8F,EACPH,EACA1B,GAEA,IAAMyC,EAAkBpZ,EAAOxD,KAAKkc,EAAWL,EAAa1B,GAAQ,SACpE,OAAO,IAAAjW,cAAY,IAAAa,WAAU6X,GAC/B,CAQA,SAASC,EACPlc,GAEA,IAAMmc,EAA0C,CAAC,EACjD,IAAK,IAAMtQ,KAAOxL,EAAAA,qBAAqB+b,WACjCpc,EAAK6L,KACPsQ,EAActQ,GAAO7L,EAAK6L,IAO9B,MAHI,UAAWsQ,IACbA,EAAc3C,MAAQ,OAAH,QAAK6C,aAAc,IAAOF,EAAc3C,QAEtD2C,CACT,CAiFA,SAASG,EAAoBC,GAC3B,IAAMC,EAAQ,IAAI5d,MAAM,yCACxB,GACuB,kBAAd2d,KACL,WAAYA,KACbA,EAAUre,OAEX,MAAMse,EAGR,IAAMxc,EAAOuc,EAAUrS,KAAI,SAAUvG,GACnC,MAAe,UAAXA,EAAEiU,KACGjU,EAAEwG,OAGJ,IAAA6P,gBAAerW,EAAEwG,MAC1B,IACMqP,EAAQ+C,EAAUrS,KAAI,SAAUvG,GACpC,OAAOA,EAAEiU,IACX,IACM6E,EAASF,EAAUrS,KAAI,SAAUvG,GACrC,IAAKA,EAAEkM,KACL,MAAM2M,EAER,MAAO,GAAP,OAAU7Y,EAAEiU,KAAI,YAAIjU,EAAEkM,KACxB,IAEA,OAAO,IAAAtM,cACL,IAAAa,YACE,IAAAsY,cACE,CAAC,UAAW,WACZ,EACE,IAAAtY,YACE,IAAAsY,cAAa,IAAI5e,MAAMye,EAAUre,QAAQuK,KAAK,UAAWgU,KAE3D,IAAArY,YAAU,IAAAsY,cAAalD,EAAOxZ,OAKxC,EAzbA,SAAYma,GACVA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,KACAA,EAAAA,GAAAA,IACD,CAJD,CAAYA,EAAA9Z,EAAAA,uBAAAA,EAAAA,qBAAoB,KA8CnBA,EAAAA,qBAAuB,CAClCuX,KAAM,SACNwE,WAAY,CACV5C,MAAO,CACL5B,KAAM,SACN+E,qBAAsB,CACpB/E,KAAM,QACNgF,MAAO,CACLhF,KAAM,SACNwE,WAAY,CACVvM,KAAM,CAAE+H,KAAM,UACdA,KAAM,CAAEA,KAAM,WAEhBiF,SAAU,CAAC,OAAQ,WAIzB3B,YAAa,CAAEtD,KAAM,UACrBkF,OAAQ,CAAElF,KAAM,UAChB9J,QAAS,CAAE8J,KAAM,WAEnBiF,SAAU,CAAC,QAAS,cAAe,SAAU,YA6SlCxc,EAAAA,eAAiB,CAC5Bsa,WAAAA,EACAY,WAAAA,EACAE,qBAAAA,EACAO,WAAAA,EACAX,SAAAA,EACAa,aAAAA,EACAa,WAzCF,SACER,EACAhH,GAEA6E,EAAgB7E,EAAS,CAAC4E,EAAqBM,GAAIN,EAAqBO,KAExE,IAAMyB,EAAgBD,EAAaK,GAC7BS,EAAQ,CAACna,EAAOxD,KAAK,OAAQ,QAqBnC,OApBA2d,EAAM7e,KACJ6d,EACE,eACAG,EAAcW,OACdX,EAAc3C,MACdjE,IAI8B,iBAA9B4G,EAAcjB,aAChB8B,EAAM7e,KACJ6d,EAEEG,EAAcjB,YACdiB,EAAcrO,QACdqO,EAAc3C,MACdjE,KAIC,IAAAhS,cAAY,IAAAa,WAAUvB,EAAO+B,OAAOoY,IAC7C,GAwBA3c,EAAAA,mBAAA,SAAmCkc,GACjC,IAAMU,EAAaX,EAAoBC,GACvC,OAAO,IAAA7W,aAAYuX,EACrB,EAwEA5c,EAAAA,cAAA,SAA6B,GAW5B,IAPCwE,EAAU,EAAVA,WACA7E,EAAI,EAAJA,KACAuV,EAAO,EAAPA,QAOA,GADA6E,EAAgB7E,IACZ,IAAAC,WAAUxV,GACZ,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAU3Q,GACnB,MAAM,IAAIjG,MAAM,iCAGlB,IAAMkb,EACJvE,IAAY4E,EAAqB+C,GAC7BZ,EAAoBtc,GACpBK,EAAAA,eAAe0c,WACb/c,EACAuV,GAEF9H,GAAM,IAAAwM,QAAOH,EAAajV,GAChC,OAAO,IAAA+U,YAAU,IAAAxW,UAASqK,EAAI1O,GAAI0O,EAAIN,EAAGM,EAAIL,EAC/C,EAaA/M,EAAAA,sBAAA,SAAqC,GAWpC,IAPCL,EAAI,EAAJA,KACAkN,EAAS,EAATA,UACAqI,EAAO,EAAPA,QAOA,GADA6E,EAAgB7E,IACZ,IAAAC,WAAUxV,GACZ,MAAM,IAAIpB,MAAM,0BACX,IAAI,IAAA4W,WAAUtI,GACnB,MAAM,IAAItO,MAAM,+BAGlB,IAAMkb,EACJvE,IAAY4E,EAAqB+C,GAC7BZ,EAAoBtc,GACpBK,EAAAA,eAAe0c,WACb/c,EACAuV,GAEFvQ,GAAY,IAAAuI,kBAAiBuM,EAAa5M,GAC1CgN,GAAS,IAAA5U,iBAAgBN,GAC/B,OAAO,IAAAU,aAAYwU,EACrB,6NCnkBA,eAWA,WAeA,SAAgBiD,EAAcC,EAAmBC,GAC/C,GAAkB,KAAdD,IAAqB,eAAgBxZ,KAAKwZ,GAC5C,MAAM,IAAIxe,MAAM,gDAAD,OACmCwe,IAIpD,GAAIC,EAAe,EACjB,MAAM,IAAIze,MAAM,4DAAD,OAC+Cye,IAIhE,OAAO7R,OAAOsE,UAAUrP,SAAS6G,KAAK8V,EAAWC,EAAc,IACjE,CAdAhd,EAAAA,cAAAA,EAsBAA,EAAAA,UAAA,SAA0B8J,GACxB,OAAiB,OAAVA,QAA4BlI,IAAVkI,CAC3B,EASA9J,EAAAA,eAAA,SAA+B8J,GAC7B,MAAwB,kBAAVA,IAAuB,IAAAlB,aAAYkB,IAE7C,IAAA/G,UAAS+G,GADTtH,EAAOxD,KAAK8K,EAElB,EAUA9J,EAAAA,UAAA,SAA0BtB,EAAWoO,EAAWC,GAC9C,IAAMkQ,GAAO,IAAAC,YAAWpQ,GAClBqQ,GAAO,IAAAD,YAAWnQ,GAClBqQ,GAAO,IAAA/P,aAAY3O,GACnB2e,EAAOP,GAAc,IAAAQ,YAAWL,GAAM9c,SAAS,OAAQ,IACvDod,EAAOT,GAAc,IAAAQ,YAAWH,GAAMhd,SAAS,OAAQ,IACvDqd,GAAO,IAAA7Z,iBAAe,IAAAqE,UAASoV,IACrC,OAAO,IAAAK,cAAaJ,EAAK9Y,OAAOgZ,EAAMC,GACxC,EASAxd,EAAAA,iBAAA,SACEyZ,EACA5M,GAEA,IAAM6Q,GAAY,IAAAC,YAAW9Q,GAC7B,OAAO,IAAA+Q,WAAUnE,EAAaiE,EAAUhf,EAAGgf,EAAU5Q,EAAG4Q,EAAU3Q,EACpE,EAQA/M,EAAAA,UAAA,SAA0BxC,GACxB,GAAKA,EAAL,CAIA,GAAqB,kBAAVA,EAAoB,CAC7B,GAAIA,EAAQ,EACV,MAAO,KAET,IAAM4L,GAAS,IAAArG,UAASvF,GACxBA,GAAQ,IAAA6H,aAAY+D,GAGtB,GAAqB,kBAAV5L,EAAoB,CAC7B,IAAI8K,EAAM,iEAEV,MADAA,GAAO,aAAJ,cAAwB9K,EAAK,aAAKA,GAC/B,IAAIe,MAAM+J,GAGlB,OAAO,IAAAmV,cAAajgB,EAAMoG,eAC5B,EASA5D,EAAAA,eAAA,SAA+BgJ,GAC7B,IAAM6U,EAAS7U,EAAI7I,SAAS,IACtBqa,EAAUqD,EAAOhgB,OAAS,EAAI,IAAM,GAC1C,OAAO2E,EAAOxD,KAAKwb,EAAUqD,EAAQ,MACvC,0BCzIA,SAAW5I,EAAQjV,GACjB,aAGA,SAAS8d,EAAQC,EAAKzV,GACpB,IAAKyV,EAAK,MAAM,IAAIxf,MAAM+J,GAAO,mBACnC,CAIA,SAAS0V,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAAS3O,UAAYyO,EAAUzO,UAC/BwO,EAAKxO,UAAY,IAAI2O,EACrBH,EAAKxO,UAAU4O,YAAcJ,CAC/B,CAIA,SAASK,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTlc,KAAKsc,SAAW,EAChBtc,KAAKuc,MAAQ,KACbvc,KAAKxE,OAAS,EAGdwE,KAAKwc,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTnc,KAAKyc,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAElD,CAUA,IAAIjc,EATkB,kBAAXyS,EACTA,EAAOjV,QAAUse,EAEjBte,EAAQse,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGS,SAAW,GAGd,IAEIvc,EADoB,qBAAXwc,QAAmD,qBAAlBA,OAAOxc,OACxCwc,OAAOxc,OAEPyc,EAAAA,KAAAA,MAGb,CADE,MAAO3b,GACT,CA+HA,SAAS4b,EAAeC,EAAQzX,GAC9B,IAAI0I,EAAI+O,EAAO7T,WAAW5D,GAE1B,OAAI0I,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,GAGHA,EAAI,GAAM,EAEtB,CAEA,SAASzR,EAAcwgB,EAAQC,EAAY1X,GACzC,IAAIoF,EAAIoS,EAAcC,EAAQzX,GAI9B,OAHIA,EAAQ,GAAK0X,IACftS,GAAKoS,EAAcC,EAAQzX,EAAQ,IAAM,GAEpCoF,CACT,CA6CA,SAASuS,EAAW1d,EAAKtD,EAAOC,EAAK0a,GAGnC,IAFA,IAAIlM,EAAI,EACJjO,EAAMygB,KAAKC,IAAI5d,EAAI9D,OAAQS,GACtBV,EAAIS,EAAOT,EAAIiB,EAAKjB,IAAK,CAChC,IAAIwS,EAAIzO,EAAI2J,WAAW1N,GAAK,GAE5BkP,GAAKkM,EAIHlM,GADEsD,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,CAET,CACA,OAAOtD,CACT,CApNAwR,EAAGI,KAAO,SAAe1V,GACvB,OAAIA,aAAesV,GAIJ,OAARtV,GAA+B,kBAARA,GAC5BA,EAAIqV,YAAYU,WAAaT,EAAGS,UAAYthB,MAAMC,QAAQsL,EAAI4V,MAClE,EAEAN,EAAGkB,IAAM,SAAcC,EAAMlX,GAC3B,OAAIkX,EAAKC,IAAInX,GAAS,EAAUkX,EACzBlX,CACT,EAEA+V,EAAGiB,IAAM,SAAcE,EAAMlX,GAC3B,OAAIkX,EAAKC,IAAInX,GAAS,EAAUkX,EACzBlX,CACT,EAEA+V,EAAG7O,UAAUqP,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOlc,KAAKsd,YAAYpB,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOlc,KAAKud,WAAWrB,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETV,EAAOU,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIngB,EAAQ,EACM,OAFlBkgB,EAASA,EAAOpe,WAAWoJ,QAAQ,OAAQ,KAEhC,KACTlL,IACAgE,KAAKsc,SAAW,GAGdtgB,EAAQkgB,EAAO1gB,SACJ,KAAT2gB,EACFnc,KAAKwd,UAAUtB,EAAQlgB,EAAOogB,IAE9Bpc,KAAKyd,WAAWvB,EAAQC,EAAMngB,GACf,OAAXogB,GACFpc,KAAKud,WAAWvd,KAAK0G,UAAWyV,EAAMC,IAI9C,EAEAH,EAAG7O,UAAUkQ,YAAc,SAAsBpB,EAAQC,EAAMC,GACzDF,EAAS,IACXlc,KAAKsc,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXlc,KAAKuc,MAAQ,CAAW,SAATL,GACflc,KAAKxE,OAAS,GACL0gB,EAAS,kBAClBlc,KAAKuc,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBlc,KAAKxE,OAAS,IAEdigB,EAAOS,EAAS,kBAChBlc,KAAKuc,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFlc,KAAKxE,OAAS,GAGD,OAAX4gB,GAGJpc,KAAKud,WAAWvd,KAAK0G,UAAWyV,EAAMC,EACxC,EAEAH,EAAG7O,UAAUmQ,WAAa,SAAqBrB,EAAQC,EAAMC,GAG3D,GADAX,EAAgC,kBAAlBS,EAAO1gB,QACjB0gB,EAAO1gB,QAAU,EAGnB,OAFAwE,KAAKuc,MAAQ,CAAE,GACfvc,KAAKxE,OAAS,EACPwE,KAGTA,KAAKxE,OAASyhB,KAAKS,KAAKxB,EAAO1gB,OAAS,GACxCwE,KAAKuc,MAAQ,IAAInhB,MAAM4E,KAAKxE,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAC/ByE,KAAKuc,MAAMhhB,GAAK,EAGlB,IAAIkD,EAAGkf,EACHC,EAAM,EACV,GAAe,OAAXxB,EACF,IAAK7gB,EAAI2gB,EAAO1gB,OAAS,EAAGiD,EAAI,EAAGlD,GAAK,EAAGA,GAAK,EAC9CoiB,EAAIzB,EAAO3gB,GAAM2gB,EAAO3gB,EAAI,IAAM,EAAM2gB,EAAO3gB,EAAI,IAAM,GACzDyE,KAAKuc,MAAM9d,IAAOkf,GAAKC,EAAO,SAC9B5d,KAAKuc,MAAM9d,EAAI,GAAMkf,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPnf,UAGC,GAAe,OAAX2d,EACT,IAAK7gB,EAAI,EAAGkD,EAAI,EAAGlD,EAAI2gB,EAAO1gB,OAAQD,GAAK,EACzCoiB,EAAIzB,EAAO3gB,GAAM2gB,EAAO3gB,EAAI,IAAM,EAAM2gB,EAAO3gB,EAAI,IAAM,GACzDyE,KAAKuc,MAAM9d,IAAOkf,GAAKC,EAAO,SAC9B5d,KAAKuc,MAAM9d,EAAI,GAAMkf,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPnf,KAIN,OAAOuB,KAAK0S,OACd,EAwBAuJ,EAAG7O,UAAUoQ,UAAY,SAAoBtB,EAAQlgB,EAAOogB,GAE1Dpc,KAAKxE,OAASyhB,KAAKS,MAAMxB,EAAO1gB,OAASQ,GAAS,GAClDgE,KAAKuc,MAAQ,IAAInhB,MAAM4E,KAAKxE,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAC/ByE,KAAKuc,MAAMhhB,GAAK,EAIlB,IAGIoiB,EAHAC,EAAM,EACNnf,EAAI,EAGR,GAAe,OAAX2d,EACF,IAAK7gB,EAAI2gB,EAAO1gB,OAAS,EAAGD,GAAKS,EAAOT,GAAK,EAC3CoiB,EAAIrhB,EAAa4f,EAAQlgB,EAAOT,IAAMqiB,EACtC5d,KAAKuc,MAAM9d,IAAU,SAAJkf,EACbC,GAAO,IACTA,GAAO,GACPnf,GAAK,EACLuB,KAAKuc,MAAM9d,IAAMkf,IAAM,IAEvBC,GAAO,OAKX,IAAKriB,GADa2gB,EAAO1gB,OAASQ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOT,EAAI2gB,EAAO1gB,OAAQD,GAAK,EAC1EoiB,EAAIrhB,EAAa4f,EAAQlgB,EAAOT,IAAMqiB,EACtC5d,KAAKuc,MAAM9d,IAAU,SAAJkf,EACbC,GAAO,IACTA,GAAO,GACPnf,GAAK,EACLuB,KAAKuc,MAAM9d,IAAMkf,IAAM,IAEvBC,GAAO,EAKb5d,KAAK0S,OACP,EA0BAuJ,EAAG7O,UAAUqQ,WAAa,SAAqBvB,EAAQC,EAAMngB,GAE3DgE,KAAKuc,MAAQ,CAAE,GACfvc,KAAKxE,OAAS,EAGd,IAAK,IAAIqiB,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW3B,EAClE0B,IAEFA,IACAC,EAAWA,EAAU3B,EAAQ,EAO7B,IALA,IAAI4B,EAAQ7B,EAAO1gB,OAASQ,EACxBgiB,EAAMD,EAAQF,EACd5hB,EAAMghB,KAAKC,IAAIa,EAAOA,EAAQC,GAAOhiB,EAErCiiB,EAAO,EACF1iB,EAAIS,EAAOT,EAAIU,EAAKV,GAAKsiB,EAChCI,EAAOjB,EAAUd,EAAQ3gB,EAAGA,EAAIsiB,EAAS1B,GAEzCnc,KAAKke,MAAMJ,GACP9d,KAAKuc,MAAM,GAAK0B,EAAO,SACzBje,KAAKuc,MAAM,IAAM0B,EAEjBje,KAAKme,OAAOF,GAIhB,GAAY,IAARD,EAAW,CACb,IAAIpH,EAAM,EAGV,IAFAqH,EAAOjB,EAAUd,EAAQ3gB,EAAG2gB,EAAO1gB,OAAQ2gB,GAEtC5gB,EAAI,EAAGA,EAAIyiB,EAAKziB,IACnBqb,GAAOuF,EAGTnc,KAAKke,MAAMtH,GACP5W,KAAKuc,MAAM,GAAK0B,EAAO,SACzBje,KAAKuc,MAAM,IAAM0B,EAEjBje,KAAKme,OAAOF,EAEhB,CAEAje,KAAK0S,OACP,EAEAuJ,EAAG7O,UAAUjH,KAAO,SAAeiY,GACjCA,EAAK7B,MAAQ,IAAInhB,MAAM4E,KAAKxE,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAC/B6iB,EAAK7B,MAAMhhB,GAAKyE,KAAKuc,MAAMhhB,GAE7B6iB,EAAK5iB,OAASwE,KAAKxE,OACnB4iB,EAAK9B,SAAWtc,KAAKsc,SACrB8B,EAAK5B,IAAMxc,KAAKwc,GAClB,EAEAP,EAAG7O,UAAUiR,MAAQ,WACnB,IAAI5T,EAAI,IAAIwR,EAAG,MAEf,OADAjc,KAAKmG,KAAKsE,GACHA,CACT,EAEAwR,EAAG7O,UAAUkR,QAAU,SAAkB1I,GACvC,KAAO5V,KAAKxE,OAASoa,GACnB5V,KAAKuc,MAAMvc,KAAKxE,UAAY,EAE9B,OAAOwE,IACT,EAGAic,EAAG7O,UAAUsF,MAAQ,WACnB,KAAO1S,KAAKxE,OAAS,GAAqC,IAAhCwE,KAAKuc,MAAMvc,KAAKxE,OAAS,IACjDwE,KAAKxE,SAEP,OAAOwE,KAAKue,WACd,EAEAtC,EAAG7O,UAAUmR,UAAY,WAKvB,OAHoB,IAAhBve,KAAKxE,QAAkC,IAAlBwE,KAAKuc,MAAM,KAClCvc,KAAKsc,SAAW,GAEXtc,IACT,EAEAic,EAAG7O,UAAUoR,QAAU,WACrB,OAAQxe,KAAKwc,IAAM,UAAY,SAAWxc,KAAKlC,SAAS,IAAM,GAChE,EAgCA,IAAIiF,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGE0b,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAYta,EAAMsC,EAAKiY,GAC9BA,EAAItC,SAAW3V,EAAI2V,SAAWjY,EAAKiY,SACnC,IAAI9f,EAAO6H,EAAK7I,OAASmL,EAAInL,OAAU,EACvCojB,EAAIpjB,OAASgB,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIoC,EAAoB,EAAhByF,EAAKkY,MAAM,GACfsC,EAAmB,EAAflY,EAAI4V,MAAM,GACd9R,EAAI7L,EAAIigB,EAERC,EAAS,SAAJrU,EACLsU,EAAStU,EAAI,SAAa,EAC9BmU,EAAIrC,MAAM,GAAKuC,EAEf,IAAK,IAAIvX,EAAI,EAAGA,EAAI/K,EAAK+K,IAAK,CAM5B,IAHA,IAAIyX,EAASD,IAAU,GACnBE,EAAgB,SAARF,EACRG,EAAOjC,KAAKC,IAAI3V,EAAGZ,EAAInL,OAAS,GAC3BiD,EAAIwe,KAAKE,IAAI,EAAG5V,EAAIlD,EAAK7I,OAAS,GAAIiD,GAAKygB,EAAMzgB,IAAK,CAC7D,IAAIlD,EAAKgM,EAAI9I,EAAK,EAIlBugB,IADAvU,GAFA7L,EAAoB,EAAhByF,EAAKkY,MAAMhhB,KACfsjB,EAAmB,EAAflY,EAAI4V,MAAM9d,IACFwgB,GACG,SAAa,EAC5BA,EAAY,SAAJxU,CACV,CACAmU,EAAIrC,MAAMhV,GAAa,EAAR0X,EACfF,EAAiB,EAATC,CACV,CAOA,OANc,IAAVD,EACFH,EAAIrC,MAAMhV,GAAa,EAARwX,EAEfH,EAAIpjB,SAGCojB,EAAIlM,OACb,CA1lBAuJ,EAAG7O,UAAUtP,SAAW,SAAmBqe,EAAM5J,GAI/C,IAAIqM,EACJ,GAHArM,EAAoB,EAAVA,GAAe,EAGZ,MAJb4J,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCyC,EAAM,GAGN,IAFA,IAAIhB,EAAM,EACNmB,EAAQ,EACHxjB,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAAK,CACpC,IAAIoiB,EAAI3d,KAAKuc,MAAMhhB,GACf0iB,GAA+B,UAArBN,GAAKC,EAAOmB,IAAmBjhB,SAAS,IAGpD8gB,EADY,KADdG,EAASpB,IAAO,GAAKC,EAAQ,WACVriB,IAAMyE,KAAKxE,OAAS,EAC/BuH,EAAM,EAAIkb,EAAKziB,QAAUyiB,EAAOW,EAEhCX,EAAOW,GAEfhB,GAAO,IACI,KACTA,GAAO,GACPriB,IAEJ,CAIA,IAHc,IAAVwjB,IACFH,EAAMG,EAAMjhB,SAAS,IAAM8gB,GAEtBA,EAAIpjB,OAAS+W,IAAY,GAC9BqM,EAAM,IAAMA,EAKd,OAHsB,IAAlB5e,KAAKsc,WACPsC,EAAM,IAAMA,GAEPA,CACT,CAEA,GAAIzC,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIgD,EAAYV,EAAWtC,GAEvBiD,EAAYV,EAAWvC,GAC3ByC,EAAM,GACN,IAAI7Q,EAAI/N,KAAKqe,QAEb,IADAtQ,EAAEuO,SAAW,GACLvO,EAAEsR,UAAU,CAClB,IAAI5U,EAAIsD,EAAEuR,KAAKF,GAAWthB,SAASqe,GAMjCyC,GALF7Q,EAAIA,EAAEwR,MAAMH,IAELC,SAGC5U,EAAImU,EAFJ7b,EAAMoc,EAAY1U,EAAEjP,QAAUiP,EAAImU,CAI5C,CAIA,IAHI5e,KAAKqf,WACPT,EAAM,IAAMA,GAEPA,EAAIpjB,OAAS+W,IAAY,GAC9BqM,EAAM,IAAMA,EAKd,OAHsB,IAAlB5e,KAAKsc,WACPsC,EAAM,IAAMA,GAEPA,CACT,CAEAnD,GAAO,EAAO,kCAChB,EAEAQ,EAAG7O,UAAUoS,SAAW,WACtB,IAAI7d,EAAM3B,KAAKuc,MAAM,GASrB,OARoB,IAAhBvc,KAAKxE,OACPmG,GAAuB,SAAhB3B,KAAKuc,MAAM,GACO,IAAhBvc,KAAKxE,QAAkC,IAAlBwE,KAAKuc,MAAM,GAEzC5a,GAAO,iBAAoC,SAAhB3B,KAAKuc,MAAM,GAC7Bvc,KAAKxE,OAAS,GACvBigB,GAAO,EAAO,8CAEU,IAAlBzb,KAAKsc,UAAmB3a,EAAMA,CACxC,EAEAsa,EAAG7O,UAAUqS,OAAS,WACpB,OAAOzf,KAAKlC,SAAS,GACvB,EAEAme,EAAG7O,UAAU1M,SAAW,SAAmB0b,EAAQ5gB,GAEjD,OADAigB,EAAyB,qBAAXtb,GACPH,KAAKqW,YAAYlW,EAAQic,EAAQ5gB,EAC1C,EAEAygB,EAAG7O,UAAU1G,QAAU,SAAkB0V,EAAQ5gB,GAC/C,OAAOwE,KAAKqW,YAAYjb,MAAOghB,EAAQ5gB,EACzC,EAEAygB,EAAG7O,UAAUiJ,YAAc,SAAsBqJ,EAAWtD,EAAQ5gB,GAClE,IAAI6M,EAAarI,KAAKqI,aAClBsX,EAAYnkB,GAAUyhB,KAAKE,IAAI,EAAG9U,GACtCoT,EAAOpT,GAAcsX,EAAW,yCAChClE,EAAOkE,EAAY,EAAG,+BAEtB3f,KAAK0S,QACL,IAGImM,EAAGtjB,EAHHqkB,EAA0B,OAAXxD,EACfxV,EAAM,IAAI8Y,EAAUC,GAGpBE,EAAI7f,KAAKqe,QACb,GAAKuB,EAYE,CACL,IAAKrkB,EAAI,GAAIskB,EAAER,SAAU9jB,IACvBsjB,EAAIgB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETnZ,EAAIrL,GAAKsjB,EAGX,KAAOtjB,EAAIokB,EAAWpkB,IACpBqL,EAAIrL,GAAK,CAEb,KAvBmB,CAEjB,IAAKA,EAAI,EAAGA,EAAIokB,EAAYtX,EAAY9M,IACtCqL,EAAIrL,GAAK,EAGX,IAAKA,EAAI,GAAIskB,EAAER,SAAU9jB,IACvBsjB,EAAIgB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETnZ,EAAI+Y,EAAYpkB,EAAI,GAAKsjB,CAE7B,CAaA,OAAOjY,CACT,EAEIqW,KAAK+C,MACP/D,EAAG7O,UAAU6S,WAAa,SAAqBtC,GAC7C,OAAO,GAAKV,KAAK+C,MAAMrC,EACzB,EAEA1B,EAAG7O,UAAU6S,WAAa,SAAqBtC,GAC7C,IAAI3N,EAAI2N,EACJlT,EAAI,EAiBR,OAhBIuF,GAAK,OACPvF,GAAK,GACLuF,KAAO,IAELA,GAAK,KACPvF,GAAK,EACLuF,KAAO,GAELA,GAAK,IACPvF,GAAK,EACLuF,KAAO,GAELA,GAAK,IACPvF,GAAK,EACLuF,KAAO,GAEFvF,EAAIuF,CACb,EAGFiM,EAAG7O,UAAU8S,UAAY,SAAoBvC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI3N,EAAI2N,EACJlT,EAAI,EAoBR,OAnBqB,KAAZ,KAAJuF,KACHvF,GAAK,GACLuF,KAAO,IAEU,KAAV,IAAJA,KACHvF,GAAK,EACLuF,KAAO,GAES,KAAT,GAAJA,KACHvF,GAAK,EACLuF,KAAO,GAES,KAAT,EAAJA,KACHvF,GAAK,EACLuF,KAAO,GAES,KAAT,EAAJA,IACHvF,IAEKA,CACT,EAGAwR,EAAG7O,UAAUgJ,UAAY,WACvB,IAAIuH,EAAI3d,KAAKuc,MAAMvc,KAAKxE,OAAS,GAC7B2kB,EAAKngB,KAAKigB,WAAWtC,GACzB,OAA2B,IAAnB3d,KAAKxE,OAAS,GAAU2kB,CAClC,EAgBAlE,EAAG7O,UAAUgT,SAAW,WACtB,GAAIpgB,KAAKqf,SAAU,OAAO,EAG1B,IADA,IAAI5U,EAAI,EACClP,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAAK,CACpC,IAAIsjB,EAAI7e,KAAKkgB,UAAUlgB,KAAKuc,MAAMhhB,IAElC,GADAkP,GAAKoU,EACK,KAANA,EAAU,KAChB,CACA,OAAOpU,CACT,EAEAwR,EAAG7O,UAAU/E,WAAa,WACxB,OAAO4U,KAAKS,KAAK1d,KAAKoW,YAAc,EACtC,EAEA6F,EAAG7O,UAAUkJ,OAAS,SAAiB+J,GACrC,OAAsB,IAAlBrgB,KAAKsc,SACAtc,KAAKsgB,MAAMC,MAAMF,GAAOG,MAAM,GAEhCxgB,KAAKqe,OACd,EAEApC,EAAG7O,UAAUqT,SAAW,SAAmBJ,GACzC,OAAIrgB,KAAK0gB,MAAML,EAAQ,GACdrgB,KAAK2gB,KAAKN,GAAOG,MAAM,GAAGI,OAE5B5gB,KAAKqe,OACd,EAEApC,EAAG7O,UAAUyT,MAAQ,WACnB,OAAyB,IAAlB7gB,KAAKsc,QACd,EAGAL,EAAG7O,UAAU0T,IAAM,WACjB,OAAO9gB,KAAKqe,QAAQuC,MACtB,EAEA3E,EAAG7O,UAAUwT,KAAO,WAKlB,OAJK5gB,KAAKqf,WACRrf,KAAKsc,UAAY,GAGZtc,IACT,EAGAic,EAAG7O,UAAU2T,KAAO,SAAepa,GACjC,KAAO3G,KAAKxE,OAASmL,EAAInL,QACvBwE,KAAKuc,MAAMvc,KAAKxE,UAAY,EAG9B,IAAK,IAAID,EAAI,EAAGA,EAAIoL,EAAInL,OAAQD,IAC9ByE,KAAKuc,MAAMhhB,GAAKyE,KAAKuc,MAAMhhB,GAAKoL,EAAI4V,MAAMhhB,GAG5C,OAAOyE,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAU4T,IAAM,SAAcra,GAE/B,OADA8U,EAA0C,KAAlCzb,KAAKsc,SAAW3V,EAAI2V,WACrBtc,KAAK+gB,KAAKpa,EACnB,EAGAsV,EAAG7O,UAAU6T,GAAK,SAAata,GAC7B,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQ2C,IAAIra,GAC/CA,EAAI0X,QAAQ2C,IAAIhhB,KACzB,EAEAic,EAAG7O,UAAU8T,IAAM,SAAcva,GAC/B,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQ0C,KAAKpa,GAChDA,EAAI0X,QAAQ0C,KAAK/gB,KAC1B,EAGAic,EAAG7O,UAAU+T,MAAQ,SAAgBxa,GAEnC,IAAIkY,EAEFA,EADE7e,KAAKxE,OAASmL,EAAInL,OAChBmL,EAEA3G,KAGN,IAAK,IAAIzE,EAAI,EAAGA,EAAIsjB,EAAErjB,OAAQD,IAC5ByE,KAAKuc,MAAMhhB,GAAKyE,KAAKuc,MAAMhhB,GAAKoL,EAAI4V,MAAMhhB,GAK5C,OAFAyE,KAAKxE,OAASqjB,EAAErjB,OAETwE,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAUgU,KAAO,SAAeza,GAEjC,OADA8U,EAA0C,KAAlCzb,KAAKsc,SAAW3V,EAAI2V,WACrBtc,KAAKmhB,MAAMxa,EACpB,EAGAsV,EAAG7O,UAAUiU,IAAM,SAAc1a,GAC/B,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQ+C,KAAKza,GAChDA,EAAI0X,QAAQ+C,KAAKphB,KAC1B,EAEAic,EAAG7O,UAAUkU,KAAO,SAAe3a,GACjC,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQ8C,MAAMxa,GACjDA,EAAI0X,QAAQ8C,MAAMnhB,KAC3B,EAGAic,EAAG7O,UAAUmU,MAAQ,SAAgB5a,GAEnC,IAAI/H,EACAigB,EACA7e,KAAKxE,OAASmL,EAAInL,QACpBoD,EAAIoB,KACJ6e,EAAIlY,IAEJ/H,EAAI+H,EACJkY,EAAI7e,MAGN,IAAK,IAAIzE,EAAI,EAAGA,EAAIsjB,EAAErjB,OAAQD,IAC5ByE,KAAKuc,MAAMhhB,GAAKqD,EAAE2d,MAAMhhB,GAAKsjB,EAAEtC,MAAMhhB,GAGvC,GAAIyE,OAASpB,EACX,KAAOrD,EAAIqD,EAAEpD,OAAQD,IACnByE,KAAKuc,MAAMhhB,GAAKqD,EAAE2d,MAAMhhB,GAM5B,OAFAyE,KAAKxE,OAASoD,EAAEpD,OAETwE,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAUoU,KAAO,SAAe7a,GAEjC,OADA8U,EAA0C,KAAlCzb,KAAKsc,SAAW3V,EAAI2V,WACrBtc,KAAKuhB,MAAM5a,EACpB,EAGAsV,EAAG7O,UAAUqU,IAAM,SAAc9a,GAC/B,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQmD,KAAK7a,GAChDA,EAAI0X,QAAQmD,KAAKxhB,KAC1B,EAEAic,EAAG7O,UAAUsU,KAAO,SAAe/a,GACjC,OAAI3G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQkD,MAAM5a,GACjDA,EAAI0X,QAAQkD,MAAMvhB,KAC3B,EAGAic,EAAG7O,UAAUmT,MAAQ,SAAgBF,GACnC5E,EAAwB,kBAAV4E,GAAsBA,GAAS,GAE7C,IAAIsB,EAAsC,EAAxB1E,KAAKS,KAAK2C,EAAQ,IAChCuB,EAAWvB,EAAQ,GAGvBrgB,KAAKse,QAAQqD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIpmB,EAAI,EAAGA,EAAIomB,EAAapmB,IAC/ByE,KAAKuc,MAAMhhB,GAAsB,UAAhByE,KAAKuc,MAAMhhB,GAS9B,OALIqmB,EAAW,IACb5hB,KAAKuc,MAAMhhB,IAAMyE,KAAKuc,MAAMhhB,GAAM,UAAc,GAAKqmB,GAIhD5hB,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAUuT,KAAO,SAAeN,GACjC,OAAOrgB,KAAKqe,QAAQkC,MAAMF,EAC5B,EAGApE,EAAG7O,UAAUyU,KAAO,SAAeC,EAAKpG,GACtCD,EAAsB,kBAARqG,GAAoBA,GAAO,GAEzC,IAAIlE,EAAOkE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA9hB,KAAKse,QAAQV,EAAM,GAGjB5d,KAAKuc,MAAMqB,GADTlC,EACgB1b,KAAKuc,MAAMqB,GAAQ,GAAKmE,EAExB/hB,KAAKuc,MAAMqB,KAAS,GAAKmE,GAGtC/hB,KAAK0S,OACd,EAGAuJ,EAAG7O,UAAU4U,KAAO,SAAerb,GACjC,IAAI8D,EAkBA7L,EAAGigB,EAfP,GAAsB,IAAlB7e,KAAKsc,UAAmC,IAAjB3V,EAAI2V,SAI7B,OAHAtc,KAAKsc,SAAW,EAChB7R,EAAIzK,KAAKiiB,KAAKtb,GACd3G,KAAKsc,UAAY,EACVtc,KAAKue,YAGP,GAAsB,IAAlBve,KAAKsc,UAAmC,IAAjB3V,EAAI2V,SAIpC,OAHA3V,EAAI2V,SAAW,EACf7R,EAAIzK,KAAKiiB,KAAKtb,GACdA,EAAI2V,SAAW,EACR7R,EAAE8T,YAKPve,KAAKxE,OAASmL,EAAInL,QACpBoD,EAAIoB,KACJ6e,EAAIlY,IAEJ/H,EAAI+H,EACJkY,EAAI7e,MAIN,IADA,IAAI+e,EAAQ,EACHxjB,EAAI,EAAGA,EAAIsjB,EAAErjB,OAAQD,IAC5BkP,GAAkB,EAAb7L,EAAE2d,MAAMhhB,KAAwB,EAAbsjB,EAAEtC,MAAMhhB,IAAUwjB,EAC1C/e,KAAKuc,MAAMhhB,GAAS,SAAJkP,EAChBsU,EAAQtU,IAAM,GAEhB,KAAiB,IAAVsU,GAAexjB,EAAIqD,EAAEpD,OAAQD,IAClCkP,GAAkB,EAAb7L,EAAE2d,MAAMhhB,IAAUwjB,EACvB/e,KAAKuc,MAAMhhB,GAAS,SAAJkP,EAChBsU,EAAQtU,IAAM,GAIhB,GADAzK,KAAKxE,OAASoD,EAAEpD,OACF,IAAVujB,EACF/e,KAAKuc,MAAMvc,KAAKxE,QAAUujB,EAC1B/e,KAAKxE,cAEA,GAAIoD,IAAMoB,KACf,KAAOzE,EAAIqD,EAAEpD,OAAQD,IACnByE,KAAKuc,MAAMhhB,GAAKqD,EAAE2d,MAAMhhB,GAI5B,OAAOyE,IACT,EAGAic,EAAG7O,UAAU9H,IAAM,SAAcqB,GAC/B,IAAIC,EACJ,OAAqB,IAAjBD,EAAI2V,UAAoC,IAAlBtc,KAAKsc,UAC7B3V,EAAI2V,SAAW,EACf1V,EAAM5G,KAAKkiB,IAAIvb,GACfA,EAAI2V,UAAY,EACT1V,GACmB,IAAjBD,EAAI2V,UAAoC,IAAlBtc,KAAKsc,UACpCtc,KAAKsc,SAAW,EAChB1V,EAAMD,EAAIub,IAAIliB,MACdA,KAAKsc,SAAW,EACT1V,GAGL5G,KAAKxE,OAASmL,EAAInL,OAAewE,KAAKqe,QAAQ2D,KAAKrb,GAEhDA,EAAI0X,QAAQ2D,KAAKhiB,KAC1B,EAGAic,EAAG7O,UAAU6U,KAAO,SAAetb,GAEjC,GAAqB,IAAjBA,EAAI2V,SAAgB,CACtB3V,EAAI2V,SAAW,EACf,IAAI7R,EAAIzK,KAAKgiB,KAAKrb,GAElB,OADAA,EAAI2V,SAAW,EACR7R,EAAE8T,WAGX,CAAO,GAAsB,IAAlBve,KAAKsc,SAId,OAHAtc,KAAKsc,SAAW,EAChBtc,KAAKgiB,KAAKrb,GACV3G,KAAKsc,SAAW,EACTtc,KAAKue,YAId,IAWI3f,EAAGigB,EAXHxB,EAAMrd,KAAKqd,IAAI1W,GAGnB,GAAY,IAAR0W,EAIF,OAHArd,KAAKsc,SAAW,EAChBtc,KAAKxE,OAAS,EACdwE,KAAKuc,MAAM,GAAK,EACTvc,KAKLqd,EAAM,GACRze,EAAIoB,KACJ6e,EAAIlY,IAEJ/H,EAAI+H,EACJkY,EAAI7e,MAIN,IADA,IAAI+e,EAAQ,EACHxjB,EAAI,EAAGA,EAAIsjB,EAAErjB,OAAQD,IAE5BwjB,GADAtU,GAAkB,EAAb7L,EAAE2d,MAAMhhB,KAAwB,EAAbsjB,EAAEtC,MAAMhhB,IAAUwjB,IAC7B,GACb/e,KAAKuc,MAAMhhB,GAAS,SAAJkP,EAElB,KAAiB,IAAVsU,GAAexjB,EAAIqD,EAAEpD,OAAQD,IAElCwjB,GADAtU,GAAkB,EAAb7L,EAAE2d,MAAMhhB,IAAUwjB,IACV,GACb/e,KAAKuc,MAAMhhB,GAAS,SAAJkP,EAIlB,GAAc,IAAVsU,GAAexjB,EAAIqD,EAAEpD,QAAUoD,IAAMoB,KACvC,KAAOzE,EAAIqD,EAAEpD,OAAQD,IACnByE,KAAKuc,MAAMhhB,GAAKqD,EAAE2d,MAAMhhB,GAU5B,OANAyE,KAAKxE,OAASyhB,KAAKE,IAAInd,KAAKxE,OAAQD,GAEhCqD,IAAMoB,OACRA,KAAKsc,SAAW,GAGXtc,KAAK0S,OACd,EAGAuJ,EAAG7O,UAAU8U,IAAM,SAAcvb,GAC/B,OAAO3G,KAAKqe,QAAQ4D,KAAKtb,EAC3B,EA8CA,IAAIwb,EAAc,SAAsB9d,EAAMsC,EAAKiY,GACjD,IAIIE,EACAsD,EACAjC,EANAvhB,EAAIyF,EAAKkY,MACTsC,EAAIlY,EAAI4V,MACR8F,EAAIzD,EAAIrC,MACRxO,EAAI,EAIJuU,EAAY,EAAP1jB,EAAE,GACP2jB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7jB,EAAE,GACP8jB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhkB,EAAE,GACPikB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnkB,EAAE,GACPokB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtkB,EAAE,GACPukB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzkB,EAAE,GACP0kB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5kB,EAAE,GACP6kB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/kB,EAAE,GACPglB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPllB,EAAE,GACPmlB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrlB,EAAE,GACPslB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPvF,EAAE,GACPwF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1F,EAAE,GACP2F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7F,EAAE,GACP8F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhG,EAAE,GACPiG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnG,EAAE,GACPoG,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAPtG,EAAE,GACPuG,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPzG,EAAE,GACP0G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP5G,EAAE,GACP6G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/G,EAAE,GACPgH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPlH,EAAE,GACPmH,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBnH,EAAItC,SAAWjY,EAAKiY,SAAW3V,EAAI2V,SACnCsC,EAAIpjB,OAAS,GAMb,IAAI0qB,IAAQnY,GAJZ+Q,EAAK7B,KAAKkJ,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMnF,KAAKkJ,KAAK5D,EAAK+B,IACRrH,KAAKkJ,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDtW,IAFAoS,EAAKlD,KAAKkJ,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENpH,EAAK7B,KAAKkJ,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKzD,EAAK4B,IACRrH,KAAKkJ,KAAKxD,EAAK0B,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQrY,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKkC,GAAQ,GACvBxH,KAAKkJ,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrDzW,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENtH,EAAK7B,KAAKkJ,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKtD,EAAKyB,IACRrH,KAAKkJ,KAAKrD,EAAKuB,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKrD,EAAKwB,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAK+B,GAAQ,GACvBxH,KAAKkJ,KAAKxD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQtY,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKqC,GAAQ,GACvB3H,KAAKkJ,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrD5W,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAK7B,KAAKkJ,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKnD,EAAKsB,IACRrH,KAAKkJ,KAAKlD,EAAKoB,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKlD,EAAKqB,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAK4B,GAAQ,GACvBxH,KAAKkJ,KAAKrD,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAK2B,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKkC,GAAQ,GACvB3H,KAAKkJ,KAAKxD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQvY,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKwC,GAAQ,GACvB9H,KAAKkJ,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrD/W,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENxH,EAAK7B,KAAKkJ,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKhD,EAAKmB,IACRrH,KAAKkJ,KAAK/C,EAAKiB,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAK/C,EAAKkB,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAKyB,GAAQ,GACvBxH,KAAKkJ,KAAKlD,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAKwB,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAK+B,GAAQ,GACvB3H,KAAKkJ,KAAKrD,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAK8B,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKqC,GAAQ,GACvB9H,KAAKkJ,KAAKxD,EAAKmC,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQxY,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAK2C,IAAQ,GACvBjI,KAAKkJ,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDlX,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENzH,EAAK7B,KAAKkJ,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAK7C,EAAKgB,IACRrH,KAAKkJ,KAAK5C,EAAKc,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAK5C,EAAKe,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAKsB,GAAQ,GACvBxH,KAAKkJ,KAAK/C,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAKqB,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAK4B,GAAQ,GACvB3H,KAAKkJ,KAAKlD,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAK2B,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAKkC,GAAQ,GACvB9H,KAAKkJ,KAAKrD,EAAKgC,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAKiC,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKwC,IAAQ,GACvBjI,KAAKkJ,KAAKxD,EAAKsC,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQzY,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAK8C,IAAQ,GACvBpI,KAAKkJ,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDrX,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAK7B,KAAKkJ,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAK1C,EAAKa,IACRrH,KAAKkJ,KAAKzC,EAAKW,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKzC,EAAKY,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKmB,GAAQ,GACvBxH,KAAKkJ,KAAK5C,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKkB,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAKyB,GAAQ,GACvB3H,KAAKkJ,KAAK/C,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAKwB,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAK+B,GAAQ,GACvB9H,KAAKkJ,KAAKlD,EAAK6B,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAK8B,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAKqC,IAAQ,GACvBjI,KAAKkJ,KAAKrD,EAAKmC,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAKoC,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAK2C,IAAQ,GACvBpI,KAAKkJ,KAAKxD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQ1Y,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKiD,IAAQ,GACvBvI,KAAKkJ,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDxX,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAK7B,KAAKkJ,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKvC,EAAKU,IACRrH,KAAKkJ,KAAKtC,EAAKQ,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKtC,EAAKS,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKgB,GAAQ,GACvBxH,KAAKkJ,KAAKzC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKe,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKsB,GAAQ,GACvB3H,KAAKkJ,KAAK5C,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKqB,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAK4B,GAAQ,GACvB9H,KAAKkJ,KAAK/C,EAAK0B,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAK2B,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAKkC,IAAQ,GACvBjI,KAAKkJ,KAAKlD,EAAKgC,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAKiC,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAKwC,IAAQ,GACvBpI,KAAKkJ,KAAKrD,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAKuC,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAK8C,IAAQ,GACvBvI,KAAKkJ,KAAKxD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQ3Y,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKoD,IAAQ,GACvB1I,KAAKkJ,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrD3X,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAK7B,KAAKkJ,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKpC,EAAKO,IACRrH,KAAKkJ,KAAKnC,EAAKK,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKnC,EAAKM,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKa,GAAQ,GACvBxH,KAAKkJ,KAAKtC,EAAKW,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKY,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKmB,GAAQ,GACvB3H,KAAKkJ,KAAKzC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKkB,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKyB,GAAQ,GACvB9H,KAAKkJ,KAAK5C,EAAKuB,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKwB,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAK+B,IAAQ,GACvBjI,KAAKkJ,KAAK/C,EAAK6B,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAK8B,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAKqC,IAAQ,GACvBpI,KAAKkJ,KAAKlD,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAK2C,IAAQ,GACvBvI,KAAKkJ,KAAKrD,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAK0C,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKiD,IAAQ,GACvB1I,KAAKkJ,KAAKxD,EAAK+C,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQ5Y,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAKuD,IAAQ,GACvB7I,KAAKkJ,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrD9X,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAK7B,KAAKkJ,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKI,IACRrH,KAAKkJ,KAAKhC,EAAKE,GAAQ,EACpClE,EAAKlD,KAAKkJ,KAAKhC,EAAKG,GACpBxF,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKU,GAAQ,GACvBxH,KAAKkJ,KAAKnC,EAAKQ,GAAQ,EACpCrE,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKS,GAAQ,EAClC3F,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKgB,GAAQ,GACvB3H,KAAKkJ,KAAKtC,EAAKc,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKe,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKsB,GAAQ,GACvB9H,KAAKkJ,KAAKzC,EAAKoB,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKqB,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAK4B,IAAQ,GACvBjI,KAAKkJ,KAAK5C,EAAK0B,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAK2B,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAKkC,IAAQ,GACvBpI,KAAKkJ,KAAK/C,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAKwC,IAAQ,GACvBvI,KAAKkJ,KAAKlD,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAKuC,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAK8C,IAAQ,GACvB1I,KAAKkJ,KAAKrD,EAAK4C,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAK6C,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKoD,IAAQ,GACvB7I,KAAKkJ,KAAKxD,EAAKkD,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ7Y,GAJZ+Q,EAAMA,EAAK7B,KAAKkJ,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK5D,EAAK0D,IAAQ,GACvBhJ,KAAKkJ,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAK7B,KAAKkJ,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKO,IACRxH,KAAKkJ,KAAKhC,EAAKK,GAAQ,EACpCrE,EAAKlD,KAAKkJ,KAAKhC,EAAKM,GACpB3F,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKa,GAAQ,GACvB3H,KAAKkJ,KAAKnC,EAAKW,GAAQ,EACpCxE,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKY,GAAQ,EAClC9F,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKmB,GAAQ,GACvB9H,KAAKkJ,KAAKtC,EAAKiB,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKkB,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKyB,IAAQ,GACvBjI,KAAKkJ,KAAKzC,EAAKuB,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKwB,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAK+B,IAAQ,GACvBpI,KAAKkJ,KAAK5C,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAKqC,IAAQ,GACvBvI,KAAKkJ,KAAK/C,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAKoC,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAK2C,IAAQ,GACvB1I,KAAKkJ,KAAKlD,EAAKyC,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAK0C,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAKiD,IAAQ,GACvB7I,KAAKkJ,KAAKrD,EAAK+C,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAS9Y,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKzD,EAAKuD,IAAQ,GACvBhJ,KAAKkJ,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP/H,EAAK7B,KAAKkJ,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKU,IACR3H,KAAKkJ,KAAKhC,EAAKQ,GAAQ,EACpCxE,EAAKlD,KAAKkJ,KAAKhC,EAAKS,GACpB9F,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKgB,GAAQ,GACvB9H,KAAKkJ,KAAKnC,EAAKc,GAAQ,EACpC3E,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKe,GAAQ,EAClCjG,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKsB,IAAQ,GACvBjI,KAAKkJ,KAAKtC,EAAKoB,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKqB,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAK4B,IAAQ,GACvBpI,KAAKkJ,KAAKzC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKkC,IAAQ,GACvBvI,KAAKkJ,KAAK5C,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKiC,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAKwC,IAAQ,GACvB1I,KAAKkJ,KAAK/C,EAAKsC,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAKuC,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAK8C,IAAQ,GACvB7I,KAAKkJ,KAAKlD,EAAK4C,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAS/Y,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKtD,EAAKoD,IAAQ,GACvBhJ,KAAKkJ,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPhI,EAAK7B,KAAKkJ,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKa,IACR9H,KAAKkJ,KAAKhC,EAAKW,GAAQ,EACpC3E,EAAKlD,KAAKkJ,KAAKhC,EAAKY,GACpBjG,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKmB,IAAQ,GACvBjI,KAAKkJ,KAAKnC,EAAKiB,GAAQ,EACpC9E,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKkB,IAAQ,EAClCpG,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKyB,IAAQ,GACvBpI,KAAKkJ,KAAKtC,EAAKuB,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKwB,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAK+B,IAAQ,GACvBvI,KAAKkJ,KAAKzC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAK8B,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKqC,IAAQ,GACvB1I,KAAKkJ,KAAK5C,EAAKmC,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKoC,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAK2C,IAAQ,GACvB7I,KAAKkJ,KAAK/C,EAAKyC,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAAShZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKnD,EAAKiD,IAAQ,GACvBhJ,KAAKkJ,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPjI,EAAK7B,KAAKkJ,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKgB,KACRjI,KAAKkJ,KAAKhC,EAAKc,GAAQ,EACpC9E,EAAKlD,KAAKkJ,KAAKhC,EAAKe,IACpBpG,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKsB,IAAQ,GACvBpI,KAAKkJ,KAAKnC,EAAKoB,IAAQ,EACpCjF,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKqB,IAAQ,EAClCvG,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAK4B,IAAQ,GACvBvI,KAAKkJ,KAAKtC,EAAK0B,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAK2B,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKkC,IAAQ,GACvB1I,KAAKkJ,KAAKzC,EAAKgC,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKiC,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAKwC,IAAQ,GACvB7I,KAAKkJ,KAAK5C,EAAKsC,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASjZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKhD,EAAK8C,IAAQ,GACvBhJ,KAAKkJ,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPlI,EAAK7B,KAAKkJ,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKmB,KACRpI,KAAKkJ,KAAKhC,EAAKiB,IAAQ,EACpCjF,EAAKlD,KAAKkJ,KAAKhC,EAAKkB,IACpBvG,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKyB,IAAQ,GACvBvI,KAAKkJ,KAAKnC,EAAKuB,IAAQ,EACpCpF,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKwB,IAAQ,EAClC1G,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAK+B,IAAQ,GACvB1I,KAAKkJ,KAAKtC,EAAK6B,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAK8B,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKqC,IAAQ,GACvB7I,KAAKkJ,KAAKzC,EAAKmC,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASlZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK7C,EAAK2C,IAAQ,GACvBhJ,KAAKkJ,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPnI,EAAK7B,KAAKkJ,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKsB,KACRvI,KAAKkJ,KAAKhC,EAAKoB,IAAQ,EACpCpF,EAAKlD,KAAKkJ,KAAKhC,EAAKqB,IACpB1G,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAK4B,IAAQ,GACvB1I,KAAKkJ,KAAKnC,EAAK0B,IAAQ,EACpCvF,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAK2B,IAAQ,EAClC7G,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKkC,IAAQ,GACvB7I,KAAKkJ,KAAKtC,EAAKgC,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAASnZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAK1C,EAAKwC,IAAQ,GACvBhJ,KAAKkJ,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAK7B,KAAKkJ,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAKyB,KACR1I,KAAKkJ,KAAKhC,EAAKuB,IAAQ,EACpCvF,EAAKlD,KAAKkJ,KAAKhC,EAAKwB,IACpB7G,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAK+B,IAAQ,GACvB7I,KAAKkJ,KAAKnC,EAAK6B,IAAQ,EACpC1F,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASpZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKvC,EAAKqC,IAAQ,GACvBhJ,KAAKkJ,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAK7B,KAAKkJ,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAK4B,KACR7I,KAAKkJ,KAAKhC,EAAK0B,IAAQ,EACpC1F,EAAKlD,KAAKkJ,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASrZ,GAJb+Q,EAAMA,EAAK7B,KAAKkJ,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMnF,KAAKkJ,KAAKpC,EAAKkC,IAAQ,GACvBhJ,KAAKkJ,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDjY,IAFAoS,EAAMA,EAAKlD,KAAKkJ,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAAStZ,GAJb+Q,EAAK7B,KAAKkJ,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMnF,KAAKkJ,KAAKjC,EAAK+B,KACRhJ,KAAKkJ,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBAjY,IAFAoS,EAAKlD,KAAKkJ,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANtZ,IACFsU,EAAE,IAAMtU,EACR6Q,EAAIpjB,UAECojB,CACT,EAgDA,SAAS0I,EAAYjjB,EAAMsC,EAAKiY,GAE9B,OADW,IAAI2I,GACHC,KAAKnjB,EAAMsC,EAAKiY,EAC9B,CAqBA,SAAS2I,EAAME,EAAGC,GAChB1nB,KAAKynB,EAAIA,EACTznB,KAAK0nB,EAAIA,CACX,CAxEKzK,KAAKkJ,OACRhE,EAAcxD,GAiDhB1C,EAAG7O,UAAUua,MAAQ,SAAgBhhB,EAAKiY,GACxC,IAAIhY,EACApK,EAAMwD,KAAKxE,OAASmL,EAAInL,OAW5B,OATEoL,EADkB,KAAhB5G,KAAKxE,QAAgC,KAAfmL,EAAInL,OACtB2mB,EAAYniB,KAAM2G,EAAKiY,GACpBpiB,EAAM,GACTmiB,EAAW3e,KAAM2G,EAAKiY,GACnBpiB,EAAM,KArDnB,SAAmB6H,EAAMsC,EAAKiY,GAC5BA,EAAItC,SAAW3V,EAAI2V,SAAWjY,EAAKiY,SACnCsC,EAAIpjB,OAAS6I,EAAK7I,OAASmL,EAAInL,OAI/B,IAFA,IAAIujB,EAAQ,EACR6I,EAAU,EACLrgB,EAAI,EAAGA,EAAIqX,EAAIpjB,OAAS,EAAG+L,IAAK,CAGvC,IAAIyX,EAAS4I,EACbA,EAAU,EAGV,IAFA,IAAI3I,EAAgB,SAARF,EACRG,EAAOjC,KAAKC,IAAI3V,EAAGZ,EAAInL,OAAS,GAC3BiD,EAAIwe,KAAKE,IAAI,EAAG5V,EAAIlD,EAAK7I,OAAS,GAAIiD,GAAKygB,EAAMzgB,IAAK,CAC7D,IAAIlD,EAAIgM,EAAI9I,EAGRgM,GAFoB,EAAhBpG,EAAKkY,MAAMhhB,KACI,EAAfoL,EAAI4V,MAAM9d,IAGdqgB,EAAS,SAAJrU,EAGTwU,EAAa,UADbH,EAAMA,EAAKG,EAAS,GAIpB2I,IAFA5I,GAHAA,EAAUA,GAAWvU,EAAI,SAAa,GAAM,IAGxBqU,IAAO,IAAO,KAEZ,GACtBE,GAAU,QACZ,CACAJ,EAAIrC,MAAMhV,GAAK0X,EACfF,EAAQC,EACRA,EAAS4I,CACX,CAOA,OANc,IAAV7I,EACFH,EAAIrC,MAAMhV,GAAKwX,EAEfH,EAAIpjB,SAGCojB,EAAIlM,OACb,CAeUmV,CAAS7nB,KAAM2G,EAAKiY,GAEpB0I,EAAWtnB,KAAM2G,EAAKiY,GAGvBhY,CACT,EAUA2gB,EAAKna,UAAU0a,QAAU,SAAkBC,GAGzC,IAFA,IAAI/X,EAAI,IAAI5U,MAAM2sB,GACdrf,EAAIuT,EAAG7O,UAAU6S,WAAW8H,GAAK,EAC5BxsB,EAAI,EAAGA,EAAIwsB,EAAGxsB,IACrByU,EAAEzU,GAAKyE,KAAKgoB,OAAOzsB,EAAGmN,EAAGqf,GAG3B,OAAO/X,CACT,EAGAuX,EAAKna,UAAU4a,OAAS,SAAiBP,EAAG/e,EAAGqf,GAC7C,GAAU,IAANN,GAAWA,IAAMM,EAAI,EAAG,OAAON,EAGnC,IADA,IAAIQ,EAAK,EACA1sB,EAAI,EAAGA,EAAImN,EAAGnN,IACrB0sB,IAAW,EAAJR,IAAW/e,EAAInN,EAAI,EAC1BksB,IAAM,EAGR,OAAOQ,CACT,EAIAV,EAAKna,UAAU8a,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAIxsB,EAAI,EAAGA,EAAIwsB,EAAGxsB,IACrB+sB,EAAK/sB,GAAK6sB,EAAID,EAAI5sB,IAClBgtB,EAAKhtB,GAAK8sB,EAAIF,EAAI5sB,GAEtB,EAEAgsB,EAAKna,UAAUob,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtEnoB,KAAKkoB,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIrd,EAAI,EAAGA,EAAIqd,EAAGrd,IAAM,EAM3B,IALA,IAAIhC,EAAIgC,GAAK,EAET+d,EAAQxL,KAAKyL,IAAI,EAAIzL,KAAK0L,GAAKjgB,GAC/BkgB,EAAQ3L,KAAK4L,IAAI,EAAI5L,KAAK0L,GAAKjgB,GAE1BogB,EAAI,EAAGA,EAAIf,EAAGe,GAAKpgB,EAI1B,IAHA,IAAIqgB,EAASN,EACTO,EAASJ,EAEJnqB,EAAI,EAAGA,EAAIiM,EAAGjM,IAAK,CAC1B,IAAIwqB,EAAKX,EAAKQ,EAAIrqB,GACdyqB,EAAKX,EAAKO,EAAIrqB,GAEd0qB,EAAKb,EAAKQ,EAAIrqB,EAAIiM,GAClB0e,EAAKb,EAAKO,EAAIrqB,EAAIiM,GAElB2e,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELf,EAAKQ,EAAIrqB,GAAKwqB,EAAKE,EACnBZ,EAAKO,EAAIrqB,GAAKyqB,EAAKE,EAEnBd,EAAKQ,EAAIrqB,EAAIiM,GAAKue,EAAKE,EACvBZ,EAAKO,EAAIrqB,EAAIiM,GAAKwe,EAAKE,EAGnB3qB,IAAMiK,IACR2gB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEb,CAGN,EAEA9B,EAAKna,UAAUkc,YAAc,SAAsB7iB,EAAG8iB,GACpD,IAAIxB,EAAqB,EAAjB9K,KAAKE,IAAIoM,EAAG9iB,GAChB+iB,EAAU,EAAJzB,EACNxsB,EAAI,EACR,IAAKwsB,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BxsB,IAGF,OAAO,GAAKA,EAAI,EAAIiuB,CACtB,EAEAjC,EAAKna,UAAUqc,UAAY,SAAoBrB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIxsB,EAAI,EAAGA,EAAIwsB,EAAI,EAAGxsB,IAAK,CAC9B,IAAIyU,EAAIoY,EAAI7sB,GAEZ6sB,EAAI7sB,GAAK6sB,EAAIL,EAAIxsB,EAAI,GACrB6sB,EAAIL,EAAIxsB,EAAI,GAAKyU,EAEjBA,EAAIqY,EAAI9sB,GAER8sB,EAAI9sB,IAAM8sB,EAAIN,EAAIxsB,EAAI,GACtB8sB,EAAIN,EAAIxsB,EAAI,IAAMyU,CACpB,CACF,EAEAuX,EAAKna,UAAUsc,aAAe,SAAuBC,EAAI5B,GAEvD,IADA,IAAIhJ,EAAQ,EACHxjB,EAAI,EAAGA,EAAIwsB,EAAI,EAAGxsB,IAAK,CAC9B,IAAIoiB,EAAoC,KAAhCV,KAAK2M,MAAMD,EAAG,EAAIpuB,EAAI,GAAKwsB,GACjC9K,KAAK2M,MAAMD,EAAG,EAAIpuB,GAAKwsB,GACvBhJ,EAEF4K,EAAGpuB,GAAS,SAAJoiB,EAGNoB,EADEpB,EAAI,SACE,EAEAA,EAAI,SAAY,CAE5B,CAEA,OAAOgM,CACT,EAEApC,EAAKna,UAAUyc,WAAa,SAAqBF,EAAIntB,EAAK4rB,EAAKL,GAE7D,IADA,IAAIhJ,EAAQ,EACHxjB,EAAI,EAAGA,EAAIiB,EAAKjB,IACvBwjB,GAAyB,EAAR4K,EAAGpuB,GAEpB6sB,EAAI,EAAI7sB,GAAa,KAARwjB,EAAgBA,KAAkB,GAC/CqJ,EAAI,EAAI7sB,EAAI,GAAa,KAARwjB,EAAgBA,KAAkB,GAIrD,IAAKxjB,EAAI,EAAIiB,EAAKjB,EAAIwsB,IAAKxsB,EACzB6sB,EAAI7sB,GAAK,EAGXkgB,EAAiB,IAAVsD,GACPtD,EAA6B,MAAb,KAARsD,GACV,EAEAwI,EAAKna,UAAU0c,KAAO,SAAe/B,GAEnC,IADA,IAAIgC,EAAK,IAAI3uB,MAAM2sB,GACVxsB,EAAI,EAAGA,EAAIwsB,EAAGxsB,IACrBwuB,EAAGxuB,GAAK,EAGV,OAAOwuB,CACT,EAEAxC,EAAKna,UAAUoa,KAAO,SAAeC,EAAGC,EAAG9I,GACzC,IAAImJ,EAAI,EAAI/nB,KAAKspB,YAAY7B,EAAEjsB,OAAQksB,EAAElsB,QAErC2sB,EAAMnoB,KAAK8nB,QAAQC,GAEnBiC,EAAIhqB,KAAK8pB,KAAK/B,GAEdK,EAAM,IAAIhtB,MAAM2sB,GAChBkC,EAAO,IAAI7uB,MAAM2sB,GACjBmC,EAAO,IAAI9uB,MAAM2sB,GAEjBoC,EAAO,IAAI/uB,MAAM2sB,GACjBqC,EAAQ,IAAIhvB,MAAM2sB,GAClBsC,EAAQ,IAAIjvB,MAAM2sB,GAElBuC,EAAO1L,EAAIrC,MACf+N,EAAK9uB,OAASusB,EAEd/nB,KAAK6pB,WAAWpC,EAAElL,MAAOkL,EAAEjsB,OAAQ4sB,EAAKL,GACxC/nB,KAAK6pB,WAAWnC,EAAEnL,MAAOmL,EAAElsB,OAAQ2uB,EAAMpC,GAEzC/nB,KAAKwoB,UAAUJ,EAAK4B,EAAGC,EAAMC,EAAMnC,EAAGI,GACtCnoB,KAAKwoB,UAAU2B,EAAMH,EAAGI,EAAOC,EAAOtC,EAAGI,GAEzC,IAAK,IAAI5sB,EAAI,EAAGA,EAAIwsB,EAAGxsB,IAAK,CAC1B,IAAI8tB,EAAKY,EAAK1uB,GAAK6uB,EAAM7uB,GAAK2uB,EAAK3uB,GAAK8uB,EAAM9uB,GAC9C2uB,EAAK3uB,GAAK0uB,EAAK1uB,GAAK8uB,EAAM9uB,GAAK2uB,EAAK3uB,GAAK6uB,EAAM7uB,GAC/C0uB,EAAK1uB,GAAK8tB,CACZ,CASA,OAPArpB,KAAKypB,UAAUQ,EAAMC,EAAMnC,GAC3B/nB,KAAKwoB,UAAUyB,EAAMC,EAAMI,EAAMN,EAAGjC,EAAGI,GACvCnoB,KAAKypB,UAAUa,EAAMN,EAAGjC,GACxB/nB,KAAK0pB,aAAaY,EAAMvC,GAExBnJ,EAAItC,SAAWmL,EAAEnL,SAAWoL,EAAEpL,SAC9BsC,EAAIpjB,OAASisB,EAAEjsB,OAASksB,EAAElsB,OACnBojB,EAAIlM,OACb,EAGAuJ,EAAG7O,UAAUuJ,IAAM,SAAchQ,GAC/B,IAAIiY,EAAM,IAAI3C,EAAG,MAEjB,OADA2C,EAAIrC,MAAQ,IAAInhB,MAAM4E,KAAKxE,OAASmL,EAAInL,QACjCwE,KAAK2nB,MAAMhhB,EAAKiY,EACzB,EAGA3C,EAAG7O,UAAUmd,KAAO,SAAe5jB,GACjC,IAAIiY,EAAM,IAAI3C,EAAG,MAEjB,OADA2C,EAAIrC,MAAQ,IAAInhB,MAAM4E,KAAKxE,OAASmL,EAAInL,QACjC8rB,EAAWtnB,KAAM2G,EAAKiY,EAC/B,EAGA3C,EAAG7O,UAAU+Y,KAAO,SAAexf,GACjC,OAAO3G,KAAKqe,QAAQsJ,MAAMhhB,EAAK3G,KACjC,EAEAic,EAAG7O,UAAU8Q,MAAQ,SAAgBvX,GACnC8U,EAAsB,kBAAR9U,GACd8U,EAAO9U,EAAM,UAIb,IADA,IAAIoY,EAAQ,EACHxjB,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAAK,CACpC,IAAIoiB,GAAqB,EAAhB3d,KAAKuc,MAAMhhB,IAAUoL,EAC1BmY,GAAU,SAAJnB,IAA0B,SAARoB,GAC5BA,IAAU,GACVA,GAAUpB,EAAI,SAAa,EAE3BoB,GAASD,IAAO,GAChB9e,KAAKuc,MAAMhhB,GAAU,SAALujB,CAClB,CAOA,OALc,IAAVC,IACF/e,KAAKuc,MAAMhhB,GAAKwjB,EAChB/e,KAAKxE,UAGAwE,IACT,EAEAic,EAAG7O,UAAUod,KAAO,SAAe7jB,GACjC,OAAO3G,KAAKqe,QAAQH,MAAMvX,EAC5B,EAGAsV,EAAG7O,UAAUqd,IAAM,WACjB,OAAOzqB,KAAK2W,IAAI3W,KAClB,EAGAic,EAAG7O,UAAUsd,KAAO,WAClB,OAAO1qB,KAAKmmB,KAAKnmB,KAAKqe,QACxB,EAGApC,EAAG7O,UAAUwJ,IAAM,SAAcjQ,GAC/B,IAAIgX,EAxxCN,SAAqBhX,GAGnB,IAFA,IAAIgX,EAAI,IAAIviB,MAAMuL,EAAIyP,aAEb0L,EAAM,EAAGA,EAAMnE,EAAEniB,OAAQsmB,IAAO,CACvC,IAAIlE,EAAOkE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBnE,EAAEmE,IAAQnb,EAAI4V,MAAMqB,GAAQ,GAAKmE,KAAWA,CAC9C,CAEA,OAAOpE,CACT,CA6wCUgN,CAAWhkB,GACnB,GAAiB,IAAbgX,EAAEniB,OAAc,OAAO,IAAIygB,EAAG,GAIlC,IADA,IAAIrV,EAAM5G,KACDzE,EAAI,EAAGA,EAAIoiB,EAAEniB,QACP,IAATmiB,EAAEpiB,GADsBA,IAAKqL,EAAMA,EAAI6jB,OAI7C,KAAMlvB,EAAIoiB,EAAEniB,OACV,IAAK,IAAIqkB,EAAIjZ,EAAI6jB,MAAOlvB,EAAIoiB,EAAEniB,OAAQD,IAAKskB,EAAIA,EAAE4K,MAClC,IAAT9M,EAAEpiB,KAENqL,EAAMA,EAAI+P,IAAIkJ,IAIlB,OAAOjZ,CACT,EAGAqV,EAAG7O,UAAUwd,OAAS,SAAiBC,GACrCpP,EAAuB,kBAAToP,GAAqBA,GAAQ,GAC3C,IAGItvB,EAHAkP,EAAIogB,EAAO,GACXngB,GAAKmgB,EAAOpgB,GAAK,GACjBqgB,EAAa,WAAe,GAAKrgB,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIsU,EAAQ,EAEZ,IAAKxjB,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAAK,CAChC,IAAIwvB,EAAW/qB,KAAKuc,MAAMhhB,GAAKuvB,EAC3B/c,GAAsB,EAAhB/N,KAAKuc,MAAMhhB,IAAUwvB,GAAatgB,EAC5CzK,KAAKuc,MAAMhhB,GAAKwS,EAAIgR,EACpBA,EAAQgM,IAAc,GAAKtgB,CAC7B,CAEIsU,IACF/e,KAAKuc,MAAMhhB,GAAKwjB,EAChB/e,KAAKxE,SAET,CAEA,GAAU,IAANkP,EAAS,CACX,IAAKnP,EAAIyE,KAAKxE,OAAS,EAAGD,GAAK,EAAGA,IAChCyE,KAAKuc,MAAMhhB,EAAImP,GAAK1K,KAAKuc,MAAMhhB,GAGjC,IAAKA,EAAI,EAAGA,EAAImP,EAAGnP,IACjByE,KAAKuc,MAAMhhB,GAAK,EAGlByE,KAAKxE,QAAUkP,CACjB,CAEA,OAAO1K,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAU4d,MAAQ,SAAgBH,GAGnC,OADApP,EAAyB,IAAlBzb,KAAKsc,UACLtc,KAAK4qB,OAAOC,EACrB,EAKA5O,EAAG7O,UAAU2S,OAAS,SAAiB8K,EAAMI,EAAMC,GAEjD,IAAIC,EADJ1P,EAAuB,kBAAToP,GAAqBA,GAAQ,GAGzCM,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIxgB,EAAIogB,EAAO,GACXngB,EAAIuS,KAAKC,KAAK2N,EAAOpgB,GAAK,GAAIzK,KAAKxE,QACnC4vB,EAAO,SAAc,WAAc3gB,GAAMA,EACzC4gB,EAAcH,EAMlB,GAJAC,GAAKzgB,EACLygB,EAAIlO,KAAKE,IAAI,EAAGgO,GAGZE,EAAa,CACf,IAAK,IAAI9vB,EAAI,EAAGA,EAAImP,EAAGnP,IACrB8vB,EAAY9O,MAAMhhB,GAAKyE,KAAKuc,MAAMhhB,GAEpC8vB,EAAY7vB,OAASkP,CACvB,CAEA,GAAU,IAANA,QAEG,GAAI1K,KAAKxE,OAASkP,EAEvB,IADA1K,KAAKxE,QAAUkP,EACVnP,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAC3ByE,KAAKuc,MAAMhhB,GAAKyE,KAAKuc,MAAMhhB,EAAImP,QAGjC1K,KAAKuc,MAAM,GAAK,EAChBvc,KAAKxE,OAAS,EAGhB,IAAIujB,EAAQ,EACZ,IAAKxjB,EAAIyE,KAAKxE,OAAS,EAAGD,GAAK,IAAgB,IAAVwjB,GAAexjB,GAAK4vB,GAAI5vB,IAAK,CAChE,IAAI0iB,EAAuB,EAAhBje,KAAKuc,MAAMhhB,GACtByE,KAAKuc,MAAMhhB,GAAMwjB,GAAU,GAAKtU,EAAOwT,IAASxT,EAChDsU,EAAQd,EAAOmN,CACjB,CAYA,OATIC,GAAyB,IAAVtM,IACjBsM,EAAY9O,MAAM8O,EAAY7vB,UAAYujB,GAGxB,IAAhB/e,KAAKxE,SACPwE,KAAKuc,MAAM,GAAK,EAChBvc,KAAKxE,OAAS,GAGTwE,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAUke,MAAQ,SAAgBT,EAAMI,EAAMC,GAG/C,OADAzP,EAAyB,IAAlBzb,KAAKsc,UACLtc,KAAK+f,OAAO8K,EAAMI,EAAMC,EACjC,EAGAjP,EAAG7O,UAAUme,KAAO,SAAeV,GACjC,OAAO7qB,KAAKqe,QAAQ2M,MAAMH,EAC5B,EAEA5O,EAAG7O,UAAUoe,MAAQ,SAAgBX,GACnC,OAAO7qB,KAAKqe,QAAQuM,OAAOC,EAC7B,EAGA5O,EAAG7O,UAAUqe,KAAO,SAAeZ,GACjC,OAAO7qB,KAAKqe,QAAQiN,MAAMT,EAC5B,EAEA5O,EAAG7O,UAAUse,MAAQ,SAAgBb,GACnC,OAAO7qB,KAAKqe,QAAQ0B,OAAO8K,EAC7B,EAGA5O,EAAG7O,UAAUsT,MAAQ,SAAgBoB,GACnCrG,EAAsB,kBAARqG,GAAoBA,GAAO,GACzC,IAAIrX,EAAIqX,EAAM,GACVpX,GAAKoX,EAAMrX,GAAK,GAChBoV,EAAI,GAAKpV,EAGb,QAAIzK,KAAKxE,QAAUkP,OAGX1K,KAAKuc,MAAM7R,GAELmV,EAChB,EAGA5D,EAAG7O,UAAUue,OAAS,SAAiBd,GACrCpP,EAAuB,kBAAToP,GAAqBA,GAAQ,GAC3C,IAAIpgB,EAAIogB,EAAO,GACXngB,GAAKmgB,EAAOpgB,GAAK,GAIrB,GAFAgR,EAAyB,IAAlBzb,KAAKsc,SAAgB,2CAExBtc,KAAKxE,QAAUkP,EACjB,OAAO1K,KAQT,GALU,IAANyK,GACFC,IAEF1K,KAAKxE,OAASyhB,KAAKC,IAAIxS,EAAG1K,KAAKxE,QAErB,IAANiP,EAAS,CACX,IAAI2gB,EAAO,SAAc,WAAc3gB,GAAMA,EAC7CzK,KAAKuc,MAAMvc,KAAKxE,OAAS,IAAM4vB,CACjC,CAEA,OAAOprB,KAAK0S,OACd,EAGAuJ,EAAG7O,UAAUwe,MAAQ,SAAgBf,GACnC,OAAO7qB,KAAKqe,QAAQsN,OAAOd,EAC7B,EAGA5O,EAAG7O,UAAUoT,MAAQ,SAAgB7Z,GAGnC,OAFA8U,EAAsB,kBAAR9U,GACd8U,EAAO9U,EAAM,UACTA,EAAM,EAAU3G,KAAK6rB,OAAOllB,GAGV,IAAlB3G,KAAKsc,SACa,IAAhBtc,KAAKxE,SAAiC,EAAhBwE,KAAKuc,MAAM,IAAU5V,GAC7C3G,KAAKuc,MAAM,GAAK5V,GAAuB,EAAhB3G,KAAKuc,MAAM,IAClCvc,KAAKsc,SAAW,EACTtc,OAGTA,KAAKsc,SAAW,EAChBtc,KAAK6rB,MAAMllB,GACX3G,KAAKsc,SAAW,EACTtc,MAIFA,KAAKme,OAAOxX,EACrB,EAEAsV,EAAG7O,UAAU+Q,OAAS,SAAiBxX,GACrC3G,KAAKuc,MAAM,IAAM5V,EAGjB,IAAK,IAAIpL,EAAI,EAAGA,EAAIyE,KAAKxE,QAAUwE,KAAKuc,MAAMhhB,IAAM,SAAWA,IAC7DyE,KAAKuc,MAAMhhB,IAAM,SACbA,IAAMyE,KAAKxE,OAAS,EACtBwE,KAAKuc,MAAMhhB,EAAI,GAAK,EAEpByE,KAAKuc,MAAMhhB,EAAI,KAKnB,OAFAyE,KAAKxE,OAASyhB,KAAKE,IAAInd,KAAKxE,OAAQD,EAAI,GAEjCyE,IACT,EAGAic,EAAG7O,UAAUye,MAAQ,SAAgBllB,GAGnC,GAFA8U,EAAsB,kBAAR9U,GACd8U,EAAO9U,EAAM,UACTA,EAAM,EAAG,OAAO3G,KAAKwgB,OAAO7Z,GAEhC,GAAsB,IAAlB3G,KAAKsc,SAIP,OAHAtc,KAAKsc,SAAW,EAChBtc,KAAKwgB,MAAM7Z,GACX3G,KAAKsc,SAAW,EACTtc,KAKT,GAFAA,KAAKuc,MAAM,IAAM5V,EAEG,IAAhB3G,KAAKxE,QAAgBwE,KAAKuc,MAAM,GAAK,EACvCvc,KAAKuc,MAAM,IAAMvc,KAAKuc,MAAM,GAC5Bvc,KAAKsc,SAAW,OAGhB,IAAK,IAAI/gB,EAAI,EAAGA,EAAIyE,KAAKxE,QAAUwE,KAAKuc,MAAMhhB,GAAK,EAAGA,IACpDyE,KAAKuc,MAAMhhB,IAAM,SACjByE,KAAKuc,MAAMhhB,EAAI,IAAM,EAIzB,OAAOyE,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAU0e,KAAO,SAAenlB,GACjC,OAAO3G,KAAKqe,QAAQmC,MAAM7Z,EAC5B,EAEAsV,EAAG7O,UAAU2e,KAAO,SAAeplB,GACjC,OAAO3G,KAAKqe,QAAQwN,MAAMllB,EAC5B,EAEAsV,EAAG7O,UAAU4e,KAAO,WAGlB,OAFAhsB,KAAKsc,SAAW,EAETtc,IACT,EAEAic,EAAG7O,UAAUkT,IAAM,WACjB,OAAOtgB,KAAKqe,QAAQ2N,MACtB,EAEA/P,EAAG7O,UAAU6e,aAAe,SAAuBtlB,EAAKgQ,EAAK5M,GAC3D,IACIxO,EAIAoiB,EALAnhB,EAAMmK,EAAInL,OAASuO,EAGvB/J,KAAKse,QAAQ9hB,GAGb,IAAIuiB,EAAQ,EACZ,IAAKxjB,EAAI,EAAGA,EAAIoL,EAAInL,OAAQD,IAAK,CAC/BoiB,GAA6B,EAAxB3d,KAAKuc,MAAMhhB,EAAIwO,IAAcgV,EAClC,IAAI7Y,GAAwB,EAAfS,EAAI4V,MAAMhhB,IAAUob,EAEjCoI,IADApB,GAAa,SAARzX,IACS,KAAQA,EAAQ,SAAa,GAC3ClG,KAAKuc,MAAMhhB,EAAIwO,GAAa,SAAJ4T,CAC1B,CACA,KAAOpiB,EAAIyE,KAAKxE,OAASuO,EAAOxO,IAE9BwjB,GADApB,GAA6B,EAAxB3d,KAAKuc,MAAMhhB,EAAIwO,IAAcgV,IACrB,GACb/e,KAAKuc,MAAMhhB,EAAIwO,GAAa,SAAJ4T,EAG1B,GAAc,IAAVoB,EAAa,OAAO/e,KAAK0S,QAK7B,IAFA+I,GAAkB,IAAXsD,GACPA,EAAQ,EACHxjB,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAE3BwjB,GADApB,IAAsB,EAAhB3d,KAAKuc,MAAMhhB,IAAUwjB,IACd,GACb/e,KAAKuc,MAAMhhB,GAAS,SAAJoiB,EAIlB,OAFA3d,KAAKsc,SAAW,EAETtc,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAU8e,SAAW,SAAmBvlB,EAAKwlB,GAC9C,IAAIpiB,GAAQ/J,KAAKxE,OAASmL,EAAInL,QAE1BoD,EAAIoB,KAAKqe,QACTQ,EAAIlY,EAGJylB,EAA8B,EAAxBvN,EAAEtC,MAAMsC,EAAErjB,OAAS,GAGf,KADduO,EAAQ,GADM/J,KAAKigB,WAAWmM,MAG5BvN,EAAIA,EAAE2M,MAAMzhB,GACZnL,EAAEgsB,OAAO7gB,GACTqiB,EAA8B,EAAxBvN,EAAEtC,MAAMsC,EAAErjB,OAAS,IAI3B,IACIqkB,EADA0J,EAAI3qB,EAAEpD,OAASqjB,EAAErjB,OAGrB,GAAa,QAAT2wB,EAAgB,EAClBtM,EAAI,IAAI5D,EAAG,OACTzgB,OAAS+tB,EAAI,EACf1J,EAAEtD,MAAQ,IAAInhB,MAAMykB,EAAErkB,QACtB,IAAK,IAAID,EAAI,EAAGA,EAAIskB,EAAErkB,OAAQD,IAC5BskB,EAAEtD,MAAMhhB,GAAK,CAEjB,CAEA,IAAI8wB,EAAOztB,EAAEyf,QAAQ4N,aAAapN,EAAG,EAAG0K,GAClB,IAAlB8C,EAAK/P,WACP1d,EAAIytB,EACAxM,IACFA,EAAEtD,MAAMgN,GAAK,IAIjB,IAAK,IAAI9qB,EAAI8qB,EAAI,EAAG9qB,GAAK,EAAGA,IAAK,CAC/B,IAAI6tB,EAAmC,UAAL,EAAxB1tB,EAAE2d,MAAMsC,EAAErjB,OAASiD,KACE,EAA5BG,EAAE2d,MAAMsC,EAAErjB,OAASiD,EAAI,IAO1B,IAHA6tB,EAAKrP,KAAKC,IAAKoP,EAAKF,EAAO,EAAG,UAE9BxtB,EAAEqtB,aAAapN,EAAGyN,EAAI7tB,GACA,IAAfG,EAAE0d,UACPgQ,IACA1tB,EAAE0d,SAAW,EACb1d,EAAEqtB,aAAapN,EAAG,EAAGpgB,GAChBG,EAAEygB,WACLzgB,EAAE0d,UAAY,GAGduD,IACFA,EAAEtD,MAAM9d,GAAK6tB,EAEjB,CAWA,OAVIzM,GACFA,EAAEnN,QAEJ9T,EAAE8T,QAGW,QAATyZ,GAA4B,IAAVpiB,GACpBnL,EAAEmhB,OAAOhW,GAGJ,CACLwiB,IAAK1M,GAAK,KACV7B,IAAKpf,EAET,EAMAqd,EAAG7O,UAAUof,OAAS,SAAiB7lB,EAAKwlB,EAAMM,GAGhD,OAFAhR,GAAQ9U,EAAI0Y,UAERrf,KAAKqf,SACA,CACLkN,IAAK,IAAItQ,EAAG,GACZ+B,IAAK,IAAI/B,EAAG,IAKM,IAAlBjc,KAAKsc,UAAmC,IAAjB3V,EAAI2V,UAC7B1V,EAAM5G,KAAK8gB,MAAM0L,OAAO7lB,EAAKwlB,GAEhB,QAATA,IACFI,EAAM3lB,EAAI2lB,IAAIzL,OAGH,QAATqL,IACFnO,EAAMpX,EAAIoX,IAAI8C,MACV2L,GAA6B,IAAjBzO,EAAI1B,UAClB0B,EAAIgE,KAAKrb,IAIN,CACL4lB,IAAKA,EACLvO,IAAKA,IAIa,IAAlBhe,KAAKsc,UAAmC,IAAjB3V,EAAI2V,UAC7B1V,EAAM5G,KAAKwsB,OAAO7lB,EAAIma,MAAOqL,GAEhB,QAATA,IACFI,EAAM3lB,EAAI2lB,IAAIzL,OAGT,CACLyL,IAAKA,EACLvO,IAAKpX,EAAIoX,MAI0B,KAAlChe,KAAKsc,SAAW3V,EAAI2V,WACvB1V,EAAM5G,KAAK8gB,MAAM0L,OAAO7lB,EAAIma,MAAOqL,GAEtB,QAATA,IACFnO,EAAMpX,EAAIoX,IAAI8C,MACV2L,GAA6B,IAAjBzO,EAAI1B,UAClB0B,EAAIiE,KAAKtb,IAIN,CACL4lB,IAAK3lB,EAAI2lB,IACTvO,IAAKA,IAOLrX,EAAInL,OAASwE,KAAKxE,QAAUwE,KAAKqd,IAAI1W,GAAO,EACvC,CACL4lB,IAAK,IAAItQ,EAAG,GACZ+B,IAAKhe,MAKU,IAAf2G,EAAInL,OACO,QAAT2wB,EACK,CACLI,IAAKvsB,KAAK0sB,KAAK/lB,EAAI4V,MAAM,IACzByB,IAAK,MAII,QAATmO,EACK,CACLI,IAAK,KACLvO,IAAK,IAAI/B,EAAGjc,KAAKsf,KAAK3Y,EAAI4V,MAAM,MAI7B,CACLgQ,IAAKvsB,KAAK0sB,KAAK/lB,EAAI4V,MAAM,IACzByB,IAAK,IAAI/B,EAAGjc,KAAKsf,KAAK3Y,EAAI4V,MAAM,MAI7Bvc,KAAKksB,SAASvlB,EAAKwlB,GAlF1B,IAAII,EAAKvO,EAAKpX,CAmFhB,EAGAqV,EAAG7O,UAAUmf,IAAM,SAAc5lB,GAC/B,OAAO3G,KAAKwsB,OAAO7lB,EAAK,OAAO,GAAO4lB,GACxC,EAGAtQ,EAAG7O,UAAU4Q,IAAM,SAAcrX,GAC/B,OAAO3G,KAAKwsB,OAAO7lB,EAAK,OAAO,GAAOqX,GACxC,EAEA/B,EAAG7O,UAAUuf,KAAO,SAAehmB,GACjC,OAAO3G,KAAKwsB,OAAO7lB,EAAK,OAAO,GAAMqX,GACvC,EAGA/B,EAAG7O,UAAUwf,SAAW,SAAmBjmB,GACzC,IAAIkmB,EAAK7sB,KAAKwsB,OAAO7lB,GAGrB,GAAIkmB,EAAG7O,IAAIqB,SAAU,OAAOwN,EAAGN,IAE/B,IAAIvO,EAA0B,IAApB6O,EAAGN,IAAIjQ,SAAiBuQ,EAAG7O,IAAIiE,KAAKtb,GAAOkmB,EAAG7O,IAEpD8O,EAAOnmB,EAAI+kB,MAAM,GACjBqB,EAAKpmB,EAAImZ,MAAM,GACfzC,EAAMW,EAAIX,IAAIyP,GAGlB,OAAIzP,EAAM,GAAY,IAAP0P,GAAoB,IAAR1P,EAAkBwP,EAAGN,IAGrB,IAApBM,EAAGN,IAAIjQ,SAAiBuQ,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAI/L,MAAM,EAChE,EAEAvE,EAAG7O,UAAUkS,KAAO,SAAe3Y,GACjC8U,EAAO9U,GAAO,UAId,IAHA,IAAImiB,GAAK,GAAK,IAAMniB,EAEhBqmB,EAAM,EACDzxB,EAAIyE,KAAKxE,OAAS,EAAGD,GAAK,EAAGA,IACpCyxB,GAAOlE,EAAIkE,GAAuB,EAAhBhtB,KAAKuc,MAAMhhB,KAAWoL,EAG1C,OAAOqmB,CACT,EAGA/Q,EAAG7O,UAAUmS,MAAQ,SAAgB5Y,GACnC8U,EAAO9U,GAAO,UAGd,IADA,IAAIoY,EAAQ,EACHxjB,EAAIyE,KAAKxE,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACzC,IAAIoiB,GAAqB,EAAhB3d,KAAKuc,MAAMhhB,IAAkB,SAARwjB,EAC9B/e,KAAKuc,MAAMhhB,GAAMoiB,EAAIhX,EAAO,EAC5BoY,EAAQpB,EAAIhX,CACd,CAEA,OAAO3G,KAAK0S,OACd,EAEAuJ,EAAG7O,UAAUsf,KAAO,SAAe/lB,GACjC,OAAO3G,KAAKqe,QAAQkB,MAAM5Y,EAC5B,EAEAsV,EAAG7O,UAAU6f,KAAO,SAAenE,GACjCrN,EAAsB,IAAfqN,EAAExM,UACTb,GAAQqN,EAAEzJ,UAEV,IAAIoI,EAAIznB,KACJ0nB,EAAIoB,EAAEzK,QAGRoJ,EADiB,IAAfA,EAAEnL,SACAmL,EAAEkF,KAAK7D,GAEPrB,EAAEpJ,QAaR,IATA,IAAI6O,EAAI,IAAIjR,EAAG,GACXkR,EAAI,IAAIlR,EAAG,GAGXmR,EAAI,IAAInR,EAAG,GACXoR,EAAI,IAAIpR,EAAG,GAEXlX,EAAI,EAED0iB,EAAE6F,UAAY5F,EAAE4F,UACrB7F,EAAE1H,OAAO,GACT2H,EAAE3H,OAAO,KACPhb,EAMJ,IAHA,IAAIwoB,EAAK7F,EAAErJ,QACPmP,EAAK/F,EAAEpJ,SAEHoJ,EAAEpI,UAAU,CAClB,IAAK,IAAI9jB,EAAI,EAAGkyB,EAAK,EAAyB,KAArBhG,EAAElL,MAAM,GAAKkR,IAAalyB,EAAI,KAAMA,EAAGkyB,IAAO,GACvE,GAAIlyB,EAAI,EAEN,IADAksB,EAAE1H,OAAOxkB,GACFA,KAAM,IACP2xB,EAAEQ,SAAWP,EAAEO,WACjBR,EAAElL,KAAKuL,GACPJ,EAAElL,KAAKuL,IAGTN,EAAEnN,OAAO,GACToN,EAAEpN,OAAO,GAIb,IAAK,IAAIthB,EAAI,EAAGkvB,EAAK,EAAyB,KAArBjG,EAAEnL,MAAM,GAAKoR,IAAalvB,EAAI,KAAMA,EAAGkvB,IAAO,GACvE,GAAIlvB,EAAI,EAEN,IADAipB,EAAE3H,OAAOthB,GACFA,KAAM,IACP2uB,EAAEM,SAAWL,EAAEK,WACjBN,EAAEpL,KAAKuL,GACPF,EAAEpL,KAAKuL,IAGTJ,EAAErN,OAAO,GACTsN,EAAEtN,OAAO,GAIT0H,EAAEpK,IAAIqK,IAAM,GACdD,EAAExF,KAAKyF,GACPwF,EAAEjL,KAAKmL,GACPD,EAAElL,KAAKoL,KAEP3F,EAAEzF,KAAKwF,GACP2F,EAAEnL,KAAKiL,GACPG,EAAEpL,KAAKkL,GAEX,CAEA,MAAO,CACLvuB,EAAGwuB,EACHvO,EAAGwO,EACHO,IAAKlG,EAAEkD,OAAO7lB,GAElB,EAKAkX,EAAG7O,UAAUygB,OAAS,SAAiB/E,GACrCrN,EAAsB,IAAfqN,EAAExM,UACTb,GAAQqN,EAAEzJ,UAEV,IAAIzgB,EAAIoB,KACJ6e,EAAIiK,EAAEzK,QAGRzf,EADiB,IAAfA,EAAE0d,SACA1d,EAAE+tB,KAAK7D,GAEPlqB,EAAEyf,QAQR,IALA,IAuCIzX,EAvCAknB,EAAK,IAAI7R,EAAG,GACZ8R,EAAK,IAAI9R,EAAG,GAEZ+R,EAAQnP,EAAER,QAEPzf,EAAEqvB,KAAK,GAAK,GAAKpP,EAAEoP,KAAK,GAAK,GAAG,CACrC,IAAK,IAAI1yB,EAAI,EAAGkyB,EAAK,EAAyB,KAArB7uB,EAAE2d,MAAM,GAAKkR,IAAalyB,EAAI,KAAMA,EAAGkyB,IAAO,GACvE,GAAIlyB,EAAI,EAEN,IADAqD,EAAEmhB,OAAOxkB,GACFA,KAAM,GACPuyB,EAAGJ,SACLI,EAAG9L,KAAKgM,GAGVF,EAAG/N,OAAO,GAId,IAAK,IAAIthB,EAAI,EAAGkvB,EAAK,EAAyB,KAArB9O,EAAEtC,MAAM,GAAKoR,IAAalvB,EAAI,KAAMA,EAAGkvB,IAAO,GACvE,GAAIlvB,EAAI,EAEN,IADAogB,EAAEkB,OAAOthB,GACFA,KAAM,GACPsvB,EAAGL,SACLK,EAAG/L,KAAKgM,GAGVD,EAAGhO,OAAO,GAIVnhB,EAAEye,IAAIwB,IAAM,GACdjgB,EAAEqjB,KAAKpD,GACPiP,EAAG7L,KAAK8L,KAERlP,EAAEoD,KAAKrjB,GACPmvB,EAAG9L,KAAK6L,GAEZ,CAaA,OATElnB,EADgB,IAAdhI,EAAEqvB,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBrnB,EAAIob,KAAK8G,GAGJliB,CACT,EAEAqV,EAAG7O,UAAUwgB,IAAM,SAAcjnB,GAC/B,GAAI3G,KAAKqf,SAAU,OAAO1Y,EAAI2Z,MAC9B,GAAI3Z,EAAI0Y,SAAU,OAAOrf,KAAKsgB,MAE9B,IAAI1hB,EAAIoB,KAAKqe,QACTQ,EAAIlY,EAAI0X,QACZzf,EAAE0d,SAAW,EACbuC,EAAEvC,SAAW,EAGb,IAAK,IAAIvS,EAAQ,EAAGnL,EAAE0uB,UAAYzO,EAAEyO,SAAUvjB,IAC5CnL,EAAEmhB,OAAO,GACTlB,EAAEkB,OAAO,GAGX,OAAG,CACD,KAAOnhB,EAAE0uB,UACP1uB,EAAEmhB,OAAO,GAEX,KAAOlB,EAAEyO,UACPzO,EAAEkB,OAAO,GAGX,IAAItV,EAAI7L,EAAEye,IAAIwB,GACd,GAAIpU,EAAI,EAAG,CAET,IAAIuF,EAAIpR,EACRA,EAAIigB,EACJA,EAAI7O,CACN,MAAO,GAAU,IAANvF,GAAyB,IAAdoU,EAAEoP,KAAK,GAC3B,MAGFrvB,EAAEqjB,KAAKpD,EACT,CAEA,OAAOA,EAAE+L,OAAO7gB,EAClB,EAGAkS,EAAG7O,UAAU8gB,KAAO,SAAevnB,GACjC,OAAO3G,KAAKitB,KAAKtmB,GAAK/H,EAAE+tB,KAAKhmB,EAC/B,EAEAsV,EAAG7O,UAAUkgB,OAAS,WACpB,OAA+B,KAAP,EAAhBttB,KAAKuc,MAAM,GACrB,EAEAN,EAAG7O,UAAUsgB,MAAQ,WACnB,OAA+B,KAAP,EAAhB1tB,KAAKuc,MAAM,GACrB,EAGAN,EAAG7O,UAAU0S,MAAQ,SAAgBnZ,GACnC,OAAO3G,KAAKuc,MAAM,GAAK5V,CACzB,EAGAsV,EAAG7O,UAAU+gB,MAAQ,SAAgBrM,GACnCrG,EAAsB,kBAARqG,GACd,IAAIrX,EAAIqX,EAAM,GACVpX,GAAKoX,EAAMrX,GAAK,GAChBoV,EAAI,GAAKpV,EAGb,GAAIzK,KAAKxE,QAAUkP,EAGjB,OAFA1K,KAAKse,QAAQ5T,EAAI,GACjB1K,KAAKuc,MAAM7R,IAAMmV,EACV7f,KAKT,IADA,IAAI+e,EAAQc,EACHtkB,EAAImP,EAAa,IAAVqU,GAAexjB,EAAIyE,KAAKxE,OAAQD,IAAK,CACnD,IAAIoiB,EAAoB,EAAhB3d,KAAKuc,MAAMhhB,GAEnBwjB,GADApB,GAAKoB,KACS,GACdpB,GAAK,SACL3d,KAAKuc,MAAMhhB,GAAKoiB,CAClB,CAKA,OAJc,IAAVoB,IACF/e,KAAKuc,MAAMhhB,GAAKwjB,EAChB/e,KAAKxE,UAEAwE,IACT,EAEAic,EAAG7O,UAAUiS,OAAS,WACpB,OAAuB,IAAhBrf,KAAKxE,QAAkC,IAAlBwE,KAAKuc,MAAM,EACzC,EAEAN,EAAG7O,UAAU6gB,KAAO,SAAetnB,GACjC,IAOIC,EAPA0V,EAAW3V,EAAM,EAErB,GAAsB,IAAlB3G,KAAKsc,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBtc,KAAKsc,UAAkBA,EAAU,OAAO,EAK5C,GAHAtc,KAAK0S,QAGD1S,KAAKxE,OAAS,EAChBoL,EAAM,MACD,CACD0V,IACF3V,GAAOA,GAGT8U,EAAO9U,GAAO,SAAW,qBAEzB,IAAIgX,EAAoB,EAAhB3d,KAAKuc,MAAM,GACnB3V,EAAM+W,IAAMhX,EAAM,EAAIgX,EAAIhX,GAAO,EAAI,CACvC,CACA,OAAsB,IAAlB3G,KAAKsc,SAA8B,GAAN1V,EAC1BA,CACT,EAMAqV,EAAG7O,UAAUiQ,IAAM,SAAc1W,GAC/B,GAAsB,IAAlB3G,KAAKsc,UAAmC,IAAjB3V,EAAI2V,SAAgB,OAAQ,EACvD,GAAsB,IAAlBtc,KAAKsc,UAAmC,IAAjB3V,EAAI2V,SAAgB,OAAO,EAEtD,IAAI1V,EAAM5G,KAAKouB,KAAKznB,GACpB,OAAsB,IAAlB3G,KAAKsc,SAA8B,GAAN1V,EAC1BA,CACT,EAGAqV,EAAG7O,UAAUghB,KAAO,SAAeznB,GAEjC,GAAI3G,KAAKxE,OAASmL,EAAInL,OAAQ,OAAO,EACrC,GAAIwE,KAAKxE,OAASmL,EAAInL,OAAQ,OAAQ,EAGtC,IADA,IAAIoL,EAAM,EACDrL,EAAIyE,KAAKxE,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACzC,IAAIqD,EAAoB,EAAhBoB,KAAKuc,MAAMhhB,GACfsjB,EAAmB,EAAflY,EAAI4V,MAAMhhB,GAElB,GAAIqD,IAAMigB,EAAV,CACIjgB,EAAIigB,EACNjY,GAAO,EACEhI,EAAIigB,IACbjY,EAAM,GAER,KANqB,CAOvB,CACA,OAAOA,CACT,EAEAqV,EAAG7O,UAAUihB,IAAM,SAAc1nB,GAC/B,OAA0B,IAAnB3G,KAAKiuB,KAAKtnB,EACnB,EAEAsV,EAAG7O,UAAUkhB,GAAK,SAAa3nB,GAC7B,OAAyB,IAAlB3G,KAAKqd,IAAI1W,EAClB,EAEAsV,EAAG7O,UAAUmhB,KAAO,SAAe5nB,GACjC,OAAO3G,KAAKiuB,KAAKtnB,IAAQ,CAC3B,EAEAsV,EAAG7O,UAAUohB,IAAM,SAAc7nB,GAC/B,OAAO3G,KAAKqd,IAAI1W,IAAQ,CAC1B,EAEAsV,EAAG7O,UAAUqhB,IAAM,SAAc9nB,GAC/B,OAA2B,IAApB3G,KAAKiuB,KAAKtnB,EACnB,EAEAsV,EAAG7O,UAAUshB,GAAK,SAAa/nB,GAC7B,OAA0B,IAAnB3G,KAAKqd,IAAI1W,EAClB,EAEAsV,EAAG7O,UAAUuhB,KAAO,SAAehoB,GACjC,OAAO3G,KAAKiuB,KAAKtnB,IAAQ,CAC3B,EAEAsV,EAAG7O,UAAUwhB,IAAM,SAAcjoB,GAC/B,OAAO3G,KAAKqd,IAAI1W,IAAQ,CAC1B,EAEAsV,EAAG7O,UAAUyhB,IAAM,SAAcloB,GAC/B,OAA0B,IAAnB3G,KAAKiuB,KAAKtnB,EACnB,EAEAsV,EAAG7O,UAAU0hB,GAAK,SAAanoB,GAC7B,OAAyB,IAAlB3G,KAAKqd,IAAI1W,EAClB,EAMAsV,EAAGO,IAAM,SAAc7V,GACrB,OAAO,IAAIooB,EAAIpoB,EACjB,EAEAsV,EAAG7O,UAAU4hB,MAAQ,SAAgBC,GAGnC,OAFAxT,GAAQzb,KAAKwc,IAAK,yCAClBf,EAAyB,IAAlBzb,KAAKsc,SAAgB,iCACrB2S,EAAIC,UAAUlvB,MAAMmvB,UAAUF,EACvC,EAEAhT,EAAG7O,UAAUgiB,QAAU,WAErB,OADA3T,EAAOzb,KAAKwc,IAAK,wDACVxc,KAAKwc,IAAI6S,YAAYrvB,KAC9B,EAEAic,EAAG7O,UAAU+hB,UAAY,SAAoBF,GAE3C,OADAjvB,KAAKwc,IAAMyS,EACJjvB,IACT,EAEAic,EAAG7O,UAAUkiB,SAAW,SAAmBL,GAEzC,OADAxT,GAAQzb,KAAKwc,IAAK,yCACXxc,KAAKmvB,UAAUF,EACxB,EAEAhT,EAAG7O,UAAUmiB,OAAS,SAAiB5oB,GAErC,OADA8U,EAAOzb,KAAKwc,IAAK,sCACVxc,KAAKwc,IAAIlX,IAAItF,KAAM2G,EAC5B,EAEAsV,EAAG7O,UAAUoiB,QAAU,SAAkB7oB,GAEvC,OADA8U,EAAOzb,KAAKwc,IAAK,uCACVxc,KAAKwc,IAAIwF,KAAKhiB,KAAM2G,EAC7B,EAEAsV,EAAG7O,UAAUqiB,OAAS,SAAiB9oB,GAErC,OADA8U,EAAOzb,KAAKwc,IAAK,sCACVxc,KAAKwc,IAAI0F,IAAIliB,KAAM2G,EAC5B,EAEAsV,EAAG7O,UAAUsiB,QAAU,SAAkB/oB,GAEvC,OADA8U,EAAOzb,KAAKwc,IAAK,uCACVxc,KAAKwc,IAAIyF,KAAKjiB,KAAM2G,EAC7B,EAEAsV,EAAG7O,UAAUuiB,OAAS,SAAiBhpB,GAErC,OADA8U,EAAOzb,KAAKwc,IAAK,sCACVxc,KAAKwc,IAAIoT,IAAI5vB,KAAM2G,EAC5B,EAEAsV,EAAG7O,UAAUyiB,OAAS,SAAiBlpB,GAGrC,OAFA8U,EAAOzb,KAAKwc,IAAK,sCACjBxc,KAAKwc,IAAIsT,SAAS9vB,KAAM2G,GACjB3G,KAAKwc,IAAI7F,IAAI3W,KAAM2G,EAC5B,EAEAsV,EAAG7O,UAAU2iB,QAAU,SAAkBppB,GAGvC,OAFA8U,EAAOzb,KAAKwc,IAAK,sCACjBxc,KAAKwc,IAAIsT,SAAS9vB,KAAM2G,GACjB3G,KAAKwc,IAAI2J,KAAKnmB,KAAM2G,EAC7B,EAEAsV,EAAG7O,UAAU4iB,OAAS,WAGpB,OAFAvU,EAAOzb,KAAKwc,IAAK,sCACjBxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAIiO,IAAIzqB,KACtB,EAEAic,EAAG7O,UAAU8iB,QAAU,WAGrB,OAFAzU,EAAOzb,KAAKwc,IAAK,uCACjBxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAIkO,KAAK1qB,KACvB,EAGAic,EAAG7O,UAAU+iB,QAAU,WAGrB,OAFA1U,EAAOzb,KAAKwc,IAAK,uCACjBxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAI4T,KAAKpwB,KACvB,EAEAic,EAAG7O,UAAUijB,QAAU,WAGrB,OAFA5U,EAAOzb,KAAKwc,IAAK,uCACjBxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAI0R,KAAKluB,KACvB,EAGAic,EAAG7O,UAAUkjB,OAAS,WAGpB,OAFA7U,EAAOzb,KAAKwc,IAAK,sCACjBxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAIsE,IAAI9gB,KACtB,EAEAic,EAAG7O,UAAUmjB,OAAS,SAAiB5pB,GAGrC,OAFA8U,EAAOzb,KAAKwc,MAAQ7V,EAAI6V,IAAK,qBAC7Bxc,KAAKwc,IAAIyT,SAASjwB,MACXA,KAAKwc,IAAI5F,IAAI5W,KAAM2G,EAC5B,EAGA,IAAI6pB,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ1jB,EAAM2b,GAErB9oB,KAAKmN,KAAOA,EACZnN,KAAK8oB,EAAI,IAAI7M,EAAG6M,EAAG,IACnB9oB,KAAKyG,EAAIzG,KAAK8oB,EAAE1S,YAChBpW,KAAKuH,EAAI,IAAI0U,EAAG,GAAG2O,OAAO5qB,KAAKyG,GAAGwb,KAAKjiB,KAAK8oB,GAE5C9oB,KAAKqV,IAAMrV,KAAK8wB,MAClB,CAgDA,SAASC,IACPF,EAAOjsB,KACL5E,KACA,OACA,0EACJ,CA8DA,SAASgxB,IACPH,EAAOjsB,KACL5E,KACA,OACA,iEACJ,CAGA,SAASixB,IACPJ,EAAOjsB,KACL5E,KACA,OACA,wDACJ,CAGA,SAASkxB,IAEPL,EAAOjsB,KACL5E,KACA,QACA,sEACJ,CA6CA,SAAS+uB,EAAKxF,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAI4H,EAAQlV,EAAGmV,OAAO7H,GACtBvpB,KAAKupB,EAAI4H,EAAMrI,EACf9oB,KAAKmxB,MAAQA,CACf,MACE1V,EAAO8N,EAAE8E,IAAI,GAAI,kCACjBruB,KAAKupB,EAAIA,EACTvpB,KAAKmxB,MAAQ,IAEjB,CAgOA,SAASE,EAAM9H,GACbwF,EAAInqB,KAAK5E,KAAMupB,GAEfvpB,KAAK+J,MAAQ/J,KAAKupB,EAAEnT,YAChBpW,KAAK+J,MAAQ,KAAO,IACtB/J,KAAK+J,OAAS,GAAM/J,KAAK+J,MAAQ,IAGnC/J,KAAKyK,EAAI,IAAIwR,EAAG,GAAG2O,OAAO5qB,KAAK+J,OAC/B/J,KAAK+sB,GAAK/sB,KAAKsxB,KAAKtxB,KAAKyK,EAAEggB,OAC3BzqB,KAAKuxB,KAAOvxB,KAAKyK,EAAEojB,OAAO7tB,KAAKupB,GAE/BvpB,KAAKwxB,KAAOxxB,KAAKuxB,KAAK5a,IAAI3W,KAAKyK,GAAGohB,MAAM,GAAGU,IAAIvsB,KAAKupB,GACpDvpB,KAAKwxB,KAAOxxB,KAAKwxB,KAAK7E,KAAK3sB,KAAKyK,GAChCzK,KAAKwxB,KAAOxxB,KAAKyK,EAAEyX,IAAIliB,KAAKwxB,KAC9B,CA7aAX,EAAOzjB,UAAU0jB,KAAO,WACtB,IAAIzb,EAAM,IAAI4G,EAAG,MAEjB,OADA5G,EAAIkH,MAAQ,IAAInhB,MAAM6hB,KAAKS,KAAK1d,KAAKyG,EAAI,KAClC4O,CACT,EAEAwb,EAAOzjB,UAAUqkB,QAAU,SAAkB9qB,GAG3C,IACI+qB,EADAjnB,EAAI9D,EAGR,GACE3G,KAAK2xB,MAAMlnB,EAAGzK,KAAKqV,KAGnBqc,GADAjnB,GADAA,EAAIzK,KAAK4xB,MAAMnnB,IACTuX,KAAKhiB,KAAKqV,MACPe,kBACFsb,EAAO1xB,KAAKyG,GAErB,IAAI4W,EAAMqU,EAAO1xB,KAAKyG,GAAK,EAAIgE,EAAE2jB,KAAKpuB,KAAK8oB,GAgB3C,OAfY,IAARzL,GACF5S,EAAE8R,MAAM,GAAK,EACb9R,EAAEjP,OAAS,GACF6hB,EAAM,EACf5S,EAAEwX,KAAKjiB,KAAK8oB,QAEIvpB,IAAZkL,EAAEiI,MAEJjI,EAAEiI,QAGFjI,EAAEonB,SAICpnB,CACT,EAEAomB,EAAOzjB,UAAUukB,MAAQ,SAAgBx2B,EAAOyjB,GAC9CzjB,EAAM4kB,OAAO/f,KAAKyG,EAAG,EAAGmY,EAC1B,EAEAiS,EAAOzjB,UAAUwkB,MAAQ,SAAgBjrB,GACvC,OAAOA,EAAIwf,KAAKnmB,KAAKuH,EACvB,EAQAoU,EAASoV,EAAMF,GAEfE,EAAK3jB,UAAUukB,MAAQ,SAAgBx2B,EAAOG,GAK5C,IAHA,IAAI8vB,EAAO,QAEP0G,EAAS7U,KAAKC,IAAI/hB,EAAMK,OAAQ,GAC3BD,EAAI,EAAGA,EAAIu2B,EAAQv2B,IAC1BD,EAAOihB,MAAMhhB,GAAKJ,EAAMohB,MAAMhhB,GAIhC,GAFAD,EAAOE,OAASs2B,EAEZ32B,EAAMK,QAAU,EAGlB,OAFAL,EAAMohB,MAAM,GAAK,OACjBphB,EAAMK,OAAS,GAKjB,IAAIu2B,EAAO52B,EAAMohB,MAAM,GAGvB,IAFAjhB,EAAOihB,MAAMjhB,EAAOE,UAAYu2B,EAAO3G,EAElC7vB,EAAI,GAAIA,EAAIJ,EAAMK,OAAQD,IAAK,CAClC,IAAImJ,EAAwB,EAAjBvJ,EAAMohB,MAAMhhB,GACvBJ,EAAMohB,MAAMhhB,EAAI,KAAQmJ,EAAO0mB,IAAS,EAAM2G,IAAS,GACvDA,EAAOrtB,CACT,CACAqtB,KAAU,GACV52B,EAAMohB,MAAMhhB,EAAI,IAAMw2B,EACT,IAATA,GAAc52B,EAAMK,OAAS,GAC/BL,EAAMK,QAAU,GAEhBL,EAAMK,QAAU,CAEpB,EAEAu1B,EAAK3jB,UAAUwkB,MAAQ,SAAgBjrB,GAErCA,EAAI4V,MAAM5V,EAAInL,QAAU,EACxBmL,EAAI4V,MAAM5V,EAAInL,OAAS,GAAK,EAC5BmL,EAAInL,QAAU,EAId,IADA,IAAIsjB,EAAK,EACAvjB,EAAI,EAAGA,EAAIoL,EAAInL,OAAQD,IAAK,CACnC,IAAIoiB,EAAmB,EAAfhX,EAAI4V,MAAMhhB,GAClBujB,GAAU,IAAJnB,EACNhX,EAAI4V,MAAMhhB,GAAU,SAALujB,EACfA,EAAS,GAAJnB,GAAamB,EAAK,SAAa,EACtC,CASA,OANkC,IAA9BnY,EAAI4V,MAAM5V,EAAInL,OAAS,KACzBmL,EAAInL,SAC8B,IAA9BmL,EAAI4V,MAAM5V,EAAInL,OAAS,IACzBmL,EAAInL,UAGDmL,CACT,EAQAgV,EAASqV,EAAMH,GAQflV,EAASsV,EAAMJ,GASflV,EAASuV,EAAQL,GAEjBK,EAAO9jB,UAAUwkB,MAAQ,SAAgBjrB,GAGvC,IADA,IAAIoY,EAAQ,EACHxjB,EAAI,EAAGA,EAAIoL,EAAInL,OAAQD,IAAK,CACnC,IAAI4kB,EAA0B,IAAL,EAAfxZ,EAAI4V,MAAMhhB,IAAiBwjB,EACjCD,EAAU,SAALqB,EACTA,KAAQ,GAERxZ,EAAI4V,MAAMhhB,GAAKujB,EACfC,EAAQoB,CACV,CAIA,OAHc,IAAVpB,IACFpY,EAAI4V,MAAM5V,EAAInL,UAAYujB,GAErBpY,CACT,EAGAsV,EAAGmV,OAAS,SAAgBjkB,GAE1B,GAAIqjB,EAAOrjB,GAAO,OAAOqjB,EAAOrjB,GAEhC,IAAIgkB,EACJ,GAAa,SAAThkB,EACFgkB,EAAQ,IAAIJ,OACP,GAAa,SAAT5jB,EACTgkB,EAAQ,IAAIH,OACP,GAAa,SAAT7jB,EACTgkB,EAAQ,IAAIF,MACP,IAAa,WAAT9jB,EAGT,MAAM,IAAIjR,MAAM,iBAAmBiR,GAFnCgkB,EAAQ,IAAID,CAGd,CAGA,OAFAV,EAAOrjB,GAAQgkB,EAERA,CACT,EAiBApC,EAAI3hB,UAAU6iB,SAAW,SAAmBrxB,GAC1C6c,EAAsB,IAAf7c,EAAE0d,SAAgB,iCACzBb,EAAO7c,EAAE4d,IAAK,kCAChB,EAEAuS,EAAI3hB,UAAU0iB,SAAW,SAAmBlxB,EAAGigB,GAC7CpD,EAAqC,KAA7B7c,EAAE0d,SAAWuC,EAAEvC,UAAiB,iCACxCb,EAAO7c,EAAE4d,KAAO5d,EAAE4d,MAAQqC,EAAErC,IAC1B,kCACJ,EAEAuS,EAAI3hB,UAAUkkB,KAAO,SAAe1yB,GAClC,OAAIoB,KAAKmxB,MAAcnxB,KAAKmxB,MAAMM,QAAQ7yB,GAAGuwB,UAAUnvB,MAChDpB,EAAE+tB,KAAK3sB,KAAKupB,GAAG4F,UAAUnvB,KAClC,EAEA+uB,EAAI3hB,UAAU0T,IAAM,SAAcliB,GAChC,OAAIA,EAAEygB,SACGzgB,EAAEyf,QAGJre,KAAKupB,EAAErH,IAAItjB,GAAGuwB,UAAUnvB,KACjC,EAEA+uB,EAAI3hB,UAAU9H,IAAM,SAAc1G,EAAGigB,GACnC7e,KAAK8vB,SAASlxB,EAAGigB,GAEjB,IAAIjY,EAAMhI,EAAE0G,IAAIuZ,GAIhB,OAHIjY,EAAIyW,IAAIrd,KAAKupB,IAAM,GACrB3iB,EAAIqb,KAAKjiB,KAAKupB,GAET3iB,EAAIuoB,UAAUnvB,KACvB,EAEA+uB,EAAI3hB,UAAU4U,KAAO,SAAepjB,EAAGigB,GACrC7e,KAAK8vB,SAASlxB,EAAGigB,GAEjB,IAAIjY,EAAMhI,EAAEojB,KAAKnD,GAIjB,OAHIjY,EAAIyW,IAAIrd,KAAKupB,IAAM,GACrB3iB,EAAIqb,KAAKjiB,KAAKupB,GAET3iB,CACT,EAEAmoB,EAAI3hB,UAAU8U,IAAM,SAActjB,EAAGigB,GACnC7e,KAAK8vB,SAASlxB,EAAGigB,GAEjB,IAAIjY,EAAMhI,EAAEsjB,IAAIrD,GAIhB,OAHIjY,EAAIqnB,KAAK,GAAK,GAChBrnB,EAAIob,KAAKhiB,KAAKupB,GAET3iB,EAAIuoB,UAAUnvB,KACvB,EAEA+uB,EAAI3hB,UAAU6U,KAAO,SAAerjB,EAAGigB,GACrC7e,KAAK8vB,SAASlxB,EAAGigB,GAEjB,IAAIjY,EAAMhI,EAAEqjB,KAAKpD,GAIjB,OAHIjY,EAAIqnB,KAAK,GAAK,GAChBrnB,EAAIob,KAAKhiB,KAAKupB,GAET3iB,CACT,EAEAmoB,EAAI3hB,UAAUwiB,IAAM,SAAchxB,EAAG+H,GAEnC,OADA3G,KAAKiwB,SAASrxB,GACPoB,KAAKsxB,KAAK1yB,EAAE4sB,MAAM7kB,GAC3B,EAEAooB,EAAI3hB,UAAU+Y,KAAO,SAAevnB,EAAGigB,GAErC,OADA7e,KAAK8vB,SAASlxB,EAAGigB,GACV7e,KAAKsxB,KAAK1yB,EAAEunB,KAAKtH,GAC1B,EAEAkQ,EAAI3hB,UAAUuJ,IAAM,SAAc/X,EAAGigB,GAEnC,OADA7e,KAAK8vB,SAASlxB,EAAGigB,GACV7e,KAAKsxB,KAAK1yB,EAAE+X,IAAIkI,GACzB,EAEAkQ,EAAI3hB,UAAUsd,KAAO,SAAe9rB,GAClC,OAAOoB,KAAKmmB,KAAKvnB,EAAGA,EAAEyf,QACxB,EAEA0Q,EAAI3hB,UAAUqd,IAAM,SAAc7rB,GAChC,OAAOoB,KAAK2W,IAAI/X,EAAGA,EACrB,EAEAmwB,EAAI3hB,UAAUgjB,KAAO,SAAexxB,GAClC,GAAIA,EAAEygB,SAAU,OAAOzgB,EAAEyf,QAEzB,IAAI2T,EAAOhyB,KAAKupB,EAAEzJ,MAAM,GAIxB,GAHArE,EAAOuW,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIpb,EAAM5W,KAAKupB,EAAEjkB,IAAI,IAAI2W,EAAG,IAAI8D,OAAO,GACvC,OAAO/f,KAAK4W,IAAIhY,EAAGgY,EACrB,CAOA,IAFA,IAAIiJ,EAAI7f,KAAKupB,EAAEwC,KAAK,GAChBrhB,EAAI,GACAmV,EAAER,UAA2B,IAAfQ,EAAEC,MAAM,IAC5BpV,IACAmV,EAAEE,OAAO,GAEXtE,GAAQoE,EAAER,UAEV,IAAI4S,EAAM,IAAIhW,EAAG,GAAG+S,MAAMhvB,MACtBkyB,EAAOD,EAAI3B,SAIX6B,EAAOnyB,KAAKupB,EAAEwC,KAAK,GAAGhM,OAAO,GAC7BqS,EAAIpyB,KAAKupB,EAAEnT,YAGf,IAFAgc,EAAI,IAAInW,EAAG,EAAImW,EAAIA,GAAGpD,MAAMhvB,MAEW,IAAhCA,KAAK4W,IAAIwb,EAAGD,GAAM9U,IAAI6U,IAC3BE,EAAE5C,QAAQ0C,GAOZ,IAJA,IAAInkB,EAAI/N,KAAK4W,IAAIwb,EAAGvS,GAChBpV,EAAIzK,KAAK4W,IAAIhY,EAAGihB,EAAEiM,KAAK,GAAG/L,OAAO,IACjC/P,EAAIhQ,KAAK4W,IAAIhY,EAAGihB,GAChB0J,EAAI7e,EACc,IAAfsF,EAAEqN,IAAI4U,IAAY,CAEvB,IADA,IAAI5c,EAAMrF,EACDzU,EAAI,EAAoB,IAAjB8Z,EAAIgI,IAAI4U,GAAY12B,IAClC8Z,EAAMA,EAAI2a,SAEZvU,EAAOlgB,EAAIguB,GACX,IAAI1K,EAAI7e,KAAK4W,IAAI7I,EAAG,IAAIkO,EAAG,GAAG2O,OAAOrB,EAAIhuB,EAAI,IAE7CkP,EAAIA,EAAEolB,OAAOhR,GACb9Q,EAAI8Q,EAAEmR,SACNhgB,EAAIA,EAAE6f,OAAO9hB,GACbwb,EAAIhuB,CACN,CAEA,OAAOkP,CACT,EAEAskB,EAAI3hB,UAAU8gB,KAAO,SAAetvB,GAClC,IAAIyzB,EAAMzzB,EAAEivB,OAAO7tB,KAAKupB,GACxB,OAAqB,IAAjB8I,EAAI/V,UACN+V,EAAI/V,SAAW,EACRtc,KAAKsxB,KAAKe,GAAK/B,UAEftwB,KAAKsxB,KAAKe,EAErB,EAEAtD,EAAI3hB,UAAUwJ,IAAM,SAAchY,EAAG+H,GACnC,GAAIA,EAAI0Y,SAAU,OAAO,IAAIpD,EAAG,GAAG+S,MAAMhvB,MACzC,GAAoB,IAAhB2G,EAAIsnB,KAAK,GAAU,OAAOrvB,EAAEyf,QAEhC,IACIiU,EAAM,IAAIl3B,MAAM,IACpBk3B,EAAI,GAAK,IAAIrW,EAAG,GAAG+S,MAAMhvB,MACzBsyB,EAAI,GAAK1zB,EACT,IAAK,IAAIrD,EAAI,EAAGA,EAAI+2B,EAAI92B,OAAQD,IAC9B+2B,EAAI/2B,GAAKyE,KAAK2W,IAAI2b,EAAI/2B,EAAI,GAAIqD,GAGhC,IAAIgI,EAAM0rB,EAAI,GACVC,EAAU,EACVC,EAAa,EACbx2B,EAAQ2K,EAAIyP,YAAc,GAK9B,IAJc,IAAVpa,IACFA,EAAQ,IAGLT,EAAIoL,EAAInL,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAI0iB,EAAOtX,EAAI4V,MAAMhhB,GACZkD,EAAIzC,EAAQ,EAAGyC,GAAK,EAAGA,IAAK,CACnC,IAAIqjB,EAAO7D,GAAQxf,EAAK,EACpBmI,IAAQ0rB,EAAI,KACd1rB,EAAM5G,KAAKyqB,IAAI7jB,IAGL,IAARkb,GAAyB,IAAZyQ,GAKjBA,IAAY,EACZA,GAAWzQ,GA9BE,MA+Bb0Q,GACwC,IAANj3B,GAAiB,IAANkD,KAE7CmI,EAAM5G,KAAK2W,IAAI/P,EAAK0rB,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYjB,CACAx2B,EAAQ,EACV,CAEA,OAAO4K,CACT,EAEAmoB,EAAI3hB,UAAU8hB,UAAY,SAAoBvoB,GAC5C,IAAI8D,EAAI9D,EAAIgmB,KAAK3sB,KAAKupB,GAEtB,OAAO9e,IAAM9D,EAAM8D,EAAE4T,QAAU5T,CACjC,EAEAskB,EAAI3hB,UAAUiiB,YAAc,SAAsB1oB,GAChD,IAAIC,EAAMD,EAAI0X,QAEd,OADAzX,EAAI4V,IAAM,KACH5V,CACT,EAMAqV,EAAGwW,KAAO,SAAe9rB,GACvB,OAAO,IAAI0qB,EAAK1qB,EAClB,EAkBAgV,EAAS0V,EAAMtC,GAEfsC,EAAKjkB,UAAU8hB,UAAY,SAAoBvoB,GAC7C,OAAO3G,KAAKsxB,KAAK3qB,EAAI6kB,MAAMxrB,KAAK+J,OAClC,EAEAsnB,EAAKjkB,UAAUiiB,YAAc,SAAsB1oB,GACjD,IAAI8D,EAAIzK,KAAKsxB,KAAK3qB,EAAIgQ,IAAI3W,KAAKuxB,OAE/B,OADA9mB,EAAE+R,IAAM,KACD/R,CACT,EAEA4mB,EAAKjkB,UAAU+Y,KAAO,SAAevnB,EAAGigB,GACtC,GAAIjgB,EAAEygB,UAAYR,EAAEQ,SAGlB,OAFAzgB,EAAE2d,MAAM,GAAK,EACb3d,EAAEpD,OAAS,EACJoD,EAGT,IAAIoR,EAAIpR,EAAEunB,KAAKtH,GACX9Q,EAAIiC,EAAE4b,MAAM5rB,KAAK+J,OAAO4M,IAAI3W,KAAKwxB,MAAM7F,OAAO3rB,KAAK+J,OAAO4M,IAAI3W,KAAKupB,GACnEmJ,EAAI1iB,EAAEiS,KAAKlU,GAAGgS,OAAO/f,KAAK+J,OAC1BnD,EAAM8rB,EAQV,OANIA,EAAErV,IAAIrd,KAAKupB,IAAM,EACnB3iB,EAAM8rB,EAAEzQ,KAAKjiB,KAAKupB,GACTmJ,EAAEzE,KAAK,GAAK,IACrBrnB,EAAM8rB,EAAE1Q,KAAKhiB,KAAKupB,IAGb3iB,EAAIuoB,UAAUnvB,KACvB,EAEAqxB,EAAKjkB,UAAUuJ,IAAM,SAAc/X,EAAGigB,GACpC,GAAIjgB,EAAEygB,UAAYR,EAAEQ,SAAU,OAAO,IAAIpD,EAAG,GAAGkT,UAAUnvB,MAEzD,IAAIgQ,EAAIpR,EAAE+X,IAAIkI,GACV9Q,EAAIiC,EAAE4b,MAAM5rB,KAAK+J,OAAO4M,IAAI3W,KAAKwxB,MAAM7F,OAAO3rB,KAAK+J,OAAO4M,IAAI3W,KAAKupB,GACnEmJ,EAAI1iB,EAAEiS,KAAKlU,GAAGgS,OAAO/f,KAAK+J,OAC1BnD,EAAM8rB,EAOV,OANIA,EAAErV,IAAIrd,KAAKupB,IAAM,EACnB3iB,EAAM8rB,EAAEzQ,KAAKjiB,KAAKupB,GACTmJ,EAAEzE,KAAK,GAAK,IACrBrnB,EAAM8rB,EAAE1Q,KAAKhiB,KAAKupB,IAGb3iB,EAAIuoB,UAAUnvB,KACvB,EAEAqxB,EAAKjkB,UAAU8gB,KAAO,SAAetvB,GAGnC,OADUoB,KAAKsxB,KAAK1yB,EAAEivB,OAAO7tB,KAAKupB,GAAG5S,IAAI3W,KAAK+sB,KACnCoC,UAAUnvB,KACvB,CACD,CAr3GD,YAq3G4CA,8BCr3G5C,SAAUiT,GACV,aAQA,IAAI0f,EAAK,SAASC,GAChB,IAAIr3B,EAAGkP,EAAI,IAAIooB,aAAa,IAC5B,GAAID,EAAM,IAAKr3B,EAAI,EAAGA,EAAIq3B,EAAKp3B,OAAQD,IAAKkP,EAAElP,GAAKq3B,EAAKr3B,GACxD,OAAOkP,CACT,EAGIqoB,EAAc,WAAuB,MAAM,IAAI52B,MAAM,UAAY,EAEjE62B,EAAK,IAAIr2B,WAAW,IACpBs2B,EAAK,IAAIt2B,WAAW,IAAKs2B,EAAG,GAAK,EAErC,IAAIC,EAAMN,IACNO,EAAMP,EAAG,CAAC,IACVQ,EAAUR,EAAG,CAAC,MAAQ,IACtBtF,EAAIsF,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QAChIS,EAAKT,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,OACjIU,EAAIV,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAChIW,EAAIX,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QAChIY,EAAIZ,EAAG,CAAC,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,QAEpI,SAASa,EAAK/L,EAAGlsB,EAAG4vB,EAAGziB,GACrB+e,EAAElsB,GAAQ4vB,GAAK,GAAM,IACrB1D,EAAElsB,EAAE,GAAM4vB,GAAK,GAAM,IACrB1D,EAAElsB,EAAE,GAAM4vB,GAAM,EAAK,IACrB1D,EAAElsB,EAAE,GAAS,IAAJ4vB,EACT1D,EAAElsB,EAAE,GAAMmN,GAAK,GAAO,IACtB+e,EAAElsB,EAAE,GAAMmN,GAAK,GAAO,IACtB+e,EAAElsB,EAAE,GAAMmN,GAAM,EAAM,IACtB+e,EAAElsB,EAAE,GAAS,IAAJmN,CACX,CAEA,SAAS+qB,EAAGhM,EAAGiM,EAAIhM,EAAGiM,EAAIltB,GACxB,IAAIlL,EAAEkC,EAAI,EACV,IAAKlC,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKkC,GAAKgqB,EAAEiM,EAAGn4B,GAAGmsB,EAAEiM,EAAGp4B,GAC1C,OAAQ,EAAMkC,EAAI,IAAO,GAAM,CACjC,CAEA,SAASm2B,EAAiBnM,EAAGiM,EAAIhM,EAAGiM,GAClC,OAAOF,EAAGhM,EAAEiM,EAAGhM,EAAEiM,EAAG,GACtB,CAEA,SAASE,EAAiBpM,EAAGiM,EAAIhM,EAAGiM,GAClC,OAAOF,EAAGhM,EAAEiM,EAAGhM,EAAEiM,EAAG,GACtB,CA4UA,SAASG,EAAoBlV,EAAImV,EAAIxsB,EAAEwG,IA1UvC,SAAsBsU,EAAGyG,EAAGvhB,EAAGwG,GAsB7B,IArBA,IAmBe2kB,EAnBXsB,EAAc,IAARjmB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EkmB,EAAc,IAAR1sB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9E2sB,EAAc,IAAR3sB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9E4sB,EAAc,IAAR5sB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E6sB,EAAc,IAAR7sB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E8sB,EAAc,IAARtmB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EumB,EAAc,IAARxL,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EyL,EAAc,IAARzL,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9E0L,EAAc,IAAR1L,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E2L,EAAc,IAAR3L,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E4L,EAAc,IAAR3mB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E4mB,EAAc,IAARptB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EqtB,EAAc,IAARrtB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EstB,EAAc,IAARttB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EutB,EAAc,IAARvtB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EwtB,EAAc,IAARhnB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAE9EinB,EAAKhB,EAAIlG,EAAKmG,EAAIlG,EAAKmG,EAAIe,EAAKd,EAAIe,EAAKd,EAAIe,EAAKd,EAAIe,EAAKd,EAAIe,EAAKd,EACpEe,EAAKd,EAAIe,EAAKd,EAAIe,EAAMd,EAAKe,EAAMd,EAAKe,EAAMd,EAAKe,EAAMd,EAAKe,EAAMd,EACpEe,EAAMd,EAEDx5B,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAQ3By5B,IADAtC,GADAgD,IADAhD,GADA4C,IADA5C,GADAwC,IADAxC,EAAIsC,EAAKU,EAAM,IACN,EAAIhD,IAAK,IACTsC,EAAK,IACL,EAAItC,IAAK,IACTwC,EAAK,IACJ,GAAKxC,IAAK,IACV4C,EAAK,IACN,GAAK5C,IAAK,GASnByC,IADAzC,GADA5E,IADA4E,GADAiD,IADAjD,GADA6C,IADA7C,EAAIyC,EAAKrH,EAAK,IACL,EAAI4E,IAAK,IACTyC,EAAK,IACJ,EAAIzC,IAAK,IACT6C,EAAK,IACN,GAAK7C,IAAK,IACViD,EAAM,IACN,GAAKjD,IAAK,GASnB8C,IADA9C,GADA0C,IADA1C,GADA3E,IADA2E,GADAkD,IADAlD,EAAI8C,EAAMJ,EAAK,IACL,EAAI1C,IAAK,IACT8C,EAAM,IACP,EAAI9C,IAAK,IACTkD,EAAM,IACN,GAAKlD,IAAK,IACV3E,EAAK,IACJ,GAAK2E,IAAK,GASpBmD,IADAnD,GADA+C,IADA/C,GADA2C,IADA3C,GADAuC,IADAvC,EAAImD,EAAMJ,EAAM,IACP,EAAI/C,IAAK,IACTmD,EAAM,IACN,EAAInD,IAAK,IACTuC,EAAK,IACJ,GAAKvC,IAAK,IACV2C,EAAK,IACL,GAAK3C,IAAK,GASpBsC,IADAtC,GADAuC,IADAvC,GADA3E,IADA2E,GADA5E,IADA4E,EAAIsC,EAAKC,EAAK,IACL,EAAIvC,IAAK,IACTsC,EAAK,IACL,EAAItC,IAAK,IACT5E,EAAK,IACL,GAAK4E,IAAK,IACV3E,EAAK,IACL,GAAK2E,IAAK,GASnByC,IADAzC,GADAwC,IADAxC,GADA2C,IADA3C,GADA0C,IADA1C,EAAIyC,EAAKD,EAAK,IACL,EAAIxC,IAAK,IACTyC,EAAK,IACL,EAAIzC,IAAK,IACT0C,EAAK,IACL,GAAK1C,IAAK,IACV2C,EAAK,IACL,GAAK3C,IAAK,GASnB8C,IADA9C,GADA6C,IADA7C,GADA4C,IADA5C,GADA+C,IADA/C,EAAI8C,EAAMD,EAAK,IACL,EAAI7C,IAAK,IACT8C,EAAM,IACP,EAAI9C,IAAK,IACT+C,EAAM,IACN,GAAK/C,IAAK,IACV4C,EAAK,IACJ,GAAK5C,IAAK,GASpBmD,IADAnD,GADAkD,IADAlD,GADAiD,IADAjD,GADAgD,IADAhD,EAAImD,EAAMD,EAAM,IACN,EAAIlD,IAAK,IACTmD,EAAM,IACN,EAAInD,IAAK,IACTgD,EAAM,IACN,GAAKhD,IAAK,IACViD,EAAM,IACN,GAAKjD,IAAK,GAErBsC,EAAMA,EAAMhB,EAAK,EACjBlG,EAAMA,EAAMmG,EAAK,EACjBlG,EAAMA,EAAMmG,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EACjBe,EAAMA,EAAMd,EAAK,EAClBe,EAAMA,EAAMd,EAAM,EAClBe,EAAMA,EAAMd,EAAM,EAClBe,EAAMA,EAAMd,EAAM,EAClBe,EAAMA,EAAMd,EAAM,EAClBe,EAAMA,EAAMd,EAAM,EAClBe,EAAMA,EAAMd,EAAM,EAElB1S,EAAG,GAAK2S,IAAQ,EAAI,IACpB3S,EAAG,GAAK2S,IAAQ,EAAI,IACpB3S,EAAG,GAAK2S,IAAO,GAAK,IACpB3S,EAAG,GAAK2S,IAAO,GAAK,IAEpB3S,EAAG,GAAKyL,IAAQ,EAAI,IACpBzL,EAAG,GAAKyL,IAAQ,EAAI,IACpBzL,EAAG,GAAKyL,IAAO,GAAK,IACpBzL,EAAG,GAAKyL,IAAO,GAAK,IAEpBzL,EAAG,GAAK0L,IAAQ,EAAI,IACpB1L,EAAG,GAAK0L,IAAQ,EAAI,IACpB1L,EAAE,IAAM0L,IAAO,GAAK,IACpB1L,EAAE,IAAM0L,IAAO,GAAK,IAEpB1L,EAAE,IAAM4S,IAAQ,EAAI,IACpB5S,EAAE,IAAM4S,IAAQ,EAAI,IACpB5S,EAAE,IAAM4S,IAAO,GAAK,IACpB5S,EAAE,IAAM4S,IAAO,GAAK,IAEpB5S,EAAE,IAAM6S,IAAQ,EAAI,IACpB7S,EAAE,IAAM6S,IAAQ,EAAI,IACpB7S,EAAE,IAAM6S,IAAO,GAAK,IACpB7S,EAAE,IAAM6S,IAAO,GAAK,IAEpB7S,EAAE,IAAM8S,IAAQ,EAAI,IACpB9S,EAAE,IAAM8S,IAAQ,EAAI,IACpB9S,EAAE,IAAM8S,IAAO,GAAK,IACpB9S,EAAE,IAAM8S,IAAO,GAAK,IAEpB9S,EAAE,IAAM+S,IAAQ,EAAI,IACpB/S,EAAE,IAAM+S,IAAQ,EAAI,IACpB/S,EAAE,IAAM+S,IAAO,GAAK,IACpB/S,EAAE,IAAM+S,IAAO,GAAK,IAEpB/S,EAAE,IAAMgT,IAAQ,EAAI,IACpBhT,EAAE,IAAMgT,IAAQ,EAAI,IACpBhT,EAAE,IAAMgT,IAAO,GAAK,IACpBhT,EAAE,IAAMgT,IAAO,GAAK,IAEpBhT,EAAE,IAAMiT,IAAQ,EAAI,IACpBjT,EAAE,IAAMiT,IAAQ,EAAI,IACpBjT,EAAE,IAAMiT,IAAO,GAAK,IACpBjT,EAAE,IAAMiT,IAAO,GAAK,IAEpBjT,EAAE,IAAMkT,IAAQ,EAAI,IACpBlT,EAAE,IAAMkT,IAAQ,EAAI,IACpBlT,EAAE,IAAMkT,IAAO,GAAK,IACpBlT,EAAE,IAAMkT,IAAO,GAAK,IAEpBlT,EAAE,IAAMmT,IAAS,EAAI,IACrBnT,EAAE,IAAMmT,IAAS,EAAI,IACrBnT,EAAE,IAAMmT,IAAQ,GAAK,IACrBnT,EAAE,IAAMmT,IAAQ,GAAK,IAErBnT,EAAE,IAAMoT,IAAS,EAAI,IACrBpT,EAAE,IAAMoT,IAAS,EAAI,IACrBpT,EAAE,IAAMoT,IAAQ,GAAK,IACrBpT,EAAE,IAAMoT,IAAQ,GAAK,IAErBpT,EAAE,IAAMqT,IAAS,EAAI,IACrBrT,EAAE,IAAMqT,IAAS,EAAI,IACrBrT,EAAE,IAAMqT,IAAQ,GAAK,IACrBrT,EAAE,IAAMqT,IAAQ,GAAK,IAErBrT,EAAE,IAAMsT,IAAS,EAAI,IACrBtT,EAAE,IAAMsT,IAAS,EAAI,IACrBtT,EAAE,IAAMsT,IAAQ,GAAK,IACrBtT,EAAE,IAAMsT,IAAQ,GAAK,IAErBtT,EAAE,IAAMuT,IAAS,EAAI,IACrBvT,EAAE,IAAMuT,IAAS,EAAI,IACrBvT,EAAE,IAAMuT,IAAQ,GAAK,IACrBvT,EAAE,IAAMuT,IAAQ,GAAK,IAErBvT,EAAE,IAAMwT,IAAS,EAAI,IACrBxT,EAAE,IAAMwT,IAAS,EAAI,IACrBxT,EAAE,IAAMwT,IAAQ,GAAK,IACrBxT,EAAE,IAAMwT,IAAQ,GAAK,GACvB,CA4IEC,CAAalX,EAAImV,EAAIxsB,EAAEwG,EACzB,CAEA,SAASgoB,EAAqBnX,EAAImV,EAAIxsB,EAAEwG,IA7IxC,SAAuBsU,EAAEyG,EAAEvhB,EAAEwG,GAsB3B,IArBA,IAmBe2kB,EAFXsC,EAjBc,IAARjnB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAiBrE+f,EAhBK,IAARvmB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAgB5DwmB,EAfJ,IAARxmB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAenD0tB,EAdb,IAAR1tB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAc1C2tB,EAbtB,IAAR3tB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAajC4tB,EAZ/B,IAARpnB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAYxBqnB,EAXxC,IAARtM,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAWfuM,EAVjD,IAARvM,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAW9EwM,EAVc,IAARxM,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAUrEyM,EATK,IAARzM,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAS5D0M,EARJ,IAARznB,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAQjD0nB,EAPf,IAARluB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAOtCmuB,EAN1B,IAARnuB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAM3BouB,EALrC,IAARpuB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAKhBquB,EAJhD,IAARruB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAK9EsuB,EAJc,IAAR9nB,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAMzExS,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAQ3By5B,IADAtC,GADAgD,IADAhD,GADA4C,IADA5C,GADAwC,IADAxC,EAAIsC,EAAKU,EAAM,IACN,EAAIhD,IAAK,IACTsC,EAAK,IACL,EAAItC,IAAK,IACTwC,EAAK,IACJ,GAAKxC,IAAK,IACV4C,EAAK,IACN,GAAK5C,IAAK,GASnByC,IADAzC,GADA5E,IADA4E,GADAiD,IADAjD,GADA6C,IADA7C,EAAIyC,EAAKrH,EAAK,IACL,EAAI4E,IAAK,IACTyC,EAAK,IACJ,EAAIzC,IAAK,IACT6C,EAAK,IACN,GAAK7C,IAAK,IACViD,EAAM,IACN,GAAKjD,IAAK,GASnB8C,IADA9C,GADA0C,IADA1C,GADA3E,IADA2E,GADAkD,IADAlD,EAAI8C,EAAMJ,EAAK,IACL,EAAI1C,IAAK,IACT8C,EAAM,IACP,EAAI9C,IAAK,IACTkD,EAAM,IACN,GAAKlD,IAAK,IACV3E,EAAK,IACJ,GAAK2E,IAAK,GASpBmD,IADAnD,GADA+C,IADA/C,GADA2C,IADA3C,GADAuC,IADAvC,EAAImD,EAAMJ,EAAM,IACP,EAAI/C,IAAK,IACTmD,EAAM,IACN,EAAInD,IAAK,IACTuC,EAAK,IACJ,GAAKvC,IAAK,IACV2C,EAAK,IACL,GAAK3C,IAAK,GASpBsC,IADAtC,GADAuC,IADAvC,GADA3E,IADA2E,GADA5E,IADA4E,EAAIsC,EAAKC,EAAK,IACL,EAAIvC,IAAK,IACTsC,EAAK,IACL,EAAItC,IAAK,IACT5E,EAAK,IACL,GAAK4E,IAAK,IACV3E,EAAK,IACL,GAAK2E,IAAK,GASnByC,IADAzC,GADAwC,IADAxC,GADA2C,IADA3C,GADA0C,IADA1C,EAAIyC,EAAKD,EAAK,IACL,EAAIxC,IAAK,IACTyC,EAAK,IACL,EAAIzC,IAAK,IACT0C,EAAK,IACL,GAAK1C,IAAK,IACV2C,EAAK,IACL,GAAK3C,IAAK,GASnB8C,IADA9C,GADA6C,IADA7C,GADA4C,IADA5C,GADA+C,IADA/C,EAAI8C,EAAMD,EAAK,IACL,EAAI7C,IAAK,IACT8C,EAAM,IACP,EAAI9C,IAAK,IACT+C,EAAM,IACN,GAAK/C,IAAK,IACV4C,EAAK,IACJ,GAAK5C,IAAK,GASpBmD,IADAnD,GADAkD,IADAlD,GADAiD,IADAjD,GADAgD,IADAhD,EAAImD,EAAMD,EAAM,IACN,EAAIlD,IAAK,IACTmD,EAAM,IACN,EAAInD,IAAK,IACTgD,EAAM,IACN,GAAKhD,IAAK,IACViD,EAAM,IACN,GAAKjD,IAAK,GAGtBrQ,EAAG,GAAK2S,IAAQ,EAAI,IACpB3S,EAAG,GAAK2S,IAAQ,EAAI,IACpB3S,EAAG,GAAK2S,IAAO,GAAK,IACpB3S,EAAG,GAAK2S,IAAO,GAAK,IAEpB3S,EAAG,GAAK8S,IAAQ,EAAI,IACpB9S,EAAG,GAAK8S,IAAQ,EAAI,IACpB9S,EAAG,GAAK8S,IAAO,GAAK,IACpB9S,EAAG,GAAK8S,IAAO,GAAK,IAEpB9S,EAAG,GAAKmT,IAAS,EAAI,IACrBnT,EAAG,GAAKmT,IAAS,EAAI,IACrBnT,EAAE,IAAMmT,IAAQ,GAAK,IACrBnT,EAAE,IAAMmT,IAAQ,GAAK,IAErBnT,EAAE,IAAMwT,IAAS,EAAI,IACrBxT,EAAE,IAAMwT,IAAS,EAAI,IACrBxT,EAAE,IAAMwT,IAAQ,GAAK,IACrBxT,EAAE,IAAMwT,IAAQ,GAAK,IAErBxT,EAAE,IAAM+S,IAAQ,EAAI,IACpB/S,EAAE,IAAM+S,IAAQ,EAAI,IACpB/S,EAAE,IAAM+S,IAAO,GAAK,IACpB/S,EAAE,IAAM+S,IAAO,GAAK,IAEpB/S,EAAE,IAAMgT,IAAQ,EAAI,IACpBhT,EAAE,IAAMgT,IAAQ,EAAI,IACpBhT,EAAE,IAAMgT,IAAO,GAAK,IACpBhT,EAAE,IAAMgT,IAAO,GAAK,IAEpBhT,EAAE,IAAMiT,IAAQ,EAAI,IACpBjT,EAAE,IAAMiT,IAAQ,EAAI,IACpBjT,EAAE,IAAMiT,IAAO,GAAK,IACpBjT,EAAE,IAAMiT,IAAO,GAAK,IAEpBjT,EAAE,IAAMkT,IAAQ,EAAI,IACpBlT,EAAE,IAAMkT,IAAQ,EAAI,IACpBlT,EAAE,IAAMkT,IAAO,GAAK,IACpBlT,EAAE,IAAMkT,IAAO,GAAK,GACtB,CAOES,CAAcpX,EAAImV,EAAIxsB,EAAEwG,EAC1B,CAEA,IAAIkoB,EAAQ,IAAIv5B,WAAW,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,MAGhG,SAASw5B,EAA0BnoB,EAAEooB,EAAK5M,EAAE6M,EAAKvX,EAAEpY,EAAEc,GACnD,IACImrB,EAAGn3B,EADH62B,EAAI,IAAI11B,WAAW,IAAK+qB,EAAI,IAAI/qB,WAAW,IAE/C,IAAKnB,EAAI,EAAGA,EAAI,GAAIA,IAAK62B,EAAE72B,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK62B,EAAE72B,GAAKkL,EAAElL,GACjC,KAAOsjB,GAAK,IAAI,CAEd,IADAiV,EAAoBrM,EAAE2K,EAAE7qB,EAAE0uB,GACrB16B,EAAI,EAAGA,EAAI,GAAIA,IAAKwS,EAAEooB,EAAK56B,GAAKguB,EAAE6M,EAAK76B,GAAKksB,EAAElsB,GAEnD,IADAm3B,EAAI,EACCn3B,EAAI,EAAGA,EAAI,GAAIA,IAClBm3B,EAAIA,GAAY,IAAPN,EAAE72B,IAAa,EACxB62B,EAAE72B,GAAS,IAAJm3B,EACPA,KAAO,EAET7T,GAAK,GACLsX,GAAQ,GACRC,GAAQ,EACV,CACA,GAAIvX,EAAI,EAEN,IADAiV,EAAoBrM,EAAE2K,EAAE7qB,EAAE0uB,GACrB16B,EAAI,EAAGA,EAAIsjB,EAAGtjB,IAAKwS,EAAEooB,EAAK56B,GAAKguB,EAAE6M,EAAK76B,GAAKksB,EAAElsB,GAEpD,OAAO,CACT,CAEA,SAAS86B,EAAsBtoB,EAAEooB,EAAKtX,EAAEpY,EAAEc,GACxC,IACImrB,EAAGn3B,EADH62B,EAAI,IAAI11B,WAAW,IAAK+qB,EAAI,IAAI/qB,WAAW,IAE/C,IAAKnB,EAAI,EAAGA,EAAI,GAAIA,IAAK62B,EAAE72B,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK62B,EAAE72B,GAAKkL,EAAElL,GACjC,KAAOsjB,GAAK,IAAI,CAEd,IADAiV,EAAoBrM,EAAE2K,EAAE7qB,EAAE0uB,GACrB16B,EAAI,EAAGA,EAAI,GAAIA,IAAKwS,EAAEooB,EAAK56B,GAAKksB,EAAElsB,GAEvC,IADAm3B,EAAI,EACCn3B,EAAI,EAAGA,EAAI,GAAIA,IAClBm3B,EAAIA,GAAY,IAAPN,EAAE72B,IAAa,EACxB62B,EAAE72B,GAAS,IAAJm3B,EACPA,KAAO,EAET7T,GAAK,GACLsX,GAAQ,EACV,CACA,GAAItX,EAAI,EAEN,IADAiV,EAAoBrM,EAAE2K,EAAE7qB,EAAE0uB,GACrB16B,EAAI,EAAGA,EAAIsjB,EAAGtjB,IAAKwS,EAAEooB,EAAK56B,GAAKksB,EAAElsB,GAExC,OAAO,CACT,CAEA,SAAS+6B,EAAcvoB,EAAEooB,EAAK14B,EAAEgJ,EAAEc,GAChC,IAAImD,EAAI,IAAIhO,WAAW,IACvBq5B,EAAqBrrB,EAAEjE,EAAEc,EAAE0uB,GAE3B,IADA,IAAIM,EAAK,IAAI75B,WAAW,GACfnB,EAAI,EAAGA,EAAI,EAAGA,IAAKg7B,EAAGh7B,GAAKkL,EAAElL,EAAE,IACxC,OAAO86B,EAAsBtoB,EAAEooB,EAAK14B,EAAE84B,EAAG7rB,EAC3C,CAEA,SAAS8rB,EAAkBzoB,EAAEooB,EAAK5M,EAAE6M,EAAK34B,EAAEgJ,EAAEc,GAC3C,IAAImD,EAAI,IAAIhO,WAAW,IACvBq5B,EAAqBrrB,EAAEjE,EAAEc,EAAE0uB,GAE3B,IADA,IAAIM,EAAK,IAAI75B,WAAW,GACfnB,EAAI,EAAGA,EAAI,EAAGA,IAAKg7B,EAAGh7B,GAAKkL,EAAElL,EAAE,IACxC,OAAO26B,EAA0BnoB,EAAEooB,EAAK5M,EAAE6M,EAAK34B,EAAE84B,EAAG7rB,EACtD,CAOA,IAAI+rB,EAAW,SAASttB,GAQtB,IAAIutB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAPhCj3B,KAAK+G,OAAS,IAAIrK,WAAW,IAC7BsD,KAAKyK,EAAI,IAAIysB,YAAY,IACzBl3B,KAAKmrB,EAAI,IAAI+L,YAAY,IACzBl3B,KAAKjB,IAAM,IAAIm4B,YAAY,GAC3Bl3B,KAAKm3B,SAAW,EAChBn3B,KAAKo3B,IAAM,EAIXV,EAAe,IAAVvtB,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAGnJ,KAAKyK,EAAE,GAAkC,KAA3BisB,EAC3DC,EAAe,IAAVxtB,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BisB,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAVztB,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BksB,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAV1tB,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BmsB,IAAQ,EAAMC,GAAO,GAChFC,EAAe,IAAV3tB,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAGnJ,KAAKyK,EAAE,GAAkC,KAA3BosB,IAAQ,EAAMC,GAAM,IAC/E92B,KAAKyK,EAAE,GAAOqsB,IAAQ,EAAM,KAC5BC,EAAe,IAAV5tB,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BqsB,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAV7tB,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BssB,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAV9tB,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAGnJ,KAAKyK,EAAE,GAAkC,MAA3BusB,IAAQ,EAAMC,GAAO,GAChFj3B,KAAKyK,EAAE,GAAOwsB,IAAQ,EAAM,IAE5Bj3B,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnDnJ,KAAKjB,IAAI,GAAe,IAAVoK,EAAI,KAAwB,IAAVA,EAAI,MAAe,CACrD,EAmUA,SAASkuB,EAAmBzY,EAAK0Y,EAAQ/N,EAAG6M,EAAM3vB,EAAGc,GACnD,IAAImD,EAAI,IAAI+rB,EAASlvB,GAGrB,OAFAmD,EAAE6sB,OAAOhO,EAAG6M,EAAM3vB,GAClBiE,EAAE8sB,OAAO5Y,EAAK0Y,GACP,CACT,CAEA,SAASG,EAA0BtM,EAAGuM,EAAMnO,EAAG6M,EAAM3vB,EAAGc,GACtD,IAAIkgB,EAAI,IAAI/qB,WAAW,IAEvB,OADA26B,EAAmB5P,EAAE,EAAE8B,EAAE6M,EAAK3vB,EAAEc,GACzBqsB,EAAiBzI,EAAEuM,EAAKjQ,EAAE,EACnC,CAEA,SAASkQ,EAAiB5pB,EAAEwb,EAAE9rB,EAAEgJ,EAAEc,GAChC,IAAIhM,EACJ,GAAIkC,EAAI,GAAI,OAAQ,EAGpB,IAFA+4B,EAAkBzoB,EAAE,EAAEwb,EAAE,EAAE9rB,EAAEgJ,EAAEc,GAC9B8vB,EAAmBtpB,EAAG,GAAIA,EAAG,GAAItQ,EAAI,GAAIsQ,GACpCxS,EAAI,EAAGA,EAAI,GAAIA,IAAKwS,EAAExS,GAAK,EAChC,OAAO,CACT,CAEA,SAASq8B,EAAsBrO,EAAExb,EAAEtQ,EAAEgJ,EAAEc,GACrC,IAAIhM,EACAksB,EAAI,IAAI/qB,WAAW,IACvB,GAAIe,EAAI,GAAI,OAAQ,EAEpB,GADA64B,EAAc7O,EAAE,EAAE,GAAGhhB,EAAEc,GACiC,IAApDkwB,EAA0B1pB,EAAG,GAAGA,EAAG,GAAGtQ,EAAI,GAAGgqB,GAAU,OAAQ,EAEnE,IADA+O,EAAkBjN,EAAE,EAAExb,EAAE,EAAEtQ,EAAEgJ,EAAEc,GACzBhM,EAAI,EAAGA,EAAI,GAAIA,IAAKguB,EAAEhuB,GAAK,EAChC,OAAO,CACT,CAEA,SAASs8B,EAASptB,EAAG7L,GACnB,IAAIrD,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKkP,EAAElP,GAAU,EAALqD,EAAErD,EACpC,CAEA,SAASu8B,EAASzV,GAChB,IAAI9mB,EAAGc,EAAG0R,EAAI,EACd,IAAKxS,EAAI,EAAGA,EAAI,GAAIA,IAClBc,EAAIgmB,EAAE9mB,GAAKwS,EAAI,MACfA,EAAIkP,KAAK8a,MAAM17B,EAAI,OACnBgmB,EAAE9mB,GAAKc,EAAQ,MAAJ0R,EAEbsU,EAAE,IAAMtU,EAAE,EAAI,IAAMA,EAAE,EACxB,CAEA,SAASiqB,EAASlP,EAAGjJ,EAAGhB,GAEtB,IADA,IAAI7O,EAAGjC,IAAM8Q,EAAE,GACNtjB,EAAI,EAAGA,EAAI,GAAIA,IACtByU,EAAIjC,GAAK+a,EAAEvtB,GAAKskB,EAAEtkB,IAClButB,EAAEvtB,IAAMyU,EACR6P,EAAEtkB,IAAMyU,CAEZ,CAEA,SAASioB,EAAU5V,EAAG5b,GACpB,IAAIlL,EAAGkD,EAAGogB,EACN0K,EAAIoJ,IAAM3iB,EAAI2iB,IAClB,IAAKp3B,EAAI,EAAGA,EAAI,GAAIA,IAAKyU,EAAEzU,GAAKkL,EAAElL,GAIlC,IAHAu8B,EAAS9nB,GACT8nB,EAAS9nB,GACT8nB,EAAS9nB,GACJvR,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtB,IADA8qB,EAAE,GAAKvZ,EAAE,GAAK,MACTzU,EAAI,EAAGA,EAAI,GAAIA,IAClBguB,EAAEhuB,GAAKyU,EAAEzU,GAAK,OAAWguB,EAAEhuB,EAAE,IAAI,GAAM,GACvCguB,EAAEhuB,EAAE,IAAM,MAEZguB,EAAE,IAAMvZ,EAAE,IAAM,OAAWuZ,EAAE,KAAK,GAAM,GACxC1K,EAAK0K,EAAE,KAAK,GAAM,EAClBA,EAAE,KAAO,MACTyO,EAAShoB,EAAGuZ,EAAG,EAAE1K,EACnB,CACA,IAAKtjB,EAAI,EAAGA,EAAI,GAAIA,IAClB8mB,EAAE,EAAE9mB,GAAY,IAAPyU,EAAEzU,GACX8mB,EAAE,EAAE9mB,EAAE,GAAKyU,EAAEzU,IAAI,CAErB,CAEA,SAAS28B,EAASt5B,EAAGigB,GACnB,IAAI9Q,EAAI,IAAIrR,WAAW,IAAKe,EAAI,IAAIf,WAAW,IAG/C,OAFAu7B,EAAUlqB,EAAGnP,GACbq5B,EAAUx6B,EAAGohB,GACNgV,EAAiB9lB,EAAG,EAAGtQ,EAAG,EACnC,CAEA,SAAS06B,EAASv5B,GAChB,IAAInB,EAAI,IAAIf,WAAW,IAEvB,OADAu7B,EAAUx6B,EAAGmB,GACC,EAAPnB,EAAE,EACX,CAEA,SAAS26B,EAAY/V,EAAG5b,GACtB,IAAIlL,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK8mB,EAAE9mB,GAAKkL,EAAE,EAAElL,IAAMkL,EAAE,EAAElL,EAAE,IAAM,GACtD8mB,EAAE,KAAO,KACX,CAEA,SAAS6K,EAAE7K,EAAGzjB,EAAGigB,GACf,IAAK,IAAItjB,EAAI,EAAGA,EAAI,GAAIA,IAAK8mB,EAAE9mB,GAAKqD,EAAErD,GAAKsjB,EAAEtjB,EAC/C,CAEA,SAAS88B,EAAEhW,EAAGzjB,EAAGigB,GACf,IAAK,IAAItjB,EAAI,EAAGA,EAAI,GAAIA,IAAK8mB,EAAE9mB,GAAKqD,EAAErD,GAAKsjB,EAAEtjB,EAC/C,CAEA,SAAS+8B,EAAEjW,EAAGzjB,EAAGigB,GACf,IAAIxiB,EAAG0R,EACJ2oB,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EACpEsB,EAAK,EAAIC,EAAK,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAC5DzV,EAAKvF,EAAE,GACP0F,EAAK1F,EAAE,GACP6F,EAAK7F,EAAE,GACPgG,EAAKhG,EAAE,GACPmG,EAAKnG,EAAE,GACPsG,EAAKtG,EAAE,GACPyG,EAAKzG,EAAE,GACP4G,EAAK5G,EAAE,GACP+G,EAAK/G,EAAE,GACPkH,EAAKlH,EAAE,GACPib,EAAMjb,EAAE,IACRkb,EAAMlb,EAAE,IACRmb,EAAMnb,EAAE,IACRob,EAAMpb,EAAE,IACRqb,EAAMrb,EAAE,IACRsb,EAAMtb,EAAE,IAGV6X,IADAr6B,EAAIuC,EAAE,IACIwlB,EACVuS,GAAMt6B,EAAIkoB,EACVqS,GAAMv6B,EAAIqoB,EACVmS,GAAMx6B,EAAIwoB,EACViS,GAAMz6B,EAAI2oB,EACV+R,GAAM16B,EAAI8oB,EACV6R,GAAM36B,EAAIipB,EACV2R,GAAM56B,EAAIopB,EACV8S,GAAMl8B,EAAIupB,EACV4S,GAAMn8B,EAAI0pB,EACV0S,GAAOp8B,EAAIy9B,EACXpB,GAAOr8B,EAAI09B,EACXpB,GAAOt8B,EAAI29B,EACXpB,GAAOv8B,EAAI49B,EACXpB,GAAOx8B,EAAI69B,EACXpB,GAAOz8B,EAAI89B,EAEXxD,IADAt6B,EAAIuC,EAAE,IACIwlB,EACVwS,GAAMv6B,EAAIkoB,EACVsS,GAAMx6B,EAAIqoB,EACVoS,GAAMz6B,EAAIwoB,EACVkS,GAAM16B,EAAI2oB,EACVgS,GAAM36B,EAAI8oB,EACV8R,GAAM56B,EAAIipB,EACViT,GAAMl8B,EAAIopB,EACV+S,GAAMn8B,EAAIupB,EACV6S,GAAOp8B,EAAI0pB,EACX2S,GAAOr8B,EAAIy9B,EACXnB,GAAOt8B,EAAI09B,EACXnB,GAAOv8B,EAAI29B,EACXnB,GAAOx8B,EAAI49B,EACXnB,GAAOz8B,EAAI69B,EACXnB,GAAO18B,EAAI89B,EAEXvD,IADAv6B,EAAIuC,EAAE,IACIwlB,EACVyS,GAAMx6B,EAAIkoB,EACVuS,GAAMz6B,EAAIqoB,EACVqS,GAAM16B,EAAIwoB,EACVmS,GAAM36B,EAAI2oB,EACViS,GAAM56B,EAAI8oB,EACVoT,GAAMl8B,EAAIipB,EACVkT,GAAMn8B,EAAIopB,EACVgT,GAAOp8B,EAAIupB,EACX8S,GAAOr8B,EAAI0pB,EACX4S,GAAOt8B,EAAIy9B,EACXlB,GAAOv8B,EAAI09B,EACXlB,GAAOx8B,EAAI29B,EACXlB,GAAOz8B,EAAI49B,EACXlB,GAAO18B,EAAI69B,EACXlB,GAAO38B,EAAI89B,EAEXtD,IADAx6B,EAAIuC,EAAE,IACIwlB,EACV0S,GAAMz6B,EAAIkoB,EACVwS,GAAM16B,EAAIqoB,EACVsS,GAAM36B,EAAIwoB,EACVoS,GAAM56B,EAAI2oB,EACVuT,GAAMl8B,EAAI8oB,EACVqT,GAAMn8B,EAAIipB,EACVmT,GAAOp8B,EAAIopB,EACXiT,GAAOr8B,EAAIupB,EACX+S,GAAOt8B,EAAI0pB,EACX6S,GAAOv8B,EAAIy9B,EACXjB,GAAOx8B,EAAI09B,EACXjB,GAAOz8B,EAAI29B,EACXjB,GAAO18B,EAAI49B,EACXjB,GAAO38B,EAAI69B,EACXjB,GAAO58B,EAAI89B,EAEXrD,IADAz6B,EAAIuC,EAAE,IACIwlB,EACV2S,GAAM16B,EAAIkoB,EACVyS,GAAM36B,EAAIqoB,EACVuS,GAAM56B,EAAIwoB,EACV0T,GAAMl8B,EAAI2oB,EACVwT,GAAMn8B,EAAI8oB,EACVsT,GAAOp8B,EAAIipB,EACXoT,GAAOr8B,EAAIopB,EACXkT,GAAOt8B,EAAIupB,EACXgT,GAAOv8B,EAAI0pB,EACX8S,GAAOx8B,EAAIy9B,EACXhB,GAAOz8B,EAAI09B,EACXhB,GAAO18B,EAAI29B,EACXhB,GAAO38B,EAAI49B,EACXhB,GAAO58B,EAAI69B,EACXhB,GAAO78B,EAAI89B,EAEXpD,IADA16B,EAAIuC,EAAE,IACIwlB,EACV4S,GAAM36B,EAAIkoB,EACV0S,GAAM56B,EAAIqoB,EACV6T,GAAMl8B,EAAIwoB,EACV2T,GAAMn8B,EAAI2oB,EACVyT,GAAOp8B,EAAI8oB,EACXuT,GAAOr8B,EAAIipB,EACXqT,GAAOt8B,EAAIopB,EACXmT,GAAOv8B,EAAIupB,EACXiT,GAAOx8B,EAAI0pB,EACX+S,GAAOz8B,EAAIy9B,EACXf,GAAO18B,EAAI09B,EACXf,GAAO38B,EAAI29B,EACXf,GAAO58B,EAAI49B,EACXf,GAAO78B,EAAI69B,EACXf,GAAO98B,EAAI89B,EAEXnD,IADA36B,EAAIuC,EAAE,IACIwlB,EACV6S,GAAM56B,EAAIkoB,EACVgU,GAAMl8B,EAAIqoB,EACV8T,GAAMn8B,EAAIwoB,EACV4T,GAAOp8B,EAAI2oB,EACX0T,GAAOr8B,EAAI8oB,EACXwT,GAAOt8B,EAAIipB,EACXsT,GAAOv8B,EAAIopB,EACXoT,GAAOx8B,EAAIupB,EACXkT,GAAOz8B,EAAI0pB,EACXgT,GAAO18B,EAAIy9B,EACXd,GAAO38B,EAAI09B,EACXd,GAAO58B,EAAI29B,EACXd,GAAO78B,EAAI49B,EACXd,GAAO98B,EAAI69B,EACXd,GAAO/8B,EAAI89B,EAEXlD,IADA56B,EAAIuC,EAAE,IACIwlB,EACVmU,GAAMl8B,EAAIkoB,EACViU,GAAMn8B,EAAIqoB,EACV+T,GAAOp8B,EAAIwoB,EACX6T,GAAOr8B,EAAI2oB,EACX2T,GAAOt8B,EAAI8oB,EACXyT,GAAOv8B,EAAIipB,EACXuT,GAAOx8B,EAAIopB,EACXqT,GAAOz8B,EAAIupB,EACXmT,GAAO18B,EAAI0pB,EACXiT,GAAO38B,EAAIy9B,EACXb,GAAO58B,EAAI09B,EACXb,GAAO78B,EAAI29B,EACXb,GAAO98B,EAAI49B,EACXb,GAAO/8B,EAAI69B,EACXb,GAAOh9B,EAAI89B,EAEX5B,IADAl8B,EAAIuC,EAAE,IACIwlB,EACVoU,GAAMn8B,EAAIkoB,EACVkU,GAAOp8B,EAAIqoB,EACXgU,GAAOr8B,EAAIwoB,EACX8T,GAAOt8B,EAAI2oB,EACX4T,GAAOv8B,EAAI8oB,EACX0T,GAAOx8B,EAAIipB,EACXwT,GAAOz8B,EAAIopB,EACXsT,GAAO18B,EAAIupB,EACXoT,GAAO38B,EAAI0pB,EACXkT,GAAO58B,EAAIy9B,EACXZ,GAAO78B,EAAI09B,EACXZ,GAAO98B,EAAI29B,EACXZ,GAAO/8B,EAAI49B,EACXZ,GAAOh9B,EAAI69B,EACXZ,GAAOj9B,EAAI89B,EAEX3B,IADAn8B,EAAIuC,EAAE,IACIwlB,EACVqU,GAAOp8B,EAAIkoB,EACXmU,GAAOr8B,EAAIqoB,EACXiU,GAAOt8B,EAAIwoB,EACX+T,GAAOv8B,EAAI2oB,EACX6T,GAAOx8B,EAAI8oB,EACX2T,GAAOz8B,EAAIipB,EACXyT,GAAO18B,EAAIopB,EACXuT,GAAO38B,EAAIupB,EACXqT,GAAO58B,EAAI0pB,EACXmT,GAAO78B,EAAIy9B,EACXX,GAAO98B,EAAI09B,EACXX,GAAO/8B,EAAI29B,EACXX,GAAOh9B,EAAI49B,EACXX,GAAOj9B,EAAI69B,EACXX,GAAOl9B,EAAI89B,EAEX1B,IADAp8B,EAAIuC,EAAE,KACKwlB,EACXsU,GAAOr8B,EAAIkoB,EACXoU,GAAOt8B,EAAIqoB,EACXkU,GAAOv8B,EAAIwoB,EACXgU,GAAOx8B,EAAI2oB,EACX8T,GAAOz8B,EAAI8oB,EACX4T,GAAO18B,EAAIipB,EACX0T,GAAO38B,EAAIopB,EACXwT,GAAO58B,EAAIupB,EACXsT,GAAO78B,EAAI0pB,EACXoT,GAAO98B,EAAIy9B,EACXV,GAAO/8B,EAAI09B,EACXV,GAAOh9B,EAAI29B,EACXV,GAAOj9B,EAAI49B,EACXV,GAAOl9B,EAAI69B,EACXV,GAAOn9B,EAAI89B,EAEXzB,IADAr8B,EAAIuC,EAAE,KACKwlB,EACXuU,GAAOt8B,EAAIkoB,EACXqU,GAAOv8B,EAAIqoB,EACXmU,GAAOx8B,EAAIwoB,EACXiU,GAAOz8B,EAAI2oB,EACX+T,GAAO18B,EAAI8oB,EACX6T,GAAO38B,EAAIipB,EACX2T,GAAO58B,EAAIopB,EACXyT,GAAO78B,EAAIupB,EACXuT,GAAO98B,EAAI0pB,EACXqT,GAAO/8B,EAAIy9B,EACXT,GAAOh9B,EAAI09B,EACXT,GAAOj9B,EAAI29B,EACXT,GAAOl9B,EAAI49B,EACXT,GAAOn9B,EAAI69B,EACXT,GAAOp9B,EAAI89B,EAEXxB,IADAt8B,EAAIuC,EAAE,KACKwlB,EACXwU,GAAOv8B,EAAIkoB,EACXsU,GAAOx8B,EAAIqoB,EACXoU,GAAOz8B,EAAIwoB,EACXkU,GAAO18B,EAAI2oB,EACXgU,GAAO38B,EAAI8oB,EACX8T,GAAO58B,EAAIipB,EACX4T,GAAO78B,EAAIopB,EACX0T,GAAO98B,EAAIupB,EACXwT,GAAO/8B,EAAI0pB,EACXsT,GAAOh9B,EAAIy9B,EACXR,GAAOj9B,EAAI09B,EACXR,GAAOl9B,EAAI29B,EACXR,GAAOn9B,EAAI49B,EACXR,GAAOp9B,EAAI69B,EACXR,GAAOr9B,EAAI89B,EAEXvB,IADAv8B,EAAIuC,EAAE,KACKwlB,EACXyU,GAAOx8B,EAAIkoB,EACXuU,GAAOz8B,EAAIqoB,EACXqU,GAAO18B,EAAIwoB,EACXmU,GAAO38B,EAAI2oB,EACXiU,GAAO58B,EAAI8oB,EACX+T,GAAO78B,EAAIipB,EACX6T,GAAO98B,EAAIopB,EACX2T,GAAO/8B,EAAIupB,EACXyT,GAAOh9B,EAAI0pB,EACXuT,GAAOj9B,EAAIy9B,EACXP,GAAOl9B,EAAI09B,EACXP,GAAOn9B,EAAI29B,EACXP,GAAOp9B,EAAI49B,EACXP,GAAOr9B,EAAI69B,EACXP,GAAOt9B,EAAI89B,EAEXtB,IADAx8B,EAAIuC,EAAE,KACKwlB,EACX0U,GAAOz8B,EAAIkoB,EACXwU,GAAO18B,EAAIqoB,EACXsU,GAAO38B,EAAIwoB,EACXoU,GAAO58B,EAAI2oB,EACXkU,GAAO78B,EAAI8oB,EACXgU,GAAO98B,EAAIipB,EACX8T,GAAO/8B,EAAIopB,EACX4T,GAAOh9B,EAAIupB,EACX0T,GAAOj9B,EAAI0pB,EACXwT,GAAOl9B,EAAIy9B,EACXN,GAAOn9B,EAAI09B,EACXN,GAAOp9B,EAAI29B,EACXN,GAAOr9B,EAAI49B,EACXN,GAAOt9B,EAAI69B,EACXN,GAAOv9B,EAAI89B,EAEXrB,IADAz8B,EAAIuC,EAAE,KACKwlB,EAkBXuS,GAAO,IAhBPqC,GAAO38B,EAAIqoB,GAiBXkS,GAAO,IAhBPqC,GAAO58B,EAAIwoB,GAiBXgS,GAAO,IAhBPqC,GAAO78B,EAAI2oB,GAiBX8R,GAAO,IAhBPqC,GAAO98B,EAAI8oB,GAiBX4R,GAAO,IAhBPqC,GAAO/8B,EAAIipB,GAiBX0R,GAAO,IAhBPqC,GAAOh9B,EAAIopB,GAiBXwR,GAAO,IAhBPqC,GAAOj9B,EAAIupB,GAiBX2S,GAAO,IAhBPgB,GAAOl9B,EAAI0pB,GAiBXyS,GAAO,IAhBPgB,GAAOn9B,EAAIy9B,GAiBXrB,GAAO,IAhBPgB,GAAOp9B,EAAI09B,GAiBXrB,GAAO,IAhBPgB,GAAOr9B,EAAI29B,GAiBXrB,GAAO,IAhBPgB,GAAOt9B,EAAI49B,GAiBXrB,GAAO,IAhBPgB,GAAOv9B,EAAI69B,GAiBXrB,GAAO,IAhBPgB,GAAOx9B,EAAI89B,GAqBsCzD,GAAjDr6B,GAnBAq6B,GAAO,IAhBPqC,GAAO18B,EAAIkoB,KAkCXxW,EAAI,GACU,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSs6B,GAAjDt6B,EAAKs6B,EAAK5oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSu6B,GAAjDv6B,EAAKu6B,EAAK7oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSw6B,GAAjDx6B,EAAKw6B,EAAK9oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSy6B,GAAjDz6B,EAAKy6B,EAAK/oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS06B,GAAjD16B,EAAK06B,EAAKhpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS26B,GAAjD36B,EAAK26B,EAAKjpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS46B,GAAjD56B,EAAK46B,EAAKlpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSk8B,GAAjDl8B,EAAKk8B,EAAKxqB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSm8B,GAAjDn8B,EAAKm8B,EAAKzqB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQo8B,GAAhDp8B,EAAIo8B,EAAM1qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQq8B,GAAhDr8B,EAAIq8B,EAAM3qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQs8B,GAAhDt8B,EAAIs8B,EAAM5qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQu8B,GAAhDv8B,EAAIu8B,EAAM7qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQw8B,GAAhDx8B,EAAIw8B,EAAM9qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQy8B,GAAhDz8B,EAAIy8B,EAAM/qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QAKSq6B,GAAjDr6B,GAJAq6B,GAAM3oB,EAAE,EAAI,IAAMA,EAAE,KAGpBA,EAAI,GACU,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSs6B,GAAjDt6B,EAAKs6B,EAAK5oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSu6B,GAAjDv6B,EAAKu6B,EAAK7oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSw6B,GAAjDx6B,EAAKw6B,EAAK9oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSy6B,GAAjDz6B,EAAKy6B,EAAK/oB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS06B,GAAjD16B,EAAK06B,EAAKhpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS26B,GAAjD36B,EAAK26B,EAAKjpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACS46B,GAAjD56B,EAAK46B,EAAKlpB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSk8B,GAAjDl8B,EAAKk8B,EAAKxqB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACSm8B,GAAjDn8B,EAAKm8B,EAAKzqB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQo8B,GAAhDp8B,EAAIo8B,EAAM1qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQq8B,GAAhDr8B,EAAIq8B,EAAM3qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQs8B,GAAhDt8B,EAAIs8B,EAAM5qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQu8B,GAAhDv8B,EAAIu8B,EAAM7qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQw8B,GAAhDx8B,EAAIw8B,EAAM9qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACQy8B,GAAhDz8B,EAAIy8B,EAAM/qB,EAAI,OAAgD,OAAzCA,EAAIkP,KAAK8a,MAAM17B,EAAI,QACxCq6B,GAAM3oB,EAAE,EAAI,IAAMA,EAAE,GAEpBsU,EAAG,GAAKqU,EACRrU,EAAG,GAAKsU,EACRtU,EAAG,GAAKuU,EACRvU,EAAG,GAAKwU,EACRxU,EAAG,GAAKyU,EACRzU,EAAG,GAAK0U,EACR1U,EAAG,GAAK2U,EACR3U,EAAG,GAAK4U,EACR5U,EAAG,GAAKkW,EACRlW,EAAG,GAAKmW,EACRnW,EAAE,IAAMoW,EACRpW,EAAE,IAAMqW,EACRrW,EAAE,IAAMsW,EACRtW,EAAE,IAAMuW,EACRvW,EAAE,IAAMwW,EACRxW,EAAE,IAAMyW,CACV,CAEA,SAASxqB,EAAE+T,EAAGzjB,GACZ05B,EAAEjW,EAAGzjB,EAAGA,EACV,CAEA,SAASw7B,EAAS/X,EAAG9mB,GACnB,IACIqD,EADAmP,EAAI4kB,IAER,IAAK/zB,EAAI,EAAGA,EAAI,GAAIA,IAAKmP,EAAEnP,GAAKrD,EAAEqD,GAClC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IACpB0P,EAAEP,EAAGA,GACI,IAANnP,GAAiB,IAANA,GAAS05B,EAAEvqB,EAAGA,EAAGxS,GAEjC,IAAKqD,EAAI,EAAGA,EAAI,GAAIA,IAAKyjB,EAAEzjB,GAAKmP,EAAEnP,EACpC,CAEA,SAASy7B,EAAQhY,EAAG9mB,GAClB,IACIqD,EADAmP,EAAI4kB,IAER,IAAK/zB,EAAI,EAAGA,EAAI,GAAIA,IAAKmP,EAAEnP,GAAKrD,EAAEqD,GAClC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IAClB0P,EAAEP,EAAGA,GACI,IAANnP,GAAS05B,EAAEvqB,EAAGA,EAAGxS,GAExB,IAAKqD,EAAI,EAAGA,EAAI,GAAIA,IAAKyjB,EAAEzjB,GAAKmP,EAAEnP,EACpC,CAEA,SAAS07B,EAAkBza,EAAGpZ,EAAGqiB,GAC/B,IAC8Bre,EAAGlP,EAD7B62B,EAAI,IAAI11B,WAAW,IACnB+qB,EAAI,IAAIoL,aAAa,IACrBj0B,EAAI+zB,IAAM9T,EAAI8T,IAAM5kB,EAAI4kB,IACxBl1B,EAAIk1B,IAAM1xB,EAAI0xB,IAAM4H,EAAI5H,IAC5B,IAAKp3B,EAAI,EAAGA,EAAI,GAAIA,IAAK62B,EAAE72B,GAAKkL,EAAElL,GAIlC,IAHA62B,EAAE,IAAW,IAAN3rB,EAAE,IAAS,GAClB2rB,EAAE,IAAI,IACNgG,EAAY3Q,EAAEqB,GACTvtB,EAAI,EAAGA,EAAI,GAAIA,IAClBsjB,EAAEtjB,GAAGksB,EAAElsB,GACPkC,EAAElC,GAAGqD,EAAErD,GAAGwS,EAAExS,GAAG,EAGjB,IADAqD,EAAE,GAAGnB,EAAE,GAAG,EACLlC,EAAE,IAAKA,GAAG,IAAKA,EAElBy8B,EAASp5B,EAAEigB,EADXpU,EAAG2nB,EAAE72B,IAAI,MAAQ,EAAFA,GAAM,GAErBy8B,EAASjqB,EAAEtQ,EAAEgN,GACbyiB,EAAEjsB,EAAErC,EAAEmP,GACNsqB,EAAEz5B,EAAEA,EAAEmP,GACNmf,EAAEnf,EAAE8Q,EAAEphB,GACN46B,EAAExZ,EAAEA,EAAEphB,GACN6Q,EAAE7Q,EAAEwD,GACJqN,EAAEisB,EAAE37B,GACJ05B,EAAE15B,EAAEmP,EAAEnP,GACN05B,EAAEvqB,EAAE8Q,EAAE5d,GACNisB,EAAEjsB,EAAErC,EAAEmP,GACNsqB,EAAEz5B,EAAEA,EAAEmP,GACNO,EAAEuQ,EAAEjgB,GACJy5B,EAAEtqB,EAAEtQ,EAAE88B,GACNjC,EAAE15B,EAAEmP,EAAEolB,GACNjG,EAAEtuB,EAAEA,EAAEnB,GACN66B,EAAEvqB,EAAEA,EAAEnP,GACN05B,EAAE15B,EAAEnB,EAAE88B,GACNjC,EAAE76B,EAAEohB,EAAE4I,GACNnZ,EAAEuQ,EAAE5d,GACJ+2B,EAASp5B,EAAEigB,EAAEpU,GACbutB,EAASjqB,EAAEtQ,EAAEgN,GAEf,IAAKlP,EAAI,EAAGA,EAAI,GAAIA,IAClBksB,EAAElsB,EAAE,IAAIqD,EAAErD,GACVksB,EAAElsB,EAAE,IAAIwS,EAAExS,GACVksB,EAAElsB,EAAE,IAAIsjB,EAAEtjB,GACVksB,EAAElsB,EAAE,IAAIkC,EAAElC,GAEZ,IAAIi/B,EAAM/S,EAAEgT,SAAS,IACjBC,EAAMjT,EAAEgT,SAAS,IAIrB,OAHAL,EAASI,EAAIA,GACblC,EAAEoC,EAAIA,EAAIF,GACVvC,EAAUpY,EAAE6a,GACL,CACT,CAEA,SAASC,EAAuB9a,EAAGpZ,GACjC,OAAO6zB,EAAkBza,EAAGpZ,EAAGusB,EACjC,CAEA,SAAS4H,EAAmBlT,EAAGD,GAE7B,OADAqL,EAAYrL,EAAG,IACRkT,EAAuBjT,EAAGD,EACnC,CAEA,SAASoT,EAAoBtzB,EAAGmgB,EAAGD,GACjC,IAAI/c,EAAI,IAAIhO,WAAW,IAEvB,OADA49B,EAAkB5vB,EAAG+c,EAAGC,GACjBqO,EAAqBxuB,EAAGwrB,EAAIroB,EAAGurB,EACxC,CA53BAQ,EAASrpB,UAAU0tB,OAAS,SAASvR,EAAG6M,EAAMvwB,GA2B5C,IA1BA,IACI6wB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIlpB,EAChCgtB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAFpCC,EAAQz7B,KAAKo3B,IAAM,EAAK,KAIxBsE,EAAK17B,KAAKmrB,EAAE,GACZwQ,EAAK37B,KAAKmrB,EAAE,GACZyQ,EAAK57B,KAAKmrB,EAAE,GACZ0Q,EAAK77B,KAAKmrB,EAAE,GACZ2Q,EAAK97B,KAAKmrB,EAAE,GACZ4Q,EAAK/7B,KAAKmrB,EAAE,GACZ6Q,EAAKh8B,KAAKmrB,EAAE,GACZ8Q,EAAKj8B,KAAKmrB,EAAE,GACZ+Q,EAAKl8B,KAAKmrB,EAAE,GACZgR,EAAKn8B,KAAKmrB,EAAE,GAEZiR,EAAKp8B,KAAKyK,EAAE,GACZ4xB,EAAKr8B,KAAKyK,EAAE,GACZsiB,EAAK/sB,KAAKyK,EAAE,GACZ6xB,EAAKt8B,KAAKyK,EAAE,GACZ8xB,EAAKv8B,KAAKyK,EAAE,GACZ+xB,EAAKx8B,KAAKyK,EAAE,GACZgyB,EAAKz8B,KAAKyK,EAAE,GACZiyB,EAAK18B,KAAKyK,EAAE,GACZkyB,EAAK38B,KAAKyK,EAAE,GACZmyB,EAAK58B,KAAKyK,EAAE,GAET5E,GAAS,IAcdk1B,EAFAhtB,EAAI,EAGJgtB,IAdmDW,GAAmC,MAAtFhF,EAAkB,IAAbnN,EAAE6M,EAAM,IAA0B,IAAb7M,EAAE6M,EAAM,KAAc,IAcrCgG,EACXrB,IAdmDY,GAAmC,MAA3BjF,IAAO,IAAlEC,EAAkB,IAAbpN,EAAE6M,EAAM,IAA0B,IAAb7M,EAAE6M,EAAM,KAAc,IAAgC,KAcpE,EAAIwG,GAChB7B,IAdmDa,GAAmC,MAA3BjF,IAAO,IAAlEC,EAAkB,IAAbrN,EAAE6M,EAAM,IAA0B,IAAb7M,EAAE6M,EAAM,KAAc,IAAgC,KAcpE,EAAIuG,GAChB5B,IAdmDc,GAAmC,MAA3BjF,IAAQ,GAAnEC,EAAkB,IAAbtN,EAAE6M,EAAM,IAA0B,IAAb7M,EAAE6M,EAAM,KAAc,IAAgC,KAcpE,EAAIsG,GAEhB3uB,GADAgtB,IAdmDe,GAAmC,MAA3BjF,IAAQ,GAAnEC,EAAkB,IAAbvN,EAAE6M,EAAM,IAA0B,IAAb7M,EAAE6M,EAAM,KAAc,IAA+B,MAcnE,EAAIqG,MACJ,GAAK1B,GAAM,KACvBA,IAfAgB,GAAQjF,IAAQ,EAAM,OAeV,EAAI0F,GAChBzB,IAfmDiB,GAAmC,MAA3BlF,IAAO,IAAlEC,EAAkB,IAAbxN,EAAE6M,EAAK,KAA2B,IAAb7M,EAAE6M,EAAK,MAAe,IAAgC,KAepE,EAAImG,GAChBxB,IAfmDkB,GAAmC,MAA3BlF,IAAO,IAAlEC,EAAkB,IAAbzN,EAAE6M,EAAK,KAA2B,IAAb7M,EAAE6M,EAAK,MAAe,IAAgC,KAepE,EAAIkG,GAChBvB,IAfmDmB,GAAmC,MAA3BlF,IAAQ,GAAnEC,EAAkB,IAAb1N,EAAE6M,EAAK,KAA2B,IAAb7M,EAAE6M,EAAK,MAAe,IAAgC,KAepE,EAAIrJ,GAIhBiO,EAFAjtB,IADAgtB,IAfAoB,GAAQlF,IAAO,EAAMwE,IAeT,EAAIY,MACH,GAGbrB,GAAMU,EAAKW,EACXrB,GAAMW,EAAKS,EACXpB,GAAMY,GAAM,EAAIgB,GAChB5B,GAAMa,GAAM,EAAIc,GAEhB5uB,GADAitB,GAAMc,GAAM,EAAIY,MACJ,GAAK1B,GAAM,KACvBA,GAAMe,GAAM,EAAIU,GAChBzB,GAAMgB,GAAM,EAAIQ,GAChBxB,GAAMiB,GAAM,EAAIM,GAChBvB,GAAMkB,GAAM,EAAII,GAEhBvuB,IADAitB,GAAMmB,GAAM,EAAIpP,MACH,GAAKiO,GAAM,KAExBC,EAAKltB,EACLktB,GAAMS,EAAK3O,EACXkO,GAAMU,EAAKU,EACXpB,GAAMW,EAAKQ,EACXnB,GAAMY,GAAM,EAAIe,GAEhB7uB,GADAktB,GAAMa,GAAM,EAAIa,MACJ,GAAK1B,GAAM,KACvBA,GAAMc,GAAM,EAAIW,GAChBzB,GAAMe,GAAM,EAAIS,GAChBxB,GAAMgB,GAAM,EAAIO,GAChBvB,GAAMiB,GAAM,EAAIK,GAIhBrB,EAFAntB,IADAktB,GAAMkB,GAAM,EAAIG,MACH,GAGbpB,GAAMQ,EAAKY,EACXpB,GAAMS,EAAK5O,EACXmO,GAAMU,EAAKS,EACXnB,GAAMW,EAAKO,EAEXruB,GADAmtB,GAAMY,GAAM,EAAIc,MACJ,GAAK1B,GAAM,KACvBA,GAAMa,GAAM,EAAIY,GAChBzB,GAAMc,GAAM,EAAIU,GAChBxB,GAAMe,GAAM,EAAIQ,GAChBvB,GAAMgB,GAAM,EAAIM,GAIhBrB,EAFAptB,IADAmtB,GAAMiB,GAAM,EAAII,MACH,GAGbpB,GAAMO,EAAKa,EACXpB,GAAMQ,EAAKW,EACXnB,GAAMS,EAAK7O,EACXoO,GAAMU,EAAKQ,EAEXtuB,GADAotB,GAAMW,EAAKM,KACC,GAAKjB,GAAM,KACvBA,GAAMY,GAAM,EAAIa,GAChBzB,GAAMa,GAAM,EAAIW,GAChBxB,GAAMc,GAAM,EAAIS,GAChBvB,GAAMe,GAAM,EAAIO,GAIhBrB,EAFArtB,IADAotB,GAAMgB,GAAM,EAAIK,MACH,GAGbpB,GAAMM,EAAKc,EACXpB,GAAMO,EAAKY,EACXnB,GAAMQ,EAAKU,EACXlB,GAAMS,EAAK9O,EAEXhf,GADAqtB,GAAMU,EAAKO,KACC,GAAKjB,GAAM,KACvBA,GAAMW,EAAKK,EACXhB,GAAMY,GAAM,EAAIY,GAChBxB,GAAMa,GAAM,EAAIU,GAChBvB,GAAMc,GAAM,EAAIQ,GAIhBrB,EAFAttB,IADAqtB,GAAMe,GAAM,EAAIM,MACH,GAGbpB,GAAMK,EAAKe,EACXpB,GAAMM,EAAKa,EACXnB,GAAMO,EAAKW,EACXlB,GAAMQ,EAAKS,EAEXvuB,GADAstB,GAAMS,EAAK/O,KACC,GAAKsO,GAAM,KACvBA,GAAMU,EAAKM,EACXhB,GAAMW,EAAKI,EACXf,GAAMY,GAAM,EAAIW,GAChBvB,GAAMa,GAAM,EAAIS,GAIhBrB,EAFAvtB,IADAstB,GAAMc,GAAM,EAAIO,MACH,GAGbpB,GAAMI,EAAKgB,EACXpB,GAAMK,EAAKc,EACXnB,GAAMM,EAAKY,EACXlB,GAAMO,EAAKU,EAEXxuB,GADAutB,GAAMQ,EAAKQ,KACC,GAAKhB,GAAM,KACvBA,GAAMS,EAAKhP,EACXuO,GAAMU,EAAKK,EACXf,GAAMW,EAAKG,EACXd,GAAMY,GAAM,EAAIU,GAIhBrB,EAFAxtB,IADAutB,GAAMa,GAAM,EAAIQ,MACH,GAGbpB,GAAMG,EAAKiB,EACXpB,GAAMI,EAAKe,EACXnB,GAAMK,EAAKa,EACXlB,GAAMM,EAAKW,EAEXzuB,GADAwtB,GAAMO,EAAKS,KACC,GAAKhB,GAAM,KACvBA,GAAMQ,EAAKO,EACXf,GAAMS,EAAKjP,EACXwO,GAAMU,EAAKI,EACXd,GAAMW,EAAKE,EAIXZ,EAFAztB,IADAwtB,GAAMY,GAAM,EAAIS,MACH,GAGbpB,GAAME,EAAKkB,EACXpB,GAAMG,EAAKgB,EACXnB,GAAMI,EAAKc,EACXlB,GAAMK,EAAKY,EAEX1uB,GADAytB,GAAMM,EAAKU,KACC,GAAKhB,GAAM,KACvBA,GAAMO,EAAKQ,EACXf,GAAMQ,EAAKM,EACXd,GAAMS,EAAKlP,EACXyO,GAAMU,EAAKG,EAUXX,EAJAX,EAAS,MADThtB,GADAA,IAFAA,IADAytB,GAAMW,EAAKC,KACE,KAED,GAAKruB,EAAM,IAhILgtB,GAAM,MAiIT,GAMfY,EAHAX,GADAjtB,KAAW,GAKX6tB,EA5GkBX,GAAM,KA6GxBY,EA/FkBX,GAAM,KAgGxBY,EAlFkBX,GAAM,KAmFxBY,EArEkBX,GAAM,KAsExBY,EAxDkBX,GAAM,KAyDxBY,EA3CkBX,GAAM,KA4CxBY,EA9BkBX,GAAM,KA+BxBY,EAjBkBX,GAAM,KAmBxBpF,GAAQ,GACRvwB,GAAS,GAEX7F,KAAKmrB,EAAE,GAAKuQ,EACZ17B,KAAKmrB,EAAE,GAAKwQ,EACZ37B,KAAKmrB,EAAE,GAAKyQ,EACZ57B,KAAKmrB,EAAE,GAAK0Q,EACZ77B,KAAKmrB,EAAE,GAAK2Q,EACZ97B,KAAKmrB,EAAE,GAAK4Q,EACZ/7B,KAAKmrB,EAAE,GAAK6Q,EACZh8B,KAAKmrB,EAAE,GAAK8Q,EACZj8B,KAAKmrB,EAAE,GAAK+Q,EACZl8B,KAAKmrB,EAAE,GAAKgR,CACd,EAEA1F,EAASrpB,UAAUoqB,OAAS,SAASqF,EAAKC,GACxC,IACI/uB,EAAGqd,EAAMmP,EAAGh/B,EADZwJ,EAAI,IAAImyB,YAAY,IAGxB,GAAIl3B,KAAKm3B,SAAU,CAGjB,IAFA57B,EAAIyE,KAAKm3B,SACTn3B,KAAK+G,OAAOxL,KAAO,EACZA,EAAI,GAAIA,IAAKyE,KAAK+G,OAAOxL,GAAK,EACrCyE,KAAKo3B,IAAM,EACXp3B,KAAK86B,OAAO96B,KAAK+G,OAAQ,EAAG,GAC9B,CAIA,IAFAgH,EAAI/N,KAAKmrB,EAAE,KAAO,GAClBnrB,KAAKmrB,EAAE,IAAM,KACR5vB,EAAI,EAAGA,EAAI,GAAIA,IAClByE,KAAKmrB,EAAE5vB,IAAMwS,EACbA,EAAI/N,KAAKmrB,EAAE5vB,KAAO,GAClByE,KAAKmrB,EAAE5vB,IAAM,KAaf,IAXAyE,KAAKmrB,EAAE,IAAW,EAAJpd,EACdA,EAAI/N,KAAKmrB,EAAE,KAAO,GAClBnrB,KAAKmrB,EAAE,IAAM,KACbnrB,KAAKmrB,EAAE,IAAMpd,EACbA,EAAI/N,KAAKmrB,EAAE,KAAO,GAClBnrB,KAAKmrB,EAAE,IAAM,KACbnrB,KAAKmrB,EAAE,IAAMpd,EAEbhJ,EAAE,GAAK/E,KAAKmrB,EAAE,GAAK,EACnBpd,EAAIhJ,EAAE,KAAO,GACbA,EAAE,IAAM,KACHxJ,EAAI,EAAGA,EAAI,GAAIA,IAClBwJ,EAAExJ,GAAKyE,KAAKmrB,EAAE5vB,GAAKwS,EACnBA,EAAIhJ,EAAExJ,KAAO,GACbwJ,EAAExJ,IAAM,KAKV,IAHAwJ,EAAE,IAAO,KAETqmB,GAAY,EAAJrd,GAAS,EACZxS,EAAI,EAAGA,EAAI,GAAIA,IAAKwJ,EAAExJ,IAAM6vB,EAEjC,IADAA,GAAQA,EACH7vB,EAAI,EAAGA,EAAI,GAAIA,IAAKyE,KAAKmrB,EAAE5vB,GAAMyE,KAAKmrB,EAAE5vB,GAAK6vB,EAAQrmB,EAAExJ,GAa5D,IAXAyE,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,GAAcnrB,KAAKmrB,EAAE,IAAM,IAChDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAM,IAChDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAO,GACjDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAO,GACjDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAO,GAAOnrB,KAAKmrB,EAAE,IAAO,EAAMnrB,KAAKmrB,EAAE,IAAM,IACpEnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAM,IAChDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAO,GACjDnrB,KAAKmrB,EAAE,GAAoE,OAA7DnrB,KAAKmrB,EAAE,KAAQ,EAAMnrB,KAAKmrB,EAAE,IAAO,GAEjDoP,EAAIv6B,KAAKmrB,EAAE,GAAKnrB,KAAKjB,IAAI,GACzBiB,KAAKmrB,EAAE,GAAS,MAAJoP,EACPh/B,EAAI,EAAGA,EAAI,EAAGA,IACjBg/B,GAAOv6B,KAAKmrB,EAAE5vB,GAAKyE,KAAKjB,IAAIxD,GAAM,IAAMg/B,IAAM,IAAO,EACrDv6B,KAAKmrB,EAAE5vB,GAAS,MAAJg/B,EAGdsC,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAQ,GAAM98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,IACrC0R,EAAIC,EAAO,IAAO98B,KAAKmrB,EAAE,KAAO,EAAK,GACvC,EAEAsL,EAASrpB,UAAUmqB,OAAS,SAAShO,EAAG6M,EAAMvwB,GAC5C,IAAItK,EAAGwhC,EAEP,GAAI/8B,KAAKm3B,SAAU,CAIjB,KAHA4F,EAAQ,GAAK/8B,KAAKm3B,UACPtxB,IACTk3B,EAAOl3B,GACJtK,EAAI,EAAGA,EAAIwhC,EAAMxhC,IACpByE,KAAK+G,OAAO/G,KAAKm3B,SAAW57B,GAAKguB,EAAE6M,EAAK76B,GAI1C,GAHAsK,GAASk3B,EACT3G,GAAQ2G,EACR/8B,KAAKm3B,UAAY4F,EACb/8B,KAAKm3B,SAAW,GAClB,OACFn3B,KAAK86B,OAAO96B,KAAK+G,OAAQ,EAAG,IAC5B/G,KAAKm3B,SAAW,CAClB,CASA,GAPItxB,GAAS,KACXk3B,EAAOl3B,EAASA,EAAQ,GACxB7F,KAAK86B,OAAOvR,EAAG6M,EAAM2G,GACrB3G,GAAQ2G,EACRl3B,GAASk3B,GAGPl3B,EAAO,CACT,IAAKtK,EAAI,EAAGA,EAAIsK,EAAOtK,IACrByE,KAAK+G,OAAO/G,KAAKm3B,SAAW57B,GAAKguB,EAAE6M,EAAK76B,GAC1CyE,KAAKm3B,UAAYtxB,CACnB,CACF,EA+jBA,IAAIm3B,EAAqBrF,EACrBsF,EAA0BrF,EAc9B,IAAIsF,EAAI,CACN,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,YAGtC,SAASC,EAAqBC,EAAIC,EAAI9T,EAAG9iB,GAyBvC,IAxBA,IACI6d,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EACnCtB,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EAAKG,EACnC4X,EAAIC,EAAIhiC,EAAGkD,EAAG0sB,EAAGziB,EAAG9J,EAAGigB,EAAG9Q,EAAGtQ,EAH7B+/B,EAAK,IAAIC,WAAW,IAAKC,EAAK,IAAID,WAAW,IAK7Cjb,EAAM4a,EAAG,GACTza,EAAMya,EAAG,GACTta,EAAMsa,EAAG,GACTna,EAAMma,EAAG,GACTha,EAAMga,EAAG,GACT7Z,EAAM6Z,EAAG,GACT1Z,EAAM0Z,EAAG,GACTvZ,EAAMuZ,EAAG,GAET7a,EAAM8a,EAAG,GACT3a,EAAM2a,EAAG,GACTxa,EAAMwa,EAAG,GACTra,EAAMqa,EAAG,GACTla,EAAMka,EAAG,GACT/Z,EAAM+Z,EAAG,GACT5Z,EAAM4Z,EAAG,GACTzZ,EAAMyZ,EAAG,GAETM,EAAM,EACHl3B,GAAK,KAAK,CACf,IAAKlL,EAAI,EAAGA,EAAI,GAAIA,IAClBkD,EAAI,EAAIlD,EAAIoiC,EACZH,EAAGjiC,GAAMguB,EAAE9qB,EAAE,IAAM,GAAO8qB,EAAE9qB,EAAE,IAAM,GAAO8qB,EAAE9qB,EAAE,IAAM,EAAK8qB,EAAE9qB,EAAE,GAC9Di/B,EAAGniC,GAAMguB,EAAE9qB,EAAE,IAAM,GAAO8qB,EAAE9qB,EAAE,IAAM,GAAO8qB,EAAE9qB,EAAE,IAAM,EAAK8qB,EAAE9qB,EAAE,GAEhE,IAAKlD,EAAI,EAAGA,EAAI,GAAIA,IA+HlB,GA9HA+oB,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACAG,EAENQ,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACNiC,EAAM9B,EACAG,EAMNhlB,EAAQ,OAFR8J,EAAIkb,GAEY/E,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAItH,GAIYpmB,EAAI0tB,IAAM,GAM1BvsB,GAAS,OAFT8J,GAAMya,IAAQ,GAAOC,GAAQ,KAAaD,IAAQ,GAAOC,GAAQ,KAAaA,IAAS,EAAWD,GAAQ,KAEzFtE,GAAKnW,IAAM,GAC5BqF,GAAS,OAJTod,GAAM/H,IAAQ,GAAOD,GAAQ,KAAaC,IAAQ,GAAOD,GAAQ,KAAaA,IAAS,EAAWC,GAAQ,KAIzF3lB,GAAK0tB,IAAM,GAM5BvsB,GAAS,OAFT8J,EAAKya,EAAMG,GAASH,EAAMM,GAET5E,GAAKnW,IAAM,GAC5BqF,GAAS,OAJTod,EAAK/H,EAAMG,GAASH,EAAMM,GAITjmB,GAAK0tB,IAAM,GAM5BvsB,GAAS,OAFT8J,EAAIw0B,EAAI,EAAF3hC,EAAI,IAEOsjB,GAAKnW,IAAM,GAC5BqF,GAAS,OAJTod,EAAI+R,EAAI,EAAF3hC,IAIWkC,GAAK0tB,IAAM,GAG5BA,EAAIqS,EAAGjiC,EAAE,IAGQsjB,IAFjBnW,EAAIg1B,EAAGniC,EAAE,OAEmB,GAC5BwS,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAG5Bpd,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,GAUX9J,EAAQ,OAFR8J,EAJA60B,EAAS,MAAJ3+B,EAAaigB,GAAK,IAMPA,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAJAmS,EAAS,MAAJvvB,GAFLtQ,GAAKsQ,IAAM,KAEY,IAQPtQ,EAAI0tB,IAAM,GAM1BvsB,GAAS,OAFT8J,GAAM6Z,IAAQ,GAAOC,GAAQ,IAAaA,IAAS,EAAWD,GAAQ,KAAkBC,IAAS,EAAWD,GAAQ,KAEnG1D,GAAKnW,IAAM,GAC5BqF,GAAS,OAJTod,GAAM3I,IAAQ,GAAOD,GAAQ,IAAaA,IAAS,EAAWC,GAAQ,KAAkBD,IAAS,EAAWC,GAAQ,KAInG/kB,GAAK0tB,IAAM,GAMXtM,IAFjBnW,EAAK6Z,EAAMG,EAAQH,EAAMM,EAAQH,EAAMG,KAEX,GAC5B9U,GAAS,OAJTod,EAAK3I,EAAMG,EAAQH,EAAMM,EAAQH,EAAMG,GAItBrlB,GAAK0tB,IAAM,GAM5BxF,EAAW,OAHX5X,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,KACXjL,GAAKsQ,IAAM,KAEgB,GAC3B2X,EAAW,MAAJ9mB,EAAeigB,GAAK,GAM3BjgB,EAAQ,OAFR8J,EAAIoc,GAEYjG,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAIpG,GAIYtnB,EAAI0tB,IAAM,GAKTtM,IAFjBnW,EAAI60B,KAEwB,GAC5BxvB,GAAS,OAJTod,EAAImS,GAIa7/B,GAAK0tB,IAAM,GAS5BxI,EAAM2B,EACNxB,EAAM2B,EACNxB,EAAM2B,EACNxB,EANA2B,EAAW,OAHXhX,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,KACXjL,GAAKsQ,IAAM,KAEgB,GAO3BwV,EAAM2B,EACNxB,EAAM2B,EACNxB,EAAM2B,EACNhD,EAAMmD,EAENjD,EAAM2B,EACNxB,EAAM2B,EACNxB,EAAM2B,EACNxB,EAdA2B,EAAW,MAAJlmB,EAAeigB,GAAK,GAe3ByE,EAAM2B,EACNxB,EAAM2B,EACNxB,EAAM2B,EACNhD,EAAMmD,EAEFnqB,EAAE,KAAO,GACX,IAAKkD,EAAI,EAAGA,EAAI,GAAIA,IAElB0sB,EAAIqS,EAAG/+B,GAGPG,EAAQ,OAFR8J,EAAIg1B,EAAGj/B,IAESogB,EAAInW,IAAM,GAC1BqF,EAAQ,MAAJod,EAAY1tB,EAAI0tB,IAAM,GAE1BA,EAAIqS,GAAI/+B,EAAE,GAAG,IAGbG,GAAS,OAFT8J,EAAIg1B,GAAIj/B,EAAE,GAAG,KAEIogB,GAAKnW,IAAM,GAC5BqF,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAG5BmS,EAAKE,GAAI/+B,EAAE,GAAG,IAKdG,GAAS,OAFT8J,IAFA60B,EAAKG,GAAIj/B,EAAE,GAAG,OAED,EAAM6+B,GAAO,KAAYC,IAAO,EAAMD,GAAO,KAAYC,IAAO,EAAMD,GAAO,KAEzEze,GAAKnW,IAAM,GAC5BqF,GAAS,OAJTod,GAAMmS,IAAO,EAAMC,GAAO,KAAYD,IAAO,EAAMC,GAAO,IAAWD,IAAO,GAI3D7/B,GAAK0tB,IAAM,GAG5BmS,EAAKE,GAAI/+B,EAAE,IAAI,IAKEogB,IAFjBnW,IAFA60B,EAAKG,GAAIj/B,EAAE,IAAI,OAEF,GAAO6+B,GAAO,KAAaA,IAAQ,GAAWC,GAAO,IAAkBA,IAAO,EAAMD,GAAO,OAE5E,GAC5BvvB,GAAS,OAJTod,GAAMmS,IAAO,GAAOC,GAAO,KAAaA,IAAQ,GAAWD,GAAO,GAAiBA,IAAO,GAIzE7/B,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX80B,EAAG/+B,GAAU,MAAJsP,EAAetQ,GAAK,GAC7BigC,EAAGj/B,GAAU,MAAJG,EAAeigB,GAAK,GASnCjgB,EAAQ,OAFR8J,EAAI6Z,GAEY1D,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAI3I,GAIY/kB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAK5a,EAAW,MAAJzU,EAAetQ,GAAK,GACnC4/B,EAAG,GAAK9a,EAAW,MAAJ3jB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAIga,GAEY7D,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAIxI,GAIYllB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAKza,EAAW,MAAJ5U,EAAetQ,GAAK,GACnC4/B,EAAG,GAAK3a,EAAW,MAAJ9jB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAIma,GAEYhE,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAIrI,GAIYrlB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAKta,EAAW,MAAJ/U,EAAetQ,GAAK,GACnC4/B,EAAG,GAAKxa,EAAW,MAAJjkB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAIsa,GAEYnE,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAIlI,GAIYxlB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAKna,EAAW,MAAJlV,EAAetQ,GAAK,GACnC4/B,EAAG,GAAKra,EAAW,MAAJpkB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAIya,GAEYtE,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAI/H,GAIY3lB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAKha,EAAW,MAAJrV,EAAetQ,GAAK,GACnC4/B,EAAG,GAAKla,EAAW,MAAJvkB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAI4a,GAEYzE,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAI5H,GAIY9lB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAK7Z,EAAW,MAAJxV,EAAetQ,GAAK,GACnC4/B,EAAG,GAAK/Z,EAAW,MAAJ1kB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAI+a,GAEY5E,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAIzH,GAIYjmB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAK1Z,EAAW,MAAJ3V,EAAetQ,GAAK,GACnC4/B,EAAG,GAAK5Z,EAAW,MAAJ7kB,EAAeigB,GAAK,GAKnCjgB,EAAQ,OAFR8J,EAAIkb,GAEY/E,EAAInW,IAAM,GAC1BqF,EAAQ,OAJRod,EAAItH,GAIYpmB,EAAI0tB,IAAM,GAE1BA,EAAIiS,EAAG,GAGUve,IAFjBnW,EAAI20B,EAAG,MAEqB,GAC5BtvB,GAAS,MAAJod,EAAY1tB,GAAK0tB,IAAM,GAI5B1tB,IADAsQ,IADA8Q,IAHAjgB,GAAS,MAAJ8J,KAGM,MACA,MACA,GAEX00B,EAAG,GAAKvZ,EAAW,MAAJ9V,EAAetQ,GAAK,GACnC4/B,EAAG,GAAKzZ,EAAW,MAAJhlB,EAAeigB,GAAK,GAEnC8e,GAAO,IACPl3B,GAAK,GACP,CAEA,OAAOA,CACT,CAEA,SAASm3B,EAAYhf,EAAK2K,EAAG9iB,GAC3B,IAGIlL,EAHA6hC,EAAK,IAAIK,WAAW,GACpBJ,EAAK,IAAII,WAAW,GACpBhW,EAAI,IAAI/qB,WAAW,KAChBmiB,EAAIpY,EAuBX,IArBA22B,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UACRA,EAAG,GAAK,WAERC,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UAERF,EAAqBC,EAAIC,EAAI9T,EAAG9iB,GAChCA,GAAK,IAEAlL,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKksB,EAAElsB,GAAKguB,EAAE1K,EAAEpY,EAAElL,GAQrC,IAPAksB,EAAEhhB,GAAK,IAGPghB,GADAhhB,EAAI,IAAI,KAAKA,EAAE,IAAI,EAAE,IACjB,GAAK,EACT+sB,EAAK/L,EAAGhhB,EAAE,EAAKoY,EAAI,UAAc,EAAGA,GAAK,GACzCse,EAAqBC,EAAIC,EAAI5V,EAAGhhB,GAE3BlL,EAAI,EAAGA,EAAI,EAAGA,IAAKi4B,EAAK5U,EAAK,EAAErjB,EAAG6hC,EAAG7hC,GAAI8hC,EAAG9hC,IAEjD,OAAO,CACT,CAEA,SAAS+J,EAAIwjB,EAAGjJ,GACd,IAAIjhB,EAAI+zB,IAAM9T,EAAI8T,IAAM5kB,EAAI4kB,IACxBl1B,EAAIk1B,IAAM1xB,EAAI0xB,IAAM4H,EAAI5H,IACxB5tB,EAAI4tB,IAAMxH,EAAIwH,IAAM3iB,EAAI2iB,IAE5B0F,EAAEz5B,EAAGkqB,EAAE,GAAIA,EAAE,IACbuP,EAAEroB,EAAG6P,EAAE,GAAIA,EAAE,IACbyY,EAAE15B,EAAGA,EAAGoR,GACRkd,EAAErO,EAAGiK,EAAE,GAAIA,EAAE,IACboE,EAAEld,EAAG6P,EAAE,GAAIA,EAAE,IACbyY,EAAEzZ,EAAGA,EAAG7O,GACRsoB,EAAEvqB,EAAG+a,EAAE,GAAIjJ,EAAE,IACbyY,EAAEvqB,EAAGA,EAAGqlB,GACRkF,EAAE76B,EAAGqrB,EAAE,GAAIjJ,EAAE,IACbqN,EAAEzvB,EAAGA,EAAGA,GACR46B,EAAEp3B,EAAG4d,EAAGjgB,GACRy5B,EAAEkC,EAAG98B,EAAGsQ,GACRmf,EAAEnoB,EAAGtH,EAAGsQ,GACRmf,EAAE/B,EAAGtM,EAAGjgB,GAER05B,EAAExP,EAAE,GAAI7nB,EAAGs5B,GACXjC,EAAExP,EAAE,GAAIqC,EAAGpmB,GACXuzB,EAAExP,EAAE,GAAI/jB,EAAGw1B,GACXjC,EAAExP,EAAE,GAAI7nB,EAAGkqB,EACb,CAEA,SAAS0S,EAAM/U,EAAGjJ,EAAGhB,GACnB,IAAItjB,EACJ,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjBy8B,EAASlP,EAAEvtB,GAAIskB,EAAEtkB,GAAIsjB,EAEzB,CAEA,SAASif,GAAKrzB,EAAGqe,GACf,IAAIiV,EAAKpL,IAAMqL,EAAKrL,IAAMsL,EAAKtL,IAC/ByH,EAAS6D,EAAInV,EAAE,IACfwP,EAAEyF,EAAIjV,EAAE,GAAImV,GACZ3F,EAAE0F,EAAIlV,EAAE,GAAImV,GACZhG,EAAUxtB,EAAGuzB,GACbvzB,EAAE,KAAO0tB,EAAS4F,IAAO,CAC3B,CAEA,SAASG,GAAWpV,EAAGjJ,EAAGnV,GACxB,IAAImU,EAAGtjB,EAKP,IAJAs8B,EAAS/O,EAAE,GAAImK,GACf4E,EAAS/O,EAAE,GAAIoK,GACf2E,EAAS/O,EAAE,GAAIoK,GACf2E,EAAS/O,EAAE,GAAImK,GACV13B,EAAI,IAAKA,GAAK,IAAKA,EAEtBsiC,EAAM/U,EAAGjJ,EADThB,EAAKnU,EAAGnP,EAAE,EAAG,KAAS,EAAFA,GAAQ,GAE5B+J,EAAIua,EAAGiJ,GACPxjB,EAAIwjB,EAAGA,GACP+U,EAAM/U,EAAGjJ,EAAGhB,EAEhB,CAEA,SAASsf,GAAWrV,EAAGpe,GACrB,IAAImV,EAAI,CAAC8S,IAAMA,IAAMA,IAAMA,KAC3BkF,EAAShY,EAAE,GAAIwT,GACfwE,EAAShY,EAAE,GAAIyT,GACfuE,EAAShY,EAAE,GAAIqT,GACfoF,EAAEzY,EAAE,GAAIwT,EAAGC,GACX4K,GAAWpV,EAAGjJ,EAAGnV,EACnB,CAEA,SAAS0zB,GAAoBC,EAAIC,EAAIC,GACnC,IAEIhjC,EAFAkC,EAAI,IAAIf,WAAW,IACnBosB,EAAI,CAAC6J,IAAMA,IAAMA,IAAMA,KAY3B,IATK4L,GAAQzL,EAAYwL,EAAI,IAC7BV,EAAYngC,EAAG6gC,EAAI,IACnB7gC,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAET0gC,GAAWrV,EAAGrrB,GACdqgC,GAAKO,EAAIvV,GAEJvtB,EAAI,EAAGA,EAAI,GAAIA,IAAK+iC,EAAG/iC,EAAE,IAAM8iC,EAAG9iC,GACvC,OAAO,CACT,CAEA,IAAIijC,GAAI,IAAI3L,aAAa,CAAC,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEvK,SAAS4L,GAAKh0B,EAAGgd,GACf,IAAI1I,EAAOxjB,EAAGkD,EAAG8I,EACjB,IAAKhM,EAAI,GAAIA,GAAK,KAAMA,EAAG,CAEzB,IADAwjB,EAAQ,EACHtgB,EAAIlD,EAAI,GAAIgM,EAAIhM,EAAI,GAAIkD,EAAI8I,IAAK9I,EACpCgpB,EAAEhpB,IAAMsgB,EAAQ,GAAK0I,EAAElsB,GAAKijC,GAAE//B,GAAKlD,EAAI,KACvCwjB,EAAQ9B,KAAK8a,OAAOtQ,EAAEhpB,GAAK,KAAO,KAClCgpB,EAAEhpB,IAAc,IAARsgB,EAEV0I,EAAEhpB,IAAMsgB,EACR0I,EAAElsB,GAAK,CACT,CAEA,IADAwjB,EAAQ,EACHtgB,EAAI,EAAGA,EAAI,GAAIA,IAClBgpB,EAAEhpB,IAAMsgB,GAAS0I,EAAE,KAAO,GAAK+W,GAAE//B,GACjCsgB,EAAQ0I,EAAEhpB,IAAM,EAChBgpB,EAAEhpB,IAAM,IAEV,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKgpB,EAAEhpB,IAAMsgB,EAAQyf,GAAE//B,GAC3C,IAAKlD,EAAI,EAAGA,EAAI,GAAIA,IAClBksB,EAAElsB,EAAE,IAAMksB,EAAElsB,IAAM,EAClBkP,EAAElP,GAAY,IAAPksB,EAAElsB,EAEb,CAEA,SAASoD,GAAO8L,GACd,IAA8BlP,EAA1BksB,EAAI,IAAIoL,aAAa,IACzB,IAAKt3B,EAAI,EAAGA,EAAI,GAAIA,IAAKksB,EAAElsB,GAAKkP,EAAElP,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKkP,EAAElP,GAAK,EAChCkjC,GAAKh0B,EAAGgd,EACV,CAGA,SAASiX,GAAYC,EAAIpV,EAAG9iB,EAAG63B,GAC7B,IACI/iC,EAAGkD,EADHhB,EAAI,IAAIf,WAAW,IAAKyuB,EAAI,IAAIzuB,WAAW,IAAK+N,EAAI,IAAI/N,WAAW,IAC7D+qB,EAAI,IAAIoL,aAAa,IAC3B/J,EAAI,CAAC6J,IAAMA,IAAMA,IAAMA,KAE3BiL,EAAYngC,EAAG6gC,EAAI,IACnB7gC,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAET,IAAImhC,EAAQn4B,EAAI,GAChB,IAAKlL,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKojC,EAAG,GAAKpjC,GAAKguB,EAAEhuB,GACvC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKojC,EAAG,GAAKpjC,GAAKkC,EAAE,GAAKlC,GAO7C,IALAqiC,EAAYnzB,EAAGk0B,EAAGlE,SAAS,IAAKh0B,EAAE,IAClC9H,GAAO8L,GACP0zB,GAAWrV,EAAGre,GACdqzB,GAAKa,EAAI7V,GAEJvtB,EAAI,GAAIA,EAAI,GAAIA,IAAKojC,EAAGpjC,GAAK+iC,EAAG/iC,GAIrC,IAHAqiC,EAAYzS,EAAGwT,EAAIl4B,EAAI,IACvB9H,GAAOwsB,GAEF5vB,EAAI,EAAGA,EAAI,GAAIA,IAAKksB,EAAElsB,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKksB,EAAElsB,GAAKkP,EAAElP,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClB,IAAKkD,EAAI,EAAGA,EAAI,GAAIA,IAClBgpB,EAAElsB,EAAEkD,IAAM0sB,EAAE5vB,GAAKkC,EAAEgB,GAKvB,OADAggC,GAAKE,EAAGlE,SAAS,IAAKhT,GACfmX,CACT,CAwCA,SAASC,GAAiBtV,EAAGoV,EAAIl4B,EAAG43B,GAClC,IAAI9iC,EACAyU,EAAI,IAAItT,WAAW,IAAKyuB,EAAI,IAAIzuB,WAAW,IAC3CosB,EAAI,CAAC6J,IAAMA,IAAMA,IAAMA,KACvB9S,EAAI,CAAC8S,IAAMA,IAAMA,IAAMA,KAE3B,GAAIlsB,EAAI,GAAI,OAAQ,EAEpB,GA9CF,SAAmBgE,EAAGqe,GACpB,IAAI9Y,EAAI2iB,IAAMmM,EAAMnM,IAAMhsB,EAAMgsB,IAC5BoM,EAAMpM,IAAMqM,EAAOrM,IAAMsM,EAAOtM,IAChCuM,EAAOvM,IA2BX,OAzBAkF,EAASptB,EAAE,GAAIyoB,GACfkF,EAAY3tB,EAAE,GAAIqe,GAClBxa,EAAE3H,EAAK8D,EAAE,IACT6tB,EAAEyG,EAAKp4B,EAAK0mB,GACZgL,EAAE1xB,EAAKA,EAAK8D,EAAE,IACdyiB,EAAE6R,EAAKt0B,EAAE,GAAIs0B,GAEbzwB,EAAE0wB,EAAMD,GACRzwB,EAAE2wB,EAAMD,GACR1G,EAAE4G,EAAMD,EAAMD,GACd1G,EAAEtoB,EAAGkvB,EAAMv4B,GACX2xB,EAAEtoB,EAAGA,EAAG+uB,GAER1E,EAAQrqB,EAAGA,GACXsoB,EAAEtoB,EAAGA,EAAGrJ,GACR2xB,EAAEtoB,EAAGA,EAAG+uB,GACRzG,EAAEtoB,EAAGA,EAAG+uB,GACRzG,EAAE7tB,EAAE,GAAIuF,EAAG+uB,GAEXzwB,EAAEwwB,EAAKr0B,EAAE,IACT6tB,EAAEwG,EAAKA,EAAKC,GACR7G,EAAS4G,EAAKn4B,IAAM2xB,EAAE7tB,EAAE,GAAIA,EAAE,GAAI8oB,GAEtCjlB,EAAEwwB,EAAKr0B,EAAE,IACT6tB,EAAEwG,EAAKA,EAAKC,GACR7G,EAAS4G,EAAKn4B,IAAc,GAE5BwxB,EAAS1tB,EAAE,MAASqe,EAAE,KAAK,GAAIuP,EAAE5tB,EAAE,GAAIwoB,EAAKxoB,EAAE,IAElD6tB,EAAE7tB,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACT,EACT,CAUM00B,CAAUtf,EAAGwe,GAAK,OAAQ,EAE9B,IAAK9iC,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKguB,EAAEhuB,GAAKojC,EAAGpjC,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKguB,EAAEhuB,EAAE,IAAM8iC,EAAG9iC,GAUtC,GATAqiC,EAAYzS,EAAG5B,EAAG9iB,GAClB9H,GAAOwsB,GACP+S,GAAWpV,EAAGjJ,EAAGsL,GAEjBgT,GAAWte,EAAG8e,EAAGlE,SAAS,KAC1Bn1B,EAAIwjB,EAAGjJ,GACPie,GAAK9tB,EAAG8Y,GAERriB,GAAK,GACDotB,EAAiB8K,EAAI,EAAG3uB,EAAG,GAAI,CACjC,IAAKzU,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKguB,EAAEhuB,GAAK,EAC/B,OAAQ,CACV,CAEA,IAAKA,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKguB,EAAEhuB,GAAKojC,EAAGpjC,EAAI,IACtC,OAAOkL,CACT,CAEA,IAGI24B,GAAgC,GAShCC,GAAoB,GACpBC,GAA6B,GAC7BC,GAA6B,GAiEjC,SAASC,GAAaj4B,EAAGd,GACvB,GAhF8B,KAgF1Bc,EAAE/L,OAAsC,MAAM,IAAIU,MAAM,gBAC5D,GAhFgC,KAgF5BuK,EAAEjL,OAAwC,MAAM,IAAIU,MAAM,iBAChE,CAOA,SAASujC,KACP,IAAK,IAAIlkC,EAAI,EAAGA,EAAImkC,UAAUlkC,OAAQD,IACpC,KAAMmkC,UAAUnkC,aAAcmB,YAC5B,MAAM,IAAI6B,UAAU,kCAE1B,CAEA,SAASohC,GAAQ9gC,GACf,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,EAAIrD,OAAQD,IAAKsD,EAAItD,GAAK,CAChD,CAhFA0X,EAAK2sB,SAAW,CACd7J,qBAAsBA,EACtBS,kBAAmBA,EACnBF,cAAeA,EACfJ,0BAA2BA,EAC3BG,sBAAuBA,EACvBgB,mBAAoBA,EACpBI,0BAA2BA,EAC3B7D,iBAAkBA,EAClBC,iBAAkBA,EAClB8D,iBAAkBA,EAClBC,sBAAuBA,EACvB0C,kBAAmBA,EACnBK,uBAAwBA,EACxBE,oBAAqBA,EACrBmC,mBAAoBA,EACpB6C,WAxsBF,SAAoB9xB,EAAGwb,EAAG9rB,EAAGgJ,EAAGihB,EAAGD,GACjC,IAAIlgB,EAAI,IAAI7K,WAAW,IAEvB,OADAm+B,EAAoBtzB,EAAGmgB,EAAGD,GACnBuV,EAAmBjvB,EAAGwb,EAAG9rB,EAAGgJ,EAAGc,EACxC,EAqsBEu4B,gBAnsBF,SAAyBvW,EAAGxb,EAAGtQ,EAAGgJ,EAAGihB,EAAGD,GACtC,IAAIlgB,EAAI,IAAI7K,WAAW,IAEvB,OADAm+B,EAAoBtzB,EAAGmgB,EAAGD,GACnBwV,EAAwB1T,EAAGxb,EAAGtQ,EAAGgJ,EAAGc,EAC7C,EAgsBEqzB,mBAAoBA,EACpBgD,YAAaA,EACbc,YAAaA,GACbN,oBAAqBA,GACrBS,iBAAkBA,GAElBkB,0BA1C8B,GA2C9BC,4BA1CgC,GA2ChCC,2BA1C+B,GA2C/Bb,8BAA+BA,GAC/Bc,wBA1C4B,GA2C5BC,8BA1CkC,GA2ClCC,0BA1C8B,GA2C9BC,0BA1C8B,GA2C9BC,yBA1C6B,GA2C7BC,sBAlDgC,GAmDhCC,qBAlD+B,GAmD/BC,wBA1C4BrB,GA2C5BC,kBAAmBA,GACnBC,2BAA4BA,GAC5BC,2BAA4BA,GAC5BmB,sBA1C0B,GA2C1BC,kBA1CsB,GA4CtBhO,GAAIA,EACJtF,EAAGA,EACHmR,EAAGA,GACHvG,UAAWA,EACXG,YAAaA,EACbE,EAAGA,EACHpL,EAAGA,EACH5e,EAAGA,EACH+pB,EAAGA,EACHgC,QAASA,EACT/0B,IAAKA,EACLuyB,SAAUA,EACV4G,KAAMA,GACNP,WAAYA,GACZC,WAAYA,IA0BdlrB,EAAKO,YAAc,SAAS/M,GAC1B,IAAIoY,EAAI,IAAIniB,WAAW+J,GAEvB,OADAqsB,EAAYjU,EAAGpY,GACRoY,CACT,EAEA5L,EAAK2tB,UAAY,SAAS36B,EAAKtG,EAAOwJ,GACpCs2B,GAAgBx5B,EAAKtG,EAAOwJ,GAC5Bq2B,GAAar2B,EAAKxJ,GAGlB,IAFA,IAAI4pB,EAAI,IAAI7sB,WA3GmB,GA2GqBuJ,EAAIzK,QACpDuS,EAAI,IAAIrR,WAAW6sB,EAAE/tB,QAChBD,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,IAAKguB,EAAEhuB,EA7GR,IA6GwC0K,EAAI1K,GAE3E,OADAo8B,EAAiB5pB,EAAGwb,EAAGA,EAAE/tB,OAAQmE,EAAOwJ,GACjC4E,EAAE0sB,SAAS2E,GACpB,EAEAnsB,EAAK2tB,UAAUxsB,KAAO,SAASlB,EAAKvT,EAAOwJ,GACzCs2B,GAAgBvsB,EAAKvT,EAAOwJ,GAC5Bq2B,GAAar2B,EAAKxJ,GAGlB,IAFA,IAAIoO,EAAI,IAAIrR,WAAW0iC,GAAgClsB,EAAI1X,QACvD+tB,EAAI,IAAI7sB,WAAWqR,EAAEvS,QAChBD,EAAI,EAAGA,EAAI2X,EAAI1X,OAAQD,IAAKwS,EAAExS,EAAE6jC,IAAiClsB,EAAI3X,GAC9E,OAAIwS,EAAEvS,OAAS,IAC2C,IAAtDo8B,EAAsBrO,EAAGxb,EAAGA,EAAEvS,OAAQmE,EAAOwJ,GADvB,KAEnBogB,EAAEkR,SA1HsB,GA2HjC,EAEAxnB,EAAK2tB,UAAUC,UA/HiB,GAgIhC5tB,EAAK2tB,UAAUntB,YA/HmB,GAgIlCR,EAAK2tB,UAAUE,eAAiB1B,GAEhCnsB,EAAK8tB,WAAa,SAASt6B,EAAGqiB,GAE5B,GADA2W,GAAgBh5B,EAAGqiB,GA/He,KAgI9BriB,EAAEjL,OAA0C,MAAM,IAAIU,MAAM,cAChE,GAlI4B,KAkIxB4sB,EAAEttB,OAAoC,MAAM,IAAIU,MAAM,cAC1D,IAAI2jB,EAAI,IAAInjB,WAnIgB,IAqI5B,OADA49B,EAAkBza,EAAGpZ,EAAGqiB,GACjBjJ,CACT,EAEA5M,EAAK8tB,WAAW5kB,KAAO,SAAS1V,GAE9B,GADAg5B,GAAgBh5B,GAxIkB,KAyI9BA,EAAEjL,OAA0C,MAAM,IAAIU,MAAM,cAChE,IAAI2jB,EAAI,IAAInjB,WA3IgB,IA6I5B,OADAi+B,EAAuB9a,EAAGpZ,GACnBoZ,CACT,EAEA5M,EAAK8tB,WAAWC,aA/IoB,GAgJpC/tB,EAAK8tB,WAAWE,mBAjJc,GAmJ9BhuB,EAAKC,IAAM,SAASjN,EAAKtG,EAAO2C,EAAWqR,GACzC,IAAIpM,EAAI0L,EAAKC,IAAIguB,OAAO5+B,EAAWqR,GACnC,OAAOV,EAAK2tB,UAAU36B,EAAKtG,EAAO4H,EACpC,EAEA0L,EAAKC,IAAIguB,OAAS,SAAS5+B,EAAWqR,GACpC8rB,GAAgBn9B,EAAWqR,GAzE7B,SAAyB0qB,EAAIC,GAC3B,GA/E8B,KA+E1BD,EAAG7iC,OAAsC,MAAM,IAAIU,MAAM,uBAC7D,GA/E8B,KA+E1BoiC,EAAG9iC,OAAsC,MAAM,IAAIU,MAAM,sBAC/D,CAuEEilC,CAAgB7+B,EAAWqR,GAC3B,IAAIpM,EAAI,IAAI7K,WAvJiB,IAyJ7B,OADAm+B,EAAoBtzB,EAAGjF,EAAWqR,GAC3BpM,CACT,EAEA0L,EAAKC,IAAIkuB,MAAQnuB,EAAK2tB,UAEtB3tB,EAAKC,IAAIkB,KAAO,SAASnO,EAAKtG,EAAO2C,EAAWqR,GAC9C,IAAIpM,EAAI0L,EAAKC,IAAIguB,OAAO5+B,EAAWqR,GACnC,OAAOV,EAAK2tB,UAAUxsB,KAAKnO,EAAKtG,EAAO4H,EACzC,EAEA0L,EAAKC,IAAIkB,KAAKgtB,MAAQnuB,EAAK2tB,UAAUxsB,KAErCnB,EAAKC,IAAIC,QAAU,WACjB,IAAIkrB,EAAK,IAAI3hC,WAxKiB,IAyK1B4hC,EAAK,IAAI5hC,WAxKiB,IA0K9B,OADAk+B,EAAmByD,EAAIC,GAChB,CAACh8B,UAAW+7B,EAAI1qB,UAAW2qB,EACpC,EAEArrB,EAAKC,IAAIC,QAAQe,cAAgB,SAASP,GAExC,GADA8rB,GAAgB9rB,GA9Kc,KA+K1BA,EAAUnY,OACZ,MAAM,IAAIU,MAAM,uBAClB,IAAImiC,EAAK,IAAI3hC,WAlLiB,IAoL9B,OADAi+B,EAAuB0D,EAAI1qB,GACpB,CAACrR,UAAW+7B,EAAI1qB,UAAW,IAAIjX,WAAWiX,GACnD,EAEAV,EAAKC,IAAImuB,gBAvLuB,GAwLhCpuB,EAAKC,IAAIouB,gBAvLuB,GAwLhCruB,EAAKC,IAAIquB,gBAvLsB,GAwL/BtuB,EAAKC,IAAIO,YA/LyB,GAgMlCR,EAAKC,IAAI4tB,eAAiB7tB,EAAK2tB,UAAUE,eAEzC7tB,EAAKuuB,KAAO,SAASv7B,EAAK0N,GAExB,GADA8rB,GAAgBx5B,EAAK0N,GACjBA,EAAUnY,SAAW+jC,GACvB,MAAM,IAAIrjC,MAAM,uBAClB,IAAIulC,EAAY,IAAI/kC,WAAW2iC,GAAkBp5B,EAAIzK,QAErD,OADAkjC,GAAY+C,EAAWx7B,EAAKA,EAAIzK,OAAQmY,GACjC8tB,CACT,EAEAxuB,EAAKuuB,KAAKptB,KAAO,SAASqtB,EAAWn/B,GAEnC,GADAm9B,GAAgBgC,EAAWn/B,GACvBA,EAAU9G,SAAW8jC,GACvB,MAAM,IAAIpjC,MAAM,uBAClB,IAAImZ,EAAM,IAAI3Y,WAAW+kC,EAAUjmC,QAC/BkmC,EAAO7C,GAAiBxpB,EAAKosB,EAAWA,EAAUjmC,OAAQ8G,GAC9D,GAAIo/B,EAAO,EAAG,OAAO,KAErB,IADA,IAAInY,EAAI,IAAI7sB,WAAWglC,GACdnmC,EAAI,EAAGA,EAAIguB,EAAE/tB,OAAQD,IAAKguB,EAAEhuB,GAAK8Z,EAAI9Z,GAC9C,OAAOguB,CACT,EAEAtW,EAAKuuB,KAAKG,SAAW,SAAS17B,EAAK0N,GAGjC,IAFA,IAAI8tB,EAAYxuB,EAAKuuB,KAAKv7B,EAAK0N,GAC3B5I,EAAM,IAAIrO,WAAW2iC,IAChB9jC,EAAI,EAAGA,EAAIwP,EAAIvP,OAAQD,IAAKwP,EAAIxP,GAAKkmC,EAAUlmC,GACxD,OAAOwP,CACT,EAEAkI,EAAKuuB,KAAKG,SAASC,OAAS,SAAS37B,EAAK8E,EAAKzI,GAE7C,GADAm9B,GAAgBx5B,EAAK8E,EAAKzI,GACtByI,EAAIvP,SAAW6jC,GACjB,MAAM,IAAInjC,MAAM,sBAClB,GAAIoG,EAAU9G,SAAW8jC,GACvB,MAAM,IAAIpjC,MAAM,uBAClB,IAEIX,EAFAojC,EAAK,IAAIjiC,WAAW2iC,GAAoBp5B,EAAIzK,QAC5C+tB,EAAI,IAAI7sB,WAAW2iC,GAAoBp5B,EAAIzK,QAE/C,IAAKD,EAAI,EAAGA,EAAI8jC,GAAmB9jC,IAAKojC,EAAGpjC,GAAKwP,EAAIxP,GACpD,IAAKA,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,IAAKojC,EAAGpjC,EAAE8jC,IAAqBp5B,EAAI1K,GAC/D,OAAQsjC,GAAiBtV,EAAGoV,EAAIA,EAAGnjC,OAAQ8G,IAAc,CAC3D,EAEA2Q,EAAKuuB,KAAKruB,QAAU,WAClB,IAAIkrB,EAAK,IAAI3hC,WAAW4iC,IACpBhB,EAAK,IAAI5hC,WAAW6iC,IAExB,OADAnB,GAAoBC,EAAIC,GACjB,CAACh8B,UAAW+7B,EAAI1qB,UAAW2qB,EACpC,EAEArrB,EAAKuuB,KAAKruB,QAAQe,cAAgB,SAASP,GAEzC,GADA8rB,GAAgB9rB,GACZA,EAAUnY,SAAW+jC,GACvB,MAAM,IAAIrjC,MAAM,uBAElB,IADA,IAAImiC,EAAK,IAAI3hC,WAAW4iC,IACf/jC,EAAI,EAAGA,EAAI8iC,EAAG7iC,OAAQD,IAAK8iC,EAAG9iC,GAAKoY,EAAU,GAAGpY,GACzD,MAAO,CAAC+G,UAAW+7B,EAAI1qB,UAAW,IAAIjX,WAAWiX,GACnD,EAEAV,EAAKuuB,KAAKruB,QAAQ0uB,SAAW,SAASC,GAEpC,GADArC,GAAgBqC,GA/OU,KAgPtBA,EAAKtmC,OACP,MAAM,IAAIU,MAAM,iBAGlB,IAFA,IAAImiC,EAAK,IAAI3hC,WAAW4iC,IACpBhB,EAAK,IAAI5hC,WAAW6iC,IACfhkC,EAAI,EAAGA,EAAI,GAAIA,IAAK+iC,EAAG/iC,GAAKumC,EAAKvmC,GAE1C,OADA6iC,GAAoBC,EAAIC,GAAI,GACrB,CAACh8B,UAAW+7B,EAAI1qB,UAAW2qB,EACpC,EAEArrB,EAAKuuB,KAAKH,gBAAkB/B,GAC5BrsB,EAAKuuB,KAAKF,gBAAkB/B,GAC5BtsB,EAAKuuB,KAAKO,WA3PkB,GA4P5B9uB,EAAKuuB,KAAKQ,gBAAkB3C,GAE5BpsB,EAAKxR,KAAO,SAASwE,GACnBw5B,GAAgBx5B,GAChB,IAAIklB,EAAI,IAAIzuB,WA/PU,IAiQtB,OADAkhC,EAAYzS,EAAGllB,EAAKA,EAAIzK,QACjB2vB,CACT,EAEAlY,EAAKxR,KAAKwgC,WApQc,GAsQxBhvB,EAAK2uB,OAAS,SAASna,EAAGC,GAGxB,OAFA+X,GAAgBhY,EAAGC,GAEF,IAAbD,EAAEjsB,QAA6B,IAAbksB,EAAElsB,SACpBisB,EAAEjsB,SAAWksB,EAAElsB,QACkB,IAA7Bi4B,EAAGhM,EAAG,EAAGC,EAAG,EAAGD,EAAEjsB,QAC3B,EAEAyX,EAAKivB,QAAU,SAAS19B,GACtBsuB,EAActuB,CAChB,EAEA,WAGE,IAAI29B,EAAyB,qBAAT99B,KAAwBA,KAAK89B,QAAU99B,KAAK+9B,SAAY,KAC5E,GAAID,GAAUA,EAAOE,gBAAiB,CAGpCpvB,EAAKivB,SAAQ,SAASza,EAAGhhB,GACvB,IAAIlL,EAAGc,EAAI,IAAIK,WAAW+J,GAC1B,IAAKlL,EAAI,EAAGA,EAAIkL,EAAGlL,GAHT,MAIR4mC,EAAOE,gBAAgBhmC,EAAEo+B,SAASl/B,EAAGA,EAAI0hB,KAAKC,IAAIzW,EAAIlL,EAJ9C,SAMV,IAAKA,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKksB,EAAElsB,GAAKc,EAAEd,GACjCokC,GAAQtjC,EACV,GACF,MAEE8lC,EAASvlB,EAAQ,SACHulB,EAAO3uB,aACnBP,EAAKivB,SAAQ,SAASza,EAAGhhB,GACvB,IAAIlL,EAAGc,EAAI8lC,EAAO3uB,YAAY/M,GAC9B,IAAKlL,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKksB,EAAElsB,GAAKc,EAAEd,GACjCokC,GAAQtjC,EACV,GAGL,CA1BD,EA4BC,CAt1ED,CAs1EoCuW,EAAOjV,QAAUiV,EAAOjV,QAAW0G,KAAK4O,KAAO5O,KAAK4O,MAAQ,CAAC,uCCr1EjG,mGACA5L,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ0U,MAAQ1U,EAAQ2kC,QAAU3kC,EAAQikC,OAASjkC,EAAQ0M,SAAW1M,EAAQ6jC,KAAO7jC,EAAQ4kC,gBAAkB5kC,EAAQkN,iBAAmBlN,EAAQ6kC,aAAe7kC,EAAQ8kC,UAAY9kC,EAAQ+kC,MAAQ/kC,EAAQglC,WAAQ,EACrN,IAAMC,EAAahmB,EAAQ,OACrBpd,EAAMC,OAAO,GACbojC,EAAMpjC,OAAO,GACbqjC,EAAMrjC,OAAO,GACbsjC,EAAMtjC,OAAO,GACbujC,EAAMvjC,OAAO,GACbwjC,EAAY,KAAH,IAAGH,EAAOrjC,OAAO,MAC1BkjC,EAAQ,CACV/jC,EAAGY,EACHqf,EAAGpf,OAAO,GACVyjC,EAAGD,EAAY,KAAH,IAAGH,EAAOrjC,OAAO,KAAMA,OAAO,KAC1CgH,EAAGw8B,EAAYxjC,OAAO,2CACtB0rB,EAAG0X,EACHM,GAAI1jC,OAAO,iFACX2jC,GAAI3jC,OAAO,iFACX4jC,KAAM5jC,OAAO,uEAGjB,SAAS6jC,EAAU7b,GACf,IAAQ7oB,EAAS+jC,EAAT/jC,EAAGigB,EAAM8jB,EAAN9jB,EACLkP,EAAK/P,EAAIyJ,EAAIA,GACbwN,EAAKjX,EAAI+P,EAAKtG,GACpB,OAAOzJ,EAAIiX,EAAKr2B,EAAI6oB,EAAI5I,EAC5B,CANAlhB,EAAQglC,MAAQA,EAOhB,IAAMY,EAAmBZ,EAAM/jC,IAAMY,EAC/BgkC,EAAa,WACf,WAAY/b,EAAGC,EAAG0K,GAAG,UACjBpyB,KAAKynB,EAAIA,EACTznB,KAAK0nB,EAAIA,EACT1nB,KAAKoyB,EAAIA,CACb,CAaC,OAbA,yBAcD,SAAOqR,GACH,KAAMA,aAAiBD,GACnB,MAAM,IAAIjlC,UAAU,0BACxB,IAAWmlC,EAAqB1jC,KAAxBynB,EAAUkc,EAAc3jC,KAAjB0nB,EAAUkc,EAAO5jC,KAAVoyB,EACXyR,EAAqBJ,EAAxBhc,EAAUqc,EAAcL,EAAjB/b,EAAUqc,EAAON,EAAVrR,EAChB4R,EAAOhmB,EAAI,KAAD,IAAC4lB,EAAMd,IACjBmB,EAAOjmB,EAAI,KAAD,IAAC+lB,EAAMjB,IACjB9zB,EAAKgP,EAAI0lB,EAAKO,GACdh1B,EAAK+O,EAAI6lB,EAAKG,GACdE,EAAKlmB,EAAIA,EAAI2lB,EAAKI,GAAME,GACxBE,EAAKnmB,EAAIA,EAAI8lB,EAAKF,GAAMI,GAC9B,OAAOh1B,IAAOC,GAAMi1B,IAAOC,CAC/B,GAAC,oBACD,WACI,OAAO,IAAIX,EAAcxjC,KAAKynB,EAAGzJ,GAAKhe,KAAK0nB,GAAI1nB,KAAKoyB,EACxD,GAAC,oBACD,WACI,IAAWsR,EAAqB1jC,KAAxBynB,EAAUkc,EAAc3jC,KAAjB0nB,EAAUkc,EAAO5jC,KAAVoyB,EAChBlF,EAAIlP,EAAI,KAAD,IAAC0lB,EAAMZ,IACd3V,EAAInP,EAAI,KAAD,IAAC2lB,EAAMb,IACd1V,EAAIpP,EAAI,KAAD,IAACmP,EAAK2V,IACbzV,EAAIrP,EAAI8kB,GAAO9kB,EAAI,KAAD,IAAE0lB,EAAKvW,EAAM2V,IAAO5V,EAAIE,IAC1CgX,EAAIpmB,EAAI+kB,EAAM7V,GACdmX,EAAIrmB,EAAI,KAAD,IAAComB,EAAKtB,IACbwB,EAAKtmB,EAAIqmB,EAAIvB,EAAMzV,GAGzB,OAAO,IAAImW,EAAcc,EAFdtmB,EAAIomB,GAAK/W,EAAIiX,GAAMtB,EAAM5V,GACzBpP,EAAI8kB,EAAMa,EAAKC,GAE9B,GAAC,iBACD,SAAIH,GACA,KAAMA,aAAiBD,GACnB,MAAM,IAAIjlC,UAAU,0BACxB,IAAWmlC,EAAqB1jC,KAAxBynB,EAAUkc,EAAc3jC,KAAjB0nB,EAAUkc,EAAO5jC,KAAVoyB,EACXyR,EAAqBJ,EAAxBhc,EAAUqc,EAAcL,EAAjB/b,EAAUqc,EAAON,EAAVrR,EACtB,GAAIyR,IAAOrkC,GAAOskC,IAAOtkC,EACrB,OAAOQ,KACX,GAAI0jC,IAAOlkC,GAAOmkC,IAAOnkC,EACrB,OAAOikC,EACX,IAAMO,EAAOhmB,EAAI,KAAD,IAAC4lB,EAAMd,IACjBmB,EAAOjmB,EAAI,KAAD,IAAC+lB,EAAMjB,IACjB9zB,EAAKgP,EAAI0lB,EAAKO,GACdh1B,EAAK+O,EAAI6lB,EAAKG,GACdE,EAAKlmB,EAAIA,EAAI2lB,EAAKI,GAAME,GACxBE,EAAKnmB,EAAIA,EAAI8lB,EAAKF,GAAMI,GACxBO,EAAIvmB,EAAI/O,EAAKD,GACbvE,EAAIuT,EAAImmB,EAAKD,GACnB,GAAIK,IAAM/kC,EACN,OAAIiL,IAAMjL,EACCQ,KAAKwkC,SAGLhB,EAAciB,KAG7B,IAAMC,EAAK1mB,EAAI,KAAD,IAACumB,EAAKzB,IACd6B,EAAM3mB,EAAIumB,EAAIG,GACdE,EAAI5mB,EAAIhP,EAAK01B,GACbJ,EAAKtmB,EAAI,SAAAvT,EAAKq4B,GAAM6B,EAAM7B,EAAM8B,GAGtC,OAAO,IAAIpB,EAAcc,EAFdtmB,EAAIvT,GAAKm6B,EAAIN,GAAMJ,EAAKS,GACxB3mB,EAAI4lB,EAAKG,EAAKQ,GAE7B,GAAC,sBACD,SAASd,GACL,OAAOzjC,KAAKsF,IAAIm+B,EAAMoB,SAC1B,GAAC,4BACD,SAAeC,GACX,IAAMC,EAAKvB,EAAciB,KACzB,GAAsB,kBAAXK,GAAuBA,IAAWtlC,EACzC,OAAOulC,EACX,IAAIt+B,EAAIu+B,EAAgBF,GACxB,GAAIr+B,IAAMo8B,EACN,OAAO7iC,KACX,IAAKujC,EAAkB,CAGnB,IAFA,IAAIza,EAAIic,EACJtnC,EAAIuC,KACDyG,EAAIjH,GACHiH,EAAIo8B,IACJ/Z,EAAIA,EAAExjB,IAAI7H,IACdA,EAAIA,EAAE+mC,SACN/9B,IAAMo8B,EAEV,OAAO/Z,CACX,CAKA,IAJA,MAA+Bmc,EAAgBx+B,GAAzCy+B,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GACpBC,EAAMP,EACNQ,EAAMR,EACNtnC,EAAIuC,KACDmlC,EAAK3lC,GAAO6lC,EAAK7lC,GAChB2lC,EAAKtC,IACLyC,EAAMA,EAAIhgC,IAAI7H,IACd4nC,EAAKxC,IACL0C,EAAMA,EAAIjgC,IAAI7H,IAClBA,EAAIA,EAAE+mC,SACNW,IAAOtC,EACPwC,IAAOxC,EAOX,OALIqC,IACAI,EAAMA,EAAIT,UACVO,IACAG,EAAMA,EAAIV,UACdU,EAAM,IAAI/B,EAAcxlB,EAAIunB,EAAI9d,EAAIkb,EAAMU,MAAOkC,EAAI7d,EAAG6d,EAAInT,GACrDkT,EAAIhgC,IAAIigC,EACnB,GAAC,8BACD,SAAiBC,GAKb,IAJA,IAAMC,EAAUlC,EAAmB,IAAMiC,EAAI,EAAI,IAAMA,EAAI,EACrDE,EAAS,GACX5c,EAAI9oB,KACJmc,EAAO2M,EACFnM,EAAS,EAAGA,EAAS8oB,EAAS9oB,IAAU,CAC7CR,EAAO2M,EACP4c,EAAOjqC,KAAK0gB,GACZ,IAAK,IAAI5gB,EAAI,EAAGA,EAAI,KAAH,IAAG,EAAMiqC,EAAI,GAAIjqC,IAC9B4gB,EAAOA,EAAK7W,IAAIwjB,GAChB4c,EAAOjqC,KAAK0gB,GAEhB2M,EAAI3M,EAAKqoB,QACb,CACA,OAAOkB,CACX,GAAC,kBACD,SAAKj/B,EAAGk/B,IACCA,GAAe3lC,KAAKO,OAAOijC,EAAcoC,QAC1CD,EAAcjD,EAAMkD,MACxB,IAAMJ,EAAKG,GAAeA,EAAYE,cAAiB,EACvD,GAAI,IAAML,EACN,MAAM,IAAItpC,MAAM,iEAEpB,IAAI4pC,EAAcH,GAAeI,EAAiBj+B,IAAI69B,GACjDG,IACDA,EAAc9lC,KAAKgmC,iBAAiBR,GAChCG,GAAqB,IAANH,IACfM,EAActC,EAAcyC,WAAWH,GACvCC,EAAiB/mC,IAAI2mC,EAAaG,KAU1C,IAPA,IAAIhd,EAAI0a,EAAciB,KAClBlK,EAAIiJ,EAAciB,KAChBgB,EAAU,GAAKlC,EAAmB,IAAMiC,EAAI,IAAMA,GAClDU,EAAa,KAAH,IAAG,EAAMV,EAAI,GACvBpa,EAAO3rB,OAAO,WAAK+lC,GAAI,GACvBW,EAAY,KAAH,IAAG,EAAKX,GACjBY,EAAU3mC,OAAO+lC,GACd7oB,EAAS,EAAGA,EAAS8oB,EAAS9oB,IAAU,CAC7C,IAAMlgB,EAASkgB,EAASupB,EACpBG,EAAQjoC,OAAOqI,EAAI2kB,GAMvB,GALA3kB,IAAM2/B,EACFC,EAAQH,IACRG,GAASF,EACT1/B,GAAKo8B,GAEK,IAAVwD,EAAa,CACb,IAAIC,EAAKR,EAAYrpC,GACjBkgB,EAAS,IACT2pB,EAAKA,EAAGzB,UACZtK,EAAIA,EAAEj1B,IAAIghC,EACd,KACK,CACD,IAAIC,EAAST,EAAYrpC,EAASwgB,KAAKqD,IAAI+lB,GAAS,GAChDA,EAAQ,IACRE,EAASA,EAAO1B,UACpB/b,EAAIA,EAAExjB,IAAIihC,EACd,CACJ,CACA,MAAO,CAAEzd,EAAAA,EAAGyR,EAAAA,EAChB,GAAC,sBACD,SAASuK,EAAQa,GACb,IACIa,EACAC,EAFAhgC,EAAIu+B,EAAgBF,GAGxB,GAAIvB,EAAkB,CAClB,MAAiC0B,EAAgBx+B,GAAzCy+B,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAC1B,EAAyBrlC,KAAK0mC,KAAKvB,EAAIQ,GAA9BL,EAAG,EAANxc,EAAW6d,EAAG,EAANpM,EACd,EAAyBv6B,KAAK0mC,KAAKrB,EAAIM,GAA9BJ,EAAG,EAANzc,EAAW8d,EAAG,EAANrM,EACV2K,IACAI,EAAMA,EAAIT,UACVO,IACAG,EAAMA,EAAIV,UACdU,EAAM,IAAI/B,EAAcxlB,EAAIunB,EAAI9d,EAAIkb,EAAMU,MAAOkC,EAAI7d,EAAG6d,EAAInT,GAC5DoU,EAAQlB,EAAIhgC,IAAIigC,GAChBkB,EAAOE,EAAIrhC,IAAIshC,EACnB,KACK,CACD,MAAiB5mC,KAAK0mC,KAAKjgC,EAAGk/B,GAC9Ba,EADS,EAAD1d,EAER2d,EAFY,EAADlM,CAGf,CACA,OAAOiJ,EAAcyC,WAAW,CAACO,EAAOC,IAAO,EACnD,GAAC,sBACD,WAAgC,IAAvBI,EAAO,UAAH,6CAAGC,EAAO9mC,KAAKoyB,GAChB3K,EAAYznB,KAAZynB,EAAGC,EAAS1nB,KAAT0nB,EAAG0K,EAAMpyB,KAANoyB,EACR2U,EAAMF,EACNG,EAAMhpB,EAAI+oB,EAAMA,GAChBE,EAAMjpB,EAAIgpB,EAAMD,GAChBG,EAAKlpB,EAAIyJ,EAAIuf,GACbG,EAAKnpB,EAAI0J,EAAIuf,GACbG,EAAKppB,EAAIoU,EAAI2U,GACnB,GAAIK,IAAOvE,EACP,MAAM,IAAI3mC,MAAM,oBACpB,OAAO,IAAIwmC,EAAMwE,EAAIC,EACzB,IAAC,yBAnND,SAAkBre,GACd,KAAMA,aAAa4Z,GACf,MAAM,IAAInkC,UAAU,4CAExB,OAAO,IAAIilC,EAAc1a,EAAErB,EAAGqB,EAAEpB,EAAGmb,EACvC,GAAC,2BACD,SAAqB6C,GACjB,IAAM2B,EAqjBd,SAAqBC,GAAmB,IAAbxe,EAAI,UAAH,6CAAG6Z,EAAMO,EAC3BqE,EAAU,IAAInsC,MAAMksC,EAAK9rC,QAOzBgsC,EAAWV,EANMQ,EAAK3oC,QAAO,SAACquB,EAAKrmB,EAAKpL,GAC1C,OAAIoL,IAAQnH,EACDwtB,GACXua,EAAQhsC,GAAKyxB,EACNhP,EAAIgP,EAAMrmB,EAAKmiB,GAC1B,GAAG+Z,GACqC/Z,GAOxC,OANAwe,EAAKG,aAAY,SAACza,EAAKrmB,EAAKpL,GACxB,OAAIoL,IAAQnH,EACDwtB,GACXua,EAAQhsC,GAAKyiB,EAAIgP,EAAMua,EAAQhsC,GAAIutB,GAC5B9K,EAAIgP,EAAMrmB,EAAKmiB,GAC1B,GAAG0e,GACID,CACX,CArkBsBG,CAAYhC,EAAOl+B,KAAI,SAACshB,GAAC,OAAKA,EAAEsJ,CAAC,KAC/C,OAAOsT,EAAOl+B,KAAI,SAACshB,EAAGvtB,GAAC,OAAKutB,EAAE6e,SAASN,EAAM9rC,GAAG,GACpD,GAAC,wBACD,SAAkBmqC,GACd,OAAOlC,EAAcoE,cAAclC,GAAQl+B,IAAIg8B,EAAcqE,WACjE,KAAC,EAlBc,GA2NnBrE,EAAcoC,KAAO,IAAIpC,EAAcb,EAAMQ,GAAIR,EAAMS,GAAIP,GAC3DW,EAAciB,KAAO,IAAIjB,EAAchkC,EAAKqjC,EAAKrjC,GACjD,IAAMumC,EAAmB,IAAI+B,QACvBpF,EAAK,WACP,WAAYjb,EAAGC,GAAG,UACd1nB,KAAKynB,EAAIA,EACTznB,KAAK0nB,EAAIA,CACb,CAiEC,OAjEA,iCACD,SAAewe,GACXlmC,KAAK6lC,aAAeK,EACpBH,EAAiB/sB,OAAOhZ,KAC5B,GAAC,wBA8DD,WAAiC,IAAtB+nC,EAAe,UAAH,8CACnB,OAAOhrC,EAAWiD,KAAKgoC,MAAMD,GACjC,GAAC,mBACD,WAA4B,IAAtBA,EAAe,UAAH,8CACRtgB,EAAIwgB,EAAYjoC,KAAKynB,GAC3B,GAAIsgB,EAAc,CACd,IAAMvmC,EAASxB,KAAK0nB,EAAImb,EAAM,KAAO,KACrC,MAAO,GAAP,OAAUrhC,GAAM,OAAGimB,EACvB,CAEI,MAAO,KAAP,OAAYA,GAAC,OAAGwgB,EAAYjoC,KAAK0nB,GAEzC,GAAC,oBACD,WACI,OAAO1nB,KAAKgoC,OAAM,GAAM7rC,MAAM,EAClC,GAAC,oBACD,WACI,OAAO6D,KAAK0C,YAAW,GAAMvG,MAAM,EACvC,GAAC,4BACD,WACI,IAAM8J,EAAM,iCACJwhB,EAASznB,KAATynB,EAAGC,EAAM1nB,KAAN0nB,EACX,IAAKwgB,EAAoBzgB,KAAOygB,EAAoBxgB,GAChD,MAAM,IAAIxrB,MAAM+J,GACpB,IAAMmX,EAAOY,EAAI0J,EAAIA,GAErB,GAAI1J,EAAIZ,EADMkmB,EAAU7b,MACEjoB,EACtB,MAAM,IAAItD,MAAM+J,EACxB,GAAC,oBACD,SAAOw9B,GACH,OAAOzjC,KAAKynB,IAAMgc,EAAMhc,GAAKznB,KAAK0nB,IAAM+b,EAAM/b,CAClD,GAAC,oBACD,WACI,OAAO,IAAIgb,EAAM1iC,KAAKynB,EAAGzJ,GAAKhe,KAAK0nB,GACvC,GAAC,oBACD,WACI,OAAO8b,EAAcqE,WAAW7nC,MAAMwkC,SAASmD,UACnD,GAAC,iBACD,SAAIlE,GACA,OAAOD,EAAcqE,WAAW7nC,MAAMsF,IAAIk+B,EAAcqE,WAAWpE,IAAQkE,UAC/E,GAAC,sBACD,SAASlE,GACL,OAAOzjC,KAAKsF,IAAIm+B,EAAMoB,SAC1B,GAAC,sBACD,SAASC,GACL,OAAOtB,EAAcqE,WAAW7nC,MAAMmoC,SAASrD,EAAQ9kC,MAAM2nC,UACjE,GAAC,kCACD,SAAqBS,EAAGxpC,EAAGigB,GACvB,IAAMqkB,EAAIM,EAAcqE,WAAW7nC,MAC7BqoC,EAAKzpC,IAAMY,GAAOZ,IAAMikC,GAAO7iC,OAAS0iC,EAAMkD,KAAO1C,EAAEoF,eAAe1pC,GAAKskC,EAAEiF,SAASvpC,GACtF2pC,EAAK/E,EAAcqE,WAAWO,GAAGE,eAAezpB,GAChD2pB,EAAMH,EAAG/iC,IAAIijC,GACnB,OAAOC,EAAIjoC,OAAOijC,EAAciB,WAAQllC,EAAYipC,EAAIb,UAC5D,IAAC,gCAlHD,SAAyB9hC,GACrB,IAAM4iC,EAA2B,KAAjB5iC,EAAMrK,OAChBisB,EAAIihB,EAAcD,EAAU5iC,EAAQA,EAAM40B,SAAS,IACzD,IAAKyN,EAAoBzgB,GACrB,MAAM,IAAIvrB,MAAM,yBACpB,IACIwrB,EA2SZ,SAAiBD,GACb,IAAQyb,EAAMP,EAANO,EACFyF,EAAMlpC,OAAO,GACbmpC,EAAOnpC,OAAO,IACdopC,EAAOppC,OAAO,IACdqpC,EAAOrpC,OAAO,IACdspC,EAAOtpC,OAAO,IACdupC,EAAOvpC,OAAO,IACdilB,EAAM+C,EAAIA,EAAIA,EAAKyb,EACnBre,EAAMH,EAAKA,EAAK+C,EAAKyb,EACrB5d,EAAM2jB,EAAKpkB,EAAIke,GAAOle,EAAMqe,EAC5Bnd,EAAMkjB,EAAK3jB,EAAIyd,GAAOle,EAAMqe,EAC5BnJ,EAAOkP,EAAKljB,EAAI+c,GAAOpe,EAAMwe,EAC7BgG,EAAOD,EAAKlP,EAAK6O,GAAQ7O,EAAOmJ,EAChCiG,EAAOF,EAAKC,EAAKL,GAAQK,EAAOhG,EAChCkG,EAAOH,EAAKE,EAAKJ,GAAQI,EAAOjG,EAChCmG,EAAQJ,EAAKG,EAAKJ,GAAQI,EAAOlG,EACjCoG,EAAQL,EAAKI,EAAMN,GAAQI,EAAOjG,EAClCqG,EAAQN,EAAKK,EAAMvG,GAAOle,EAAMqe,EAChCvM,EAAMsS,EAAKM,EAAMT,GAAQI,EAAOhG,EAChCtM,EAAMqS,EAAKtS,EAAIgS,GAAOjkB,EAAMwe,EAClC,OAAO+F,EAAKrS,EAAIkM,EACpB,CAjUgB0G,CADGlG,EAAU7b,IAEfgiB,GAAU/hB,EAAImb,KAASA,EACzB4F,EACIgB,IACA/hB,EAAI1J,GAAK0J,IAG6B,KAAP,EAAX7hB,EAAM,MACP4jC,IACnB/hB,EAAI1J,GAAK0J,IAEjB,IAAM8e,EAAQ,IAAI9D,EAAMjb,EAAGC,GAE3B,OADA8e,EAAMkD,iBACClD,CACX,GAAC,iCACD,SAA2B3gC,GACvB,IAEM2gC,EAAQ,IAAI9D,EAFRgG,EAAc7iC,EAAM40B,SAAS,EAAG,KAChCiO,EAAc7iC,EAAM40B,SAAS,GAAI,MAG3C,OADA+L,EAAMkD,iBACClD,CACX,GAAC,qBACD,SAAevoC,GACX,IAAM4H,EAAQ8jC,EAAY1rC,GACpBzB,EAAMqJ,EAAMrK,OACZouC,EAAS/jC,EAAM,GACrB,GAAY,KAARrJ,GAAuB,KAARA,IAA0B,IAAXotC,GAA8B,IAAXA,GACjD,OAAO5pC,KAAK6pC,kBAAkBhkC,GAElC,GAAY,KAARrJ,GAAyB,IAAXotC,EACd,OAAO5pC,KAAK8pC,oBAAoBjkC,GACpC,MAAM,IAAI3J,MAAM,wGAAD,OAAyGM,GAC5H,GAAC,4BACD,SAAsB2F,GAClB,OAAOugC,EAAMkD,KAAKuC,SAAS4B,EAAoB5nC,GACnD,GAAC,2BACD,SAAqBiI,EAASI,EAAWL,GAErC,IAAMghB,EAAI6e,EADV5/B,EAAUu/B,EAAYv/B,IAEtB,EAAiB6/B,EAAmBz/B,GAA5BC,EAAC,EAADA,EAAGC,EAAC,EAADA,EACX,GAAiB,IAAbP,GAA+B,IAAbA,EAClB,MAAM,IAAIjO,MAAM,kDAEpB,IAAMsF,EAAoB,EAAX2I,EAAe,KAAO,KAC/B+/B,EAAIxH,EAAMlgC,QAAQhB,EAASymC,EAAYx9B,IACrChE,EAAMk8B,EAANl8B,EACF8qB,EAAOuV,EAAOr8B,EAAGhE,GACjB0jC,EAAKnsB,GAAKmN,EAAIoG,EAAM9qB,GACpB2jC,EAAKpsB,EAAItT,EAAI6mB,EAAM9qB,GACnB2hC,EAAI1F,EAAMkD,KAAKyE,qBAAqBH,EAAGC,EAAIC,GACjD,IAAKhC,EACD,MAAM,IAAIlsC,MAAM,+CAEpB,OADAksC,EAAEsB,iBACKtB,CACX,KAAC,EArEM,GAgIX,SAASkC,EAAS5/B,GACd,OAAOtM,OAAOC,SAASqM,EAAE,GAAI,KAAO,EAAI,KAAOA,EAAIA,CACvD,CACA,SAAS6/B,EAAYjtC,GACjB,GAAIA,EAAK9B,OAAS,GAAiB,IAAZ8B,EAAK,GACxB,MAAM,IAAIpB,MAAM,kCAAD,OAAmCK,EAAWe,KAEjE,IAAMd,EAAMc,EAAK,GACXsJ,EAAMtJ,EAAKm9B,SAAS,EAAGj+B,EAAM,GACnC,IAAKA,GAAOoK,EAAIpL,SAAWgB,EACvB,MAAM,IAAIN,MAAM,2CAEpB,GAAe,IAAX0K,EAAI,IAAeA,EAAI,IAAM,IAC7B,MAAM,IAAI1K,MAAM,8CAEpB,MAAO,CAAEoB,KAAMorC,EAAc9hC,GAAMwW,KAAM9f,EAAKm9B,SAASj+B,EAAM,GACjE,CAnBAmB,EAAQ+kC,MAAQA,EAChBA,EAAMkD,KAAO,IAAIlD,EAAMC,EAAMQ,GAAIR,EAAMS,IACvCV,EAAM+B,KAAO,IAAI/B,EAAMljC,EAAKA,GA+B3B,IACKijC,EAAS,WACX,WAAYh4B,EAAGC,GAAG,UACd1K,KAAKyK,EAAIA,EACTzK,KAAK0K,EAAIA,EACT1K,KAAK0pC,gBACT,CAoBC,OApBA,iCAqBD,WACI,IAAQj/B,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EACX,IAAK8/B,EAAmB//B,GACpB,MAAM,IAAIvO,MAAM,0CACpB,IAAKsuC,EAAmB9/B,GACpB,MAAM,IAAIxO,MAAM,yCACxB,GAAC,sBACD,WACI,IAAMuuC,EAAO9H,EAAMl8B,GAAKo8B,EACxB,OAAO7iC,KAAK0K,EAAI+/B,CACpB,GAAC,wBACD,WACI,OAAOzqC,KAAK0qC,WAAa,IAAIjI,EAAUziC,KAAKyK,EAAGk4B,EAAMl8B,EAAIzG,KAAK0K,GAAK1K,IACvE,GAAC,2BACD,WAAoC,IAAtB+nC,EAAe,UAAH,8CACtB,OAAOhrC,EAAWiD,KAAK2qC,SAAS5C,GACpC,GAAC,sBACD,WAA+B,IAAtBA,EAAe,UAAH,8CACX6C,EAAON,EAASO,EAAoB7qC,KAAK0K,IAC/C,GAAIq9B,EACA,OAAO6C,EACX,IAAME,EAAOR,EAASO,EAAoB7qC,KAAKyK,IACzCsgC,EAAOF,EAAoBC,EAAKtvC,OAAS,GACzCwvC,EAAOH,EAAoBD,EAAKpvC,OAAS,GACzCA,EAASqvC,EAAoBC,EAAKtvC,OAAS,EAAIovC,EAAKpvC,OAAS,EAAI,GACvE,MAAO,KAAP,OAAYA,EAAM,aAAKuvC,GAAI,OAAGD,EAAI,aAAKE,GAAI,OAAGJ,EAClD,GAAC,wBACD,WACI,OAAO5qC,KAAKirC,eAChB,GAAC,mBACD,WACI,OAAOjrC,KAAK2qC,UAChB,GAAC,+BACD,WACI,OAAO5tC,EAAWiD,KAAKkrC,eAC3B,GAAC,0BACD,WACI,OAAOjD,EAAYjoC,KAAKyK,GAAKw9B,EAAYjoC,KAAK0K,EAClD,IAAC,0BA1DD,SAAmBzM,GACf,IAAMY,EAAMssC,EAASltC,GACfkP,EAAO,wBACb,GAAmB,kBAARlP,IAAqBY,EAC5B,MAAM,IAAIN,UAAU,GAAD,OAAI4O,EAAI,oCAC/B,IAAM7N,EAAMT,EAAMtC,EAAW0B,GAAOA,EACpC,GAAmB,MAAfqB,EAAI9D,OACJ,MAAM,IAAIU,MAAM,GAAD,OAAIiR,EAAI,2BAC3B,OAAO,IAAIs1B,EAAU2I,EAAY9rC,EAAInD,MAAM,EAAG,KAAMivC,EAAY9rC,EAAInD,MAAM,GAAI,MAClF,GAAC,qBACD,SAAe8B,GACX,IAAMY,EAAMssC,EAASltC,GACrB,GAAmB,kBAARA,IAAqBY,EAC5B,MAAM,IAAIN,UAAU,oDACxB,MAlCR,SAA2BjB,GACvB,GAAIA,EAAK9B,OAAS,GAAgB,IAAX8B,EAAK,GACxB,MAAM,IAAIpB,MAAM,0BAAD,OAA2BK,EAAWe,KAEzD,GAAIA,EAAK,KAAOA,EAAK9B,OAAS,EAC1B,MAAM,IAAIU,MAAM,uCAEpB,MAAkCquC,EAAYjtC,EAAKm9B,SAAS,IAA9ChwB,EAAC,EAAPnN,KACR,EAAsCitC,EADT,EAAZntB,MACH1S,EAAC,EAAPpN,KAAe+tC,EAAU,EAAhBjuB,KACjB,GAAIiuB,EAAW7vC,OACX,MAAM,IAAIU,MAAM,gDAAD,OAAiDK,EAAW8uC,KAE/E,MAAO,CAAE5gC,EAAAA,EAAGC,EAAAA,EAChB,CAqByB4gC,CAAkBzsC,EAAMZ,EAAMlB,EAAWkB,IAC1D,OAAO,IAAIwkC,EADF,EAADh4B,EAAI,EAADC,EAEf,GAAC,qBACD,SAAezM,GACX,OAAO+B,KAAKurC,QAAQttC,EACxB,KAAC,EAzBU,GAmEf,SAAStC,IAAuB,2BAAR+C,EAAM,yBAANA,EAAM,gBAC1B,IAAKA,EAAO8sC,MAAML,GACd,MAAM,IAAIjvC,MAAM,4BACpB,GAAsB,IAAlBwC,EAAOlD,OACP,OAAOkD,EAAO,GAGlB,IAFA,IAAMlD,EAASkD,EAAOC,QAAO,SAACC,EAAGC,GAAG,OAAKD,EAAIC,EAAIrD,MAAM,GAAE,GACnDsD,EAAS,IAAIpC,WAAWlB,GACrBD,EAAI,EAAGwD,EAAM,EAAGxD,EAAImD,EAAOlD,OAAQD,IAAK,CAC7C,IAAMsD,EAAMH,EAAOnD,GACnBuD,EAAOE,IAAIH,EAAKE,GAChBA,GAAOF,EAAIrD,MACf,CACA,OAAOsD,CACX,CACA,SAASqsC,EAAStlC,GACd,OAAOA,aAAiBnJ,UAC5B,CAjBAiB,EAAQ8kC,UAAYA,EAkBpB,IAAMgJ,EAAQrwC,MAAMuB,KAAK,CAAEnB,OAAQ,MAAO,SAACa,EAAGd,GAAC,OAAKA,EAAEuC,SAAS,IAAIC,SAAS,EAAG,IAAI,IACnF,SAASxB,EAAWyB,GAChB,KAAMA,aAAkBtB,YACpB,MAAM,IAAIR,MAAM,uBAEpB,IADA,IAAI+B,EAAM,GACD1C,EAAI,EAAGA,EAAIyC,EAAOxC,OAAQD,IAC/B0C,GAAOwtC,EAAMztC,EAAOzC,IAExB,OAAO0C,CACX,CACA,SAASgqC,EAAYthC,GACjB,GAAIA,EAAMs8B,EACN,MAAM,IAAI/mC,MAAM,2BACpB,OAAOyK,EAAI7I,SAAS,IAAIC,SAAS,GAAI,IACzC,CACA,SAAS2tC,EAAS/kC,GACd,OAAO5J,EAAWkrC,EAAYthC,GAClC,CACA,SAASkkC,EAAoBlkC,GACzB,IAAM1I,EAAM0I,EAAI7I,SAAS,IACzB,OAAoB,EAAbG,EAAIzC,OAAa,IAAH,OAAOyC,GAAQA,CACxC,CACA,SAASmtC,EAAYntC,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIM,UAAU,4CAA8CN,GAEtE,OAAOwB,OAAO,KAAD,OAAMxB,GACvB,CACA,SAASlB,EAAWkB,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIM,UAAU,2CAA6CN,GAErE,GAAIA,EAAIzC,OAAS,EACb,MAAM,IAAIU,MAAM,4CAA8C+B,EAAIzC,QAEtE,IADA,IAAMgD,EAAQ,IAAI9B,WAAWuB,EAAIzC,OAAS,GACjCD,EAAI,EAAGA,EAAIiD,EAAMhD,OAAQD,IAAK,CACnC,IAAMkD,EAAQ,EAAJlD,EACJ2C,EAAUD,EAAI9B,MAAMsC,EAAGA,EAAI,GAC3BN,EAAOC,OAAOC,SAASH,EAAS,IACtC,GAAIE,OAAOE,MAAMH,IAASA,EAAO,EAC7B,MAAM,IAAIjC,MAAM,yBACpBsC,EAAMjD,GAAK4C,CACf,CACA,OAAOK,CACX,CACA,SAASkqC,EAAc7iC,GACnB,OAAOulC,EAAY7uC,EAAWsJ,GAClC,CACA,SAAS8jC,EAAY1rC,GACjB,OAAOA,aAAevB,WAAaA,WAAWC,KAAKsB,GAAOlB,EAAWkB,EACzE,CACA,SAAS+mC,EAAgBr+B,GACrB,GAAmB,kBAARA,GAAoBvI,OAAOsH,cAAciB,IAAQA,EAAM,EAC9D,OAAOlH,OAAOkH,GAClB,GAAmB,kBAARA,GAAoB6jC,EAAmB7jC,GAC9C,OAAOA,EACX,MAAM,IAAIpI,UAAU,sDACxB,CACA,SAASyf,EAAIpf,GAAgB,IAAbigB,EAAI,UAAH,6CAAG8jB,EAAMO,EAChBpkC,EAASF,EAAIigB,EACnB,OAAO/f,GAAUU,EAAMV,EAAS+f,EAAI/f,CACxC,CACA,SAASmqC,EAAKxhB,EAAGkkB,GAGb,IAFA,IAAQzI,EAAMP,EAANO,EACJt8B,EAAM6gB,EACHkkB,KAAUnsC,GACboH,GAAOA,EACPA,GAAOs8B,EAEX,OAAOt8B,CACX,CAwBA,SAASkgC,EAAO5qB,GAA0B,IAAlB0vB,EAAS,UAAH,6CAAGjJ,EAAMO,EACnC,GAAIhnB,IAAW1c,GAAOosC,GAAUpsC,EAC5B,MAAM,IAAItD,MAAM,6CAAD,OAA8CggB,EAAM,gBAAQ0vB,IAK/E,IAHA,IAAIhtC,EAAIof,EAAI9B,EAAQ0vB,GAChB/sB,EAAI+sB,EACJnkB,EAAIjoB,EAAKkoB,EAAImb,EAAKnQ,EAAImQ,EAAKxmC,EAAImD,EAC5BZ,IAAMY,GAAK,CACd,IAAMqgB,EAAIhB,EAAIjgB,EACR6L,EAAIoU,EAAIjgB,EACR2qB,EAAI9B,EAAIiL,EAAI7S,EACZpZ,EAAIihB,EAAIrrB,EAAIwjB,EAClBhB,EAAIjgB,EAAGA,EAAI6L,EAAGgd,EAAIiL,EAAGhL,EAAIrrB,EAAGq2B,EAAInJ,EAAGltB,EAAIoK,CAC3C,CACA,IAAMmnB,EAAM/O,EACZ,GAAI+O,IAAQiV,EACR,MAAM,IAAI3mC,MAAM,0BACpB,OAAO8hB,EAAIyJ,EAAGmkB,EAClB,CAkBA,IAAMC,EAAa,SAACjtC,EAAGigB,GAAC,OAAMjgB,EAAIigB,EAAIikB,GAAOjkB,CAAC,EACxCitB,EAAY,KAAH,IAAGhJ,EAAOrjC,OAAO,MAChC,SAASwlC,EAAgB19B,GACrB,IAAQd,EAAMk8B,EAANl8B,EACFgc,EAAKhjB,OAAO,sCACZ8kB,GAAMse,EAAMpjC,OAAO,sCACnBmjB,EAAKnjB,OAAO,uCACZilB,EAAKjC,EACLspB,EAAKF,EAAWnnB,EAAKnd,EAAGd,GACxBulC,EAAKH,GAAYtnB,EAAKhd,EAAGd,GAC3B0+B,EAAKnnB,EAAIzW,EAAIwkC,EAAKtpB,EAAKupB,EAAKppB,EAAInc,GAChC4+B,EAAKrnB,GAAK+tB,EAAKxnB,EAAKynB,EAAKtnB,EAAIje,GAC3By+B,EAAQC,EAAK2G,EACb1G,EAAQC,EAAKyG,EAKnB,GAJI5G,IACAC,EAAK1+B,EAAI0+B,GACTC,IACAC,EAAK5+B,EAAI4+B,GACTF,EAAK2G,GAAazG,EAAKyG,EACvB,MAAM,IAAI5vC,MAAM,2CAA6CqL,GAEjE,MAAO,CAAE29B,MAAAA,EAAOC,GAAAA,EAAIC,MAAAA,EAAOC,GAAAA,EAC/B,CACA,SAAS2E,EAAavoC,GAClB,IAAQgF,EAAMk8B,EAANl8B,EAEFunB,EAAqB,EADRvsB,EAAKjG,OACO,IAC3B2vB,EAAIud,EAAcjnC,GAKtB,OAJIusB,EAAQ,IACR7C,IAAS1rB,OAAOuuB,IAChB7C,GAAK1kB,IACL0kB,GAAK1kB,GACF0kB,CACX,CAAC,IACK8gB,EAAQ,WACV,aAAc,UACVjsC,KAAK3D,EAAI,IAAIK,WAAW,IAAIqJ,KAAK,GACjC/F,KAAKuH,EAAI,IAAI7K,WAAW,IAAIqJ,KAAK,GACjC/F,KAAK2R,QAAU,CACnB,CA2CC,OA3CA,uBACD,WAAgB,6BAAR/Q,EAAM,yBAANA,EAAM,gBACV,OAAO,EAAAjD,EAAQ0U,OAAM65B,WAAU,SAAClsC,KAAKuH,GAAC,OAAK3G,GAC/C,GAAC,sBACD,WAAoB,MAChB,GAA4C,oBAAjCjD,EAAQ0U,MAAM85B,eACrB,MAAM,IAAIjwC,MAAM,yDAAyD,2BAFrE0E,EAAM,yBAANA,EAAM,gBAGd,IAAMgG,GAAM,EAAAjJ,EAAQ0U,OAAM85B,eAAc,SAACnsC,KAAKuH,GAAC,OAAK3G,IACpD,GAAIgG,aAAe6C,QACf,MAAM,IAAIvN,MAAM,uDACpB,OAAO0K,CACX,GAAC,kBACD,WACI,GAAI5G,KAAK2R,SAAW,IAChB,MAAM,IAAIzV,MAAM,qDAEpB8D,KAAK2R,SAAW,CACpB,GAAC,iDACD,gGAAoC,OAAvBmwB,EAAO,EAAH,6BAAG,IAAIplC,WAAY,SACjBsD,KAAKosC,KAAKpsC,KAAK3D,EAAGK,WAAWC,KAAK,CAAC,IAAQmlC,GAAK,OAAzD,OAAN9hC,KAAKuH,EAAI,EAAH,cACSvH,KAAKosC,KAAKpsC,KAAK3D,GAAE,OAA1B,GAAN2D,KAAK3D,EAAI,EAAH,KACc,IAAhBylC,EAAKtmC,OAAY,kEAENwE,KAAKosC,KAAKpsC,KAAK3D,EAAGK,WAAWC,KAAK,CAAC,IAAQmlC,GAAK,QAAzD,OAAN9hC,KAAKuH,EAAI,EAAH,eACSvH,KAAKosC,KAAKpsC,KAAK3D,GAAE,QAAhC2D,KAAK3D,EAAI,EAAH,sDACT,kDARA,IAQA,wBACD,WAAoC,IAAzBylC,EAAO,UAAH,6CAAG,IAAIplC,WAClBsD,KAAKuH,EAAIvH,KAAKqsC,SAASrsC,KAAK3D,EAAGK,WAAWC,KAAK,CAAC,IAAQmlC,GACxD9hC,KAAK3D,EAAI2D,KAAKqsC,SAASrsC,KAAK3D,GACR,IAAhBylC,EAAKtmC,SAETwE,KAAKuH,EAAIvH,KAAKqsC,SAASrsC,KAAK3D,EAAGK,WAAWC,KAAK,CAAC,IAAQmlC,GACxD9hC,KAAK3D,EAAI2D,KAAKqsC,SAASrsC,KAAK3D,GAChC,GAAC,mDACD,8EACgB,OAAZ2D,KAAKssC,OAAO,SACGtsC,KAAKosC,KAAKpsC,KAAK3D,GAAE,OAA1B,OAAN2D,KAAK3D,EAAI,EAAH,uBACC2D,KAAK3D,GAAC,gDAChB,kDALA,IAKA,0BACD,WAGI,OAFA2D,KAAKssC,OACLtsC,KAAK3D,EAAI2D,KAAKqsC,SAASrsC,KAAK3D,GACrB2D,KAAK3D,CAChB,KAAC,EAhDS,GAkDd,SAASmuC,EAAmB7jC,GACxB,OAAOnH,EAAMmH,GAAOA,EAAMg8B,EAAMl8B,CACpC,CACA,SAASyhC,EAAoBvhC,GACzB,OAAOnH,EAAMmH,GAAOA,EAAMg8B,EAAMO,CACpC,CACA,SAASqJ,EAASC,EAAQjjB,EAAG9rB,GACzB,IAAM8J,EAAImhC,EAAc8D,GACxB,GAAKhC,EAAmBjjC,GAAxB,CAEA,IAAQd,EAAMk8B,EAANl8B,EACFoZ,EAAI6iB,EAAMkD,KAAKuC,SAAS5gC,GACxBkD,EAAIuT,EAAI6B,EAAE4H,EAAGhhB,GACnB,GAAIgE,IAAMjL,EAAV,CAEA,IAAMkL,EAAIsT,EAAI8oB,EAAOv/B,EAAGd,GAAKuX,EAAIuL,EAAI9rB,EAAIgN,EAAGhE,GAAIA,GAChD,GAAIiE,IAAMlL,EAAV,CAEA,IAAMuL,EAAM,IAAI03B,EAAUh4B,EAAGC,GAE7B,MAAO,CAAEK,IAAAA,EAAKZ,UADI0V,EAAE4H,IAAM1c,EAAIN,EAAI,EAAI,GAAKrM,OAAOyhB,EAAE6H,EAAImb,GAF9C,CAHA,CALA,CAYd,CACA,SAASkH,EAAoB5gC,GACzB,IAAIxC,EACJ,GAAmB,kBAARwC,EACPxC,EAAMwC,OAEL,GAAmB,kBAARA,GAAoB/K,OAAOsH,cAAcyD,IAAQA,EAAM,EACnExC,EAAMlH,OAAO0J,QAEZ,GAAmB,kBAARA,EAAkB,CAC9B,GAAmB,KAAfA,EAAI3N,OACJ,MAAM,IAAIU,MAAM,oCACpByK,EAAMykC,EAAYjiC,EACtB,KACK,KAAIgiC,EAAShiC,GAMd,MAAM,IAAI5K,UAAU,8BALpB,GAAmB,KAAf4K,EAAI3N,OACJ,MAAM,IAAIU,MAAM,oCACpByK,EAAM+hC,EAAcv/B,EAIxB,CACA,IAAKqhC,EAAmB7jC,GACpB,MAAM,IAAIzK,MAAM,qCACpB,OAAOyK,CACX,CACA,SAAS8lC,EAAmBnqC,GACxB,OAAIA,aAAqBogC,GACrBpgC,EAAUonC,iBACHpnC,GAGAogC,EAAMlgC,QAAQF,EAE7B,CACA,SAAS2nC,EAAmBz/B,GACxB,GAAIA,aAAqBi4B,EAErB,OADAj4B,EAAUk/B,iBACHl/B,EAEX,IACI,OAAOi4B,EAAU8I,QAAQ/gC,EAI7B,CAFA,MAAOsP,GACH,OAAO2oB,EAAUiK,YAAYliC,EACjC,CACJ,CASA,SAASmiC,EAAMr0B,GACX,IAAMzZ,EAAMssC,EAAS7yB,GACfhZ,EAAsB,kBAATgZ,EACb9b,GAAOqC,GAAOS,IAAQgZ,EAAK9c,OACjC,OAAIqD,EACe,KAARrC,GAAsB,KAARA,EACrB8C,EACe,KAAR9C,GAAsB,MAARA,EACrB8b,aAAgBoqB,CAGxB,CAWA,SAASkK,EAAS/mC,GAEd,OAAO6iC,EADO7iC,EAAMrK,OAAS,GAAKqK,EAAM1J,MAAM,EAAG,IAAM0J,EAE3D,CACA,SAASgnC,EAAYhnC,GACjB,IAAMinC,EAAKF,EAAS/mC,GACdknC,EAAK/uB,EAAI8uB,EAAInK,EAAMl8B,GACzB,OAAOumC,EAAWD,EAAKvtC,EAAMstC,EAAKC,EACtC,CACA,SAASC,EAAWrmC,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIzK,MAAM,mBAEpB,OAAOa,EADKkrC,EAAYthC,GAE5B,CACA,SAASsmC,GAAY7iC,EAASjI,EAAY+qC,GACtC,GAAe,MAAX9iC,EACA,MAAM,IAAIlO,MAAM,2CAAD,OAA4CkO,EAAO,MACtE,IAAMuxB,EAAKgO,EAAYv/B,GACjB3M,EAAIssC,EAAoB5nC,GACxBgrC,EAAW,CAACH,EAAWvvC,GAAIovC,EAAYlR,IAC7C,GAAoB,MAAhBuR,EAAsB,EACD,IAAjBA,IACAA,EAAevvC,EAAQ0U,MAAMmB,YAAY,KAC7C,IAAMvS,EAAI0oC,EAAYuD,GACtB,GAAiB,KAAbjsC,EAAEzF,OACF,MAAM,IAAIU,MAAM,yCACpBixC,EAAS1xC,KAAKwF,EAClB,CAGA,MAAO,CAAE6gC,KAFInmC,EAAW,aAAIwxC,GAEb5jB,EADLqjB,EAASjR,GACDl+B,EAAAA,EACtB,CACA,SAAS2vC,GAAYC,EAAQC,GACzB,IAAMviC,EAAkBsiC,EAAlBtiC,IAAKZ,EAAakjC,EAAbljC,SACX,EAAsC9C,OAAOkmC,OAAO,CAAEC,WAAW,EAAMjjC,KAAK,GAAQ+iC,GAA5EE,EAAS,EAATA,UAAWjjC,EAAG,EAAHA,IAAKD,EAAS,EAATA,UACpBkjC,GAAaziC,EAAI2/B,aACjB3/B,EAAMA,EAAI0iC,aACVtjC,GAAY,GAEhB,IAAMujC,EAASnjC,EAAMQ,EAAIkgC,gBAAkBlgC,EAAI4iC,oBAC/C,OAAOrjC,EAAY,CAACojC,EAAQvjC,GAAYujC,CAC5C,CACmB,cAQlB,OARkB,eAAnB,WAAoBtjC,EAASwjC,GAAO,+FAGL,OAHON,EAAO,EAAH,6BAAG,CAAC,EAAC,EACpBL,GAAY7iC,EAASwjC,EAASN,EAAKJ,cAAlDpL,EAAI,EAAJA,KAAMvY,EAAC,EAADA,EAAG9rB,EAAC,EAADA,EAEXowC,EAAO,IAAI5B,EAAU,SACrB4B,EAAKC,OAAOhM,GAAK,OACA,OADA,KACRyK,EAAQ,SAAOsB,EAAKE,WAAU,OAAM,GAAN,iBAAExkB,EAAC,KAAE9rB,EAAzCsN,GAAM,EAAH,wDACF8iC,EAAKC,SAAQ,wDAChBV,GAAYriC,EAAKuiC,IAAK,4CAChC,yBA9ED3vC,EAAQ6kC,aAHR,SAAsBrgC,GAAkC,IAAtB4lC,EAAe,UAAH,8CAC1C,OAAOrF,EAAM//B,eAAeR,GAAYO,WAAWqlC,EACvD,EAKApqC,EAAQkN,iBAHR,SAA0BT,EAASI,EAAWL,GAAgC,IAAtB49B,EAAe,UAAH,8CAChE,OAAOrF,EAAMsL,cAAc5jC,EAASI,EAAWL,GAAUzH,WAAWqlC,EACxE,EAuBApqC,EAAQ4kC,gBATR,SAAyB0L,EAAUC,GAA+B,IAAtBnG,EAAe,UAAH,8CACpD,GAAI4E,EAAMsB,GACN,MAAM,IAAI1vC,UAAU,kDACxB,IAAKouC,EAAMuB,GACP,MAAM,IAAI3vC,UAAU,kDACxB,IAAMsgB,EAAI4tB,EAAmByB,GAE7B,OADArvB,EAAE6qB,iBACK7qB,EAAEspB,SAAS4B,EAAoBkE,IAAWvrC,WAAWqlC,EAChE,EAsDApqC,EAAQ6jC,KAVP,SACmB,EAAD,oCAmBnB7jC,EAAQ0M,SATR,SAAkBD,EAASwjC,GAAoB,IAEvC7iC,EAF4BuiC,EAAO,UAAH,6CAAG,CAAC,EACxC,EAAuBL,GAAY7iC,EAASwjC,EAASN,EAAKJ,cAAlDpL,EAAI,EAAJA,KAAMvY,EAAC,EAADA,EAAG9rB,EAAC,EAADA,EAEXowC,EAAO,IAAI5B,EAEjB,IADA4B,EAAKM,WAAWrM,KACP/2B,EAAMwhC,EAASsB,EAAKO,eAAgB7kB,EAAG9rB,KAC5CowC,EAAKM,aACT,OAAOf,GAAYriC,EAAKuiC,EAC5B,EAEA,IAAMe,GAAQ,CAAEC,QAAQ,GAgCxB,SAASC,GAAyBC,GAC9B,OAAOxwB,EAAI0qB,EAAc8F,GAAK7L,EAAMl8B,EACxC,CACA,SAASgoC,GAASjI,GACd,OAAQA,EAAM9e,EAAImb,KAASrjC,CAC/B,CANA7B,EAAQikC,OA9BR,SAAgBp3B,EAAWJ,EAAS9H,GAAyB,IACrDyI,EADuCuiC,EAAO,UAAH,6CAAGe,GAElD,IACItjC,EAAMk/B,EAAmBz/B,GACzBJ,EAAUu/B,EAAYv/B,EAI1B,CAFA,MAAO0P,GACH,OAAO,CACX,CACA,MAAiB/O,EAATN,EAAC,EAADA,EAAGC,EAAC,EAADA,EACX,GAAI4iC,EAAKgB,QAAUvjC,EAAI2/B,WACnB,OAAO,EACX,IACIxH,EADE/X,EAAI6e,EAAa5/B,GAEvB,IACI84B,EAAIuJ,EAAmBnqC,EAI3B,CAFA,MAAOwX,GACH,OAAO,CACX,CACA,IAAQrT,EAAMk8B,EAANl8B,EACFioC,EAAO5H,EAAOp8B,EAAGjE,GACjB0jC,EAAKnsB,EAAImN,EAAIujB,EAAMjoC,GACnB2jC,EAAKpsB,EAAIvT,EAAIikC,EAAMjoC,GACnByjC,EAAIxH,EAAMkD,KAAKyE,qBAAqBnH,EAAGiH,EAAIC,GACjD,IAAKF,EACD,OAAO,EACX,IAAM7tC,EAAI2hB,EAAIksB,EAAEziB,EAAGhhB,GACnB,OAAOpK,IAAMoO,CACjB,EAOC,IACKkkC,GAAgB,WAClB,WAAYlkC,EAAGC,GAAG,UACd1K,KAAKyK,EAAIA,EACTzK,KAAK0K,EAAIA,EACT1K,KAAK0pC,gBACT,CAQC,OARA,iCASD,WACI,IAAQj/B,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EACX,IAAKw9B,EAAoBz9B,KAAO+/B,EAAmB9/B,GAC/C,MAAM,IAAIxO,MAAM,oBACxB,GAAC,mBACD,WACI,OAAO+rC,EAAYjoC,KAAKyK,GAAKw9B,EAAYjoC,KAAK0K,EAClD,GAAC,wBACD,WACI,OAAO3N,EAAWiD,KAAKgoC,QAC3B,IAAC,sBAlBD,SAAe/pC,GACX,IAAM4H,EAAQ8jC,EAAY1rC,GAC1B,GAAqB,KAAjB4H,EAAMrK,OACN,MAAM,IAAI+C,UAAU,oDAAD,OAAqDsH,EAAMrK,SAGlF,OAAO,IAAImzC,EAFDjG,EAAc7iC,EAAM40B,SAAS,EAAG,KAChCiO,EAAc7iC,EAAM40B,SAAS,GAAI,KAE/C,KAAC,EAbiB,GA6BtB,SAASmU,GAAmBxjC,EAASjJ,EAAY0sC,GAC7C,GAAe,MAAXzjC,EACA,MAAM,IAAI7M,UAAU,sCAAD,OAAuC6M,EAAO,MACrE,IAAMme,EAAIogB,EAAYv+B,GAChB2vB,EAAKgP,EAAoB5nC,GACzB2sC,EAAOnF,EAAYkF,GACzB,GAAoB,KAAhBC,EAAKtzC,OACL,MAAM,IAAI+C,UAAU,6CACxB,IAAM2kC,EAAIR,EAAM//B,eAAeo4B,GACzBgU,EAAK7L,EAAE8L,SAEb,MAAO,CAAEzlB,EAAAA,EAAG2Z,EAAAA,EAAG6L,GAAAA,EAAItxC,EADTgxC,GAASvL,GAAKnI,EAAK4H,EAAMl8B,EAAIs0B,EACjB+T,KAAAA,EAC1B,CACA,SAASG,GAAiBxxC,EAAGyxC,GACzB,OAAOxD,EAASjuC,EAAIirC,EAAcwG,GACtC,CACA,SAASC,GAAqBC,GAC1B,IAAMC,EAAKrxB,EAAI0qB,EAAc0G,GAAMzM,EAAMl8B,GACzC,GAAI4oC,IAAO7vC,EACP,MAAM,IAAItD,MAAM,iDACpB,IAAMguC,EAAIxH,EAAM//B,eAAe0sC,GACzBhmB,EAAK6gB,EAAE8E,SAEb,MAAO,CAAE9E,EAAAA,EAAG7gB,GAAAA,EAAI9hB,EADNknC,GAASvE,GAAKmF,EAAK1M,EAAMl8B,EAAI4oC,EAE3C,CACA,SAASC,GAAmBpF,EAAG3iC,EAAGtG,EAAGxD,GACjC,OAAO,IAAIkxC,GAAiBzE,EAAEziB,EAAGzJ,EAAIzW,EAAItG,EAAIxD,EAAGklC,EAAMl8B,IAAI/D,YAC9D,CAC0B,cAUzB,OAVyB,eAA1B,WAA2B0I,EAASjJ,GAAU,2GAEd,OAFgB0sC,EAAU,EAAH,6BAAGlxC,EAAQ0U,MAAMmB,cAAa,EACtDo7B,GAAmBxjC,EAASjJ,EAAY0sC,GAA3DtlB,EAAC,EAADA,EAAGwlB,EAAE,EAAFA,GAAItxC,EAAC,EAADA,EAAGqxC,EAAI,EAAJA,KAAI,KACZG,GAAgB,KAACxxC,EAAC,SAAQE,EAAQ0U,MAAMk9B,WAAWC,GAAKC,IAAKX,GAAK,OACnC,OADmC,YAAtE9+B,GAAI,EAAH,sBACcm/B,GAAoB,UAAOxxC,EAAQ0U,MAAMk9B,WAAWC,GAAK7vC,MAAOqQ,EAAG++B,EAAIxlB,GAAE,QAC5D,OAD4D,6BAAtF2gB,EAAC,EAADA,EAAG7gB,EAAE,EAAFA,GAAI9hB,EAAC,EAADA,EAAC,KACNgnC,GAAwB,UAAO5wC,EAAQ0U,MAAMk9B,WAAWC,GAAKE,UAAWrmB,EAAI0lB,EAAIxlB,GAAE,QAClD,OADkD,YAAtFtoB,GAAI,EAAH,YACD8J,EAAMukC,GAAmBpF,EAAG3iC,EAAGtG,EAAGxD,GAAE,UACpBkyC,GAAc5kC,EAAKwe,EAAGwlB,GAAG,QAAlC,GAAG,EAAH,KACD,uBACF,IAAI7yC,MAAM,oCAAmC,iCAChD6O,GAAG,4CACb,yBAYD,SAAS6kC,GAAkBplC,EAAWY,EAAS9I,GAC3C,IAAMhC,EAAMkK,aAAqBmkC,GAC3B5jC,EAAMzK,EAAMkK,EAAYmkC,GAAiBnsC,QAAQgI,GAGvD,OAFIlK,GACAyK,EAAI2+B,iBACD,EAAP,KACO3+B,GAAG,IACNwe,EAAGogB,EAAYv+B,GACf83B,EAAGuJ,EAAmBnqC,IAE9B,CACA,SAASutC,GAAsBplC,EAAGy4B,EAAGx4B,EAAGzJ,GACpC,IAAMipC,EAAIxH,EAAMkD,KAAKyE,qBAAqBnH,EAAG6G,EAAoBr/B,GAAIsT,GAAK/c,EAAG0hC,EAAMl8B,IACnF,SAAKyjC,IAAMuE,GAASvE,IAAMA,EAAEziB,IAAMhd,EAGtC,CAAC,SACcklC,GAAc,EAAD,mDAS3B,OAT2B,eAA5B,WAA6BnlC,EAAWY,EAAS9I,GAAS,iFAGhB,OAHgB,WAE3BstC,GAAkBplC,EAAWY,EAAS9I,GAArDmI,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG6e,EAAC,EAADA,EAAG2Z,EAAC,EAADA,EAAC,KACRqL,GAAwB,SAAO5wC,EAAQ0U,MAAMk9B,WAAWC,GAAKE,UAAWhE,EAASjhC,GAAIy4B,EAAE8L,SAAUzlB,GAAE,OAAtG,OAAsG,YAAvGtoB,GAAI,EAAH,8BACA4uC,GAAsBplC,EAAGy4B,EAAGx4B,EAAGzJ,IAAE,4DAGjC,GAAK,2DAEnB,sBACD,SAAS6uC,GAAkBtlC,EAAWY,EAAS9I,GAC3C,IACI,MAAuBstC,GAAkBplC,EAAWY,EAAS9I,GAArDmI,EAAC,EAADA,EAAGC,EAAC,EAADA,EAAG6e,EAAC,EAADA,EAAG2Z,EAAC,EAADA,EACXjiC,EAAIstC,GAAyB5wC,EAAQ0U,MAAM09B,eAAeP,GAAKE,UAAWhE,EAASjhC,GAAIy4B,EAAE8L,SAAUzlB,IACzG,OAAOsmB,GAAsBplC,EAAGy4B,EAAGx4B,EAAGzJ,EAI1C,CAFA,MAAO6Y,GACH,OAAO,CACX,CACJ,CACAnc,EAAQ2kC,QAAU,CACdG,UAAWkM,GACXnM,aA5FJ,SAA6BrgC,GACzB,OAAOugC,EAAM//B,eAAeR,GAAY6sC,QAC5C,EA2FIxN,KA/DH,SAC0B,EAAD,oCA+DtBI,OAAQ+N,GACRtlC,SArDJ,SAAyBe,EAASjJ,GAAmD,IAAvC0sC,EAAU,UAAH,6CAAGlxC,EAAQ0U,MAAMmB,cAClE,EAA2Bo7B,GAAmBxjC,EAASjJ,EAAY0sC,GAA3DtlB,EAAC,EAADA,EAAGwlB,EAAE,EAAFA,GAAItxC,EAAC,EAADA,EAAGqxC,EAAI,EAAJA,KACZ9+B,EAAIi/B,GAAiBxxC,EAAGE,EAAQ0U,MAAM09B,eAAeP,GAAKC,IAAKX,IACrE,EAAqBK,GAAqBxxC,EAAQ0U,MAAM09B,eAAeP,GAAK7vC,MAAOqQ,EAAG++B,EAAIxlB,IAAlF2gB,EAAC,EAADA,EAAG7gB,EAAE,EAAFA,GAAI9hB,EAAC,EAADA,EACTtG,EAAIstC,GAAyB5wC,EAAQ0U,MAAM09B,eAAeP,GAAKE,UAAWrmB,EAAI0lB,EAAIxlB,IAClFxe,EAAMukC,GAAmBpF,EAAG3iC,EAAGtG,EAAGxD,GAClCuyC,EAAUF,GAAkB/kC,EAAKwe,EAAGwlB,GAC1C,IAAKiB,EACD,MAAM,IAAI9zC,MAAM,oCACpB,OAAO6O,CACX,EA4CIklC,WAAYH,IAEhBpN,EAAMkD,KAAKsK,eAAe,GAC1B,IAAM/N,GAAS,CACXgO,KAAMvN,EACNwN,IAAqB,kBAAT/rC,MAAqB,WAAYA,KAAOA,KAAK89B,YAAS5iC,GAEhEiwC,GAAO,CACTE,UAAW,oBACXD,IAAK,cACL9vC,MAAO,iBAEL0wC,GAAuB,CAAC,EAC9B1yC,EAAQ0U,MAAQ,CACZhQ,kBAAiB,SAACF,GACd,IAEI,OADA4nC,EAAoB5nC,IACb,CAIX,CAFA,MAAO2X,GACH,OAAO,CACX,CACJ,EACAw2B,WAAY,SAACnuC,EAAYouC,GAGrB,OAAO7E,EAAS1tB,EAFN+rB,EAAoB5nC,GACpB4nC,EAAoBwG,GACH5N,EAAMl8B,GACrC,EACA+pC,cAAe,SAACruC,GACZ,IAAM2mB,EAAIihB,EAAoB5nC,GAC9B,OAAOupC,EAAS/I,EAAMl8B,EAAIqiB,EAC9B,EACA2nB,eAAgB,SAAC3nB,EAAGynB,EAAOxI,GACvB,IAAM7E,EAAIR,EAAMlgC,QAAQsmB,GAClB9Y,EAAI+5B,EAAoBwG,GACxBnI,EAAI1F,EAAMkD,KAAKyE,qBAAqBnH,EAAGlzB,EAAG6yB,GAChD,IAAKuF,EACD,MAAM,IAAIlsC,MAAM,6BACpB,OAAOksC,EAAE1lC,WAAWqlC,EACxB,EACA2I,cAAe,SAAC5nB,EAAGynB,EAAOxI,GACtB,IAAM7E,EAAIR,EAAMlgC,QAAQsmB,GAClB9Y,EAAI04B,EAAciB,EAAY4G,IACpC,OAAOrN,EAAEiF,SAASn4B,GAAGtN,WAAWqlC,EACpC,EACA4I,iBAAkB,SAAClvC,GAEf,IADAA,EAAOkoC,EAAYloC,IACVjG,OAAS,IAAMiG,EAAKjG,OAAS,KAClC,MAAM,IAAIU,MAAM,yDAEpB,OAAOwvC,EADK1tB,EAAI0qB,EAAcjnC,GAAOkhC,EAAMl8B,EAAIo8B,GAAOA,EAE1D,EACArvB,YAAa,WAAsB,IAArBo9B,EAAc,UAAH,6CAAG,GACxB,GAAIzO,GAAOiO,IACP,OAAOjO,GAAOiO,IAAI/N,gBAAgB,IAAI3lC,WAAWk0C,IAEhD,GAAIzO,GAAOgO,KAAM,CAClB,IAAQ38B,EAAgB2uB,GAAOgO,KAAvB38B,YACR,OAAO9W,WAAWC,KAAK6W,EAAYo9B,GACvC,CAEI,MAAM,IAAI10C,MAAM,oDAExB,EACA20C,iBAAkB,WACd,OAAOlzC,EAAQ0U,MAAMs+B,iBAAiBhzC,EAAQ0U,MAAMmB,YAAY,IACpE,EACAjX,WAAAA,EACAQ,WAAAA,EACApB,YAAAA,EACAqiB,IAAAA,EACA8oB,OAAAA,EACAgK,OAAQ,WAAF,kBAAE,yHAAUC,EAAQ,yBAARA,EAAQ,YAClB5O,GAAOiO,IAAK,CAAF,+BACWjO,GAAOiO,IAAIY,OAAOC,OAAO,UAAWt1C,EAAW,aAAIo1C,IAAU,OAAtE,OAANhqC,EAAS,EAAH,uBACL,IAAIrK,WAAWqK,IAAO,WAExBo7B,GAAOgO,KAAM,CAAF,gBAGwB,OAFhCe,EAAe/O,GAAOgO,KAAtBe,WACFzvC,EAAOyvC,EAAW,UACxBH,EAAS/5B,SAAQ,SAACuS,GAAC,OAAK9nB,EAAK81B,OAAOhO,EAAE,IAAE,kBACjC7sB,WAAWC,KAAK8E,EAAKwvC,WAAS,cAG/B,IAAI/0C,MAAM,gDAA+C,4CAEtE,kDAdO,GAeRgwC,WAAY,WAAF,kBAAE,WAAO/iC,GAAG,gHAAK4nC,EAAQ,iCAARA,EAAQ,cAC3B5O,GAAOiO,IAAK,CAAF,gCACSjO,GAAOiO,IAAIY,OAAOG,UAAU,MAAOhoC,EAAK,CAAEgE,KAAM,OAAQ1L,KAAM,CAAE0L,KAAM,aAAe,EAAO,CAAC,SAAQ,OAChF,OADlCikC,EAAO,EAAH,KACJhmC,EAAUzP,EAAW,aAAIo1C,GAAS,SACnB5O,GAAOiO,IAAIY,OAAOxP,KAAK,OAAQ4P,EAAMhmC,GAAQ,OAAtD,OAANrE,EAAS,EAAH,uBACL,IAAIrK,WAAWqK,IAAO,YAExBo7B,GAAOgO,KAAM,CAAF,gBAGwB,OAFhCkB,EAAelP,GAAOgO,KAAtBkB,WACF5vC,EAAO4vC,EAAW,SAAUloC,GAClC4nC,EAAS/5B,SAAQ,SAACuS,GAAC,OAAK9nB,EAAK81B,OAAOhO,EAAE,IAAE,kBACjC7sB,WAAWC,KAAK8E,EAAKwvC,WAAS,cAG/B,IAAI/0C,MAAM,qDAAoD,4CAE3E,mDAhBW,GAiBZo1C,gBAAY/xC,EACZ4sC,oBAAgB5sC,EAChBgwC,WAAY,WAAF,kBAAE,WAAOgC,GAAG,6FACkB,QACvBhyC,KADTiyC,EAAOnB,GAAqBkB,IACV,gCACC5zC,EAAQ0U,MAAMy+B,OAAOp0C,WAAWC,KAAK40C,GAAK,SAACxjC,GAAC,OAAKA,EAAE9E,WAAW,EAAE,KAAE,OAA/EwoC,EAAO,EAAH,KACVD,EAAO71C,EAAY81C,EAAMA,GACzBpB,GAAqBkB,GAAOC,EAAK,sBALdT,EAAQ,iCAARA,EAAQ,oCAOxB,EAAApzC,EAAQ0U,OAAMy+B,OAAM,SAACU,GAAI,OAAKT,KAAS,2CACjD,mDARW,GASZhB,eAAgB,SAACwB,GAAqB,MAClC,GAAwC,oBAA7B5zC,EAAQ0U,MAAMi/B,WACrB,MAAM,IAAIp1C,MAAM,qDACpB,IAAIs1C,EAAOnB,GAAqBkB,GAChC,QAAahyC,IAATiyC,EAAoB,CACpB,IAAMC,EAAO9zC,EAAQ0U,MAAMi/B,WAAW50C,WAAWC,KAAK40C,GAAK,SAACxjC,GAAC,OAAKA,EAAE9E,WAAW,EAAE,KACjFuoC,EAAO71C,EAAY81C,EAAMA,GACzBpB,GAAqBkB,GAAOC,CAChC,CAAC,2BARoBT,EAAQ,iCAARA,EAAQ,kBAS7B,OAAO,EAAApzC,EAAQ0U,OAAMi/B,WAAU,SAACE,GAAI,OAAKT,GAC7C,EACAW,WAAU,WAAqC,IAApCxL,EAAa,UAAH,6CAAG,EAAGM,EAAQ,UAAH,6CAAG9D,EAAMkD,KAC/BW,EAASC,IAAU9D,EAAMkD,KAAOY,EAAQ,IAAI9D,EAAM8D,EAAM/e,EAAG+e,EAAM9e,GAGvE,OAFA6e,EAAO2J,eAAehK,GACtBK,EAAO4B,SAASpF,GACTwD,CACX,+mCCloCJ,SAASoL,EAAiBryC,GAExB,OAAsB,KAAfA,EAAI9D,MACb,CAEM,SAAUo2C,EAYUC,GAAA,IAXxBC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAqB,EAArBA,sBACAC,EAA0B,EAA1BA,2BACAC,EAAqB,EAArBA,sBACAC,EAAsB,EAAtBA,uBACAC,EAAkB,EAAlBA,mBACAC,EAAsB,EAAtBA,uBACAC,EAAmB,EAAnBA,oBACAC,EAAqB,EAArBA,sBACAC,EAAqB,EAArBA,sBAEA,IAAKV,EACH,MAAM,IAAI51C,MAAM,gCAOlB,SAMeu2C,EAA8B,EAAD,kCAkB5C,aAJC,OAIDC,GAlBA,4BAA6CrxC,EAAiBsxC,GAAyB,gFAC9D,kBAAZtxC,GAAwBA,EAAQ7F,OAAS,GAAC,CAAAo3C,EAAAA,KAAAA,EAAA,aAAAA,EAAAA,KAAAA,EAElBd,EAAYa,GAAI,OAEM,GAFjDE,EAAQ,OACRC,EAA+BD,EAASrrC,KAAI,SAACurC,GAAQ,OAAKA,EAASxxC,iBACnEyxC,EAA4B3xC,EAAQE,eAEtCuxC,EAAmBj7B,SAASm7B,GAAoB,CAAFJ,EAAAA,KAAAA,EAAA,+BACzCI,GAAiB,aAGtBC,EAAAA,GAAAA,IAAAA,cAA4B,CAChC7nC,QAAS,0DACT,4CACH,sBAM4B,aAE5B,OAF4B8nC,GAA7B,4BAA8BP,EAA2B/rC,GAA0B,wEAAAusC,EAAAA,KAAAA,EAC9DrB,EAAYa,GAAI,OAAnC/rC,EAAI9H,OAAS,EAAH,iDACX,sBASD,aAJC,OAIDs0C,GAPA,4BAAoCT,EAA2B/rC,GAA0B,8EAAAysC,EAAAA,KAAAA,EAChEvB,EAAYa,GAAI,OAAjCE,EAAW,EAAH,KACdjsC,EAAI9H,OAAS+zC,EAAS,IAAM,KAAK,4CAClC,sBAM6B,aAU7B,OAV6BS,GAA9B,4BAA+BX,EAA2B/rC,GAA0B,0EAC7EwrC,EAAoB,CAAFmB,EAAAA,KAAAA,EAAA,YACfN,EAAAA,GAAAA,IAAAA,qBAAkC,OAKzC,OAFKO,EAA+Bb,EAAIzpC,OAA+B,IAAM,CAC5EvM,KAAM,IACP42C,EAAAA,KAAAA,EACqBd,EAA8Be,EAAS72C,KAAgBg2C,GAAI,OAApE,OAAba,EAAS72C,KAAO,EAAH,KAAA42C,EAAAA,KAAAA,EACMnB,EAAmBoB,EAAUb,GAAI,OAApD/rC,EAAI9H,OAAS,EAAH,iDACX,sBAgBD,aAJC,OAID20C,GAdA,4BAA+Bd,EAA2B/rC,GAA0B,0EAC7EyrC,EAAwB,CAAFqB,EAAAA,KAAAA,EAAA,YACnBT,EAAAA,GAAAA,IAAAA,qBAAkC,OAKzC,OAFKO,EAA+Bb,EAAIzpC,OAA+B,IAAM,CAC5EvM,KAAM,IACP+2C,EAAAA,KAAAA,EACqBjB,EAA8Be,EAAS72C,KAAgBg2C,GAAI,OAApE,OAAba,EAAS72C,KAAO,EAAH,KAAA+2C,EAAAA,KAAAA,EACMrB,EAAuBmB,EAAUb,GAAI,OAAxD/rC,EAAI9H,OAAS,EAAH,iDACX,sBAMqB,aAerB,OAfqB60C,GAAtB,4BAAuBhB,EAA2B/rC,GAA0B,gFACrEsrC,EAAuB,CAAF0B,EAAAA,KAAAA,EAAA,YAClBX,EAAAA,GAAAA,IAAAA,qBAAkC,cAAAW,EAAAA,KAAAA,EAGZnB,EAA+BE,EAAIzpC,OAAoB,GAAIypC,GAAI,OAM9E,OANTtxC,EAAO,OACP+J,EAAmBunC,EAAIzpC,OAAoB,GAC3C2qC,EAAwClB,EAAIzpC,OAAqC,IAAM,CAAC,EACxF4qC,EAAS,OACVD,GAAW,IACdl3C,KAAM0E,EACN/D,KAAM8N,IAAOwoC,EAAAA,KAAAA,GAGI1B,EAAsB4B,EAAWnB,GAAI,QAAxD/rC,EAAI9H,OAAS,EAAH,kDACX,sBAE2B,aAgB3B,OAhB2Bi1C,GAA5B,4BAA6BpB,EAA2B/rC,GAA0B,gFAC3E0rC,EAAqB,CAAF0B,EAAAA,KAAAA,EAAA,YAChBf,EAAAA,GAAAA,IAAAA,qBAAkC,OAGmB,OAAvD7nC,EAAwBunC,EAAIzpC,OAAyB,GAAE8qC,EAAAA,KAAAA,EAC/BvB,EAA+BE,EAAIzpC,OAAoB,GAAIypC,GAAI,OAM9E,OANTtxC,EAAO,OACG,KACVwyC,EAAwClB,EAAIzpC,OAAqC,IAAM,CAAC,EACxF4qC,EAAS,OACVD,GAAW,IACdl3C,KAAM0E,EACN/D,KAAM8N,IAAO4oC,EAAAA,KAAAA,GAGI1B,EAAoBwB,EAAWnB,EARlC,MAQ+C,QAA/D/rC,EAAI9H,OAAS,EAAH,kDACX,sBAE6B,aAe7B,OAf6Bm1C,GAA9B,4BAA+BtB,EAA2B/rC,GAA0B,8EAC7E2rC,EAAuB,CAAF2B,EAAAA,KAAAA,EAAA,YAClBjB,EAAAA,GAAAA,IAAAA,qBAAkC,cAAAiB,EAAAA,KAAAA,EAGZzB,EAA+BE,EAAIzpC,OAAoB,GAAIypC,GAAI,OAO5F,OAPKtxC,EAAO,OACP+J,EAAuCunC,EAAIzpC,OAAwC,GACzE,KACV4qC,EAA4D,CAChEx2C,KAAM8N,EACNzO,KAAM0E,EACNwR,QAJc,MAKfqhC,EAAAA,KAAAA,GAEkB3B,EAAsBuB,EAAWnB,EAPpC,MAOiD,QAAjE/rC,EAAI9H,OAAS,EAAH,kDACX,sBAE6B,aAe7B,OAf6Bq1C,GAA9B,4BAA+BxB,EAA2B/rC,GAA0B,8EAC7E4rC,EAAuB,CAAF4B,EAAAA,KAAAA,EAAA,YAClBnB,EAAAA,GAAAA,IAAAA,qBAAkC,cAAAmB,EAAAA,KAAAA,EAGZ3B,EAA+BE,EAAIzpC,OAAoB,GAAIypC,GAAI,OAO5F,OAPKtxC,EAAO,OACP+J,EAAuCunC,EAAIzpC,OAAwC,GACzE,KACV4qC,EAA4D,CAChEx2C,KAAM8N,EACNzO,KAAM0E,EACNwR,QAJc,MAKfuhC,EAAAA,KAAAA,GAEkB5B,EAAsBsB,EAAWnB,EAPpC,MAOiD,QAAjE/rC,EAAI9H,OAAS,EAAH,kDACX,sBAE0B,aA0C1B,OA1C0Bu1C,GAA3B,4BAA4B1B,EAA2B/rC,GAA0B,oFAC1EurC,EAAwB,CAAFmC,EAAAA,KAAAA,EAAA,YACnBrB,EAAAA,GAAAA,IAAAA,qBAAkC,OA6BzC,OAzBKsB,EAAsB5B,EAAIzpC,OAAoB,GAC9CsrC,EAAuB7B,EAAIzpC,OAAoB,GAE/C2qC,EAAwClB,EAAIzpC,OAAqC,IAAM,CAAC,EAU1FyoC,EAAiB4C,KAAgB5C,EAAiB6C,IACtC,uDAC4D,gEACvB,yCAC2B,oEAC7E5tC,EAAY6tC,QADbA,2NAGApzC,EAAUkzC,EACVnpC,EAAUopC,IAEVppC,EAAUmpC,EACVlzC,EAAUmzC,GACXF,EAAAA,KAAAA,EACe7B,EAA8BpxC,EAASsxC,GAAI,OAQ3D,OARAtxC,EAAU,EAAH,KAEDyyC,EAAS,OACVD,GAAW,IACdl3C,KAAM0E,EACN/D,KAAM8N,IAGRkpC,EAAAA,KAAAA,GACmBnC,EAAuB2B,EAAWnB,GAAI,QAAzD/rC,EAAI9H,OAAS,EAAH,kDACX,sBAEiC,aAQjC,OARiC41C,GAAlC,4BAAmC/B,EAA2B/rC,GAA0B,0EACjFqrC,EAA4B,CAAF0C,EAAAA,KAAAA,EAAA,YACvB1B,EAAAA,GAAAA,IAAAA,qBAAkC,cAAA0B,EAAAA,KAAAA,EAGZlC,EAA+BE,EAAIzpC,OAAkB,GAAIypC,GAAI,OAA9E,OAAPtxC,EAAO,OAAAszC,EAAAA,KAAAA,EAEM1C,EAA2B5wC,EAASsxC,GAAI,OAA3D/rC,EAAI9H,OAAS,EAAH,iDACX,sBAE4B,aAe5B,OAf4B81C,GAA7B,4BAA8BjC,EAA2B/rC,GAA0B,gFAC5EorC,EAAuB,CAAF6C,EAAAA,KAAAA,EAAA,YAClB5B,EAAAA,GAAAA,IAAAA,qBAAkC,OAGU,OAA9C7iC,EAAsBuiC,EAAIzpC,OAAkB,GAAE2rC,EAAAA,KAAAA,EACtBpC,EAA+BE,EAAIzpC,OAAkB,GAAIypC,GAAI,OAArFtxC,EAAO,OACPwyC,EAAwClB,EAAIzpC,OAAqC,IAAM,CAAC,EACxF4qC,EAAS,OACVD,GAAW,IACdl3C,KAAM0E,EACN/D,KAAM8S,IAGRxJ,EAAI9H,OAASkzC,EAAsB8B,EAAWnB,GAAK,4CACpD,sBAE6B,aAK7B,OAL6BmC,GAA9B,4BAA+BnC,EAA2B/rC,GAA0B,oEAC7EmrC,EAAe,CAAFgD,EAAAA,KAAAA,EAAA,YACV9B,EAAAA,GAAAA,IAAAA,qBAAkC,OAE1CrsC,EAAI9H,OAASizC,EAAcY,GAAK,4CACjC,sBAED,OAAOqC,EAAAA,EAAAA,IAAyB,CAE9BC,cAAcC,EAAAA,EAAAA,KApMf,SAM6B,EAAD,qCA+L3BC,iBAAiBD,EAAAA,EAAAA,KAZlB,SAE8B,EAAD,qCAW5BE,cAAcF,EAAAA,EAAAA,KA9Lf,SAEmC,EAAD,qCA8LjCG,qBAAqBH,EAAAA,EAAAA,KA3LtB,SAM8B,EAAD,qCAsL5BI,qBAAqBJ,EAAAA,EAAAA,KA5KtB,SAE8B,EAAD,qCA4K5BK,UAAUL,EAAAA,EAAAA,KAlKX,SAMsB,EAAD,qCA6JpBM,mBAAmBN,EAAAA,EAAAA,KA9IpB,SAE4B,EAAD,qCA6I1BO,sBAAsBP,EAAAA,EAAAA,KA7HvB,SAE8B,EAAD,qCA4H5BQ,sBAAsBR,EAAAA,EAAAA,KA7GvB,SAE8B,EAAD,qCA4G5BS,eAAeT,EAAAA,EAAAA,KA7FhB,SAE2B,EAAD,qCA4FzBU,4BAA4BV,EAAAA,EAAAA,KAlD7B,SAEkC,EAAD,qCAiDhCW,aAAaX,EAAAA,EAAAA,KAzCd,SAE6B,EAAD,sCAyC/B,CC1PM,SAAUY,EAAoBC,GAClC,IACEjE,EAWEiE,EAXFjE,YACAC,EAUEgE,EAVFhE,cACAK,EASE2D,EATF3D,mBACAC,EAQE0D,EARF1D,uBACAH,EAOE6D,EAPF7D,sBACAI,EAMEyD,EANFzD,oBACAC,EAKEwD,EALFxD,sBACAC,EAIEuD,EAJFvD,sBACAL,EAGE4D,EAHF5D,uBACAF,EAEE8D,EAFF9D,2BACAD,EACE+D,EADF/D,sBAoBF,OAlBsBgE,EAAAA,EAAAA,IAAgB,EACpChB,EAAAA,EAAAA,IAAyB,CACvBiB,aAAa,IAEfrE,EAAuB,CACrBE,YAAAA,EACAC,cAAAA,EACAK,mBAAAA,EACAF,sBAAAA,EACAG,uBAAAA,EACAC,oBAAAA,EACAC,sBAAAA,EACAC,sBAAAA,EACAL,uBAAAA,EACAF,2BAAAA,EACAD,sBAAAA,KAIN,CC1CM,SAAUkE,EAAwBjsC,GACtC,OAAO,SAAC0oC,EAA2B/rC,EAA2BlC,EAA8BzI,GAC1F,MAAmB,gBAAf02C,EAAIwD,QACNvvC,EAAI9H,OAASmL,EACNhO,KAEFyI,IAEX,CAEM,SAAU0xC,EAA+BC,GAC7C,OAAO,SAAC1D,EAA2B/rC,EAAsClC,EAA8BzI,GACrG,MAAmB,wBAAf02C,EAAIwD,QACNvvC,EAAI9H,OAASu3C,EACNp6C,KAEFyI,IAEX,CAEM,SAAU4xC,EAAoBD,GAIlC,IAAQpsC,EAAuBosC,EAAvBpsC,QAASssC,EAAcF,EAAdE,UACXC,GAAkBC,EAAAA,EAAAA,IAAsB,CAAEF,UAAAA,IAEhD,MAAO,CAAEG,mBADiBV,EAAAA,EAAAA,IAAgB,CAACE,EAAwBjsC,GAAUmsC,EAA+BC,GAAiBG,IACjGA,gBAAAA,EAC9B,CCzBgB,WAA4D3E,GAAA,IAAtC8E,EAAS,EAATA,UACpC,MAAO,CACL5E,cAAe,WAAF,IAAE6E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEACP3D,EAAAA,GAAAA,IAAAA,qBAAkC,2CACzC,kDAFc,GAGfnB,YAAa,WAAF,wBAAE,WAAO9nB,GAAuB,uEACzB,KAAR6oB,EAAa8D,EAAb9D,YACQA,EAASr3C,OAAM,CAAA23C,EAAAA,KAAAA,EAAA,+BACtBN,GAAQ,aAEX,IAAI32C,MAAM,0BAAyB,2CAC1C,mDANY,GAObk2C,mBAAoB,WAAF,IAAEyE,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOrD,EAA6BxpB,GAAuB,8EAAAqpB,EAAAA,KAAAA,EACxDsD,EAAUG,gBAAgBtD,GAAoB,OAAvD,OAAN10C,EAAS,EAAH,uBACLA,GAAM,2CACd,qDAHmB,GAIpBuzC,uBAAwB,WAAF,IAAE0E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOvD,EAA6BxpB,GAAuB,8EAAAupB,EAAAA,KAAAA,EAC5DoD,EAAUK,gBAAgBxD,GAAoB,OAAvD,OAAN10C,EAAS,EAAH,uBACLA,GAAM,2CACd,qDAHuB,GAIxBozC,sBAAuB,WAAF,IAAE+E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOnD,EAAkC9pB,GAAuB,8EAAA0pB,EAAAA,KAAAA,EAChEiD,EAAUO,YAAY,CAACpD,EAAUn3C,KAAMm3C,EAAUx2C,OAAM,OAAhE,OAANwB,EAAS,EAAH,uBACLA,GAAM,2CACd,qDAHsB,GAIvBqzC,uBAAwB,WAAF,IAAEgF,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOrD,EAAkC9pB,GAAuB,8EAAA4pB,EAAAA,KAAAA,EACjE+C,EAAUS,oBAAoB,CAACtD,EAAUx2C,KAAMw2C,EAAUn3C,OAAM,OAAxE,OAANmC,EAAS,EAAH,uBACLA,GAAM,2CACd,qDAHuB,GAIxBwzC,oBAAqB,WAAF,IAAE+E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOvD,EAAuC9pB,GAAuB,8EAAAgqB,EAAAA,KAAAA,EACnE2C,EAAUW,cAAc,CAACxD,EAAUn3C,KAAMm3C,EAAUx2C,OAAM,OAAlE,OAANwB,EAAS,EAAH,uBACLA,GAAM,2CACd,qDAHoB,GAIrByzC,sBAAuB,WAAF,wBAAE,WAAOuB,GAAyD,8EAAAI,EAAAA,KAAAA,EAChEyC,EAAUW,cAAc,CAACxD,EAAUn3C,KAAMm3C,EAAUx2C,OAAM,OAAlE,OAANwB,EAAS,EAAH,uBACLA,GAAM,2CACd,mDAHsB,GAIvB0zC,sBAAuB,WAAF,wBAAE,WAAOsB,GAAyD,8EAAAM,EAAAA,KAAAA,EAChEuC,EAAUW,cAAc,CAACxD,EAAUn3C,KAAMm3C,EAAUx2C,OAAM,OAAlE,OAANwB,EAAS,EAAH,uBACLA,GAAM,2CACd,mDAHsB,GAIvBmzC,2BAA4B,WAAF,wBAAE,WAAOjoB,GAAS,uEACpCipB,EAAAA,GAAAA,IAAAA,qBAAkC,2CACzC,mDAF2B,GAG5BjB,sBAAuB,SAAChoB,GACtB,MAAMipB,EAAAA,GAAAA,IAAAA,oBACR,EAEJ,ggCCnCA,IAAasE,EAAsB,aAAAC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,WAGjC,SAAoID,EAAAA,GAAA,MAAtHE,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOf,EAAS,EAATA,UAKQ,OALCgB,EAAAA,EAAAA,GAAAA,KAAAA,GACpCC,EAAM,aACJH,OAAQ,CAAEI,YAAa,EAAF,KAAOJ,EAAOI,aAAW,IAAEC,eAAgBC,EAAAA,GAAAA,SAA2BC,oBAAqBP,EAAOO,mBACvHN,MAAaA,EAAAA,EAAAA,CAAAA,EAAAA,GAAS,CAAC,GAAI,CAAH,GAAGztC,QAAS,UAAW4oC,SAAU,QACxDoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,YANkC,MAOrCL,EAAKjB,UAAYA,GAAa,KAAK,CACrC,CA4JC,OA5JAuB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAA/uC,IAAAA,SAAA1B,MAAAA,WAAA,IAYM0wC,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,oEACAn4C,KAAK22C,UAAS,CAAA/D,EAAAA,KAAAA,EAAA,YACXK,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,6EAA8ExC,KAAM,OAAO,cAAAgqC,EAAAA,KAAAA,EAClI5yC,KAAKo4C,cAAcp4C,KAAK22C,WAAU,gCACjC32C,KAAKq4C,qBAAqBC,QAAQ,CAAEnC,OAAQ,kBAAiB,gDACrE,kDAjBA1uC,IAiBA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,wBAEM,WAAoBkvC,GAAqB,iEACP,OAAvC32C,KAAKu4C,uBAAuB5B,GAAWxD,EAAAA,KAAAA,EACjCnzC,KAAKw4C,YAAY7B,GAAU,gDAClC,mDALAlvC,IAKA,CAAA0B,IAAAA,cAAA1B,MAAAA,WAAA,IAEMgxC,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAAA,GAAA,qFAA2D,GAAvCxuC,EAAAA,EAAAA,QAASyuC,EAAAA,EAAAA,SAAAA,OAAWC,IAAAA,GAAMC,EAAAA,EAAAA,EAAAA,OAAAA,OAAM,IAAG,GAAI,EAC3D54C,KAAK22C,UAAS,CAAAtD,EAAAA,KAAAA,EAAA,YACXJ,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,6EAA8ExC,KAAM,OAAO,OAK1G,GAJxBiwC,EAAqB74C,KAAK84C,eAAe7uC,GAC/CjK,KAAKu3B,OAAO,CACVttB,QAAS,YAEHssC,EAA2BsC,EAA3BtC,UAAWwC,EAAgBF,EAAhBE,aACfL,EAAU,CAAFrF,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAEFrzC,KAAK22C,UAAUqC,kBAAkB,CACrC7C,OAAQ,0BACRjtC,OAAQ,CACN,CACEe,QAAAA,EACAgvC,UAAWF,EACXG,QAAS,CAAC3C,GACV4C,kBAAmB,CAACN,EAAmBO,eACvCC,eAAgB,CACdlsC,KAAM0rC,EAAmBS,WACzBC,OAAQV,EAAmBW,OAC3BC,SAAUZ,EAAmBY,UAAY,QAI/C,QAAApG,EAAAA,KAAAA,GAAA,cAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEFqG,EAAAA,GAAAA,MAAgBrG,EAAAA,IAAC,eAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAKbrzC,KAAK22C,UAAUqC,kBAAkB,CACrC7C,OAAQ,6BACRjtC,OAAQ,CAAC,CAAEe,QAAAA,MACX,QAAAopC,EAAAA,KAAAA,GAAA,cAIF,GAJEA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,IAEFqG,EAAAA,GAAAA,MAAgBrG,EAAAA,IAGM,wCAAlB,KAAMjoC,QAAiD,CAAAioC,EAAAA,KAAAA,GAAA,yBAKT,GAApDrzC,KAAK25C,UAAU,CAAE9B,YAAagB,KAC1BD,EAAQ,CAAFvF,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,GAAQrzC,KAAK45C,cAAc55C,KAAK22C,WAAU,kEACrD,mDAjDAlvC,IAiDA,CAAA0B,IAAAA,WAAA1B,MAAAA,WAAA,wBAED,WAAeowC,GAA8B,4EACtC73C,KAAK22C,UAAW,CAAFpD,EAAAA,KAAAA,EAAA,YAAQsG,EAAAA,GAAAA,SAAmC,mCAAkC,OAClE,OAAtBtD,EAA2BsB,EAA3BtB,UAAWwC,EAAgBlB,EAAhBkB,YAAWxF,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAGtBvzC,KAAK22C,UAAUqC,kBAAkB,CACrC7C,OAAQ,0BACRjtC,OAAQ,CACN,CACEe,QAAS4tC,EAAY5tC,QACrBgvC,UAAWF,EACXG,QAAS,CAAC3C,GACV4C,kBAAmB,CAACtB,EAAYuB,eAChCC,eAAgB,CACdlsC,KAAM0qC,EAAYyB,WAClBC,OAAQ1B,EAAY2B,OACpBC,SAAU5B,EAAY4B,UAAY,QAIxC,QACFK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,WAAAA,MAAAA,KAAAA,KAAejC,GAAatE,EAAAA,KAAAA,GAAA,aAEX,MAFWA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAE5BmG,EAAAA,GAAAA,MAAgBnG,EAAAA,IAAC,8DAGpB,mDA5BA9rC,IA4BA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,wBAES,WAAoBkvC,GAAqB,4EAC5CA,EAAUoD,UAAW,CAAFrG,EAAAA,KAAAA,EAAA,YAAQsG,EAAAA,GAAAA,kBAAmC,6CAA4C,UAC1Gh6C,KAAKi6C,SAAU,CAAFvG,EAAAA,KAAAA,EAAA,YAAQT,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,8BAA+BxC,KAAM,OAAO,OAEsB,GADzHqB,EAAYjK,KAAKy3C,OAAOI,YAAxB5tC,QACFiwC,GAAsBC,EAAAA,EAAAA,IAAYxD,EAAU1sC,QAAQnM,YAAc64C,EAAU1sC,QAAe0sC,KAAAA,OAAAA,EAAU1sC,QAAQnM,SAAS,KACxHmM,IAAYiwC,EAAmB,CAAAxG,EAAAA,KAAAA,EAAA,YAC3BmG,EAAAA,GAAAA,mBAA6C,oCAAD,OAAqCK,EAAmB,uBAAejwC,IAAU,OAG9E,OADvDjK,KAAKi6C,SAASG,KAAK,UAAW,CAAEnwC,QAAAA,IAChCjK,KAAKi6C,SAASG,KAAK,eAAgBp6C,KAAK03C,MAAMztC,SAAS,kBAChDiwC,GAAmB,iDAC3B,mDAbAzyC,IAaA,CAAA0B,IAAAA,cAAA1B,MAAAA,WAAA,wBAEO,WAAkBkvC,GAAqB,iFAWJ,GAVnCZ,EAAmBsE,EAAoB,CAAE1D,UAAAA,IAC/C32C,KAAKu3B,OAAO,CACVsb,SAAU8D,EAAU9D,UAAY,KAE5ByH,EAAgBxE,EAAoBC,GACpCwE,EAAS,IAAIC,EAAAA,GAAYC,EACDnE,EAAoBt2C,KAAKy3C,OAAOI,aAAtDnB,EAAiB,EAAjBA,kBACR6D,EAAO9+C,KAAK6+C,GACZC,EAAO9+C,KAAKi7C,GACNuD,GAAWS,EAAAA,EAAAA,IAAmBH,GACpCv6C,KAAK26C,0BAA0BV,GAC1Bj6C,KAAKy3C,OAAOO,kBAAmB,CAAFpE,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,GAAQ5zC,KAAK45C,cAAcjD,GAAU,iDACxE,mDAfAlvC,IAeA,CAAA0B,IAAAA,yBAAA1B,MAAAA,WAAA,wBAEO,WAA6BkvC,GAAqB,4EACxDA,EAAU1xC,GAAG,iBAAgB,eAAE21C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAO9gC,EAAqB+gC,GAAO,oFAC3DC,EAAKb,SAAU,CAAFjG,EAAAA,KAAAA,EAAA,YAAQgG,EAAAA,GAAAA,kBAAmC,6CAA4C,WACrGlgC,EAAO,CAAFk6B,EAAAA,KAAAA,EAAA,MAC4B,OAAnC8G,EAAKb,SAASG,KAAK,QAAStgC,GAAO,0BAarC,GAbqCihC,EAG+EF,EAAQ3xC,OAAO,GAA3H2pC,EAAQ,EAARA,SAAmBmI,EAAT/wC,EAAAA,QAA2BgxC,EAAM,EAANA,OAEjC,OAARpI,QAAQ,IAARA,GAAAA,EAAUr3C,QAAUs/C,EAAKpD,MAAM7E,SAAS,KAAOA,EAAS,KAC1DiI,EAAKvjB,OAAO,CACVsb,SAAAA,IAGFiI,EAAKb,SAASG,KAAK,kBAAmBvH,IAElCqH,EAAsB,KAAH,OAAQc,EAAiBl9C,SAAS,MAEvDk9C,GAAoBF,EAAKpD,MAAMztC,UAAYiwC,EAAmB,CAAAlG,EAAAA,KAAAA,GAAA,MAK7D,OAJGkH,GAAcpC,EAAAA,EAAAA,IAAef,EAAAA,GAAAA,OAAyBiD,IAAqB,CAAC,EAElFF,EAAKnB,UAAU,CACb9B,YAAa,EAAF,KAAOqD,GAAW,IAAEjxC,QAASiwC,EAAqB3D,UAAW0E,EAAQnD,eAAgBC,EAAAA,GAAAA,WAC/F/D,EAAAA,KAAAA,GACG8G,EAAKtC,YAAY7B,GAAU,4CAEpC,qDAzB4B,IAyB1B,2CACJ,mDA7BAlvC,MA6BA,EArKgC,CAAQ0zC,EAAAA,YAA9B5D,EAAsB,yDAWG,WAAOruC,GAI1C,uEACgJ,OAAzIkyC,EAAkB,IAAI7D,EAAsB,CAAEE,OAAQ,CAAEI,YAAa3uC,EAAO2uC,YAAaG,kBAAmB9uC,EAAO8uC,qBAAsB5D,EAAAA,KAAAA,EACzIgH,EAAgBhD,cAAclvC,EAAOytC,WAAU,gCAC9CyE,GAAe,2CACvB,mDAnBgC,ICJnC,IAAMC,EAA4B,IAAIC,EAAAA,EAAU,QAC1CC,EAA6B,IAAID,EAAAA,EAAU,OAC3CE,EAA4B,IAAIF,EAAAA,EAAU,KAG1CG,EAA6E,CACjFx9C,IAAK,SAACwI,GAAqB,MAAmB,kBAANA,EAAiB,IAAI60C,EAAAA,GAAUh6C,EAAAA,EAAAA,gBAAemF,GAAI,IAAM,IAAI60C,EAAAA,EAAU70C,EAAG,KACjHi1C,IAAK,SAACj1C,GAAqB,OAAK,IAAI60C,EAAAA,EAAU70C,EAAG,GAAG,GAEhDk1C,EAAwE,CAC5EC,IAAK,SAACC,GAAS,OAAKA,EAAUtvB,IAAI8uB,EAA0B,EAC5DS,KAAM,SAACD,GAAS,OAAKA,EAAUtvB,IAAIgvB,EAA2B,EAC9DQ,IAAK,SAACF,GAAS,OAAKA,EAAUtvB,IAAIivB,EAA0B,GAExDQ,EAAuE,CAC3EJ,IAAK,SAACC,GAAS,OAAKA,EAAUI,MAAMZ,GAA2Ba,GAAG,EAAGZ,EAAAA,EAAAA,cAAwB,EAC7FQ,KAAM,SAACD,GAAS,OAAKA,EAAUI,MAAMV,GAA4BW,GAAG,EAAGZ,EAAAA,EAAAA,cAAwB,EAC/FS,IAAK,SAACF,GAAS,OAAKA,EAAUI,MAAMT,GAA2BU,GAAG,EAAGZ,EAAAA,EAAAA,cAAwB,GAEzFa,EAAuD,CAC3Dl+C,IAAK,SAACwI,GAAC,OAAKA,EAAE3I,SAAS,GAAG,EAC1B49C,IAAK,SAACj1C,GAAC,OAAK,IAAI60C,EAAAA,EAAU70C,GAAG3I,SAAS,GAAG,GAyBrCs+C,EAAiB,SACrB30C,EAEsBoqC,GAAA,QADpBwK,gBAEF,OA1BgB,SAACnzC,GACjB,IAAQzB,EAA8FyB,EAA9FzB,MAAO40C,EAAuFnzC,EAAvFmzC,gBAAiBC,EAAsEpzC,EAAtEozC,iBAAkBC,EAAoDrzC,EAApDqzC,cAAeC,EAAqCtzC,EAArCszC,eAAgBC,EAAqBvzC,EAArBuzC,iBAC7EC,EAAqCjB,EAAYY,GAAiB50C,GAiBtE,OAfI60C,IACFI,EAAiBf,EAAyBW,GAAkBI,IAG1DF,IACFE,EAAiBV,EAAwBQ,GAAgBE,IAGvDD,IACFC,EAAkBA,EAA6BR,GAAGO,EAAkBnB,EAAAA,EAAAA,kBAGlEiB,IACFG,EAAiBP,EAAWI,GAAeG,IAEtCA,CACT,CAMSC,CAAU,CACfN,qBAHe,IAAG,QAAK,EAIvBE,cAJsC,EAAbA,cAKzBD,iBALwD,EAAhBA,iBAMxCE,eANwE,EAAdA,eAO1DC,iBAP0F,EAAhBA,iBAQ1Eh1C,MAAOA,GAAS,KAEpB,EAEA,SAASm1C,EAAgBC,GACvB,OAAOT,EAAeS,EAAS,CAC7BR,gBAAiB,MACjBE,cAAe,MACfD,iBAAkB,OAClBE,eAAgB,OAEpB,CAEA,SAASM,GAAgBD,GACvB,OAAOT,EAAeS,EAAS,CAC7BR,gBAAiB,MACjBE,cAAe,MACfD,iBAAkB,MAClBE,eAAgB,QAEpB,0kBC9EM,SAAUO,GAA4Bt2C,GAG1C,OADqBq2C,GADEF,EAAgBn2C,GAGzC,CAEA,SAAsBu2C,GAAyB,GAAD,gCAwB9C,cAFC,OAEDC,IAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAxBO,WAAwCC,GAAW,gFAAAtK,EAAAA,KAAAA,GAChC9qC,EAAAA,EAAAA,IAAoBo1C,GAAI,OAkB7C,OAlBGC,EAAY,EAAH,KACTC,EAAsB,GAAH,MACpBD,GAAS,IACZE,iBAAkBN,GAA4BI,EAAUE,kBACxDC,IAAK,GAAF,MACEH,EAAUG,KAAG,IAChBC,8BAA+BR,GAA4BI,EAAUG,IAAIC,+BACzEC,sBAAuBT,GAA4BI,EAAUG,IAAIE,yBAEnEC,OAAQ,GAAF,MACDN,EAAUM,QAAM,IACnBF,8BAA+BR,GAA4BI,EAAUM,OAAOF,+BAC5EC,sBAAuBT,GAA4BI,EAAUM,OAAOD,yBAEtEE,KAAM,GAAF,MACCP,EAAUO,MAAI,IACjBH,8BAA+BR,GAA4BI,EAAUO,KAAKH,+BAC1EC,sBAAuBT,GAA4BI,EAAUO,KAAKF,2BACnE,kBAEIJ,GAAmB,4CAC3B,sBAMD,SAAsBO,GAA6B,GAAD,gCAgBjD,qBAAAC,IAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAhBM,WAA4CV,GAAW,8EAAA/J,EAAAA,KAAAA,GACvCrrC,EAAAA,EAAAA,IAIlBo1C,EAAK,CACNW,SAAUX,EACVY,eAAgB,6BAChB3H,OAAQ,MACRhqB,KAAM,SACN,OATU,OAANrtB,EAAS,EAAH,KAULq0C,EAAAA,OAAAA,SAAAA,CACLmK,IAAKx+C,EAAOi/C,aACZN,OAAQ3+C,EAAOk/C,gBACfN,KAAM5+C,EAAOm/C,eACd,4CACF,sBAEM,IAAMC,GAA6B,SAACC,EAAyCC,GAAyB,MAC3G,IACE3iC,IAAAA,GAAU0iC,GAAoC,YAAtBE,EAAAA,EAAAA,GAAOF,GAAyB,6BACxD1iC,IAAAA,GAAU,SAAU0iC,EAAY,uCAChC1iC,IAAAA,GAAU,SAAU0iC,EAAY,uCAChC1iC,IAAAA,GAC6B,kBAApB0iC,EAAWxhD,OAAqBkF,EAAAA,EAAAA,gBAAes8C,EAAWxhD,MACjE,iFAEF,IAAIW,EAAO,KACP2M,EAAU,KACd,OAASk0C,EAA2CtrC,SAClD,KAAK4E,EAAAA,qBAAAA,GAC4B,kBAApB0mC,EAAW7gD,KACpBme,IAAAA,cAAoB,WAClBne,EAAOqX,KAAKI,MAAMopC,EAAW7gD,QAC5B,uCAGHA,EAAO6gD,EAAW7gD,KAEpBme,IAAAA,GAAUrgB,MAAMC,QAAQiC,GAAkB,iCAC1Cme,IAAAA,cAAoB,YAClB6iC,EAAAA,EAAAA,oBAAmBhhD,KAClB,kDACH,MACF,KAAKma,EAAAA,qBAAAA,GACL,KAAKA,EAAAA,qBAAAA,GAC4B,kBAApB0mC,EAAW7gD,KACpBme,IAAAA,cAAoB,WAClBne,EAAOqX,KAAKI,MAAMopC,EAAW7gD,QAC5B,uCAGHA,EAAO6gD,EAAW7gD,KAGpBme,IAAAA,GAAUne,EAAKkb,eAAelb,EAAKwZ,MAAO,oBAAF,OAAsBxZ,EAAKkb,YAAuC,8BAC1G,IAAM+lC,EAAaC,EAAAA,SAAoBlhD,EAAMmhD,EAAAA,qBAAAA,YAC7ChjC,IAAAA,YAAmB8iC,EAAWG,OAAOljD,OAAQ,EAAG,2EAChDyO,EAAqB,QAAd,EAAG3M,EAAK8c,cAAM,aAAXukC,EAAa10C,WAErBwR,IAAAA,IAAWrd,OAAOE,MAAM8/C,GAAqDn0C,qCAAAA,OAAAA,EAAoD,+CAC1G,kBAAZA,IACTA,EAAU7L,OAAOC,SAAS4L,GAASkwC,EAAAA,EAAAA,IAAYlwC,GAAW,GAAK,KAEjEwR,IAAAA,YAAmBxR,EAASm0C,EAAoCn0C,qBAAAA,OAAAA,EAA2Cm0C,qCAAAA,OAAAA,EAAiB,OAE9H,MACF,QACE3iC,IAAAA,KAAY,+BAAD,OAAiC0iC,EAA2CtrC,QAAW,MAMvG,CAJC,MAAOiH,GACP,MAAMm5B,EAAAA,GAAAA,IAAAA,aAA2B,CAC/B7nC,QAAc,OAAL0O,QAAK,IAALA,OAAK,EAALA,EAAO1O,SAEnB,CACH,2kBCtG0E,SAE3DwzC,GAAO,EAAD,mDAQpB,OARoBC,IAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAArB,SAAsBrL,EAAAA,EAAgD5F,EAAiBkR,GAAiC,oFAAAnK,EAAAA,KAAAA,EAC1FmK,EAAYC,kBAAkBvL,GAAS,OAAhD,OAAbwL,EAAgB,EAAH,KAAArK,EAAAA,KAAAA,EACEmK,EAAYG,yBAAwB,OAImB,OAJtEC,EAAS,EAAH,KACNC,EAAgBC,EAAAA,mBAAAA,WAA8BJ,EAAe,CACjEE,OAAAA,IAEIG,EAAWF,EAAc3d,KAAKrhC,EAAOxD,KAAKixC,EAAS,QAAQ0R,YAAW,kBACrED,GAAQ,4CAChB,sBAEK,SAAUhF,GAQfxI,GAAA,IAPCiN,EAAW,EAAXA,YACAlR,EAAO,EAAPA,QACA2R,EAAsB,EAAtBA,uBAMA,MAAO,CACLzN,YAAa,WAAF,wBAAE,WAAO9nB,GAAuB,0FAAK,CAAC,KAAD,QAAMnmB,EAAAA,EAAAA,kBAAiB1D,EAAOxD,KAAKixC,EAAS,QAAQ9vC,SAAS,UAAS,8FAAzG,GACbi0C,cAAe,WAAF,wBAAE,WAAO/nB,GAAuB,0FAAK4jB,GAAO,8FAA1C,GACfwE,mBAAoB,WAAF,IAAEyE,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOrD,EAAgDxpB,GAAuB,2EAC5C,GAA9Cw1B,EAAsBD,IACJ,CAAAlM,EAAAA,KAAAA,EAAA,YAChBJ,EAAAA,GAAAA,SAAAA,OAA0B,CAC9B7nC,QAAS,8BACTxC,KAAM,OACN,cAAAyqC,EAAAA,KAAAA,EACmBuL,GAAOpL,EAAU5F,EAASkR,GAAY,OAA/C,OAARO,EAAW,EAAH,KAAAhM,EAAAA,KAAAA,EACOmM,EAAoBlH,QAA0B,CACjEnC,OAAQ,yBACRjtC,OAAQ,CAAC,KAAKhH,OAAOm9C,EAASvhD,SAAS,WACvC,OAHU,OAAN2hD,EAAS,EAAH,uBAILA,GAAM,4CACd,qDAbmB,GAcpBpN,uBAAwB,WAAF,IAAE0E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOvD,EAAgDxpB,GAAuB,uEAChD,GAAxBu1B,IACJ,CAAAhM,EAAAA,KAAAA,EAAA,YAChBN,EAAAA,GAAAA,SAAAA,OAA0B,CAC9B7nC,QAAS,8BACTxC,KAAM,OACN,cAAA2qC,EAAAA,KAAAA,EACmBqL,GAAOpL,EAAU5F,EAASkR,GAAY,OAA/C,OAARO,EAAW,EAAH,mCACFA,EAASvhD,SAAS,SAAM,2CACrC,qDATuB,GAUxBo0C,sBAAuB,WAAF,IAAE+E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOnD,EAAkC9pB,GAAuB,uEAC3B,OAApD01B,GAAgBxI,EAAAA,EAAAA,GAAYtJ,EAASkG,EAAUx2C,MAAK,kBACnDoiD,GAAa,2CACrB,qDAHsB,GAIvBvN,uBAAwB,WAAF,IAAEgF,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOrD,EAAkC9pB,GAAuB,yEAET,OADvE21B,EAAgBx/C,EAAOxD,KAAKixC,EAAS,OACrC7iC,GAAM60C,EAAAA,EAAAA,cAAa,CAAEz9C,WAAYw9C,EAAeriD,KAAMw2C,EAAUx2C,OAAO,kBACtEyN,GAAG,2CACX,qDAJuB,GAKxBunC,oBAAqB,WAAF,IAAE+E,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOvD,EAAuC9pB,GAAuB,mFAGpC,GAFpD0vB,EAAAA,GAAAA,MAAU,sBAAuB5F,GAC3B6L,EAAgBx/C,EAAOxD,KAAKixC,EAAS,OACrC4R,EAAsBD,IACJ,CAAAvL,EAAAA,KAAAA,EAAA,YAChBf,EAAAA,GAAAA,SAAAA,OAA0B,CAC9B7nC,QAAS,8BACTxC,KAAM,OACN,cAAAorC,EAAAA,KAAAA,EACkBwL,EAAoBlH,QAAyB,CAAEnC,OAAQ,gBAAgB,OAQG,OAR1FlsC,EAAU,EAAH,KACP41C,EAAezhD,OAAOC,SAAS4L,GAASkwC,EAAAA,EAAAA,IAAYlwC,GAAW,GAAK,IACpEf,EAAS,GAAH,MACP4qC,GAAS,IACZjhC,QAAS4E,EAAAA,qBAAAA,KAEXymC,GAA2Bh1C,EAAQ22C,GAC7BviD,EAA8B,kBAAhB4L,EAAO5L,KAAoBqX,KAAKI,MAAM7L,EAAO5L,MAAQ4L,EAAO5L,KAC1EyN,GAAMusC,EAAAA,EAAAA,eAAc,CAAEn1C,WAAYw9C,EAAeriD,KAAAA,EAAMuV,QAAS4E,EAAAA,qBAAAA,KAA0B,kBACzF1M,GAAG,4CACX,qDAnBoB,GAoBrBwnC,sBAAuB,WAAF,IAAEuN,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOhM,EAA2D9pB,GAAuB,iFAG1D,GAFpD0vB,EAAAA,GAAAA,MAAU,wBAAyB5F,GAC7B6L,EAAgBx/C,EAAOxD,KAAKixC,EAAS,OACrC4R,EAAsBD,IACJ,CAAArL,EAAAA,KAAAA,EAAA,YAChBjB,EAAAA,GAAAA,SAAAA,OAA0B,CAC9B7nC,QAAS,8BACTxC,KAAM,OACN,cAAAsrC,EAAAA,KAAAA,EACkBsL,EAAoBlH,QAAyB,CAAEnC,OAAQ,gBAAgB,OAIG,OAJ1FlsC,EAAU,EAAH,KACP41C,EAAezhD,OAAOC,SAAS4L,GAASkwC,EAAAA,EAAAA,IAAYlwC,GAAW,GAAK,IAC1Ei0C,GAA2BpK,EAAW+L,GAChCviD,EAAiC,kBAAnBw2C,EAAUx2C,KAAoBqX,KAAKI,MAAM++B,EAAUx2C,MAAQw2C,EAAUx2C,KACnFyN,GAAMusC,EAAAA,EAAAA,eAAc,CAAEn1C,WAAYw9C,EAAeriD,KAAAA,EAAMuV,QAAS4E,EAAAA,qBAAAA,KAA0B,kBACzF1M,GAAG,4CACX,qDAfsB,GAgBvBynC,sBAAuB,WAAF,IAAEuN,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAOjM,EAA2D9pB,GAAuB,iFAG1D,GAFpD0vB,EAAAA,GAAAA,MAAU,wBAAyB5F,GAC7B6L,EAAgBx/C,EAAOxD,KAAKixC,EAAS,OACrC4R,EAAsBD,IACJ,CAAAnL,EAAAA,KAAAA,EAAA,YAChBnB,EAAAA,GAAAA,SAAAA,OAA0B,CAC9B7nC,QAAS,8BACTxC,KAAM,OACN,cAAAwrC,EAAAA,KAAAA,EACkBoL,EAAoBlH,QAAyB,CAAEnC,OAAQ,gBAAgB,OAIG,OAJ1FlsC,EAAU,EAAH,KACP41C,EAAezhD,OAAOC,SAAS4L,GAASkwC,EAAAA,EAAAA,IAAYlwC,GAAW,GAAK,IAC1Ei0C,GAA2BpK,EAAW+L,GAChCviD,EAAiC,kBAAnBw2C,EAAUx2C,KAAoBqX,KAAKI,MAAM++B,EAAUx2C,MAAQw2C,EAAUx2C,KACnFyN,GAAMusC,EAAAA,EAAAA,eAAc,CAAEn1C,WAAYw9C,EAAeriD,KAAAA,EAAMuV,QAAS4E,EAAAA,qBAAAA,KAA0B,kBACzF1M,GAAG,4CACX,qDAfsB,GAgBvBknC,2BAA4B,WAAF,IAAE+N,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,EAAO3+C,EAAiB2oB,GAAuB,iEACzB,OAAhD0vB,EAAAA,GAAAA,KAAS,6BAA8Br4C,GAChC4+C,EAAAA,OAAAA,UAAAA,EAAAA,EAAAA,wBAAuBrS,IAAQ,2CACvC,qDAH2B,GAI5BoE,sBAAuB,SAAC8B,EAAkC9pB,GACxD0vB,EAAAA,GAAAA,KAAS,wBAAyB5F,GAClC,IAAMoM,GAAW5+C,EAAAA,EAAAA,gBAAewyC,EAAUx2C,MACpC6iD,EAAOhgD,EAAOxD,KAAKujD,EAAU,OAEnC,OADkB/vC,EAAAA,EAAAA,SAAQ,CAAE2D,cAAea,KAAKI,MAAMorC,EAAKriD,SAAS,SAA8BqE,WAAYyrC,GAEhH,EAEJ,CClIM,SAAUwS,GAAQC,GACtB,OAAOjlC,EAAAA,EAAAA,cAAailC,EAAQviD,SAAS,IACvC,CAEM,SAAUwiD,GAAQC,GACtB,OAAItkC,IAAAA,KAAQskC,GAAkBA,EACvB,IAAItkC,IAAJ,EAAO3a,EAAAA,EAAAA,gBAAei/C,GAAW,GAC1C,UAEgBC,GAAqBC,EAAcC,EAA4BC,GAC7E,IAAMC,EAAW,IAAI3kC,IAAJ,CAAOykC,GAClBG,EAAU,IAAI5kC,IAAJ,CAAO0kC,GACvB,OAAOF,EAAS9pC,IAAIiqC,GAAUr0B,IAAIs0B,EACpC,CCxBO,IAEMC,GACH,MADGA,GAGC,MAGDC,GACC,YADDA,GAEW,sBAFXA,GAGM,qBAINC,GACC,aADDA,GAEH,SAFGA,GAGG,wlBCNhB,IAAaC,GAAoB,WAO/B,SAAkGA,EAAAA,GAAA,IAApF1B,EAAsB,EAAtBA,wBAAsB5H,EAAAA,EAAAA,GAAAA,KAAAA,IAAAM,EAAAA,EAAAA,GAAAA,KAAAA,cANY,OAAIA,EAAAA,EAAAA,GAAAA,KAAAA,8BAAAA,IAAAA,EAAAA,EAAAA,GAAAA,KAAAA,uBAItB,GAG5Bj4C,KAAKu/C,uBAAyBA,CAChC,CAiUC,OAjUArH,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAA/uC,IAAAA,gBAAArB,IAED,WACE,OAAO9H,KAAKu/C,wBACd,GAAC,CAAAp2C,IAAAA,OAAA1B,MAAAA,WAAA,IAEDgV,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,wEAAAm2B,EAAAA,KAAAA,EAC4B5yC,KAAKkhD,cAAc5I,QAA2B,CAAEnC,OAAQ,sBAAuBjtC,OAAQ,KAAK,OAAtG,OAAhBlJ,KAAK63C,YAAc,EAAH,KAAAjF,EAAAA,KAAAA,EACiB5yC,KAAKmhD,0BAAyB,OAA/DnhD,KAAKohD,oBAAsB,EAAH,qDACzB,kDALA35C,IAKA,CAAA0B,IAAAA,yBAAA1B,MAAAA,WAAA,IAED45C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,kFACOrhD,KAAK63C,YAAa,CAAF1E,EAAAA,KAAAA,EAAA,YAAQ,IAAIj3C,MAAM,gCAA+B,OAQrE,OARqEolD,EAC/BthD,KAAK63C,YAAvB1qC,EAAI,EAAjB4rC,YAAmB9uC,EAAO,EAAPA,QACrBs3C,EAAWvhD,KAAKohD,oBAAsBI,EAAAA,SAAAA,OAAkBA,EAAAA,SAAAA,OACxDC,EAAoB,CACxBt0C,KAAAA,EACAlD,QAAqB,YAAZA,EAAwB,EAAI7L,OAAOC,SAAS4L,EAAS,IAC9Dy3C,UAAuB,YAAZz3C,EAAwB,EAAI7L,OAAOC,SAAS4L,EAAS,IAChE03C,gBAAiBJ,GAClB,kBACMK,EAAAA,OAAAA,OAAcH,IAAkB,gDACxC,kDAbAh6C,IAaA,CAAA0B,IAAAA,oBAAA1B,MAAAA,WAAA,wBAED,WAAwB+rC,GAA8C,sFAC/DxzC,KAAK63C,YAAa,CAAFxE,EAAAA,KAAAA,EAAA,YAAQ,IAAIn3C,MAAM,gCAA+B,OAGzD,QAGgBqD,KAJvBsiD,EAAiB,GAAH,GACfrO,IAGc7zC,MAAmB,CAAA0zC,EAAAA,KAAAA,EAAA,aAAAA,EAAAA,KAAAA,EACNrzC,KAAKkhD,cAAc5I,QAAgB,CAC/DnC,OAAQ,0BACRjtC,OAAQ,CAACsqC,EAAS72C,KAAM,YACxB,OAHFklD,EAAeliD,MAAQ,EAAH,eAKjBK,KAAKohD,sBAAuBS,EAAeC,SAAQ,CAAAzO,EAAAA,KAAAA,GAAA,MAGtD,GAFIwO,EAAeE,qBAAqBF,EAAeE,aACnDF,EAAeG,6BAA6BH,EAAeG,qBAE1DH,EAAeI,IAAK,CAAF5O,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,GACSrzC,KAAKkiD,mBAAmBL,GAAe,SAA/DM,EAAkB,EAAH,QAEnBN,EAAeO,SAAWD,GAC3B9O,EAAAA,KAAAA,GAAA,cAEDwO,EAAeO,SAAWP,EAAeI,IAAI,iCAExCJ,GAAc,WAGlBA,EAAeI,IAAK,CAAF5O,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,GACSrzC,KAAKkiD,mBAAmBL,GAAe,SAA/DM,EAAkB,EAAH,QAEnBN,EAAeO,SAAWD,GAC3B9O,EAAAA,KAAAA,GAAA,cAEDwO,EAAeO,SAAWP,EAAeI,IAAI,eAAA5O,EAAAA,KAAAA,GAOrCrzC,KAAKqiD,kBAAkBR,GAAe,QA+DE,OA/DFS,EAAAA,EAAAA,KAHpCC,EAAe,EAAzBT,SACcU,EAAmB,EAAjCT,aACsBU,EAA2B,EAAjDT,qBAGEhiD,KAAKohD,sBAGHS,EAAeC,UAAaD,EAAeE,cAAiBF,EAAeG,sBAUzEQ,IAAwBX,EAAeE,eAGzCF,EAAeE,aAAeS,GAG5BC,IAAgCZ,EAAeG,uBAGjDH,EAAeG,qBAAuBS,GAGpCF,IAAoBV,EAAeE,eAIrCF,EAAeE,aAAeQ,GAG5BV,EAAeE,eAAiBF,EAAeG,uBAKjDH,EAAeG,qBAAuBH,EAAeE,gBAjCvDF,EAAeE,aAAeF,EAAeC,SAE7CD,EAAeG,sBF1FIpjD,EE2FsB,kBAAhC6jD,GAA2CnhD,EAAAA,EAAAA,gBAAemhD,GAA+BA,EF3F5E5jC,EE4Fe,kBAA5BgjC,EAAeC,UAAwBxgD,EAAAA,EAAAA,gBAAeugD,EAAeC,UAAYD,EAAeC,SF3FrG,OAANljD,QAAoBW,IAANX,GAAyB,OAANigB,QAAoBtf,IAANsf,GAG5C,IAAIy8B,EAAAA,EAAU18C,EAAG,IAAI8vB,GAAG7P,EAAG,IE0FxB4jC,EACAZ,EAAeC,kBAgCdD,EAAeC,kBAKfD,EAAeG,4BACfH,EAAeE,eAOpBQ,GAAoBV,EAAeC,UAAaD,EAAeG,sBAAyBH,EAAeE,eACzGF,EAAeC,SAAWS,GAG5BV,EAAe3sC,KAAOlV,KAAKohD,oBAAsBN,GAAwCA,GACzFe,EAAe53C,QAAUjK,KAAK63C,YAAY5tC,QAAQ,kBAC3C43C,GAAc,kCFlJT,IAAWjjD,EAAGigB,CEkJL,eACtB,mDA5GApX,IA4GA,CAAA0B,IAAAA,2BAAA1B,MAAAA,WAAA,IAEOi7C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,8EAAAnP,EAAAA,KAAAA,EACkBvzC,KAAKkhD,cAAc5I,QAAgB,CAAEnC,OAAQ,eAAgBjtC,OAAQ,KAAK,OAApF,OAAR44C,EAAW,EAAH,KACPvO,EAAAA,OAAAA,SAAAA,CACLuO,SAAUhF,GAAgBgF,GAAUhkD,aACrC,gDACF,kDAPA2J,IAOA,CAAA0B,IAAAA,0BAAA1B,MAAAA,WAAA,IAEOk7C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,gFAAAjP,EAAAA,KAAAA,EACoB1zC,KAAKkhD,cAAc5I,QAAe,CAAEnC,OAAQ,uBAAwBjtC,OAAQ,CAAC,UAAU,KAAS,OAC5C,OADxE05C,EAAc,EAAH,KACXC,EAAkBD,QAA6CrjD,IAA9BqjD,EAAYE,cAE5CpP,EAAAA,OAAAA,WAAEmP,GAAe,gDACzB,kDAPAp7C,IAOA,CAAA0B,IAAAA,0BAAA1B,MAAAA,WAAA,IAEOs7C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,oFACD/iD,KAAK63C,YAAa,CAAFjE,EAAAA,KAAAA,EAAA,YAAQ,IAAI13C,MAAM,gCAA+B,OAGT,GAFvD8mD,EAAwD,QAA7BhjD,KAAK63C,YAAY5tC,QAE5CA,EAAU7L,OAAOC,SAAS2B,KAAK63C,YAAY5tC,QAAS,IAAG2pC,EAAAA,KAAAA,GAKvD5zC,KAAKohD,oBAAqB,CAAFxN,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,EAEFoJ,GDjLE,+ECiL0C91C,QAAQ,aAAc,GAAF,OAAK+C,KAAW,OAAlGkzC,EAAY,EAAH,KACf8F,EAAU,CACRC,gBAAiB/F,EACjBgG,gBAAiBnC,IACjBpN,EAAAA,KAAAA,GAAA,kBACOoP,EAA0B,CAAFpP,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,GACT+J,GDxLI,wECwL8Cz2C,QAAQ,aAAc,GAAF,OAAK+C,KAAW,QAAxGkzC,EAAY,EAAH,KACf8F,EAAU,CACRC,gBAAiB/F,EACjBgG,gBAAiBnC,IACjBpN,EAAAA,KAAAA,GAAA,oBAEI,IAAI13C,MAAM,sDAAqD,QAAA03C,EAAAA,KAAAA,GAAA,qBAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAI7C5zC,KAAKojD,2BAA0B,QAAjDjG,EAAY,EAAH,KACf8F,EAAU,CACRC,gBAAiB/F,EACjBgG,gBAAiBnC,IACjBpN,EAAAA,KAAAA,GAAA,oBAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,IAEI,IAAI13C,MAAoD,yDAAgBkP,UAAU,iCAGrF63C,GAAO,kEACf,kDAvCAx7C,IAuCA,CAAA0B,IAAAA,oBAAA1B,MAAAA,WAAA,wBAEO,WACN+rC,GAA8C,2FAExCxzC,KAAKohD,qBAAuB5N,EAASsO,UAAc9hD,KAAKohD,qBAAuB5N,EAASuO,cAAgBvO,EAASwO,sBAAqB,CAAAhO,EAAAA,KAAAA,EAAA,+BACnI,CAAC,GAAC,cAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAI0Ch0C,KAAKqjD,0BAAyB,OAAzC,GAAyCC,EAAAA,EAAAA,KAAzEJ,EAAe,EAAfA,gBAAiBC,EAAe,EAAfA,iBACrBnjD,KAAKohD,qBAAuB+B,IAAoBnC,GAA6B,CAAAhN,EAAAA,KAAAA,GAAA,MACT,GADSuP,EACGL,EAA1EzF,OAAUF,GAAlBgG,OAAAA,IAAAA,EAA2E,CAAC,EAAC,GAA3DhG,8BAA+BC,EAAqB,EAArBA,uBAE7CD,IAAiCC,EAAqB,CAAAxJ,EAAAA,KAAAA,GAAA,aACjDA,EAAAA,OAAAA,SAAAA,CACL+N,cAAc3mC,EAAAA,EAAAA,cAAawhC,EAAgBY,IAC3CwE,sBAAsB5mC,EAAAA,EAAAA,cAAawhC,EAAgBW,MACpD,QAAAvJ,EAAAA,KAAAA,GAAA,iBAEMmP,IAAoBnC,GAAyB,CAAAhN,EAAAA,KAAAA,GAAA,aAG/CA,EAAAA,OAAAA,SAAAA,CACL8N,UAAU1mC,EAAAA,EAAAA,cAAawhC,EAAiBsG,EAAkCzF,WAC3E,WACQ0F,IAAoBnC,GAA+B,CAAAhN,EAAAA,KAAAA,GAAA,aAGrDA,EAAAA,OAAAA,SAAAA,CACL8N,UAAU1mC,EAAAA,EAAAA,cAAawhC,EAAiBsG,EAAoCpB,aAC7E,QAAA9N,EAAAA,KAAAA,GAAA,cAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAGH0F,EAAAA,GAAAA,MAAgB1F,EAAAA,IAAC,eAAAA,EAAAA,KAAAA,GAGQh0C,KAAKojD,2BAA0B,QAA1C,OAA0CI,EAAAA,EAAAA,KAAlD1B,EAAQ,EAARA,SAED9N,EAAAA,OAAAA,SAAAA,CAAE8N,UAAU1mC,EAAAA,EAAAA,cAAawhC,EAAgBkF,MAAY,0DAC7D,mDAxCAr6C,IAwCA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,wBAEO,WAAoBg8C,GAAyB,yEAUd,cAT/BjQ,EAAW,GAAH,GAAQiQ,IAON3B,gBACTtO,EAASuO,oBACTvO,EAASwO,qBAAqB9N,EAAAA,KAAAA,EAClBl0C,KAAKkhD,cAAc5I,QAAgB,CAAEnC,OAAQ,kBAAmBjtC,OAAQ,CAACsqC,KAAY,OAA/F,OAAHyO,EAAM,EAAH,uBACFA,GAAG,gDACX,mDAfAx6C,IAeA,CAAA0B,IAAAA,kBAAA1B,MAAAA,WAAA,wBAEO,WAAsBg8C,GAAyB,oFAAArP,EAAAA,KAAAA,EAIhCp0C,KAAKkhD,cAAc5I,QAAe,CAAEnC,OAAQ,uBAAwBjtC,OAAQ,CAAC,UAAU,KAAS,OAIvE,OAJxCsH,EAAQ,EAAH,KAELkzC,EAAkBpD,GAAQ9vC,EAAM4xC,UAChCuB,EAAkBnD,GAAqBkD,EAAiB,GAAI,IAC9DE,EAAkBxD,GAAQuD,GAAgBvP,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAGpBp0C,KAAK6jD,cAAcJ,GAAO,OAAlDG,EAAkB,EAAH,KAAAxP,EAAAA,KAAAA,GAAA,cAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEfsF,EAAAA,GAAAA,KAAetF,EAAAA,IAAC,eAEXA,EAAAA,OAAAA,SAAAA,CAAE0P,cAAetzC,EAAM4xC,SAAoBwB,gBAAAA,IAAiB,0DACpE,mDAlBAn8C,IAkBA,CAAA0B,IAAAA,eAAA1B,MAEO,SAAas8C,EAA4BC,GAA0C,IAAhBC,EAAa,UAAH,6CAAG,IAChFC,EAAoB5D,GAAQyD,GAC5BI,EAAkB7D,GAAQ0D,GAC1BI,EAAkBD,EAAgB35B,KAAK,IACvC65B,EAAqBH,EAAkB15B,KAAKy5B,GAGlD,OAAIC,EAAkB51B,GAAG81B,GAAyBhE,GAAQ8D,GAEtDG,EAAmB31B,GAAG01B,GAAyBhE,GAAQiE,GAEpDjE,GAAQgE,EACjB,GAAC,CAAAj7C,IAAAA,+BAAA1B,MAAAA,WAAA,wBAEO,WAAmC68C,GAAkD,6EAK9E,GADLhnD,EAAagnD,EAAbhnD,KAAMinD,EAAOD,EAAPC,GACV37C,EAAO,IAIPtL,GAASinD,EAAE,CAAAjQ,EAAAA,KAAAA,EAAA,MACbkQ,EAAazD,GAAkCzM,EAAAA,KAAAA,GAAA,oBAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAG/Bt0C,KAAKkhD,cAAc5I,QAAgB,CAAEnC,OAAQ,cAAejtC,OAAQ,CAACq7C,EAAI,YAAY,OAAnG37C,EAAO,EAAH,KAAA0rC,EAAAA,KAAAA,GAAA,cAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEJoF,EAAAA,GAAAA,KAAepF,EAAAA,IAAC,QAIlBkQ,GAFqB57C,GAAiB,OAATA,GAA0B,QAATA,EAEnBm4C,GAA+BA,GAAuC,eAG5FzM,EAAAA,OAAAA,SAAAA,CAAEmQ,oBAAqBD,EAAY57C,KAAAA,IAAM,0DACjD,mDAzBAnB,IAyBA,CAAA0B,IAAAA,qBAAA1B,MAAAA,WAAA,wBAEO,WAAyB+rC,GAA8C,wFAAAmB,EAAAA,KAAAA,EACvC30C,KAAK0kD,6BAA6B,GAAD,GAAMlR,IAAW,OAA7D,GAA6DmR,EAAAA,EAAAA,KAAhFF,EAAmB,EAAnBA,qBAEJjR,EAASyO,IAAK,CAAFtN,EAAAA,KAAAA,EAAA,aACPnB,EAAAA,OAAAA,SAAAA,EAASyO,KAAG,WAGjBzO,EAAS+Q,IAAME,IAAwB1D,GAA4B,CAAApM,EAAAA,KAAAA,GAAA,UAEjEnB,EAASl2C,KAAM,CAAFq3C,EAAAA,KAAAA,EAAA,YACTz4C,MAAM,mEAAkE,OAKhF,OAF4B,KAGrBkf,EAAAA,OAAAA,UAAAA,EAAAA,EAAAA,cAHqB,KAGYtd,SAAS,MAAI,eAAA62C,EAAAA,KAAAA,GAGN30C,KAAK4kD,gBAAgBpR,GAAS,QAGW,OAHXqR,EAAAA,EAAAA,KAAvEf,EAAa,EAAbA,cAAeF,EAAe,EAAfA,gBAGjBxB,EAAWpiD,KAAK8kD,cAAa1pC,EAAAA,EAAAA,cAAawoC,GAAkBE,GAAwB,kBACnF1B,GAAQ,iDAChB,mDA1BA36C,MA0BA,EA1U8B,ugCCOjC,IAAas9C,GAA2B,aAAAvN,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,YACtC,SAA8GuN,EAAAA,GAAA,IAAhGtN,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAK,OAAAC,EAAAA,EAAAA,GAAAA,KAAAA,GACnBqN,EAAAA,KAAAA,KAAAA,CAAEvN,OAAQ,CAAEI,YAAa,GAAF,MAAOJ,EAAOI,aAAW,IAAEC,eAAgBC,EAAAA,GAAAA,UAA6BL,MAAAA,GACvG,CAkHC,OAlHAQ,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAA/uC,IAAAA,SAAA1B,MAAAA,WAAA,IAWM0wC,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,oEACAn4C,KAAK03C,MAAMv1C,WAAU,CAAAywC,EAAAA,KAAAA,EAAA,YAClBK,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,4EAA6ExC,KAAM,OAAO,cAAAgqC,EAAAA,KAAAA,EACjI5yC,KAAKo4C,cAAcp4C,KAAK03C,MAAMv1C,YAAW,gCACxCnC,KAAKq4C,qBAAqBC,QAAQ,CAAEnC,OAAQ,kBAAiB,gDACrE,kDAhBA1uC,IAgBA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,wBAEM,WAAoBmmC,GAAe,qFAmBC,OAlBnCkR,EAAc,IAAImC,GAAqB,CAC3C1B,uBAAwBv/C,KAAKu/C,uBAAuB0F,KAAKjlD,QAErD+1C,EAAmBsE,GAAoB,CAC3CyE,YAAAA,EACAlR,QAAAA,EACA2R,uBAAwBv/C,KAAKu/C,uBAAuB0F,KAAKjlD,QAErDs6C,EAAgBxE,EAAoBC,GACpCmP,EAAwBllD,KAAKmlD,2BAC7B5K,EAAS,IAAIC,EAAAA,GACnBC,EAC8BnE,EAAoBt2C,KAAKy3C,OAAOI,aAAtDnB,EAAiB,EAAjBA,kBACR6D,EAAO9+C,KAAK6+C,GACZC,EAAO9+C,KAAKypD,GACZ3K,EAAO9+C,KAAKuE,KAAKolD,wBACjB7K,EAAO9+C,KAAKi7C,GACNuD,GAAWS,EAAAA,EAAAA,IAAmBH,GACpCv6C,KAAK26C,0BAA0BV,GAAU9G,EAAAA,KAAAA,GACnC2L,EAAYlsB,OAAM,eAAAugB,EAAAA,KAAAA,GAClBnzC,KAAK45C,gBAAe,iDAC3B,mDAxBAnyC,IAwBA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,wBAEM,WAAoByB,GAA8B,oEAClDlJ,KAAKq4C,qBAAsB,CAAFhF,EAAAA,KAAAA,EAAA,YAAQJ,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,8BAA+BxC,KAAM,OAAO,cAAAyqC,EAAAA,KAAAA,EAC7FrzC,KAAKq4C,qBAAqBC,QAAyB,CAAEnC,OAAQ,oBAAoB,OAA1F,GAAG,EAAH,OACGjtC,EAAO/G,WAAU,CAAAkxC,EAAAA,KAAAA,GAAA,aAAAA,EAAAA,KAAAA,EAC7BrzC,KAAKo4C,cAAclvC,EAAO/G,YAAW,OAClB,OADkBkxC,EAC3C,GAAArzC,KAAKq4C,qBAAoBhF,EAAAA,KAAAA,GACPrzC,KAAKq4C,qBAAqBC,QAA2B,CAAEnC,OAAQ,iBAAiB,QAAA9C,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,GAAAA,CAAhGR,SAAU,EAAF,IAAAQ,EADgB+G,GAAAA,KAAI,UAAC,kBAAmB,EAAF,qDAInD,mDAXA3yC,IAWA,CAAA0B,IAAAA,cAAA1B,MAAAA,WAAA,wBAEM,WAAkByB,GAA2B,4EAC7ClJ,KAAKq4C,qBAAsB,CAAF9E,EAAAA,KAAAA,EAAA,YAAQN,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,8BAA+BxC,KAAM,OAAO,OAKvF,OAJ1BivC,EAAc73C,KAAK84C,eAAe5vC,EAAOe,SAC/CjK,KAAKu3B,OAAO,CACVttB,QAAS,YAEXjK,KAAK25C,UAAU,CAAE9B,YAAAA,IAAetE,EAAAA,KAAAA,EACVvzC,KAAKq4C,qBAAqBC,QAAyB,CAAEnC,OAAQ,oBAAoB,OAA1F,OAAPvI,EAAU,EAAH,KAAA2F,EAAAA,KAAAA,GACPvzC,KAAKo4C,cAAcxK,GAAQ,iDAClC,mDAXAnmC,IAWA,CAAA0B,IAAAA,gBAAA1B,MAAAA,WAAA,IAES49C,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAAA,SAAAA,IAAA,4EACHrlD,KAAKq4C,qBAAsB,CAAF3E,EAAAA,KAAAA,EAAA,YAAQT,EAAAA,GAAAA,SAAAA,OAA0B,CAAE7nC,QAAS,8BAA+BxC,KAAM,OAAO,OACxG,GAAPqB,EAAYjK,KAAKy3C,OAAOI,YAAxB5tC,QACM,CAAFypC,EAAAA,KAAAA,EAAA,YAAQT,EAAAA,GAAAA,IAAAA,cAA4B,2CAA0C,cAAAS,EAAAA,KAAAA,EACpE1zC,KAAKq4C,qBAAqBC,QAA0B,CACxEnC,OAAQ,cACRjtC,OAAQ,KACR,OAHW,GAAPo8C,EAAU,EAAH,KAKTjnD,SAAS4L,EAAS,MAAQ5L,SAASinD,EAAS,IAAG,CAAA5R,EAAAA,KAAAA,GAAA,YAAQT,EAAAA,GAAAA,SAAAA,kBAAqC,oCAAD,OAAqCqS,IAAU,QAKrH,OAJrBtlD,KAAK03C,MAAMztC,UAAYA,IACzBjK,KAAKq4C,qBAAqB+B,KAAK,eAAgBnwC,GAC/CjK,KAAKq4C,qBAAqB+B,KAAK,UAAW,CAAEnwC,QAAAA,KAE9CjK,KAAKu3B,OAAO,CAAEttB,QAAAA,IAAW,kBAClBq7C,GAAO,iDACf,kDAlBA79C,IAkBA,CAAA0B,IAAAA,2BAAA1B,MAEO,WAAwB,WACxB89C,EAA4C,CAChD7M,SAAU,WAAF,wBAAE,WAAOxvC,GAAiC,+EACxCe,EAAmEf,EAAnEe,QAASgvC,EAA0D/vC,EAA1D+vC,UAAWC,EAA+ChwC,EAA/CgwC,QAASC,EAAsCjwC,EAAtCiwC,kBAAmBE,EAAmBnwC,EAAnBmwC,eACxDzB,EAAKc,SAAS,CACZZ,eAAgB,SAChB7tC,QAAAA,EACAuvC,QAAQH,OAAAA,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,SAAU,MAClCD,YAAYD,OAAAA,QAAc,IAAdA,OAAc,EAAdA,EAAgBlsC,OAAQ,QACpC4rC,YAAaE,EACb1C,UAAW2C,EAAQ,GACnBE,eAAeD,OAAAA,QAAAA,IAAAA,OAAAA,EAAAA,EAAoB,KAAM,GACzCM,UAAwB,OAAdJ,QAAAA,IAAAA,OAAAA,EAAAA,EAAgBI,WAAY,KACrC,2CACJ,mDAZS,GAaV+L,YAAa,WAAF,wBAAE,WAAOt8C,GAA2B,uEAC9B,OAAPe,EAAYf,EAAZe,QAAO+pC,EAAAA,KAAAA,EACT4D,EAAK4N,YAAY,CAAEv7C,QAAAA,IAAU,2CACpC,mDAHY,IAKTi7C,WV5EiFrT,GAAA,IAA7C6G,EAAQ,EAARA,SAAU8M,EAAW,EAAXA,YAC5B,aAQzB,OARyBC,GAA1B,4BAA2B9S,EAA+C/rC,GAA0B,yEAChC,GAA5D8+C,EAAwB,QAAV,EAAA/S,EAAIzpC,cAAM,OAAVy8C,EAAYnqD,OAASm3C,EAAIzpC,OAAO,QAAK3J,EACvC,CAAFqzC,EAAAA,KAAAA,EAAA,YAAQK,EAAAA,GAAAA,IAAAA,cAA4B,wBAAuB,UACtEyS,EAAYz7C,QAAS,CAAF2oC,EAAAA,KAAAA,EAAA,YAAQK,EAAAA,GAAAA,IAAAA,cAA4B,kCAAiC,UACxFyS,EAAYxM,SAA0C,IAA/BwM,EAAYxM,QAAQ19C,OAAY,CAAAo3C,EAAAA,KAAAA,EAAA,YAAQK,EAAAA,GAAAA,IAAAA,cAA4B,kCAAiC,UAC5HyS,EAAYrM,eAAgB,CAAFzG,EAAAA,KAAAA,EAAA,YAAQK,EAAAA,GAAAA,IAAAA,cAA4B,yCAAwC,cAAAL,EAAAA,KAAAA,GAExF8F,EAASgN,GAAY,QAAxC9+C,EAAI9H,OAAS,EAAH,kDACX,sBACyB,aAIzB,OAJyB8mD,GAA1B,4BAA2BjT,EAAyC/rC,GAA0B,yEAC1B,GAA5D8+C,EAAwB,QAAV,EAAA/S,EAAIzpC,cAAM,OAAV28C,EAAYrqD,OAASm3C,EAAIzpC,OAAO,QAAK3J,EACvC,CAAF4zC,EAAAA,KAAAA,EAAA,YAAQF,EAAAA,GAAAA,IAAAA,cAA4B,mBAAkB,cAAAE,EAAAA,KAAAA,EACnDqS,EAAYE,GAAY,OAA3C9+C,EAAI9H,OAAS,EAAH,iDACX,sBAED,OAAOk2C,EAAAA,EAAAA,IAAyB,CAC9B8Q,yBAAyB5Q,EAAAA,EAAAA,KAjBsC,SACtC,EAAD,qCAiBxB6Q,4BAA4B7Q,EAAAA,EAAAA,KAT7B,SAC0B,EAAD,sCAU5B,CUwDkC8Q,CAA4BT,GAC1D,OAAOL,CACT,GAAC,CAAA/7C,IAAAA,uBAAA1B,MAEO,WAAoB,WACpBw+C,EAAoC,CACxCC,iBAAkB,WAAF,wBAAE,WAAOh9C,GAA8B,uEACnC,OAAV/G,EAAe+G,EAAf/G,WAAU+xC,EAAAA,KAAAA,EACZ4G,EAAKqL,cAAc,CAAEhkD,WAAAA,IAAa,2CACzC,mDAHiB,IAKpB,OVhEY,SAA8DikD,GAAA,IAApCF,EAAgB,EAAhBA,iBACZ,aAI3B,OAJ2BG,GAA5B,4BAA6B1T,EAA4C/rC,GAA0B,yEAC7B,GAC/D0/C,QADCA,EAA0B,QAAV,EAAA3T,EAAIzpC,cAAM,OAAVq9C,EAAY/qD,OAASm3C,EAAIzpC,OAAO,QAAK3J,SACtD+mD,IAAAA,GAAAA,EAAenkD,WAAY,CAAFkxC,EAAAA,KAAAA,EAAA,YAAQJ,EAAAA,GAAAA,IAAAA,cAA4B,sBAAqB,cAAAI,EAAAA,KAAAA,EACpE6S,EAAiBI,GAAc,OAAlD1/C,EAAI9H,OAAS,EAAH,iDACX,sBAED,OAAOk2C,EAAAA,EAAAA,IAAyB,CAC9BwR,sBAAsBtR,EAAAA,EAAAA,KARgC,SAC3B,EAAD,sCAS9B,CUsDWuR,CAAwBR,EACjC,KAAC,EArHqC,CAAQ9K,EAAAA,YAAnC4J,GAA2B,yDAKF,WAAO77C,GAG1C,uEACwG,OAAjGkyC,EAAkB,IAAI2J,GAA2B,CAAEtN,OAAQ,CAAEI,YAAa3uC,EAAO2uC,eAAgBzD,EAAAA,KAAAA,EACjGgH,EAAgBhD,cAAclvC,EAAO0kC,SAAQ,gCAC5CwN,GAAe,2CACvB,mDAZqC,oQCnBxC,eACA,WACA,WAEA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,WA6BawG,EAAO,8BAwLlB,WAAYtU,GAAgB,UAgBzB,OAhByB,WAC1B,gBApLMoZ,MAAkB,GAqLxB,EAAKC,cAAiC,QAApB,EAAGrZ,EAAKsZ,oBAAY,QAAI,GAC1C,EAAKC,aAAe,EAAKC,SAASxZ,EAAKyZ,OACvC,EAAKC,iBAAoD,QAApC,EAAG,EAAKH,aAAalF,uBAAe,QAAIsF,EAAAA,SAASC,MAEtE,EAAKC,iBAAmB,EAAKC,YAAY5/C,KAAI,SAAC6/C,GAAE,MAAK,CACnDA,EAAGl6C,KACHm6C,EAAAA,UAAeD,EAAGl6C,MACnB,IACD,EAAKo6C,UAAY,EAAKP,sBACAznD,IAAlB+tC,EAAKiU,UACP,EAAKiG,YAAYla,EAAKiU,UAEpBjU,EAAKma,MACP,EAAKC,QAAQpa,EAAKma,MACnB,CACH,CAyzBC,OAx/BD,2BAuMA,SAASV,GACP,GAAqB,kBAAVA,GAAuC,kBAAVA,GAAuC,kBAAVA,EACnE/mD,KAAK6mD,aAAejF,EAAO+F,gBAAgBZ,EAAO/mD,KAAK2mD,mBAClD,IAAqB,kBAAVI,EAchB,MAAM,IAAI7qD,MAAM,sBAbhB,GAAI8D,KAAK2mD,cAAcnrD,OAAS,EAC9B,MAAM,IAAIU,MACR,0FAIJ,IADA,IACA,MADiB,CAAC,YAAa,UAAW,YAAa,kBAC3B,eAAE,CAAzB,IAAM0rD,EAAK,KACd,KAAMA,KAASb,GACb,MAAM,IAAI7qD,MAAM,qCAAD,OAAsC0rD,IAGzD5nD,KAAK6mD,aAAeE,EAGrB,IACgC,EADhC,IACgB/mD,KAAKonD,aAAW,IAAjC,IAAK,EAAL,qBAAmC,CACjC,QAAiB7nD,IADN,QACJiR,MACL,MAAM,IAAItU,MAAM,+CAEnB,+BACD,OAAO8D,KAAK6mD,YACd,GAEA,yBAIA,SAAYtF,GACV,IAC6C,EADzCsG,GAAW,EAAK,IACI7nD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,CAA3B,QACJ,KAAO5F,IACfvhD,KAAKunD,YAAchG,IACrBvhD,KAAKunD,UAAYhG,EACjBvhD,KAAKo6C,KAAK,kBAAmBmH,IAE/BsG,GAAW,GAEd,+BACD,IAAKA,EACH,MAAM,IAAI3rD,MAAM,sBAAD,OAAuBqlD,EAAQ,kBAElD,GAEA,sCAaA,SACEuG,EACAC,EACAC,GAEAF,GAAc,IAAA17C,QAAO07C,EAAaG,EAAAA,WAAWxoD,QAC7CsoD,GAAK,IAAA37C,QAAO27C,EAAIE,EAAAA,WAAWxoD,QAC3BuoD,GAAY,IAAA57C,QAAO47C,EAAWC,EAAAA,WAAW7pD,QAGzC,IAAM8pD,EAAMloD,KAAKonD,YAAYe,QAC3B,SAACd,GAAE,OACY,OAAbA,EAAG72C,OAA8B,OAAX62C,EAAGe,UAA2B7oD,IAAX8nD,EAAGe,UAAuC7oD,IAAjB8nD,EAAGW,SAAuB,IAE1FK,EAAaH,EAAII,WAAU,SAACjB,GAAE,OAAgB,OAAXA,EAAGe,UAA2B7oD,IAAX8nD,EAAGe,GAAiB,IAIhF,GAHoBF,EACjB/rD,MAAMksD,EAAa,GACnBC,WAAU,SAACjB,GAAE,OAAgB,OAAXA,EAAGe,UAA2B7oD,IAAX8nD,EAAGe,GAAiB,KACzC,EACjB,MAAMlsD,MAAM,0DAOd,IAAIqsD,EAAUL,EAAII,WAChB,SAACjB,GAAE,OACa,OAAbA,EAAG72C,OAAkB62C,EAAG72C,MAAQs3C,QAClBvoD,IAAdyoD,GAA2B5pD,OAAOipD,EAAGW,WAAaA,CAAU,IAGjE,IAAiB,IAAbO,EAEFA,EAAUL,EAAI1sD,YACT,GAAgB,IAAZ+sD,EAGT,MAAMrsD,MAAM,mDAIIqD,IAAdyoD,IAKFO,GAJiBL,EACd/rD,MAAM,EAAGosD,GACTC,UACAF,WAAU,SAACjB,GAAE,OAAkB,OAAbA,EAAG72C,YAA6BjR,IAAX8nD,EAAGe,GAAiB,KAQhE,GAA2B,OAAvBF,EAJJK,GAAoB,GAIH/3C,YAA6CjR,IAA3B2oD,EAAIK,GAASP,gBAEnCzoD,IAAPwoD,GAA2B,OAAPA,GAAetoD,OAAOyoD,EAAIK,GAASH,KAAQL,KAEjEQ,GAAW,QAGb,GAAIF,GAAc,QAAY9oD,IAAPwoD,GAA2B,OAAPA,EAAa,CACtD,GAAIQ,GAAWF,GAAc5oD,OAAOyoD,EAAIG,GAAYD,KAAQL,EAC1D,MAAM7rD,MAAM,+EACP,GAAIqsD,EAAUF,GAAc5oD,OAAOyoD,EAAIG,GAAYD,MAASL,EACjE,MAAM7rD,MAAM,+EAQlB,IAHA,IAAMusD,EAAeF,EAGdA,EAAUL,EAAI1sD,OAAS,IAG1B0sD,EAAIK,GAAS/3C,QAAU03C,EAAIK,EAAU,GAAG/3C,OACxC03C,EAAIK,GAASP,YAAcE,EAAIK,EAAU,GAAGP,WAJfO,KAUjC,GAAIP,EAAW,CAIb,GAHqBE,EAClB/rD,MAAM,EAAGssD,GACT9pD,QAAO,SAACquB,EAAaq6B,GAAkB,aAAKpqC,KAAKE,IAAI/e,OAAmB,QAAb,EAACipD,EAAGW,iBAAS,QAAI,KAAMh7B,EAAI,GAAE,GACxEg7B,EACjB,MAAM9rD,MAAM,4EASd,GANqBgsD,EAClB/rD,MAAMosD,EAAU,GAChB5pD,QACC,SAACquB,EAAaq6B,GAAkB,aAAKpqC,KAAKC,IAAI9e,OAAmB,QAAb,EAACipD,EAAGW,iBAAS,QAAIA,GAAYh7B,EAAI,GACrFg7B,GAEeA,EACjB,MAAM9rD,MAAM,wEAIhB,OADiBgsD,EAAIK,GACLp7C,IAClB,GAEA,sCAaA,SACE26C,EACAC,EACAC,GAEA,IAAMzG,EAAWvhD,KAAK0oD,yBAAyBZ,EAAaC,EAAIC,GAEhE,OADAhoD,KAAKwnD,YAAYjG,GACVA,CACT,GAEA,0BAKA,SAAaA,GACX,IACoB,EADd2G,EAAMloD,KAAKonD,YAAW,IACXc,GAAG,IAApB,IAAK,EAAL,qBAAsB,KAAXb,EAAE,QACX,GAAIA,EAAS,OAAM9F,EAAU,OAAO8F,EACrC,+BACD,OAAO,IACT,GAEA,qBAIA,WAA2B,IACH,EADhBI,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiB,GAAE,IACPA,GAAI,IAAtB,IAAK,EAAL,qBAAwB,KAAbkB,EAAG,QACZ,KAAMA,KAAOC,EAAAA,MACX,MAAM,IAAI1sD,MAAM,GAAD,OAAIysD,EAAG,mBAExB,IAAME,EAAQ7oD,KAAK8oD,YAAYF,EAAAA,KAAKD,GAAsB,iBAC1D,IAAKE,EACH,MAAM,IAAI3sD,MAAM,GAAD,OACVysD,EAAG,4CAAoC3oD,KAAKuhD,WAAU,8BAAsBsH,IAGnF,QAA+BtpD,IAA3BqpD,EAAAA,KAAKD,GAAKI,aAA4B,KACC,EADD,IACrBH,EAAAA,KAAKD,GAAKI,cAAY,IAAzC,IAAK,EAAL,qBAA2C,KAAhCC,EAAI,QACb,IAAMvB,EAAK5vC,SAASmxC,KAAShpD,KAAKipD,eAAeD,GAC/C,MAAM,IAAI9sD,MAAM,GAAD,OAAIysD,EAAG,yBAAiBK,EAAI,0CAE9C,iCAEJ,+BACDhpD,KAAK0mD,MAAQe,CACf,GAEA,mBAWA,SAAMyB,EAAe/7C,GAGnB,IAAI1F,EACwB,EADnB,IACSzH,KAAK0mD,OAAK,IAA5B,IAAK,EAAL,qBAA8B,KAAnBiC,EAAG,QAEZ,QAAcppD,KADdkI,EAAQzH,KAAKmpD,WAAWD,EAAO/7C,EAAMw7C,IACZ,OAAOlhD,EACjC,+BACD,OAAOzH,KAAKopD,gBAAgBF,EAAO/7C,EAAMnN,KAAKunD,UAChD,GAEA,6BAOA,SAAgB2B,EAAe/7C,EAAco0C,GAA2B,MAEzB,EADzC95C,EAAQ,KAAI,IACQzH,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KAApCkC,EAAS,QAElB,GAAI,SAAUA,EAAU,GAAI,CAC1B,IACwB,EADlBC,EAASD,EAAU,GAAS,KAAC,IACjBC,GAAM,IAAxB,IAAK,EAAL,qBAA0B,KAAfX,EAAG,QACNY,EAAWvpD,KAAKmpD,WAAWD,EAAO/7C,EAAMw7C,GAC9ClhD,EAA4B,kBAAb8hD,EAAwBA,EAAW9hD,EAEpD,oCACK,CACL,QAA4BlI,IAAxB8pD,EAAU,GAAGH,GACf,MAAM,IAAIhtD,MAAM,SAAD,OAAUgtD,EAAK,sBAEE3pD,IAA9B8pD,EAAU,GAAGH,GAAO/7C,KACtB1F,EAAQ4hD,EAAU,GAAGH,GAAO/7C,GAAM9Q,GAGtC,GAAIgtD,EAAU,KAAO9H,EAAU,MAChC,+BACD,OAAO9hD,OAAY,QAAN,EAACgI,SAAK,QAAI,EACzB,GAEA,wBAOA,SAAWyhD,EAAe/7C,EAAcw7C,GACtC,KAAMA,KAAOC,EAAAA,MACX,MAAM,IAAI1sD,MAAM,GAAD,OAAIysD,EAAG,mBAGxB,IAAMa,EAAYZ,EAAAA,KAAKD,GACvB,KAAMO,KAASM,GACb,MAAM,IAAIttD,MAAM,SAAD,OAAUgtD,EAAK,iBAEhC,QAA+B3pD,IAA3BiqD,EAAUN,GAAO/7C,GAArB,CAGA,IAAM1F,EAAQ+hD,EAAUN,GAAO/7C,GAAM9Q,EACrC,OAAOoD,OAAOgI,GAChB,GAEA,0BASA,SACEyhD,EACA/7C,EACA26C,EACAC,EACAC,GAEA,IAAMzG,EAAWvhD,KAAK0oD,yBAAyBZ,EAAaC,EAAIC,GAChE,OAAOhoD,KAAKopD,gBAAgBF,EAAO/7C,EAAMo0C,EAC3C,GAEA,4BASA,SAAeoH,GACb,GAAI3oD,KAAKynD,OAAO5vC,SAAS8wC,GACvB,OAAO,EACR,IAC4C,EAD5C,IACuB3oD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KACvCE,EADY,QACG,GACrB,GAAIrnD,KAAK8oD,YAAYzB,EAAS,OAAM,SAAUA,GACvCA,EAAS,KAAexvC,SAAS8wC,GACpC,OAAO,EAGZ,+BACD,OAAO,CACT,GAEA,qCAMA,SAAwBpH,EAAoCuG,GAAuB,MACjFA,GAAc,IAAA17C,QAAO07C,EAAaG,EAAAA,WAAWxoD,QAC7C8hD,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAMkC,EAAUzpD,KAAK0pD,cAAcnI,GACnC,MAAuB,kBAAZkI,GAAwBA,IAAYhqD,OAAO,IAAMqoD,GAAe2B,CAI7E,GAEA,2BAKA,SAAc3B,GACZ,OAAO9nD,KAAK2pD,wBAAwB,KAAM7B,EAC5C,GAEA,iCAOA,SAAoB8B,EAAqCC,GAA4B,MACnFD,EAAqB,QAAZ,EAAGA,SAAS,QAAI5pD,KAAKunD,UAC9B,IAK0B,EALpBH,EAAYpnD,KAAKonD,YAEnB0C,GAAU,EACZC,GAAU,EACR1kD,EAAQ,EAAC,IACI+hD,GAAS,IAA1B,IAAK,EAAL,qBAA4B,KAAjBC,EAAE,QACPA,EAAS,OAAMuC,IAAWE,EAASzkD,GACnCgiD,EAAS,OAAMwC,IAAWE,EAAS1kD,GACvCA,GAAS,EACV,+BACD,OAAOykD,GAAUC,IAAsB,IAAZA,CAC7B,GAEA,yBAKA,SAAYxI,GACV,OAAOvhD,KAAKgqD,oBAAoB,KAAMzI,EACxC,GAEA,2BAKA,SAAcA,GAA4B,QACxCA,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAM/2C,EAAmC,QAA9B,EAAGxQ,KAAKiqD,aAAa1I,UAAS,aAA3B,EAAqC,MACnD,YAAchiD,IAAViR,GAAiC,OAAVA,EAClB,KAEF/Q,OAAO+Q,EAChB,GAAC,+BAED,SAAkB+wC,GAA4B,QAC5CA,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAMS,EAAuC,QAA9B,EAAGhoD,KAAKiqD,aAAa1I,UAAS,aAA3B,EAAyC,UAC3D,YAAkBhiD,IAAdyoD,GAAyC,OAAdA,EACtB,KAEFvoD,OAAOuoD,EAChB,GAEA,sBAKA,SAASW,GAAW,IAC2B,EAD3B,IACM3oD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KAApCkC,EAAS,QACZhC,EAAKgC,EAAU,GACrB,GAAI,SAAUhC,GAERA,EAAS,KAAExvC,SAAS8wC,GACtB,OAAO3oD,KAAK0pD,cAAcL,EAAU,IAGzC,+BACD,OAAO,IACT,GAEA,yBAKA,SAAY9H,GAA4B,QACtCA,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAMa,EAAiC,QAA9B,EAAGpoD,KAAKiqD,aAAa1I,UAAS,aAA3B,EAAmC,IAC/C,YAAYhiD,IAAR6oD,GAA6B,OAARA,EAChB,KAEF3oD,OAAO2oD,EAChB,GAEA,6BAOA,SAAgBN,EAAyBvG,GAA4B,MACnEuG,GAAc,IAAA17C,QAAO07C,EAAaG,EAAAA,WAAWxoD,QAC7C8hD,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAM/2C,EAAQxQ,KAAK0pD,cAAcnI,GACjC,MAAwB,kBAAV/wC,GAAsBA,IAAU/Q,OAAO,IAAK+Q,IAAUs3C,CACtE,GAEA,0CAKA,SAA6BvG,GAA4B,QACvDA,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAMW,EAAMloD,KAAKonD,YACbmB,EAAUL,EAAII,WAAU,SAACjB,GAAE,OAAKA,EAAGl6C,OAASo0C,CAAQ,IAOxD,GAJIA,IAAa0F,EAAAA,SAASC,QACxBqB,GAAW,GAGTA,EAAU,EACZ,OAAO,KAET,IAAM2B,EAAShC,EAAIK,GAEb4B,EAASjC,EACZ/rD,MAAMosD,EAAU,GAChB6B,MACC,SAAC/C,GAAE,OACDA,EAAGl6C,OAAS85C,EAAAA,SAASC,QACN,OAAbG,EAAG72C,OAAkB62C,EAAG72C,QAAU05C,EAAO15C,YACvBjR,IAAjB8nD,EAAGW,WAA2BX,EAAGW,YAAckC,EAAOlC,UAAW,IAG1E,QAAezoD,IAAX4qD,EACF,OAAO,KAGT,IAAME,EAA8B,QAAnB,EAAGF,EAAOnC,iBAAS,QAAImC,EAAO35C,MAC/C,OAAoB,OAAhB65C,QAAwC9qD,IAAhB8qD,EACnB,KAGF5qD,OAAO4qD,EAChB,GAEA,+BAMA,SAAkB9I,GAA4B,MAC5CA,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAIkC,EAAUzpD,KAAK0pD,cAAcnI,GAGjC,GAAgB,OAAZkI,GAAoBlI,IAAa0F,EAAAA,SAASC,MAAO,CACnD,IAAMgB,EAAMloD,KAAKonD,YACXiB,EAAaH,EAAII,WAAU,SAACjB,GAAE,OAAgB,OAAXA,EAAGe,UAA2B7oD,IAAX8nD,EAAGe,GAAiB,IAChF,GAAIC,EAAa,EACf,MAAMnsD,MAAM,yCAEdutD,EAAUzpD,KAAK0pD,cAAcxB,EAAIG,EAAa,GAAGl7C,MAEnD,OAAgB,OAAZs8C,EACK,KAMWzpD,KAAKonD,YAAYzoD,QAAO,SAACquB,EAAoBq6B,GAE/D,IAAM72C,EAAQ/Q,OACC,OAAb4nD,EAAG72C,YAA8BjR,IAAX8nD,EAAGe,KAAgC,OAAXf,EAAGe,IAAgB,EAAIf,EAAG72C,OAG1E,OAAOA,EAAQi5C,GAAoB,OAARz8B,EAAexc,EAAQwc,CACpD,GAAG,KAEL,GAEA,iCAOA,SAAoB86B,EAAyBvG,GAA4B,MACvEuG,GAAc,IAAA17C,QAAO07C,EAAaG,EAAAA,WAAWxoD,QAC7C8hD,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAM+C,EAAoBtqD,KAAKsqD,kBAAkB/I,GAEjD,OAA6B,OAAtB+I,GAAqCA,IAAsBxC,CACpE,GAEA,2BAMA,SAAcvG,EAA6BgJ,GACzC,IAEiC,EAF7BC,EAAWrqD,EAAOuM,MAAM,GACxB+9C,EAAY,EAAC,IACAzqD,KAAKonD,aAAW,IAAjC,IAAK,EAAL,qBAAmC,KAAxBC,EAAE,QACH72C,EAAe62C,EAAf72C,MAAO43C,EAAQf,EAARe,IAKf,GACmB,kBAAV53C,GACG,IAAVA,GACAA,IAAUi6C,IACD,OAARrC,QAAwB7oD,IAAR6oD,GACjB,CACA,IAAMsC,EAAgBvqD,EAAOxD,KAAK6T,EAAM1S,SAAS,IAAIC,SAAS,GAAI,KAAM,OACxEysD,EAAWrqD,EAAO+B,OAAO,CAACsoD,EAAUE,IAGtC,GAAIrD,EAAGl6C,OAASo0C,EAAU,MACL,kBAAV/wC,IACTi6C,EAAYj6C,GAEf,+BACD,IAAMm6C,EAAcxqD,EAAO+B,OAAO,CAACqoD,EAAaC,IAI1CI,GAAW,IAAApkD,cAAY,SAAYmkD,KAAiB,GAAG7sD,SAAS,OACtE,MAAO,KAAP,OAAY8sD,EACd,GAEA,sBAKA,SAASrJ,EAA8BgJ,GAAoB,MACzDhJ,EAAmB,QAAX,EAAGA,SAAQ,QAAIvhD,KAAKunD,UAC5B,IAAMjqD,EAAO0C,KAAKiqD,aAAa1I,GAC/B,GAAa,OAATjkD,GAAkC,QAAZ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkT,aAAgCjR,KAAV,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAM8qD,KAAoB,CAEtE,MAAM,IAAIlsD,MADE,yDAGd,GAAuB,QAAf,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMutD,gBAAwCtrD,KAAf,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAMutD,UACnC,OAAOvtD,EAAKutD,SAEd,IAAKN,EAAa,MAAM,IAAIruD,MAAM,iDAClC,OAAO8D,KAAK8qD,cAAcvJ,EAAUgJ,EACtC,GAEA,iCAKA,SAAoBM,GAClB,IAAME,EAAW/qD,KAAKonD,YAAYe,QAAO,SAACd,GACxC,OAAOA,EAAGwD,WAAaA,CACzB,IACA,OAAOE,EAASvvD,QAAU,EAAIuvD,EAASA,EAASvvD,OAAS,GAAK,IAChE,GAEA,2BAKA,SAAc+uD,GAAmB,IACE,EADF,IACdvqD,KAAKonD,aAAW,IAAjC,IAAK,EAAL,qBAAmC,KAAxBC,EAAE,QAEQ,OAAhBA,EAAGwD,eAAqCtrD,IAAhB8nD,EAAGwD,UACR,qBAAbxD,EAAG72C,OACI,OAAb62C,EAAG72C,OAAoC,qBAAX62C,EAAGe,MAEhCf,EAAGwD,SAAW7qD,KAAK6qD,SAASxD,EAAGl6C,KAAMo9C,IAExC,+BACH,GAEA,qBAIA,WACE,OAAOvqD,KAAK6mD,aAAamE,OAC3B,GAEA,uBAIA,WACE,OAAOhrD,KAAK6mD,aAAaO,SAC3B,GAEA,4BAIA,WACE,OAAOpnD,KAAK6mD,aAAaoE,cAC3B,GAEA,yBAIA,WACE,OAAOjrD,KAAK6mD,aAAaqE,WAC3B,GAEA,sBAIA,WACE,OAAOlrD,KAAKunD,SACd,GAEA,qBAIA,WACE,OAAO9nD,OAAOO,KAAK6mD,aAAa58C,QAClC,GAEA,uBAIA,WACE,OAAOjK,KAAK6mD,aAAa15C,IAC3B,GAEA,uBAIA,WACE,OAAO1N,OAAOO,KAAK6mD,aAAanF,UAClC,GAEA,kBAIA,WACE,OAAO1hD,KAAK0mD,KACd,GAEA,2BAMA,WAAa,MAGPj/C,EACyC,EAHvC85C,EAAWvhD,KAAKuhD,WAEb,IACevhD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KAApCkC,EAAS,QAIlB,GAHI,cAAeA,EAAU,KAC3B5hD,EAAQ4hD,EAAU,GAAc,UAAQ,MAEtCA,EAAU,KAAO9H,EAAU,MAChC,+BACD,OAAY,QAAZ,EAAO95C,SAAK,QAAIzH,KAAK6mD,aAAwB,UAAQ,IACvD,GAEA,gCASA,WAAkB,MAGZp/C,EACyC,EAHvC85C,EAAWvhD,KAAKuhD,WAEb,IACevhD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KAApCkC,EAAS,QAIlB,GAHI,cAAeA,EAAU,KAC3B5hD,EAAQ4hD,EAAU,GAAc,UAAa,WAE3CA,EAAU,KAAO9H,EAAU,MAChC,+BACD,OAAY,QAAZ,EAAO95C,SAAK,QAAKzH,KAAK6mD,aAAwB,UAAa,SAC7D,GAEA,6BAaA,WAAe,QAGTp/C,EACyC,EAHvC85C,EAAWvhD,KAAKuhD,WAEb,IACevhD,KAAKmnD,kBAAgB,IAA7C,IAAK,EAAL,qBAA+C,KAApCkC,EAAS,QAKlB,GAJI,cAAeA,EAAU,KAE3B5hD,EAAQ4hD,EAAU,GAAc,UAAEA,EAAU,GAAc,UAAa,YAErEA,EAAU,KAAO9H,EAAU,MAChC,+BACD,OAC0F,QADlF,EACD,QADP,EACE95C,SAAK,QAAIzH,KAAK6mD,aAAwB,UAAE7mD,KAAKmrD,6BAA2C,QAAI,CAAC,CAEjG,GAEA,kBAGA,WACE,IAAMhlD,EAAOkB,OAAOkmC,OAAOlmC,OAAO+jD,OAAO/jD,OAAOgkD,eAAerrD,OAAQA,MAEvE,OADAmG,EAAKmlD,qBACEnlD,CACT,IAAC,qBA/8BD,SACEolD,GAC2B,MAA3Bje,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAyB,CAAC,EAEpBke,EAA0B,QAAjB,EAAGle,EAAKke,iBAAS,QAAI,UAC9BC,EAAsB,EAAH,GAAQ7J,EAAO+F,gBAAgB6D,IAGxD,GAFAC,EAA0B,KAAI,eAEG,kBAAtBF,EACT,OAAO,IAAI3J,EAAO,EAAD,CACfmF,MAAO,EAAF,KACA0E,GACAF,IAEFje,IAGL,GAAIie,IAAsBtE,EAAAA,YAAYyE,eACpC,OAAO9J,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAYyE,eAClBzhD,QAAS,IACTy3C,UAAW,KAEbpU,GAGJ,GAAIie,IAAsBtE,EAAAA,YAAY2E,cACpC,OAAOhK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAY2E,cAClB3hD,QAAS,MACTy3C,UAAW,OAEbpU,GAGJ,GAAIie,IAAsBtE,EAAAA,YAAY4E,uBACpC,OAAOjK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAY4E,uBAClB5hD,QAAS,OACTy3C,UAAW,QAEbpU,GAGJ,GAAIie,IAAsBtE,EAAAA,YAAY6E,YACpC,OAAOlK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAY6E,YAClB7hD,QAAS,MACTy3C,UAAW,OAEbpU,GAGJ,GAAIie,IAAsBtE,EAAAA,YAAY8E,UACpC,OAAOnK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAY8E,UAClB9hD,QAAS,IACTy3C,UAAW,KAEbpU,GAIJ,GAAIie,IAAsBtE,EAAAA,YAAY+E,gBACpC,OAAOpK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAY+E,gBAClB/hD,QAAS,GACTy3C,UAAW,IAEb,GACEH,SAAU0F,EAAAA,SAASgF,QAAW3e,IAIpC,GAAIie,IAAsBtE,EAAAA,YAAYiF,mBACpC,OAAOtK,EAAO+J,OACZ,CACEx+C,KAAM85C,EAAAA,YAAYiF,mBAClBjiD,QAAS,GACTy3C,UAAW,IAEb,GACEH,SAAU0F,EAAAA,SAASgF,QAAW3e,IAGpC,MAAM,IAAIpxC,MAAM,gBAAD,OAAiBqvD,EAAiB,kBAErD,GAEA,6BAMA,SACEY,EAAgB,GACsD,MAApEpF,EAAK,EAALA,MAAOwD,EAAW,EAAXA,YAAahJ,EAAQ,EAARA,SAAU6K,EAAoB,EAApBA,qBAE1BC,GAAgB,IAAAC,kBAAiBH,EAAapF,EAAOqF,GACrDlN,EAAS,IAAI0C,EAAO,CACxBmF,MAAyB,QAApB,EAAEsF,EAAcl/C,YAAI,QAAI,SAC7By5C,aAAc,CAACyF,GACf9K,SAAAA,IAKF,YAHoBhiD,IAAhBgrD,GACFrL,EAAOqN,cAAchC,GAEhBrL,CACT,GAEA,gCAKA,SAA0Bj1C,GACxB,IAAMuiD,EAAoBxsD,KAAKysD,wBAC/B,OAAOC,QAASF,EAAyB,MAAgBviD,EAAQnM,YACnE,GAAC,6BAEO,SACNipD,EACAH,GAEA,IAAM4F,EAAoBxsD,KAAKysD,sBAAsB7F,GACrD,GAAqB,kBAAVG,GAAuC,kBAAVA,EAAoB,CAG1D,GAFAA,EAAQA,EAAMjpD,WAET0uD,EAAyB,MAAgBzF,GAE5C,OAAOyF,EADeA,EAAyB,MAAgBzF,IAIjE,MAAM,IAAI7qD,MAAM,iBAAD,OAAkB6qD,EAAK,mBAGxC,QAAiCxnD,IAA7BitD,EAAkBzF,GACpB,OAAOyF,EAAkBzF,GAG3B,MAAM,IAAI7qD,MAAM,mBAAD,OAAoB6qD,EAAK,kBAC1C,GAAC,mCA6zBD,SAA6BH,GAE3B,IADA,IAAM+F,EAAmB,CAAC,EAC1B,MAAyBtlD,OAAOC,QAAQ2/C,EAAAA,OAAM,eAAE,CAA3C,gBAAO95C,EAAI,KACdw/C,EADkB,MACNx/C,EAAK5L,cAEnB,IAAMqrD,EAAS,CAAEC,QAAAA,EAASC,QAAAA,EAASC,QAAAA,EAASC,OAAAA,EAAQC,QAAAA,GACpD,GAAIrG,EAAc,KACgB,EADhB,IACIA,GAAY,IAAhC,IAAK,EAAL,qBAAkC,KAAvBG,EAAK,QACN55C,EAAS45C,EAAT55C,KACRw/C,EAAM5F,EAAM98C,QAAQnM,YAAcqP,EAClCy/C,EAAOz/C,GAAQ45C,EAChB,gCAGH,OADA6F,EAAOD,MAAQA,EACRC,CACT,KAAC,EAlgCiB,CAAQnnD,EAAAA,cAA5B9H,EAAAA,OAAAA,qGCzCaA,EAAAA,KAA+B,CAC1C,KAAMif,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,KACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,MACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,OACd,KAAMA,EAAQ,MACd,KAAMA,EAAQ,uKCxBhB,SAAYswC,GACVA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,QAAAA,UAAAA,SACD,CAND,CAAYvvD,EAAAA,QAAAA,EAAAA,MAAK,KAQjB,SAAY6jD,GACVA,EAAAA,WAAAA,aACAA,EAAAA,UAAAA,YACAA,EAAAA,IAAAA,MACAA,EAAAA,iBAAAA,mBACAA,EAAAA,eAAAA,iBACAA,EAAAA,UAAAA,YACAA,EAAAA,eAAAA,iBACAA,EAAAA,WAAAA,aACAA,EAAAA,SAAAA,WACAA,EAAAA,YAAAA,cACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,aAAAA,eACAA,EAAAA,YAAAA,cACAA,EAAAA,sBAAAA,wBACAA,EAAAA,MAAAA,QACAA,EAAAA,SAAAA,UACD,CAlBD,CAAY7jD,EAAAA,WAAAA,EAAAA,SAAQ,KAoBpB,SAAYwvD,GACVA,EAAAA,aAAAA,MACAA,EAAAA,YAAAA,MACAA,EAAAA,iBAAAA,KACD,CAJD,CAAYxvD,EAAAA,gBAAAA,EAAAA,cAAa,KAMzB,SAAYyvD,GACVA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,QACD,CAJD,CAAYzvD,EAAAA,qBAAAA,EAAAA,mBAAkB,KAM9B,SAAY0vD,GAMVA,EAAAA,eAAAA,kBAOAA,EAAAA,cAAAA,iBAOAA,EAAAA,uBAAAA,2BAOAA,EAAAA,YAAAA,eAOAA,EAAAA,UAAAA,cAOAA,EAAAA,gBAAAA,mBAOAA,EAAAA,mBAAAA,qBACD,CAjDD,CAAY1vD,EAAAA,cAAAA,EAAAA,YAAW,6GCxCVA,EAAAA,UAAY,CACvB2vD,WAAY1wC,EAAQ,OACpB2wC,UAAW3wC,EAAQ,OACnB4wC,IAAK5wC,EAAQ,OACb6wC,iBAAkB7wC,EAAQ,OAC1B8wC,eAAgB9wC,EAAQ,OACxB+wC,UAAW/wC,EAAQ,OACnBgxC,eAAgBhxC,EAAQ,OACxBixC,WAAYjxC,EAAQ,OACpBkxC,SAAUlxC,EAAQ,OAClBmxC,YAAanxC,EAAQ,OACrBoxC,OAAQpxC,EAAQ,OAChBqxC,OAAQrxC,EAAQ,OAChBsxC,SAAUtxC,EAAQ,MAClBuxC,aAAcvxC,EAAQ,OACtBwxC,YAAaxxC,EAAQ,OACrByxC,sBAAuBzxC,EAAQ,OAC/B0xC,MAAO1xC,EAAQ,ihBCjBjBhV,EAAAA,EAAAA,OAAAA,GACAA,EAAAA,EAAAA,MAAAA,GACAA,EAAAA,EAAAA,OAAAA,GACAA,EAAAA,EAAAA,OAAAA,4NCHA,eAEA,UAUA,SAAS2mD,EAAY5uD,GACnB,OAAKA,GAAmB,QAAVA,GAGV,IAAAN,eAAcM,GACT,MAAO,IAAA2B,gBAAe3B,GAAO5B,SAAS,GAAI,KAE5C,KAAO4B,EAAM5B,SAAS,GAAI,KALxB,oBAMX,CAgKAJ,EAAAA,iBAAA,SAAiC6wD,EAAWrhD,EAAei/C,GACzD,IACE,GAAI,CAAC,SAAU,aAAc,WAAY,SAAS5jD,MAAK,SAACoQ,GAAK,QAAOA,KAAS41C,EAAK,IAChF,MAAM,IAAItyD,MAAM,wDAKlB,YAHaqD,IAAT4N,IACFqhD,EAAKrhD,KAAOA,GA5JlB,SAAyBqhD,GAA+C,UAApCpC,IAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,KAAAA,UAAAA,GAC1Bj/C,EAAyEqhD,EAAzErhD,KAAMsqC,EAAmE+W,EAAnE/W,OAAQgX,EAA2DD,EAA3DC,WAAYC,EAA+CF,EAA/CE,QAAStM,EAAsCoM,EAAtCpM,SAAUuM,EAA4BH,EAA5BG,SAAU7L,EAAkB0L,EAAlB1L,cACzD8L,EAAgCJ,EAAhCI,UAAW5G,EAAqBwG,EAArBxG,UAAWroD,EAAU6uD,EAAV7uD,MACtBkvD,EAAmBzwD,OAAO4pD,GACxB/9C,EAAYwtC,EAAZxtC,QAiBR,GAdkB,KAAd2kD,IACFA,EAAY,OAGT,IAAAvvD,eAAc2oD,KACjBA,GAAY,IAAAriD,UAAStH,SAAS2pD,KAGX,KAAjBroD,EAAMnE,SACRmE,EAAQ4uD,EAAY5uD,IAKlB83C,EAAOqX,cAAgBrX,EAAOsX,YAChC,MAAM,IAAI7yD,MACR,gKAIJ,IAAMgN,EAAc,CAClBiE,KAAAA,EACAlD,QAAAA,EACAy3C,UAAWz3C,EACX+gD,QAAS,CACPhD,UAAAA,EACA5F,SAAU/jD,SAAS+jD,GACnBqM,WAAYpwD,SAASowD,GACrB9uD,MAAAA,EACAivD,UAAAA,EACAF,QAAAA,EACAC,SAAAA,EACA7L,cAAAA,GAEFmI,eAAgB,GAChB+D,eACoBzvD,IAAlBk4C,EAAOwX,OACH,CACE/5C,KAAM,MACNg6C,UAAW,SACXD,OAAQ,CAINE,OAA4B,QAAtB,EAAE1X,EAAOwX,OAAOE,cAAM,QAAI1X,EAAOwX,OAAOG,mBAC9CC,MAA0B,QAArB,EAAE5X,EAAOwX,OAAOI,aAAK,QAAI5X,EAAOwX,OAAOK,cAGhD,CACEp6C,KAAM,MACNg6C,UAAW,SACXK,OAAQ,CAAC,IAIbC,GAAO,OACVvI,EAAAA,SAASwI,UAAY,CAAEtiD,KAAM,mBAAkB,IAC/C85C,EAAAA,SAASyI,IAAM,CAAEviD,KAAM,iBAAgB,IACvC85C,EAAAA,SAAS0I,iBAAmB,CAAExiD,KAAM,gBAAe,IACnD85C,EAAAA,SAAS2I,eAAiB,CAAEziD,KAAM,gBAAe,IACjD85C,EAAAA,SAAS4I,UAAY,CAAE1iD,KAAM,mBAAkB,IAC/C85C,EAAAA,SAAS6I,eAAiB,CAAE3iD,KAAM,wBAAuB,IACzD85C,EAAAA,SAAS8I,WAAa,CAAE5iD,KAAM,oBAAmB,IACjD85C,EAAAA,SAAS+I,SAAW,CAAE7iD,KAAM,kBAAiB,IAC7C85C,EAAAA,SAASgJ,YAAc,CAAE9iD,KAAM,qBAAoB,IACnD85C,EAAAA,SAASgF,OAAS,CAAE9+C,KAAM,gBAAe,IACzC85C,EAAAA,SAASiJ,OAAS,CAAE/iD,KAAM,gBAAe,IACzC85C,EAAAA,SAASkJ,sBAAwB,CAAEhjD,KAAM,iBAAkBijD,UAAWhE,IAAsB,IAC5FnF,EAAAA,SAASoJ,SAAW,CAAEljD,KAAM,eAAgBijD,WAAW,EAAME,aAAa,IAAM,GAI7EC,EAAalpD,OAAOuQ,KAAK43C,GAAS7wD,QAAO,SAACquB,EAAKg8B,GAEnD,OADAh8B,EAAIwiC,EAAQxG,GAAM77C,MAAQ67C,EACnBh8B,CACT,GAAG,CAAC,GACEwjC,EAAsBnpD,OAAOuQ,KAAK6/B,GAAQ0Q,QAC9C,SAACh/C,GAAG,YAAyB5J,IAApBgxD,EAAWpnD,SAAsC5J,IAAhBk4C,EAAOtuC,IAAsC,OAAhBsuC,EAAOtuC,EAAa,IAwB7F,GArBAD,EAAOk+C,UAAYoJ,EAChBhpD,KAAI,SAACipD,GAAS,MAAM,CACnBtjD,KAAMojD,EAAWE,GACjBjgD,OAAsD,IAA/Cg/C,EAAQe,EAAWE,IAAYH,YAAuB,KAAO7Y,EAAOgZ,GAC3EzI,WACiD,IAA/CwH,EAAQe,EAAWE,IAAYH,YAAuB7Y,EAAOgZ,QAAalxD,EAC7E,IACA4oD,QACC,SAACuI,GAAI,OAAqB,OAAfA,EAAKlgD,YAAiCjR,IAAfmxD,EAAKlgD,YAA2CjR,IAAnBmxD,EAAK1I,SAAuB,IAG/F9+C,EAAOk+C,UAAUluC,MAAK,SAAUta,EAAmBigB,GAAiB,QAClE,OAAe,QAAR,EAACjgB,EAAE4R,aAAK,QAAImgD,MAAoB,QAAZ,EAAK9xC,EAAErO,aAAK,QAAImgD,IAC7C,IAEAznD,EAAOk+C,UAAUluC,MAAK,SAAUta,EAAmBigB,GAAiB,QAClE,OAAmB,QAAZ,EAACjgB,EAAEopD,iBAAS,QAAI6G,IAAgC,QAAhB,EAAKhwC,EAAEmpC,iBAAS,QAAI6G,EAC7D,IAEA3lD,EAAOk+C,UAAUliD,QAAQ,CAAEiI,KAAM85C,EAAAA,SAAS2J,WAAYpgD,MAAO,SAEtBjR,IAAnCk4C,EAAOoZ,wBAAuC,CAMhD,IAAMC,EAAc,CAClB3jD,KAAM85C,EAAAA,SAASC,MACfkB,IAAK3Q,EAAOoZ,wBACZrgD,MAAO,MAIHugD,EAAkC7nD,EAAOk+C,UAC5Ce,QAAO,SAACd,GAAkB,OAAkB,IAAbA,EAAG72C,KAAW,IAC7C7R,QACC,SAACquB,EAAcq6B,GAAkB,aAAKr6B,IAAuC,KAAhB,QAAhB,EAAAwiC,EAAQnI,EAAGl6C,aAAK,aAAhB,EAAkBijD,UAAkB,IACjF,GAKEY,EAAiB9nD,EAAOk+C,UAAUkB,WACtC,SAACjB,GAAO,eACL0J,IAA0D,KAAhB,QAAhB,EAAAvB,EAAQnI,EAAGl6C,aAAK,aAAhB,EAAkBijD,cAC5C/I,EAAG72C,MAAQ,IAAkB,QAAb,EAAC62C,EAAGW,iBAAS,QAAI,GAAK,EAAE,KAErB,IAApBgJ,EACF9nD,EAAOk+C,UAAU7hD,OAAOyrD,EAAgB,EAAGF,GAE3C5nD,EAAOk+C,UAAU3rD,KAAKq1D,GAG1B,OAAO5nD,CACT,CAgBW+nD,CAAgBzC,EAAMpC,GAC7B,MAAOnrD,GACP,MAAM,IAAI/E,MAAM,kCAAD,OAAmC+E,EAAEmK,UAExD,6KChMA,eACA,WAaA,WA6BsB8lD,EAAe,WA+CnC,WAAYC,EAAmE7jB,GAAe,UAhCpF,KAAA8jB,MAA0B,CAClC3vD,UAAMlC,EACN8xD,aAAS9xD,GAUD,KAAA+xD,mBAA+B,GAU/B,KAAAC,cAAgBC,EAAAA,MAAMC,QAQtB,KAAAzK,iBAAsCwK,EAAAA,SAAStK,MAGvD,IAAQvnD,EAAoDwxD,EAApDxxD,MAAOyiD,EAA6C+O,EAA7C/O,SAAUmC,EAAmC4M,EAAnC5M,GAAI98C,EAA+B0pD,EAA/B1pD,MAAOnK,EAAwB6zD,EAAxB7zD,KAAMjB,EAAkB80D,EAAlB90D,EAAGoO,EAAe0mD,EAAf1mD,EAAGC,EAAYymD,EAAZzmD,EAAGwK,EAASi8C,EAATj8C,KACnDlV,KAAK0xD,MAAQtzD,QAAO,IAAAqC,iBAAe,IAAAC,UAASwU,KAE5ClV,KAAK2xD,UAAYrkB,EAEjB,IAAMskB,GAAM,IAAAlxD,UAAgB,KAAP6jD,EAAY,KAAOA,GAClCsN,GAAK,IAAAnxD,UAAe,KAANrE,EAAW,KAAOA,GAChCy1D,GAAK,IAAApxD,UAAe,KAAN+J,EAAW,KAAOA,GAChCsnD,GAAK,IAAArxD,UAAe,KAANgK,EAAW,KAAOA,GAEtC1K,KAAKL,OAAQ,IAAAc,iBAAe,IAAAC,UAAmB,KAAVf,EAAe,KAAOA,IAC3DK,KAAKoiD,UAAW,IAAA3hD,iBAAe,IAAAC,UAAsB,KAAb0hD,EAAkB,KAAOA,IACjEpiD,KAAKukD,GAAKqN,EAAIp2D,OAAS,EAAI,IAAIysD,EAAAA,QAAQ2J,QAAOryD,EAC9CS,KAAKyH,OAAQ,IAAAhH,iBAAe,IAAAC,UAAmB,KAAV+G,EAAe,KAAOA,IAC3DzH,KAAK1C,MAAO,IAAAoD,UAAkB,KAATpD,EAAc,KAAOA,GAE1C0C,KAAK3D,EAAIw1D,EAAGr2D,OAAS,GAAI,IAAAiF,gBAAeoxD,QAAMtyD,EAC9CS,KAAKyK,EAAIqnD,EAAGt2D,OAAS,GAAI,IAAAiF,gBAAeqxD,QAAMvyD,EAC9CS,KAAK0K,EAAIqnD,EAAGv2D,OAAS,GAAI,IAAAiF,gBAAesxD,QAAMxyD,EAE9CS,KAAKgyD,gCAAgC,CAAEvqD,MAAOzH,KAAKyH,MAAOgD,EAAGzK,KAAKyK,EAAGC,EAAG1K,KAAK0K,IAG7E1K,KAAKgyD,gCAAgC,CAAE5P,SAAUpiD,KAAKoiD,UAAY,IAGlEpiD,KAAKgyD,gCAAgC,CAAEryD,MAAOK,KAAKL,OAAS,IAAI,EAClE,CAsWC,OApWD,qBAKA,WACE,OAAOK,KAAK0xD,KACd,GAEA,sBAgBA,SAASO,GACP,OAAOjyD,KAAKsxD,mBAAmBz5C,SAASo6C,EAC1C,GAAC,sBASD,WAAqC,IAA5BC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,IAAAA,UAAAA,GACDxT,EAAS,GAUf,OARI1+C,KAAKmyD,aAAenyD,KAAKoiD,UAC3B1D,EAAOjjD,KAAK,8BAAD,OAA+BuE,KAAKoiD,SAAQ,2BAAmBpiD,KAAKmyD,eAG7EnyD,KAAKoyD,aAAepyD,KAAKqyD,mBAC3B3T,EAAOjjD,KAAK,qBAGPy2D,EAAcxT,EAA2B,IAAlBA,EAAOljD,MACvC,GAAC,8BAES,WACR,IAAQa,EAAM2D,KAAN3D,EACR,QAAUkD,IAANlD,GAAmBA,IAAMoD,OAAO,IAAMpD,IAAMoD,OAAO,GAAI,CACzD,IAAMwG,EAAMjG,KAAKsyD,UAAU,2DAC3B,MAAM,IAAIp2D,MAAM+J,GAEpB,GAEA,4BAIU,WACR,IAAQyE,EAAM1K,KAAN0K,EACR,GAAI1K,KAAKk/C,OAAO4J,YAAY,mBAAsBvpD,IAANmL,GAAmBA,EAAIu9C,EAAAA,sBAAuB,CACxF,IAAMhiD,EAAMjG,KAAKsyD,UACf,gFAEF,MAAM,IAAIp2D,MAAM+J,GAEpB,GAEA,wBAGA,WACE,IAAMssD,EAAQvyD,KAAKk/C,OAAO0I,MAAM,YAAa,MACzC4K,EAAMxyD,KAAKyyD,aAEf,GADIF,IAAOC,GAAOD,GACdvyD,KAAKk/C,OAAO4J,YAAY,cAAgB9oD,KAAK0yD,oBAAqB,CACpE,IAAMC,EAAgB3yD,KAAKk/C,OAAO0I,MAAM,YAAa,cACjD+K,IAAeH,GAAOG,GAE5B,OAAOH,CACT,GAEA,wBAGA,WAKE,IAJA,IAAMI,EAAa5yD,KAAKk/C,OAAO0I,MAAM,YAAa,cAC5CiL,EAAgB7yD,KAAKk/C,OAAO0I,MAAM,YAAa,iBAEjDkL,EAAOrzD,OAAO,GACTlE,EAAI,EAAGA,EAAIyE,KAAK1C,KAAK9B,OAAQD,IACnB,IAAjByE,KAAK1C,KAAK/B,GAAYu3D,GAAQF,EAAeE,GAAQD,EAGvD,SAAiBtzD,IAAZS,KAAKukD,IAAgC,OAAZvkD,KAAKukD,KAAgBvkD,KAAKk/C,OAAO+J,eAAe,MAAO,CACnF,IAAM8J,EAAatzD,OAAOwd,KAAKS,KAAK1d,KAAK1C,KAAK9B,OAAS,KAEvDs3D,GADqB9yD,KAAKk/C,OAAO0I,MAAM,YAAa,oBAAsBmL,EAI5E,OAAOD,CACT,GAOA,+BAGA,WACE,YAAmBvzD,IAAZS,KAAKukD,IAA2C,IAAvBvkD,KAAKukD,GAAG7oD,IAAIF,MAC9C,GAAC,sBA8BM,WACL,IAAQa,EAAY2D,KAAZ3D,EAAGoO,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EACd,YAAUnL,IAANlD,QAAyBkD,IAANkL,QAAyBlL,IAANmL,CAK5C,GAEA,6BAGA,WACE,IAEE,IAAMpI,EAAYtC,KAAKgzD,qBACvB,OAAyC,KAAlC,IAAAtrD,aAAYpF,GAAW9G,OAC9B,MAAOyF,GACP,OAAO,EAEX,GAEA,8BAGA,WACE,OAAO,IAAIgnD,EAAAA,SAAQ,IAAArlD,iBAAgB5C,KAAKgzD,sBAC1C,GAOA,kBASA,SAAK7wD,GACH,GAA0B,KAAtBA,EAAW3G,OAAe,CAC5B,IAAMyK,EAAMjG,KAAKsyD,UAAU,2CAC3B,MAAM,IAAIp2D,MAAM+J,GAOlB,IAAIgtD,GAAc,EAEF,IAAdjzD,KAAKkV,MACLlV,KAAKk/C,OAAO4J,YAAY,oBACvB9oD,KAAKkzD,SAAS7mD,EAAAA,WAAW8mD,0BAE1BnzD,KAAKsxD,mBAAmB71D,KAAK4Q,EAAAA,WAAW8mD,wBACxCF,GAAc,GAGhB,IAAM7oD,EAAUpK,KAAKozD,kBAAiB,GACtC,GAAoB,IAAA77C,QAAOnN,EAASjI,GAA5B9F,EAAC,EAADA,EAAGoO,EAAC,EAADA,EAAGC,EAAC,EAADA,EACRqzB,EAAK/9B,KAAKqzD,kBAAkBh3D,EAAGoO,EAAGC,GAGxC,GAAIuoD,EAAa,CACf,IAAM5tD,EAAQrF,KAAKsxD,mBAAmB7oD,QAAQ4D,EAAAA,WAAW8mD,wBACrD9tD,GAAS,GACXrF,KAAKsxD,mBAAmB/rD,OAAOF,EAAO,GAI1C,OAAO04B,CACT,GAUA,wBAQU,SAAWmhB,EAAiBj1C,GAEpC,QAAgB1K,IAAZ0K,EAAuB,CACzB,IAAMqpD,GAAgB,IAAA7yD,iBAAe,IAAAC,UAASuJ,IAC9C,GAAIi1C,EAAQ,CACV,GAAIA,EAAOj1C,YAAcqpD,EAAe,CACtC,IAAMrtD,EAAMjG,KAAKsyD,UAAU,sDAC3B,MAAM,IAAIp2D,MAAM+J,GAIlB,OAAOi5C,EAAO/4C,OAEd,OAAIqrD,EAAAA,OAAO+B,mBAAmBD,GAGrB,IAAI9B,EAAAA,OAAO,CAAEzK,MAAOuM,EAAe/R,SAAUvhD,KAAKgnD,mBAIlDwK,EAAAA,OAAO7F,OACZ,CACEx+C,KAAM,eACNu0C,UAAW4R,EACXrpD,QAASqpD,GAEX,CAAE9H,UAAWxrD,KAAKuxD,cAAehQ,SAAUvhD,KAAKgnD,mBAIjD,MAGL,OACgB,QADR,EACA,OAAN9H,QAAM,IAANA,OAAM,EAANA,EAAQ/4C,cAAM,QAAI,IAAIqrD,EAAAA,OAAO,CAAEzK,MAAO/mD,KAAKuxD,cAAehQ,SAAUvhD,KAAKgnD,kBAG/E,GAEA,6CAMU,SACRpmD,GAIA,IAFmB,IADnBiqB,EAAO,UAAH,6CAAG,IACP2oC,EAAc,UAAH,8CAEX,MAA2BnsD,OAAOC,QAAQ1G,GAAO,eAAE,CAA9C,gBAAOuI,EAAG,KAAE1B,EAAK,KACpB,OAAQojB,GACN,KAAK,GACH,GAAI2oC,GACF,QAAcj0D,IAAVkI,GAAuBA,GAASwgD,EAAAA,WAAY,CAC9C,IAAMhiD,EAAMjG,KAAKsyD,UAAU,GAAD,OACrBnpD,EAAG,8DAAsD1B,IAE9D,MAAM,IAAIvL,MAAM+J,SAGlB,QAAc1G,IAAVkI,GAAuBA,EAAQwgD,EAAAA,WAAY,CAC7C,IAAMhiD,EAAMjG,KAAKsyD,UAAU,GAAD,OAAInpD,EAAG,qDAA6C1B,IAC9E,MAAM,IAAIvL,MAAM+J,GAGpB,MACF,KAAK,IACH,GAAIutD,GACF,QAAcj0D,IAAVkI,GAAuBA,GAASwgD,EAAAA,YAAa,CAC/C,IAAMhiD,EAAMjG,KAAKsyD,UAAU,GAAD,OACrBnpD,EAAG,gEAAwD1B,IAEhE,MAAM,IAAIvL,MAAM+J,SAGlB,QAAc1G,IAAVkI,GAAuBA,EAAQwgD,EAAAA,YAAa,CAC9C,IAAMhiD,EAAMjG,KAAKsyD,UAAU,GAAD,OACrBnpD,EAAG,uDAA+C1B,IAEvD,MAAM,IAAIvL,MAAM+J,GAGpB,MACF,QACE,IAAMA,EAAMjG,KAAKsyD,UAAU,4BAC3B,MAAM,IAAIp2D,MAAM+J,IAIxB,GAAC,oCA4CS,WACR,IAAIxE,EAAO,GACX,IACEA,EAAOzB,KAAKoyD,YAAa,IAAApvD,aAAYhD,KAAKyB,QAAU,2BACpD,MAAOR,GACPQ,EAAO,QAET,IAAI2wD,EAAW,GACf,IACEA,EAAWpyD,KAAKoyD,WAAWt0D,WAC3B,MAAOmD,GACPQ,EAAO,QAET,IAAI4lD,EAAK,GACT,IACEA,EAAKrnD,KAAKk/C,OAAOqC,WACjB,MAAOtgD,GACPomD,EAAK,QAGP,IAAIoM,EAAU,WAAH,OAAczzD,KAAKkV,KAAI,iBAASzT,EAAI,kBAAUzB,KAAKL,MAAK,kBAAUK,KAAKyH,MAAK,KAGvF,OAFAgsD,GAAW,UAAJ,OAAcrB,EAAQ,eAAO/K,EAGtC,IAAC,gCAlES,SAAyBzmD,GAgBjC,IAfA,IAAM8yD,EAAa,CACjB,QACA,WACA,WACA,KACA,QACA,OACA,IACA,IACA,IACA,OACA,UACA,eACA,WAEF,MAA2BrsD,OAAOC,QAAQ1G,GAAO,eAAE,CAA9C,gBAAOuI,EAAG,KAAE1B,EAAK,KACpB,GAAIisD,EAAW77C,SAAS1O,IAClB/N,MAAMC,QAAQoM,GAChB,MAAM,IAAIvL,MAAM,GAAD,OAAIiN,EAAG,wBAI9B,KAAC,EAjbkC,GAArCxL,EAAAA,gBAAAA,6TC3CA,eACA,WAWA,UAEA,WACA,WAaMg2D,EAA0BxzD,EAAOxD,KADd,GACoCmB,SAAS,IAAIC,SAAS,EAAG,KAAM,OAQ/E61D,EAA4B,8BAgHvC,WAAmBzC,GAAoD,QAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAAC,WACrE,qBAAW6jB,GAAM,IAAEj8C,KA1HE,IA0HwBo4B,IAlGrC0Z,iBAAmB,SAmG3B,IAAQ/8C,EAA4DknD,EAA5DlnD,QAAS4pD,EAAmD1C,EAAnD0C,WAAY9R,EAAuCoP,EAAvCpP,aAAcC,EAAyBmP,EAAzBnP,qBAK3C,GAHA,EAAK9C,OAAS,EAAK4U,WAAWxmB,EAAK4R,OAAQj1C,GAC3C,EAAKA,QAAU,EAAKi1C,OAAOj1C,WAEc,IAArC,EAAKi1C,OAAO+J,eAAe,MAC7B,MAAM,IAAI/sD,MAAM,kCAElB,EAAKo1D,mBAAqB,EAAKA,mBAAmBpvD,OAAO,CAAC,KAAM,KAAM,OAGtE,IAAM6xD,EAAiBC,EAAAA,YAAYC,kBAA4B,OAAVJ,QAAU,IAAVA,EAAAA,EAAc,IAkBnE,GAjBA,EAAKA,WAAaE,EAAeF,WACjC,EAAKK,eAAiBH,EAAeG,eAErCF,EAAAA,YAAYG,iBAAiB,EAAKN,YAElC,EAAK9R,cAAe,IAAAthD,iBAAe,IAAAC,UAA0B,KAAjBqhD,EAAsB,KAAOA,IACzE,EAAKC,sBAAuB,IAAAvhD,iBAC1B,IAAAC,UAAkC,KAAzBshD,EAA8B,KAAOA,IAGhD,EAAKgQ,gCAAgC,CACnCjQ,aAAc,EAAKA,aACnBC,qBAAsB,EAAKA,uBAG7BoS,EAAAA,gBAAgBC,kBAAkBlD,GAE9B,EAAK/O,SAAW,EAAKL,aAAekG,EAAAA,YAAa,CACnD,IAAMhiD,EAAM,EAAKqsD,UAAU,+DAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,GAAI,EAAK87C,aAAe,EAAKC,qBAAsB,CACjD,IAAM/7C,EAAM,EAAKqsD,UACf,mGAEF,MAAM,IAAIp2D,MAAM+J,GAGlB,EAAKquD,mBACL,EAAKC,iBAED,EAAKrV,OAAO+J,eAAe,QAC7B,IAAAuL,sBAAqB,EAAKtV,OAAQ,EAAK5hD,KAAK9B,QAG9C,IAAMi5D,EAAqB,QAAf,EAAO,OAAJnnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmnB,cAAM,SAG1B,OAFGA,GACFptD,OAAOotD,OAAO,EAAD,IACd,CACH,CA/DC,OAtFD,6BA0JA,WACE,GAAIz0D,KAAKoxD,MAAMC,SAAWrxD,KAAKoxD,MAAMC,QAAQ9P,WAAavhD,KAAKk/C,OAAOqC,WACpE,OAAOvhD,KAAKoxD,MAAMC,QAAQ5pD,MAG5B,IAAIqrD,EAAO,EAAH,6CAUR,OATAA,GAAQrzD,OAAOu0D,EAAAA,YAAYU,kBAAkB10D,KAAK6zD,WAAY7zD,KAAKk/C,SAE/D73C,OAAOstD,SAAS30D,QAClBA,KAAKoxD,MAAMC,QAAU,CACnB5pD,MAAOqrD,EACPvR,SAAUvhD,KAAKk/C,OAAOqC,aAInBuR,CACT,GAEA,4BAIA,WAA0C,IAA3B8B,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkBn1D,OAAO,GAChCo1D,EAAO70D,KAAKgiD,qBACZ8S,EAAU90D,KAAK+hD,aAAe6S,EAC9BG,EAAqBF,EAAOC,EAAUD,EAAOC,EAC7ChT,EAAWiT,EAAqBH,EACtC,OAAO50D,KAAKoiD,SAAWN,EAAW9hD,KAAKyH,KACzC,GAEA,iBAaA,WACE,MAAO,EACL,IAAAvH,wBAAuBF,KAAKiK,UAC5B,IAAA/J,wBAAuBF,KAAKL,QAC5B,IAAAO,wBAAuBF,KAAKgiD,uBAC5B,IAAA9hD,wBAAuBF,KAAK+hD,eAC5B,IAAA7hD,wBAAuBF,KAAKoiD,eAChB7iD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAG7oD,IAAMyE,EAAOxD,KAAK,KAClD,IAAAuD,wBAAuBF,KAAKyH,OAC5BzH,KAAK1C,KACL0C,KAAK6zD,gBACMt0D,IAAXS,KAAK3D,GAAkB,IAAA6D,wBAAuBF,KAAK3D,GAAK8D,EAAOxD,KAAK,SACzD4C,IAAXS,KAAKyK,GAAkB,IAAAvK,wBAAuBF,KAAKyK,GAAKtK,EAAOxD,KAAK,SACzD4C,IAAXS,KAAK0K,GAAkB,IAAAxK,wBAAuBF,KAAK0K,GAAKvK,EAAOxD,KAAK,IAExE,GAEA,uBAUA,WACE,IAAMwf,EAAOnc,KAAKM,MAClB,OAAOH,EAAO+B,OAAO,CACnByxD,EACAxzD,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY8b,MAEvC,GAEA,8BAaA,WAAmC,IAAlB64C,IAAc,UAAH,+CACpB74C,EAAOnc,KAAKM,MAAMnE,MAAM,EAAG,GAC3BiP,EAAUjL,EAAO+B,OAAO,CAC5ByxD,EACAxzD,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY8b,OAErC,OAAI64C,EACK70D,EAAOxD,MAAK,IAAA+E,WAAU0J,IAEtBA,CAEX,GAEA,kBAMO,WACL,IAAKpL,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,wDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,OAAIoB,OAAOstD,SAAS30D,OACbA,KAAKoxD,MAAM3vD,OACdzB,KAAKoxD,MAAM3vD,KAAOtB,EAAOxD,MAAK,IAAA+E,WAAU1B,KAAKs/C,eAExCt/C,KAAKoxD,MAAM3vD,MAGbtB,EAAOxD,MAAK,IAAA+E,WAAU1B,KAAKs/C,aACpC,GAEA,yCAGO,WACL,OAAOt/C,KAAKozD,kBACd,GAEA,gCAGO,WACL,IAAKpzD,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,wDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,IAAMmE,EAAUpK,KAAKi1D,8BACb54D,EAAY2D,KAAZ3D,EAAGoO,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EAEd1K,KAAKu0D,iBAEL,IACE,OAAO,IAAAh5C,WACLnR,EACA/N,EAAKoD,OAAO,KACZ,IAAAS,wBAAuBuK,IACvB,IAAAvK,wBAAuBwK,IAEzB,MAAOzJ,GACDgF,EAAMjG,KAAKsyD,UAAU,qBAC3B,MAAM,IAAIp2D,MAAM+J,GAEpB,GAAC,+BAED,SAAkB5J,EAAWoO,EAAWC,GACtC,IAAM4iC,EAAO,EAAH,KAAQttC,KAAK2xD,WAAS,IAAEzS,OAAQl/C,KAAKk/C,SAE/C,OAAO0U,EAA4BsB,WACjC,CACEjrD,QAASjK,KAAKiK,QACdtK,MAAOK,KAAKL,MACZqiD,qBAAsBhiD,KAAKgiD,qBAC3BD,aAAc/hD,KAAK+hD,aACnBK,SAAUpiD,KAAKoiD,SACfmC,GAAIvkD,KAAKukD,GACT98C,MAAOzH,KAAKyH,MACZnK,KAAM0C,KAAK1C,KACXu2D,WAAY7zD,KAAK6zD,WACjBx3D,EAAGA,EAAIoD,OAAO,IACdgL,GAAG,IAAAhK,gBAAegK,GAClBC,GAAG,IAAAjK,gBAAeiK,IAEpB4iC,EAEJ,GAEA,oBAGA,WACE,IAAM6nB,EAAiBnB,EAAAA,YAAYoB,kBAAkBp1D,KAAK6zD,YAE1D,MAAO,CACL5pD,SAAS,IAAA6B,aAAY9L,KAAKiK,SAC1BtK,OAAO,IAAAmM,aAAY9L,KAAKL,OACxBqiD,sBAAsB,IAAAl2C,aAAY9L,KAAKgiD,sBACvCD,cAAc,IAAAj2C,aAAY9L,KAAK+hD,cAC/BK,UAAU,IAAAt2C,aAAY9L,KAAKoiD,UAC3BmC,QAAgBhlD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAGzmD,gBAAayB,EACjDkI,OAAO,IAAAqE,aAAY9L,KAAKyH,OACxBnK,KAAM,KAAO0C,KAAK1C,KAAKQ,SAAS,OAChC+1D,WAAYsB,EACZ94D,OAAckD,IAAXS,KAAK3D,GAAkB,IAAAyP,aAAY9L,KAAK3D,QAAKkD,EAChDkL,OAAclL,IAAXS,KAAKyK,GAAkB,IAAAqB,aAAY9L,KAAKyK,QAAKlL,EAChDmL,OAAcnL,IAAXS,KAAK0K,GAAkB,IAAAoB,aAAY9L,KAAK0K,QAAKnL,EAEpD,GAEA,sBAGO,WACL,IAAI81D,EAAWr1D,KAAKs1D,yBAEpB,OADAD,GAAY,iBAAJ,OAAqBr1D,KAAK+hD,aAAY,iCAAyB/hD,KAAKgiD,sBACrEqT,CACT,GAEA,uBAMU,SAAUpvD,GAClB,MAAO,GAAP,OAAUA,EAAG,aAAKjG,KAAKq1D,WAAU,IACnC,IAAC,yBA7WM,SAAkBlE,GAAoD,IAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAC1E,OAAO,IAAIsmB,EAA4BzC,EAAQ7jB,EACjD,GAEA,8BAMO,SAAwB3sC,GAAwC,IAApB2sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EACpE,IAAK3sC,EAAWxE,MAAM,EAAG,GAAGoE,OAAOozD,GACjC,MAAM,IAAIz3D,MAAM,sFAAD,OAhDI,EAiDqF,uBAAeyE,EAClHxE,MAAM,EAAG,GACT2B,SAAS,SAIhB,IAAM8C,GAAS,IAAAC,aAAYT,EAAAA,IAAIpD,OAAO2D,EAAWxE,MAAM,KAEvD,IAAKf,MAAMC,QAAQuF,GACjB,MAAM,IAAI1E,MAAM,8CAGlB,OAAO03D,EAA4B9yD,gBAAgBF,EAAe0sC,EACpE,GAEA,6BAMO,SAAuB1sC,GAAyD,IAApB0sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EACpF,GAAsB,IAAlB1sC,EAAOpF,QAAkC,KAAlBoF,EAAOpF,OAChC,MAAM,IAAIU,MACR,yGAIJ,QAaI0E,EAAM,IAZRqJ,EAAO,KACPtK,EAAK,KACLqiD,EAAoB,KACpBD,EAAY,KACZK,EAAQ,KACRmC,EAAE,KACF98C,EAAK,KACLnK,EAAI,KACJu2D,EAAU,KACVx3D,EAAC,KACDoO,EAAC,MACDC,EAAC,MAMH,OAHA1K,KAAKq0D,kBAAkB,CAAEpqD,QAAAA,EAAS5N,EAAAA,KAClC,IAAAk5D,yBAAwB,CAAE51D,MAAAA,EAAOqiD,qBAAAA,EAAsBD,aAAAA,EAAcK,SAAAA,EAAU36C,MAAAA,EAAOpL,EAAAA,EAAGoO,EAAAA,EAAGC,EAAAA,IAErF,IAAIkpD,EACT,CACE3pD,SAAS,IAAAxJ,gBAAewJ,GACxBtK,MAAAA,EACAqiD,qBAAAA,EACAD,aAAAA,EACAK,SAAAA,EACAmC,GAAAA,EACA98C,MAAAA,EACAnK,KAAAA,EACAu2D,WAAsB,OAAVA,QAAU,IAAVA,EAAAA,EAAc,GAC1Bx3D,OAASkD,IAANlD,GAAkB,IAAAoE,gBAAepE,QAAKkD,EACzCkL,EAAAA,EACAC,EAAAA,GAEF4iC,EAEJ,KAAC,EAvGsC,CAAQ8mB,EAAAA,iBAAjDz2D,EAAAA,4BAAAA,8TCpCA,eACA,WAWA,UAEA,WACA,WAaMg2D,EAA0BxzD,EAAOxD,KADd,GACoCmB,SAAS,IAAIC,SAAS,EAAG,KAAM,OAQ/Ey3D,EAA6B,8BAmGxC,WAAmBrE,GAAqD,QAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAAC,WACtE,qBAAW6jB,GAAM,IAAEj8C,KA7GE,IA6GwBo4B,IAtFrC0Z,iBAAmB,SAuF3B,IAAQ/8C,EAAkCknD,EAAlClnD,QAAS4pD,EAAyB1C,EAAzB0C,WAAY/R,EAAaqP,EAAbrP,SAM7B,GAJA,EAAK5C,OAAS,EAAK4U,WAAWxmB,EAAK4R,OAAQj1C,GAC3C,EAAKA,QAAU,EAAKi1C,OAAOj1C,WAGtB,EAAKi1C,OAAO+J,eAAe,MAC9B,MAAM,IAAI/sD,MAAM,kCAElB,EAAKo1D,mBAAqB,EAAKA,mBAAmBpvD,OAAO,CAAC,KAAM,OAGhE,IAAM6xD,EAAiBC,EAAAA,YAAYC,kBAA4B,OAAVJ,QAAU,IAAVA,EAAAA,EAAc,IAcnE,GAbA,EAAKA,WAAaE,EAAeF,WACjC,EAAKK,eAAiBH,EAAeG,eAErCF,EAAAA,YAAYG,iBAAiB,EAAKN,YAElC,EAAK/R,UAAW,IAAArhD,iBAAe,IAAAC,UAAsB,KAAbohD,EAAkB,KAAOA,IAEjE,EAAKkQ,gCAAgC,CACnClQ,SAAU,EAAKA,WAGjBsS,EAAAA,gBAAgBC,kBAAkBlD,GAE9B,EAAKrP,SAAW,EAAKM,SAAW6F,EAAAA,YAAa,CAC/C,IAAMhiD,EAAM,EAAKqsD,UAAU,iDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,EAAKquD,mBACL,EAAKC,iBAED,EAAKrV,OAAO+J,eAAe,QAC7B,IAAAuL,sBAAqB,EAAKtV,OAAQ,EAAK5hD,KAAK9B,QAE9C,IAAMi5D,EAAqB,QAAf,EAAO,OAAJnnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmnB,cAAM,SAG1B,OAFGA,GACFptD,OAAOotD,OAAO,EAAD,IACd,CACH,CApDC,OA1ED,6BAmIA,WACE,GAAIz0D,KAAKoxD,MAAMC,SAAWrxD,KAAKoxD,MAAMC,QAAQ9P,WAAavhD,KAAKk/C,OAAOqC,WACpE,OAAOvhD,KAAKoxD,MAAMC,QAAQ5pD,MAG5B,IAAIqrD,EAAO,EAAH,6CAUR,OATAA,GAAQrzD,OAAOu0D,EAAAA,YAAYU,kBAAkB10D,KAAK6zD,WAAY7zD,KAAKk/C,SAE/D73C,OAAOstD,SAAS30D,QAClBA,KAAKoxD,MAAMC,QAAU,CACnB5pD,MAAOqrD,EACPvR,SAAUvhD,KAAKk/C,OAAOqC,aAInBuR,CACT,GAEA,4BAGA,WACE,OAAO9yD,KAAKoiD,SAAWpiD,KAAK8hD,SAAW9hD,KAAKyH,KAC9C,GAEA,iBAaA,WACE,MAAO,EACL,IAAAvH,wBAAuBF,KAAKiK,UAC5B,IAAA/J,wBAAuBF,KAAKL,QAC5B,IAAAO,wBAAuBF,KAAK8hD,WAC5B,IAAA5hD,wBAAuBF,KAAKoiD,eAChB7iD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAG7oD,IAAMyE,EAAOxD,KAAK,KAClD,IAAAuD,wBAAuBF,KAAKyH,OAC5BzH,KAAK1C,KACL0C,KAAK6zD,gBACMt0D,IAAXS,KAAK3D,GAAkB,IAAA6D,wBAAuBF,KAAK3D,GAAK8D,EAAOxD,KAAK,SACzD4C,IAAXS,KAAKyK,GAAkB,IAAAvK,wBAAuBF,KAAKyK,GAAKtK,EAAOxD,KAAK,SACzD4C,IAAXS,KAAK0K,GAAkB,IAAAxK,wBAAuBF,KAAK0K,GAAKvK,EAAOxD,KAAK,IAExE,GAEA,uBAUA,WACE,IAAMwf,EAAOnc,KAAKM,MAClB,OAAOH,EAAO+B,OAAO,CACnByxD,EACAxzD,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY8b,MAEvC,GAEA,8BAaA,WAAmC,IAAlB64C,IAAc,UAAH,+CACpB74C,EAAOnc,KAAKM,MAAMnE,MAAM,EAAG,GAC3BiP,EAAUjL,EAAO+B,OAAO,CAC5ByxD,EACAxzD,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY8b,OAErC,OAAI64C,EACK70D,EAAOxD,MAAK,IAAA+E,WAAU0J,IAEtBA,CAEX,GAEA,kBAMO,WACL,IAAKpL,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,wDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,OAAIoB,OAAOstD,SAAS30D,OACbA,KAAKoxD,MAAM3vD,OACdzB,KAAKoxD,MAAM3vD,KAAOtB,EAAOxD,MAAK,IAAA+E,WAAU1B,KAAKs/C,eAExCt/C,KAAKoxD,MAAM3vD,MAGbtB,EAAOxD,MAAK,IAAA+E,WAAU1B,KAAKs/C,aACpC,GAEA,yCAGO,WACL,OAAOt/C,KAAKozD,kBACd,GAEA,gCAGO,WACL,IAAKpzD,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,wDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,IAAMmE,EAAUpK,KAAKi1D,8BACb54D,EAAY2D,KAAZ3D,EAAGoO,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EAEd1K,KAAKu0D,iBAEL,IACE,OAAO,IAAAh5C,WACLnR,EACA/N,EAAKoD,OAAO,KACZ,IAAAS,wBAAuBuK,IACvB,IAAAvK,wBAAuBwK,IAEzB,MAAOzJ,GACDgF,EAAMjG,KAAKsyD,UAAU,qBAC3B,MAAM,IAAIp2D,MAAM+J,GAEpB,GAAC,+BAED,SAAkB5J,EAAWoO,EAAWC,GACtC,IAAM4iC,EAAO,EAAH,KAAQttC,KAAK2xD,WAAS,IAAEzS,OAAQl/C,KAAKk/C,SAE/C,OAAOsW,EAA6BN,WAClC,CACEjrD,QAASjK,KAAKiK,QACdtK,MAAOK,KAAKL,MACZmiD,SAAU9hD,KAAK8hD,SACfM,SAAUpiD,KAAKoiD,SACfmC,GAAIvkD,KAAKukD,GACT98C,MAAOzH,KAAKyH,MACZnK,KAAM0C,KAAK1C,KACXu2D,WAAY7zD,KAAK6zD,WACjBx3D,EAAGA,EAAIoD,OAAO,IACdgL,GAAG,IAAAhK,gBAAegK,GAClBC,GAAG,IAAAjK,gBAAeiK,IAEpB4iC,EAEJ,GAEA,oBAGA,WACE,IAAM6nB,EAAiBnB,EAAAA,YAAYoB,kBAAkBp1D,KAAK6zD,YAE1D,MAAO,CACL5pD,SAAS,IAAA6B,aAAY9L,KAAKiK,SAC1BtK,OAAO,IAAAmM,aAAY9L,KAAKL,OACxBmiD,UAAU,IAAAh2C,aAAY9L,KAAK8hD,UAC3BM,UAAU,IAAAt2C,aAAY9L,KAAKoiD,UAC3BmC,QAAgBhlD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAGzmD,gBAAayB,EACjDkI,OAAO,IAAAqE,aAAY9L,KAAKyH,OACxBnK,KAAM,KAAO0C,KAAK1C,KAAKQ,SAAS,OAChC+1D,WAAYsB,EACZ94D,OAAckD,IAAXS,KAAK3D,GAAkB,IAAAyP,aAAY9L,KAAK3D,QAAKkD,EAChDkL,OAAclL,IAAXS,KAAKyK,GAAkB,IAAAqB,aAAY9L,KAAKyK,QAAKlL,EAChDmL,OAAcnL,IAAXS,KAAK0K,GAAkB,IAAAoB,aAAY9L,KAAK0K,QAAKnL,EAEpD,GAEA,sBAGO,WAAQ,QACT81D,EAAWr1D,KAAKs1D,yBAGpB,OADAD,GAAY,aAAJ,OAAiBr1D,KAAK8hD,SAAQ,4BAA2C,QAA3C,EAAmC,QAAnC,EAAoB9hD,KAAK6zD,kBAAU,aAAf,EAAiBr4D,cAAM,QAAI,GAC9E65D,CACT,GAEA,uBAMU,SAAUpvD,GAClB,MAAO,GAAP,OAAUA,EAAG,aAAKjG,KAAKq1D,WAAU,IACnC,IAAC,yBA/UM,SAAkBlE,GAAqD,IAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAC3E,OAAO,IAAIkoB,EAA6BrE,EAAQ7jB,EAClD,GAEA,8BAMO,SAAwB3sC,GAAwC,IAApB2sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EACpE,IAAK3sC,EAAWxE,MAAM,EAAG,GAAGoE,OAAOozD,GACjC,MAAM,IAAIz3D,MAAM,sFAAD,OA/CI,EAgDqF,uBAAeyE,EAClHxE,MAAM,EAAG,GACT2B,SAAS,SAIhB,IAAM8C,GAAS,IAAAC,aAAYT,EAAAA,IAAIpD,OAAON,WAAWC,KAAKgE,EAAWxE,MAAM,MAEvE,IAAKf,MAAMC,QAAQuF,GACjB,MAAM,IAAI1E,MAAM,8CAGlB,OAAOs5D,EAA6B10D,gBAAgBF,EAAe0sC,EACrE,GAEA,6BAMO,SAAuB1sC,GAA0D,IAApB0sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EACrF,GAAsB,IAAlB1sC,EAAOpF,QAAkC,KAAlBoF,EAAOpF,OAChC,MAAM,IAAIU,MACR,yGAIJ,QAAmF0E,EAAM,IAAlFqJ,EAAO,KAAEtK,EAAK,KAAEmiD,EAAQ,KAAEM,EAAQ,KAAEmC,EAAE,KAAE98C,EAAK,KAAEnK,EAAI,KAAEu2D,EAAU,KAAEx3D,EAAC,KAAEoO,EAAC,KAAEC,EAAC,MAE/E1K,KAAKq0D,kBAAkB,CAAEpqD,QAAAA,EAAS5N,EAAAA,KAClC,IAAAk5D,yBAAwB,CAAE51D,MAAAA,EAAOmiD,SAAAA,EAAUM,SAAAA,EAAU36C,MAAAA,EAAOpL,EAAAA,EAAGoO,EAAAA,EAAGC,EAAAA,IAElE,IAAM+qD,EAA8B,GAEpC,OAAO,IAAID,EACT,CACEvrD,SAAS,IAAAxJ,gBAAewJ,GACxBtK,MAAAA,EACAmiD,SAAAA,EACAM,SAAAA,EACAmC,GAAAA,EACA98C,MAAAA,EACAnK,KAAAA,EACAu2D,WAAsB,OAAVA,QAAU,IAAVA,EAAAA,EAAc4B,EAC1Bp5D,OAASkD,IAANlD,GAAkB,IAAAoE,gBAAepE,QAAKkD,EACzCkL,EAAAA,EACAC,EAAAA,GAEF4iC,EAEJ,KAAC,EA1FuC,CAAQ8mB,EAAAA,iBAAlDz2D,EAAAA,6BAAAA,kHCpCA,eAIaA,EAAAA,kBAAoB,SAAC+3D,GAA0B,MACpDliB,EAAWnsC,OAAOkmC,OAAO,CAAC,EAAGmoB,GAiBnC,OAfAliB,EAAS4O,UAAW,IAAAh2C,QAAwB,QAAlB,EAAConC,EAAS4O,gBAAQ,QAAI5O,EAASyO,IAAKgG,EAAAA,WAAWxoD,QACzE+zC,EAASl2C,UAAyBiC,IAAlBi0C,EAASl2C,KAAqBk2C,EAASr4C,MAAQq4C,EAASl2C,KAGxEk2C,EAASsO,cAAiCviD,IAAtBi0C,EAASsO,SAAyBriD,OAAO+zC,EAASsO,eAAYviD,EAClFi0C,EAAS/rC,WAA2BlI,IAAnBi0C,EAAS/rC,MAAsBhI,OAAO+zC,EAAS/rC,YAASlI,EAGzEi0C,EAAS+Q,GACS,OAAhB/Q,EAAS+Q,SAA+BhlD,IAAhBi0C,EAAS+Q,IAC7B,IAAA55C,gBAAc,IAAAjK,UAAS8yC,EAAS+Q,IAAK,IACrC,KAEN/Q,EAASn3C,GAAI,IAAA+P,QAAOonC,EAASn3C,EAAG4rD,EAAAA,WAAWxoD,QAEpC+zC,CACT,knBCvBA,eAASnsC,OAAAA,eAAAA,EAAAA,8BAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAA8rD,2BAA2B,IACpC,eAASvsD,OAAAA,eAAAA,EAAAA,+BAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAA0tD,4BAA4B,IACrC,eAASnuD,OAAAA,eAAAA,EAAAA,cAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAA6tD,WAAW,IACpB,eAAStuD,OAAAA,eAAAA,EAAAA,qBAAAA,CAAAQ,YAAAA,EAAAC,IAAAA,WAAA,SAAAs3C,kBAAkB,IAC3Bx3C,EAAAA,EAAAA,OAAAA,8SCJA,eACA,WAYA,UAEA,WACA,WACA,WAOA,SAASguD,EAAY/3D,EAAYoM,GAC/B,IAAM5N,EAAI+B,OAAOP,GACXg4D,EAAmC,EAAlBz3D,OAAO6L,GAC9B,OAAO5N,IAAMw5D,EAAiB,IAAMx5D,IAAMw5D,EAAiB,EAC7D,CAEA,IAGaF,EAAY,8BAyEvB,WAAmBxE,GAAoC,QAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAOpD,GAPqD,WACrD,qBAAW6jB,GAAM,IAAEj8C,KArFE,IAqFwBo4B,IAExC4R,OAAS,EAAK4W,aAAa,EAAKz5D,EAAGixC,EAAK4R,QAE7C,EAAK4C,UAAW,IAAArhD,iBAAe,IAAAC,UAA6B,KAApBywD,EAAOrP,SAAkB,KAAOqP,EAAOrP,WAE3E,EAAKA,SAAW,EAAKM,SAAW6F,EAAAA,YAAa,CAC/C,IAAMhiD,EAAM,EAAKqsD,UAAU,4DAC3B,MAAM,IAAIp2D,MAAM+J,GAElB,EAAK+rD,gCAAgC,CAAElQ,SAAU,EAAKA,WACtDsS,EAAAA,gBAAgBC,kBAAkBlD,GAE9B,EAAKjS,OAAO4J,YAAY,oBACrB,EAAKsJ,WASJwD,EAAY,EAAKv5D,EAAI,EAAK6iD,OAAOj1C,YACnC,EAAKqnD,mBAAmB71D,KAAK4Q,EAAAA,WAAW8mD,wBAT1C,EAAK7B,mBAAmB71D,KAAK4Q,EAAAA,WAAW8mD,yBAcxC,EAAKjU,OAAO+J,eAAe,QAC7B,IAAAuL,sBAAqB,EAAKtV,OAAQ,EAAK5hD,KAAK9B,QAG9C,IAAMi5D,EAAqB,QAAf,EAAO,OAAJnnB,QAAI,IAAJA,OAAI,EAAJA,EAAMmnB,cAAM,SAG1B,OAFGA,GACFptD,OAAOotD,OAAO,EAAD,IACd,CACH,CA/CC,OA3DD,sBAyHA,WACE,MAAO,EACL,IAAAv0D,wBAAuBF,KAAKL,QAC5B,IAAAO,wBAAuBF,KAAK8hD,WAC5B,IAAA5hD,wBAAuBF,KAAKoiD,eAChB7iD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAG7oD,IAAMyE,EAAOxD,KAAK,KAClD,IAAAuD,wBAAuBF,KAAKyH,OAC5BzH,KAAK1C,UACMiC,IAAXS,KAAK3D,GAAkB,IAAA6D,wBAAuBF,KAAK3D,GAAK8D,EAAOxD,KAAK,SACzD4C,IAAXS,KAAKyK,GAAkB,IAAAvK,wBAAuBF,KAAKyK,GAAKtK,EAAOxD,KAAK,SACzD4C,IAAXS,KAAK0K,GAAkB,IAAAxK,wBAAuBF,KAAK0K,GAAKvK,EAAOxD,KAAK,IAExE,GAEA,uBASA,WACE,OAAOwD,EAAOxD,KAAKyD,EAAAA,IAAIlF,QAAO,IAAAmF,aAAYL,KAAKM,QACjD,GAAC,+BAEO,WACN,IAAMM,EAAS,EACb,IAAAV,wBAAuBF,KAAKL,QAC5B,IAAAO,wBAAuBF,KAAK8hD,WAC5B,IAAA5hD,wBAAuBF,KAAKoiD,eAChB7iD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAG7oD,IAAMyE,EAAOxD,KAAK,KAClD,IAAAuD,wBAAuBF,KAAKyH,OAC5BzH,KAAK1C,MASP,OANI0C,KAAKkzD,SAAS7mD,EAAAA,WAAW8mD,0BAC3BvyD,EAAOnF,MAAK,IAAAiF,UAASV,KAAKk/C,OAAOj1C,YACjCrJ,EAAOnF,MAAK,IAAAiM,cAAY,IAAAhH,UAAS,KACjCE,EAAOnF,MAAK,IAAAiM,cAAY,IAAAhH,UAAS,MAG5BE,CACT,GAAC,8BAoBD,WAAmC,IAAlBo0D,IAAc,UAAH,+CACpB5pD,EAAUpL,KAAK+1D,oBACrB,OAAIf,EACK70D,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY+K,MAE7CA,CAEX,GAEA,wBAGA,WACE,OAAIpL,KAAKoxD,MAAMC,SAAWrxD,KAAKoxD,MAAMC,QAAQ9P,WAAavhD,KAAKk/C,OAAOqC,WAC7DvhD,KAAKoxD,MAAMC,QAAQ5pD,OAGxBJ,OAAOstD,SAAS30D,QAClBA,KAAKoxD,MAAMC,QAAU,CACnB5pD,MAAO,EAAF,6CACL85C,SAAUvhD,KAAKk/C,OAAOqC,aAInB,EAAP,6CACF,GAEA,4BAGA,WACE,OAAOvhD,KAAKoiD,SAAWpiD,KAAK8hD,SAAW9hD,KAAKyH,KAC9C,GAEA,kBAMA,WACE,IAAKzH,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,wDAC3B,MAAM,IAAIp2D,MAAM+J,GAGlB,OAAIoB,OAAOstD,SAAS30D,OACbA,KAAKoxD,MAAM3vD,OACdzB,KAAKoxD,MAAM3vD,KAAOtB,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAYL,KAAKM,WAE/DN,KAAKoxD,MAAM3vD,MAGbtB,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAYL,KAAKM,SAC3D,GAEA,yCAGA,WACE,IAAKN,KAAKoyD,WAAY,CACpB,IAAMnsD,EAAMjG,KAAKsyD,UAAU,kCAC3B,MAAM,IAAIp2D,MAAM+J,GAElB,IAAMmF,EAAUpL,KAAK+1D,oBACrB,OAAO51D,EAAOxD,MAAK,IAAA+E,WAAUtB,EAAAA,IAAIlF,QAAO,IAAAmF,aAAY+K,KACtD,GAEA,gCAGA,WACE,IAAMhB,EAAUpK,KAAKi1D,8BAEb54D,EAAY2D,KAAZ3D,EAAGoO,EAASzK,KAATyK,EAAGC,EAAM1K,KAAN0K,EAEd1K,KAAKu0D,iBAEL,IACE,OAAO,IAAAh5C,WACLnR,EACA/N,GACA,IAAA6D,wBAAuBuK,IACvB,IAAAvK,wBAAuBwK,GACvB1K,KAAKkzD,SAAS7mD,EAAAA,WAAW8mD,wBAA0BnzD,KAAKk/C,OAAOj1C,eAAY1K,GAE7E,MAAO0B,GACP,IAAMgF,EAAMjG,KAAKsyD,UAAU,qBAC3B,MAAM,IAAIp2D,MAAM+J,GAEpB,GAEA,+BAGU,SAAkB5J,EAAWoO,EAAWC,GAC5C1K,KAAKkzD,SAAS7mD,EAAAA,WAAW8mD,0BAC3B92D,GAAK2D,KAAKk/C,OAAOj1C,UAAYxK,OAAO,GAAKA,OAAO,IAGlD,IAAM6tC,EAAO,EAAH,KAAQttC,KAAK2xD,WAAS,IAAEzS,OAAQl/C,KAAKk/C,SAE/C,OAAOyW,EAAYT,WACjB,CACEv1D,MAAOK,KAAKL,MACZmiD,SAAU9hD,KAAK8hD,SACfM,SAAUpiD,KAAKoiD,SACfmC,GAAIvkD,KAAKukD,GACT98C,MAAOzH,KAAKyH,MACZnK,KAAM0C,KAAK1C,KACXjB,EAAAA,EACAoO,GAAG,IAAAhK,gBAAegK,GAClBC,GAAG,IAAAjK,gBAAeiK,IAEpB4iC,EAEJ,GAEA,oBAGA,WACE,MAAO,CACL3tC,OAAO,IAAAmM,aAAY9L,KAAKL,OACxBmiD,UAAU,IAAAh2C,aAAY9L,KAAK8hD,UAC3BM,UAAU,IAAAt2C,aAAY9L,KAAKoiD,UAC3BmC,QAAgBhlD,IAAZS,KAAKukD,GAAmBvkD,KAAKukD,GAAGzmD,gBAAayB,EACjDkI,OAAO,IAAAqE,aAAY9L,KAAKyH,OACxBnK,KAAM,KAAO0C,KAAK1C,KAAKQ,SAAS,OAChCzB,OAAckD,IAAXS,KAAK3D,GAAkB,IAAAyP,aAAY9L,KAAK3D,QAAKkD,EAChDkL,OAAclL,IAAXS,KAAKyK,GAAkB,IAAAqB,aAAY9L,KAAKyK,QAAKlL,EAChDmL,OAAcnL,IAAXS,KAAK0K,GAAkB,IAAAoB,aAAY9L,KAAK0K,QAAKnL,EAEpD,GAEA,0BAGQ,SAAa1B,EAAaqhD,GAChC,IAAIoU,EA6BI0C,EA5BF35D,OAAWkD,IAAP1B,EAAmBO,OAAOP,QAAM0B,EAE1C,QAAUA,IAANlD,GAGEA,EAAI,IAAY,KAANA,GAAkB,KAANA,EACxB,MAAM,IAAIH,MAAM,oFAAD,OACuEG,IAM1F,QACQkD,IAANlD,GACM,IAANA,KACE6iD,GAAUA,EAAO4J,YAAY,oBACzB,KAANzsD,GACM,KAANA,EAEA,GAAI6iD,GACF,IAAK0W,EAAYn2D,OAAOpD,GAAI6iD,EAAOj1C,WACjC,MAAM,IAAI/N,MAAM,+BAAD,OACkBG,EAAC,yBAAiB6iD,EAAOj1C,UAAS,wFAOnE+rD,GADG35D,EAAI,IAAM,IAAM,EACV,GAEA,GAGXi3D,EAAgB7zD,OAAOpD,EAAI25D,GAAUv2D,OAAO,GAGhD,OAAOO,KAAK8zD,WAAW5U,EAAQoU,EACjC,GAEA,sBAGO,WACL,IAAI+B,EAAWr1D,KAAKs1D,yBAEpB,OADAD,GAAY,aAAJ,OAAiBr1D,KAAK8hD,UACvBuT,CACT,GAEA,uBAMU,SAAUpvD,GAClB,MAAO,GAAP,OAAUA,EAAG,aAAKjG,KAAKq1D,WAAU,IACnC,IAAC,yBAvXM,SAAkBlE,GAAoC,IAApB7jB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAC1D,OAAO,IAAIqoB,EAAYxE,EAAQ7jB,EACjC,GAEA,8BAKO,SAAwB3sC,GAAwC,IAApB2sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAC9D1sC,GAAS,IAAAC,aAAYT,EAAAA,IAAIpD,OAAON,WAAWC,KAAKgE,KAEtD,IAAKvF,MAAMC,QAAQuF,GACjB,MAAM,IAAI1E,MAAM,8CAGlB,OAAO8D,KAAKc,gBAAgBF,EAAQ0sC,EACtC,GAEA,6BAKO,SAAuB1sC,GAA2C,IAApB0sC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,CAAC,EAGtE,GAAsB,IAAlB1sC,EAAOpF,QAAkC,IAAlBoF,EAAOpF,OAChC,MAAM,IAAIU,MACR,+FAIJ,QAA8D0E,EAAM,GAA7DjB,EAAK,KAAEmiD,EAAQ,KAAEM,EAAQ,KAAEmC,EAAE,KAAE98C,EAAK,KAAEnK,EAAI,KAAEjB,EAAC,KAAEoO,EAAC,KAAEC,EAAC,KAI1D,OAFA,IAAA6qD,yBAAwB,CAAE51D,MAAAA,EAAOmiD,SAAAA,EAAUM,SAAAA,EAAU36C,MAAAA,EAAOpL,EAAAA,EAAGoO,EAAAA,EAAGC,EAAAA,IAE3D,IAAIirD,EACT,CACEh2D,MAAAA,EACAmiD,SAAAA,EACAM,SAAAA,EACAmC,GAAAA,EACA98C,MAAAA,EACAnK,KAAAA,EACAjB,EAAAA,EACAoO,EAAAA,EACAC,EAAAA,GAEF4iC,EAEJ,KAAC,EAhEsB,CAAQ8mB,EAAAA,iBAAjCz2D,EAAAA,YAAAA,qNCjCA,eACA,WAEA,WACA,WACA,WACA,WAUayhD,EAAkB,WAE7B,sBAAuB,CAiGtB,OA/FD,kCAMO,SACL+R,GACyB,IAAzBQ,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAuB,CAAC,EAExB,GAAM,SAAUR,QAA2B5xD,IAAhB4xD,EAAOj8C,KAG3B,CACL,IAAM+gD,EAAS73D,QAAO,IAAAqC,iBAAe,IAAAC,UAASywD,EAAOj8C,QACrD,GAAe,IAAX+gD,EACF,OAAOC,EAAAA,YAAYhB,WAAmB/D,EAAQQ,GACzC,GAAe,IAAXsE,EACT,OAAOE,EAAAA,6BAA6BjB,WAAoC/D,EAAQQ,GAC3E,GAAe,IAAXsE,EACT,OAAOG,EAAAA,4BAA4BlB,WAAmC/D,EAAQQ,GAE9E,MAAM,IAAIz1D,MAAM,8BAAD,OAA+B+5D,EAAM,mBAVtD,OAAOC,EAAAA,YAAYhB,WAAmB/D,EAAQQ,EAalD,GAEA,gCAMO,SAA0Br0D,GAAuC,IAAzBq0D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAuB,CAAC,EACrE,GAAIr0D,EAAK,IAAM,IAAM,CAEnB,IAAI+4D,EACJ,OAAQ/4D,EAAK,IACX,KAAK,EACH+4D,EAAM,KACN,MACF,KAAK,EACHA,EAAM,KACN,MACF,QACE,MAAM,IAAIn6D,MAAM,4BAAD,OAA6BoB,EAAK,GAAE,aAEvD,OAAY,OAAR+4D,EACKD,EAAAA,4BAA4BE,iBAAiBh5D,EAAMq0D,GAGnDwE,EAAAA,6BAA6BG,iBAAiBh5D,EAAMq0D,GAG7D,OAAOuE,EAAAA,YAAYI,iBAAiBh5D,EAAMq0D,EAE9C,GAEA,+BASO,SAAyBr0D,GAAkD,IAAzBq0D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAuB,CAAC,EAC/E,GAAIxxD,EAAOwD,SAASrG,GAClB,OAAO0C,KAAKu2D,mBAAmBj5D,EAAMq0D,GAChC,GAAIv2D,MAAMC,QAAQiC,GAEvB,OAAO44D,EAAAA,YAAYp1D,gBAAgBxD,EAAMq0D,GAEzC,MAAM,IAAIz1D,MAAM,gDAEpB,GAEA,6DAOO,WACL+9C,EACAwF,EACAkS,GAAqB,2EAGqE,OADpF6E,EACgB,kBAAbvc,EAAwB,IAAIwc,EAAAA,OAAOC,UAAUC,gBAAgB1c,GAAYA,EAAQ,SACrEuc,EAAKI,KAAK,2BAA4B,CAACnX,IAAQ,OAC1B,OADpC0R,EAAS,EAAH,KACN0F,GAAW,IAAAC,mBAAkB3F,GAAO,kBACnC/R,EAAmB8V,WAAW2B,EAAUlF,IAAU,2CAC1D,uDAjBD,MAiBC,EAnG4B,GAA/Bh0D,EAAAA,mBAAAA,oCCiEA,SAAgBo5D,EACd57D,GAEA,GAAqB,IAAjBA,EAAMK,OACR,OAAO,EAET,IAAMw7D,EAAY77D,EAAM,GACxB,QAAIC,MAAMC,QAAQ27D,EAIpB,0GAlFA,SAAYC,GAKVA,EAAAA,EAAAA,uBAAAA,KAAAA,yBAMAA,EAAAA,EAAAA,iBAAAA,MAAAA,mBAMAA,EAAAA,EAAAA,wBAAAA,MAAAA,0BAMAA,EAAAA,EAAAA,mBAAAA,MAAAA,oBACD,CAxBD,CAAYt5D,EAAAA,aAAAA,EAAAA,WAAU,KAuEtBA,EAAAA,mBAAAA,EAaAA,EAAAA,aAAA,SAA6BxC,GAC3B,OAAQ47D,EAAmB57D,EAC7B,6KChGA,eAEA,WAKAwC,EAAAA,qBAAA,SAAqCuhD,EAAgB1jD,GACnD,IAAM07D,EAAkBhY,EAAO0I,MAAM,KAAM,mBAC3C,GAAIsP,GAAmBz3D,OAAOjE,GAAU07D,EACtC,MAAM,IAAIh7D,MAAM,6DAAD,OACgDV,EAAM,6BAAqB0jD,EAAO0I,MAC7F,KACA,oBAIR,EAAC,IAEYuP,EAAW,kCAgGrB,OAhGqB,yCACf,SAAyBtD,GAC9B,IAAIK,EACAkD,EACJ,IAAI,IAAAC,cAAaxD,GAAa,CAC5BK,EAAiBL,EAGjB,IAFA,IAAMyD,EAAkC,GAE/B/7D,EAAI,EAAGA,EAAIs4D,EAAWr4D,OAAQD,IAAK,CAI1C,IAHA,IAAM+c,EAAuBu7C,EAAWt4D,GAClCg8D,GAAgB,IAAA72D,UAAS4X,EAAKjX,SAC9Bm2D,EAAyB,GACtBnyD,EAAQ,EAAGA,EAAQiT,EAAKm/C,YAAYj8D,OAAQ6J,IACnDmyD,EAAa/7D,MAAK,IAAAiF,UAAS4X,EAAKm/C,YAAYpyD,KAE9CiyD,EAAc77D,KAAK,CAAC87D,EAAeC,IAErCJ,EAAmBE,MACd,CACLF,EAA6B,OAAVvD,QAAU,IAAVA,EAAAA,EAAc,GAGjC,IADA,IAAMrF,EAAmB,GAChBjzD,EAAI,EAAGA,EAAI67D,EAAiB57D,OAAQD,IAAK,CAIhD,IAHA,IAAM+B,EAAO85D,EAAiB77D,GACxB8F,GAAU,IAAA2B,aAAY1F,EAAK,IAC3Bm6D,EAAwB,GACrBn/C,EAAO,EAAGA,EAAOhb,EAAK,GAAG9B,OAAQ8c,IACxCm/C,EAAYh8D,MAAK,IAAAuH,aAAY1F,EAAK,GAAGgb,KAEvC,IAAMo/C,EAA2B,CAC/Br2D,QAAAA,EACAo2D,YAAAA,GAEFjJ,EAAK/yD,KAAKi8D,GAEZxD,EAAiB1F,EAGnB,MAAO,CACL0F,eAAAA,EACAL,WAAYuD,EAEhB,GAAC,8BAEM,SAAwBvD,GAC7B,IAAK,IAAI1qD,EAAM,EAAGA,EAAM0qD,EAAWr4D,OAAQ2N,IAAO,CAChD,IAAMwuD,EAAiB9D,EAAW1qD,GAC5B9H,EAAkBs2D,EAAe,GACjCC,EAAyBD,EAAe,GAC9C,QAAiCp4D,IAAvBo4D,EAAgB,GACxB,MAAM,IAAIz7D,MACR,wGAGJ,GAAuB,KAAnBmF,EAAQ7F,OACV,MAAM,IAAIU,MAAM,mEAElB,IAAK,IAAI27D,EAAc,EAAGA,EAAcD,EAAap8D,OAAQq8D,IAC3D,GAAyC,KAArCD,EAAaC,GAAar8D,OAC5B,MAAM,IAAIU,MAAM,wEAIxB,GAAC,+BAEM,SAAyB23D,GAE9B,IADA,IAAMsB,EAAiB,GACd9vD,EAAQ,EAAGA,EAAQwuD,EAAWr4D,OAAQ6J,IAAS,CAOtD,IANA,IAAMiT,EAAYu7C,EAAWxuD,GACvByyD,EAAgB,CACpBz2D,QAAS,MAAO,IAAAsJ,eAAsB2N,EAAK,GAAI,IAAIxa,SAAS,OAC5D25D,YAAa,IAETG,EAAyBt/C,EAAK,GAC3By/C,EAAO,EAAGA,EAAOH,EAAap8D,OAAQu8D,IAAQ,CACrD,IAAMF,EAAcD,EAAaG,GACjCD,EAASL,YAAYh8D,KAAK,MAAO,IAAAkP,eAAcktD,EAAa,IAAI/5D,SAAS,QAE3Eq3D,EAAe15D,KAAKq8D,GAEtB,OAAO3C,CACT,GAAC,+BAEM,SAAyBtB,EAA8B3U,GAK5D,IAJA,IAAM8Y,EAA2B9Y,EAAO0I,MAAM,YAAa,4BACrDqQ,EAAwB/Y,EAAO0I,MAAM,YAAa,yBAEpDsQ,EAAQ,EACH7yD,EAAQ,EAAGA,EAAQwuD,EAAWr4D,OAAQ6J,IAAS,CAGtD6yD,GAFarE,EAAWxuD,GACE,GACJ7J,OAIxB,OADkBq4D,EAAWr4D,OACV4C,OAAO65D,GAAyBC,EAAQ95D,OAAO45D,EACpE,KAAC,EAhGqB,GAAxBr6D,EAAAA,YAAAA,kCCdA,IAJA,IAAIw6D,EAAW,mCAGXC,EAAe,CAAC,EACXhmC,EAAI,EAAGA,EAAI+lC,EAAS38D,OAAQ42B,IAAK,CACxC,IAAI3K,EAAI0wC,EAASE,OAAOjmC,GAExB,QAAwB7yB,IAApB64D,EAAa3wC,GAAkB,MAAM,IAAIlpB,UAAUkpB,EAAI,iBAC3D2wC,EAAa3wC,GAAK2K,CACpB,CAEA,SAASkmC,EAAaC,GACpB,IAAI15C,EAAI05C,GAAO,GACf,OAAe,SAANA,IAAoB,EACR,YAAf15C,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,GACK,aAAfA,GAAK,EAAK,GACK,YAAfA,GAAK,EAAK,EAClB,CAEA,SAAS25C,EAAWh3D,GAElB,IADA,IAAIs9B,EAAM,EACDvjC,EAAI,EAAGA,EAAIiG,EAAOhG,SAAUD,EAAG,CACtC,IAAIwS,EAAIvM,EAAOyH,WAAW1N,GAC1B,GAAIwS,EAAI,IAAMA,EAAI,IAAK,MAAO,mBAAqBvM,EAAS,IAE5Ds9B,EAAMw5B,EAAYx5B,GAAQ/wB,GAAK,CACjC,CAGA,IAFA+wB,EAAMw5B,EAAYx5B,GAEbvjC,EAAI,EAAGA,EAAIiG,EAAOhG,SAAUD,EAAG,CAClC,IAAIc,EAAImF,EAAOyH,WAAW1N,GAC1BujC,EAAMw5B,EAAYx5B,GAAY,GAAJziC,CAC5B,CACA,OAAOyiC,CACT,CAkCA,SAAS25B,EAAUn5D,EAAKo5D,GAEtB,GADAA,EAAQA,GAAS,GACbp5D,EAAI9D,OAAS,EAAG,OAAO8D,EAAM,aACjC,GAAIA,EAAI9D,OAASk9D,EAAO,MAAO,uBAG/B,IAAIC,EAAUr5D,EAAIiC,cACdq3D,EAAUt5D,EAAIsC,cAClB,GAAItC,IAAQq5D,GAAWr5D,IAAQs5D,EAAS,MAAO,qBAAuBt5D,EAGtE,IAAIqyB,GAFJryB,EAAMq5D,GAEUxjD,YAAY,KAC5B,IAAe,IAAXwc,EAAc,MAAO,8BAAgCryB,EACzD,GAAc,IAAVqyB,EAAa,MAAO,sBAAwBryB,EAEhD,IAAIkC,EAASlC,EAAInD,MAAM,EAAGw1B,GACtBknC,EAAYv5D,EAAInD,MAAMw1B,EAAQ,GAClC,GAAIknC,EAAUr9D,OAAS,EAAG,MAAO,iBAEjC,IAAIsjC,EAAM05B,EAAUh3D,GACpB,GAAmB,kBAARs9B,EAAkB,OAAOA,EAGpC,IADA,IAAIviB,EAAQ,GACHhhB,EAAI,EAAGA,EAAIs9D,EAAUr9D,SAAUD,EAAG,CACzC,IAAIwS,EAAI8qD,EAAUR,OAAO98D,GACrBc,EAAI+7D,EAAarqD,GACrB,QAAUxO,IAANlD,EAAiB,MAAO,qBAAuB0R,EACnD+wB,EAAMw5B,EAAYx5B,GAAOziC,EAGrBd,EAAI,GAAKs9D,EAAUr9D,QACvB+gB,EAAM9gB,KAAKY,EACb,CAEA,OAAY,IAARyiC,EAAkB,wBAA0Bx/B,EACzC,CAAEkC,OAAQA,EAAQ+a,MAAOA,EAClC,CAcA,SAASu8C,EAASx7D,EAAMy7D,EAAQC,EAASj6D,GAMvC,IALA,IAAI0I,EAAQ,EACRojB,EAAO,EACPouC,GAAQ,GAAKD,GAAW,EAExBl6D,EAAS,GACJvD,EAAI,EAAGA,EAAI+B,EAAK9B,SAAUD,EAIjC,IAHAkM,EAASA,GAASsxD,EAAUz7D,EAAK/B,GACjCsvB,GAAQkuC,EAEDluC,GAAQmuC,GACbnuC,GAAQmuC,EACRl6D,EAAOrD,KAAMgM,GAASojB,EAAQouC,GAIlC,GAAIl6D,EACE8rB,EAAO,GACT/rB,EAAOrD,KAAMgM,GAAUuxD,EAAUnuC,EAASouC,OAEvC,CACL,GAAIpuC,GAAQkuC,EAAQ,MAAO,iBAC3B,GAAKtxD,GAAUuxD,EAAUnuC,EAASouC,EAAM,MAAO,kBACjD,CAEA,OAAOn6D,CACT,CA0BA8T,EAAOjV,QAAU,CACfu7D,aAjEF,WACE,IAAItyD,EAAM6xD,EAASU,MAAM,KAAMz5B,WAC/B,GAAmB,kBAAR94B,EAAkB,OAAOA,CACtC,EA+DE5J,OA7DF,SAAiBsC,GACf,IAAIsH,EAAM6xD,EAASU,MAAM,KAAMz5B,WAC/B,GAAmB,kBAAR94B,EAAkB,OAAOA,EAEpC,MAAM,IAAI1K,MAAM0K,EAClB,EAyDE1L,OAzIF,SAAiBsG,EAAQ+a,EAAOm8C,GAE9B,GADAA,EAAQA,GAAS,GACZl3D,EAAOhG,OAAS,EAAI+gB,EAAM/gB,OAAUk9D,EAAO,MAAM,IAAIn6D,UAAU,wBAKpE,IAAIugC,EAAM05B,EAHVh3D,EAASA,EAAOD,eAIhB,GAAmB,kBAARu9B,EAAkB,MAAM,IAAI5iC,MAAM4iC,GAG7C,IADA,IAAIhgC,EAAS0C,EAAS,IACbjG,EAAI,EAAGA,EAAIghB,EAAM/gB,SAAUD,EAAG,CACrC,IAAIksB,EAAIlL,EAAMhhB,GACd,GAAKksB,GAAK,IAAO,EAAG,MAAM,IAAIvrB,MAAM,kBAEpC4iC,EAAMw5B,EAAYx5B,GAAOrX,EACzB3oB,GAAUq5D,EAASE,OAAO5wC,EAC5B,CAEA,IAAKlsB,EAAI,EAAGA,EAAI,IAAKA,EACnBujC,EAAMw5B,EAAYx5B,GAIpB,IAFAA,GAAO,EAEFvjC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAEtBuD,GAAUq5D,EAASE,OADVv5B,GAAkB,GAAT,EAAIvjC,GAAW,GAEnC,CAEA,OAAOuD,CACT,EA4GEs6D,cA5BF,SAAwBvzD,GACtB,IAAIe,EAAMkyD,EAAQjzD,EAAO,EAAG,GAAG,GAC/B,GAAIzK,MAAMC,QAAQuL,GAAM,OAAOA,CACjC,EA0BEyyD,QAxBF,SAAkBxzD,GAChB,IAAIe,EAAMkyD,EAAQjzD,EAAO,EAAG,GAAG,GAC/B,GAAIzK,MAAMC,QAAQuL,GAAM,OAAOA,EAE/B,MAAM,IAAI1K,MAAM0K,EAClB,EAoBE0yD,gBAlBF,SAA0B/8C,GACxB,IAAI3V,EAAMkyD,EAAQv8C,EAAO,EAAG,GAAG,GAC/B,GAAInhB,MAAMC,QAAQuL,GAAM,OAAOA,CACjC,EAgBE2yD,UAdF,SAAoBh9C,GAClB,IAAI3V,EAAMkyD,EAAQv8C,EAAO,EAAG,GAAG,GAC/B,GAAInhB,MAAMC,QAAQuL,GAAM,OAAOA,EAE/B,MAAM,IAAI1K,MAAM0K,EAClB,wBCxKA,IACW4yD,IAoBT,SAASC,GACXA,EAAM5mD,QAAU,QAqBhB,IAAI6mD,EAnBJ,WAGC,IAFA,IAAI3rD,EAAI,EAAG4rD,EAAQ,IAAIv+D,MAAM,KAErBqL,EAAG,EAAQ,KAALA,IAAYA,EASzBsH,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAItH,IACW,UAAasH,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,EAC/C4rD,EAAMlzD,GAAKsH,EAGZ,MAA6B,qBAAf0vB,WAA6B,IAAIA,WAAWk8B,GAASA,CACpE,CAESC,GAaLC,EAZJ,SAA4BC,GAC3B,IAAI/rD,EAAI,EAAG1R,EAAI,EAAGoK,EAAI,EAAGkzD,EAA8B,qBAAfl8B,WAA6B,IAAIA,WAAW,MAAQ,IAAIriC,MAAM,MAEtG,IAAIqL,EAAI,EAAQ,KAALA,IAAYA,EAAGkzD,EAAMlzD,GAAKqzD,EAAErzD,GACvC,IAAIA,EAAI,EAAQ,KAALA,IAAYA,EAEtB,IADApK,EAAIy9D,EAAErzD,GACFsH,EAAI,IAAMtH,EAAGsH,EAAI,KAAMA,GAAK,IAAK1R,EAAIs9D,EAAM5rD,GAAM1R,IAAM,EAAKy9D,EAAM,IAAJz9D,GAEnE,IAAIuiB,EAAM,GACV,IAAInY,EAAI,EAAQ,IAALA,IAAWA,EAAGmY,EAAInY,EAAI,GAA2B,qBAAfg3B,WAA6Bk8B,EAAMl/B,SAAa,IAAJh0B,EAAa,IAAJA,EAAU,KAAOkzD,EAAMx9D,MAAU,IAAJsK,EAAa,IAAJA,EAAU,KAClJ,OAAOmY,CACR,CACSm7C,CAAmBL,GACxBlrD,EAAKqrD,EAAG,GAAKprD,EAAKorD,EAAG,GAAKnrD,EAAKmrD,EAAG,GAAKlrD,EAAKkrD,EAAG,GAAKjrD,EAAKirD,EAAG,GAC5DhrD,EAAKgrD,EAAG,GAAK/qD,EAAK+qD,EAAG,GAAK9qD,EAAK8qD,EAAG,GAAKG,EAAKH,EAAG,GAAKI,EAAKJ,EAAG,GAC5DK,EAAKL,EAAG,IAAKM,EAAKN,EAAG,IAAKO,EAAKP,EAAG,IAAKQ,EAAKR,EAAG,IAAKS,EAAKT,EAAG,IA6ChEJ,EAAME,MAAQD,EAEdD,EAAMc,KA9CN,SAAoBA,EAAMz4B,GAEzB,IADA,IAAI1U,GAAY,EAAR0U,EACAvmC,EAAI,EAAGijC,EAAI+7B,EAAK/+D,OAAQD,EAAIijC,GAAIpR,EAAKA,IAAI,EAAKssC,EAA4B,KAAxBtsC,EAAEmtC,EAAKtxD,WAAW1N,OAC5E,OAAQ6xB,CACT,EA4CAqsC,EAAM/9D,IA1CN,SAAmByxB,EAAG2U,GAErB,IADA,IAAI1U,GAAY,EAAR0U,EAAWtD,EAAIrR,EAAE3xB,OAAS,GAAID,EAAI,EACpCA,EAAIijC,GAAIpR,EACbktC,EAAGntC,EAAE5xB,KAAY,IAAJ6xB,GACbitC,EAAGltC,EAAE5xB,KAAS6xB,GAAK,EAAK,KACxBgtC,EAAGjtC,EAAE5xB,KAAS6xB,GAAK,GAAM,KACzB+sC,EAAGhtC,EAAE5xB,KAAQ6xB,IAAM,IACnB8sC,EAAG/sC,EAAE5xB,MAAQ0+D,EAAG9sC,EAAE5xB,MAAQy+D,EAAG7sC,EAAE5xB,MAAQwT,EAAGoe,EAAE5xB,MAC5CuT,EAAGqe,EAAE5xB,MAAQsT,EAAGse,EAAE5xB,MAAQqT,EAAGue,EAAE5xB,MAAQoT,EAAGwe,EAAE5xB,MAC5CmT,EAAGye,EAAE5xB,MAAQkT,EAAG0e,EAAE5xB,MAAQiT,EAAG2e,EAAE5xB,MAAQm+D,EAAGvsC,EAAE5xB,MAE7C,IADAijC,GAAK,GACCjjC,EAAIijC,GAAGpR,EAAKA,IAAI,EAAKssC,EAAc,KAAVtsC,EAAED,EAAE5xB,OACnC,OAAQ6xB,CACT,EA+BAqsC,EAAMn6D,IA7BN,SAAmBA,EAAKwiC,GAEvB,IADA,IAAI1U,GAAY,EAAR0U,EACAvmC,EAAI,EAAGijC,EAAIl/B,EAAI9D,OAAQuS,EAAI,EAAGtQ,EAAI,EAAGlC,EAAIijC,IAChDzwB,EAAIzO,EAAI2J,WAAW1N,MACZ,IACN6xB,EAAKA,IAAI,EAAKssC,EAAS,KAALtsC,EAAErf,IACXA,EAAI,KAEbqf,GADAA,EAAKA,IAAI,EAAKssC,EAA2B,KAAvBtsC,GAAK,IAAMrf,GAAG,EAAG,SAC1B,EAAK2rD,EAAsB,KAAlBtsC,GAAK,IAAO,GAAFrf,KACnBA,GAAK,OAAUA,EAAI,OAC5BA,EAAa,IAAN,KAAFA,GAAYtQ,EAAwB,KAApB6B,EAAI2J,WAAW1N,KAIpC6xB,GADAA,GADAA,GADAA,EAAKA,IAAI,EAAKssC,EAA0B,KAAtBtsC,GAAK,IAAMrf,GAAG,EAAG,QAC1B,EAAK2rD,EAA2B,KAAvBtsC,GAAK,IAAMrf,GAAG,EAAG,SAC1B,EAAK2rD,EAAsC,KAAlCtsC,GAAK,IAAM3vB,GAAG,EAAG,IAAQ,EAAFsQ,IAAM,QACtC,EAAK2rD,EAAsB,KAAlBtsC,GAAK,IAAO,GAAF3vB,MAI5B2vB,GADAA,GADAA,EAAKA,IAAI,EAAKssC,EAA4B,KAAxBtsC,GAAK,IAAMrf,GAAG,GAAI,SAC3B,EAAK2rD,EAA2B,KAAvBtsC,GAAK,IAAMrf,GAAG,EAAG,SAC1B,EAAK2rD,EAAsB,KAAlBtsC,GAAK,IAAO,GAAFrf,KAG9B,OAAQqf,CACT,CAQA,EA3GiC,qBAAtBotC,kBAERhB,EAAQ77D,GAWT67D,EAAgB,CAAC,sCCnBnBnyD,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ88D,UAAY98D,EAAQ+8D,UAAY/8D,EAAQ+D,UAAY/D,EAAQg9D,eAAY,EAChF,IAAMC,EAASh+C,EAAQ,OACjBi+C,EAAUj+C,EAAQ,OACxBjf,EAAQg9D,WAAY,EAAIE,EAAQC,UAAUF,EAAOG,YACjDp9D,EAAQ+D,UAAa,WACjB,IAAM6F,GAAI,EAAIszD,EAAQC,UAAUF,EAAOI,YAEvC,OADAzzD,EAAE6jD,OAASwP,EAAOI,WAAW5P,OACtB7jD,CACX,CAJqB,GAKrB5J,EAAQ+8D,WAAY,EAAIG,EAAQC,UAAUF,EAAOK,YACjDt9D,EAAQ88D,WAAY,EAAII,EAAQC,UAAUF,EAAOM,8CCTjD,SAASh/C,EAAOzV,GACZ,IAAKrI,OAAOsH,cAAce,IAAMA,EAAI,EAChC,MAAM,IAAIvK,MAAM,2BAAD,OAA4BuK,GACnD,CAEA,SAAS00D,EAAKt8C,GACV,GAAiB,mBAANA,EACP,MAAM,IAAI3iB,MAAM,yBAAD,OAA0B2iB,GACjD,CAEA,SAAShZ,EAAMgZ,GACX,KAAMA,aAAaniB,YACf,MAAM,IAAI6B,UAAU,uBAAuB,2BAF9B68D,EAAO,iCAAPA,EAAO,kBAGxB,GAAIA,EAAQ5/D,OAAS,IAAM4/D,EAAQvjD,SAASgH,EAAErjB,QAC1C,MAAM,IAAI+C,UAAU,iCAAD,OAAkC68D,EAAO,2BAAmBv8C,EAAErjB,QACzF,CAEA,SAASiG,EAAKA,GACV,GAAoB,oBAATA,GAA8C,oBAAhBA,EAAK2pD,OAC1C,MAAM,IAAIlvD,MAAM,mDACpBggB,EAAOza,EAAK45D,WACZn/C,EAAOza,EAAK65D,SAChB,CAEA,SAASC,EAAOC,GAAgC,IAAtBC,IAAgB,UAAH,+CACnC,GAAID,EAASE,UACT,MAAM,IAAIx/D,MAAM,oCACpB,GAAIu/D,GAAiBD,EAASG,SAC1B,MAAM,IAAIz/D,MAAM,wCACxB,CAEA,SAASZ,EAAOsjB,EAAK48C,GACjB31D,EAAM+Y,GACN,IAAM1B,EAAMs+C,EAASH,UACrB,GAAIz8C,EAAIpjB,OAAS0hB,EACb,MAAM,IAAIhhB,MAAM,yDAAD,OAA0DghB,GAEjF,CAvCA7V,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQrC,OAASqC,EAAQ49D,OAAS59D,EAAQ8D,KAAO9D,EAAQkI,MAAQlI,EAAQw9D,KAAOx9D,EAAQue,YAAS,EAKjGve,EAAQue,OAASA,EAKjBve,EAAQw9D,KAAOA,EAOfx9D,EAAQkI,MAAQA,EAOhBlI,EAAQ8D,KAAOA,EAOf9D,EAAQ49D,OAASA,EAQjB59D,EAAQrC,OAASA,EACjB,IAAMmgB,EAAS,CACXS,OAAAA,EACAi/C,KAAAA,EACAt1D,MAAAA,EACApE,KAAAA,EACA85D,OAAAA,EACAjgE,OAAAA,GAEJqC,EAAAA,QAAkB8d,sCClDL,iGACbpU,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQi+D,UAAO,EACf,IAAMC,EAAej/C,EAAQ,OACvBk/C,EAAal/C,EAAQ,OAc3B,IACMg/C,EAAI,8BACN,WAAYN,EAAUD,EAAWU,EAAWC,GAAM,MAWM,OAXN,WAC9C,gBACKV,SAAWA,EAChB,EAAKD,UAAYA,EACjB,EAAKU,UAAYA,EACjB,EAAKC,KAAOA,EACZ,EAAKL,UAAW,EAChB,EAAKngE,OAAS,EACd,EAAKmiC,IAAM,EACX,EAAK+9B,WAAY,EACjB,EAAK30D,OAAS,IAAIrK,WAAW4+D,GAC7B,EAAKW,MAAO,EAAIH,EAAWI,YAAY,EAAKn1D,QAAQ,CACxD,CAyEC,OAzEA,yBACD,SAAOzJ,GACHu+D,EAAaM,QAAQZ,OAAOv7D,MAI5B,IAHA,IAAQi8D,EAA2Bj8D,KAA3Bi8D,KAAMl1D,EAAqB/G,KAArB+G,OAAQu0D,EAAat7D,KAAbs7D,SAEhB9+D,GADNc,GAAO,EAAIw+D,EAAWhgE,SAASwB,IACd9B,OACRmiC,EAAM,EAAGA,EAAMnhC,GAAM,CAC1B,IAAM4/D,EAAOn/C,KAAKC,IAAIo+C,EAAWt7D,KAAK29B,IAAKnhC,EAAMmhC,GAEjD,GAAIy+B,IAASd,EAMbv0D,EAAO/H,IAAI1B,EAAKm9B,SAASkD,EAAKA,EAAMy+B,GAAOp8D,KAAK29B,KAChD39B,KAAK29B,KAAOy+B,EACZz+B,GAAOy+B,EACHp8D,KAAK29B,MAAQ29B,IACbt7D,KAAKq8D,QAAQJ,EAAM,GACnBj8D,KAAK29B,IAAM,QATX,IADA,IAAM2+B,GAAW,EAAIR,EAAWI,YAAY5+D,GACrCg+D,GAAY9+D,EAAMmhC,EAAKA,GAAO29B,EACjCt7D,KAAKq8D,QAAQC,EAAU3+B,EAUnC,CAGA,OAFA39B,KAAKxE,QAAU8B,EAAK9B,OACpBwE,KAAKu8D,aACEv8D,IACX,GAAC,wBACD,SAAW4e,GACPi9C,EAAaM,QAAQZ,OAAOv7D,MAC5B67D,EAAaM,QAAQ7gE,OAAOsjB,EAAK5e,MACjCA,KAAK27D,UAAW,EAIhB,IAAQ50D,EAAiC/G,KAAjC+G,OAAQk1D,EAAyBj8D,KAAzBi8D,KAAMX,EAAmBt7D,KAAnBs7D,SAAUU,EAASh8D,KAATg8D,KAC1Br+B,EAAQ39B,KAAR29B,IAEN52B,EAAO42B,KAAS,IAChB39B,KAAK+G,OAAO0zB,SAASkD,GAAK53B,KAAK,GAE3B/F,KAAK+7D,UAAYT,EAAW39B,IAC5B39B,KAAKq8D,QAAQJ,EAAM,GACnBt+B,EAAM,GAGV,IAAK,IAAIpiC,EAAIoiC,EAAKpiC,EAAI+/D,EAAU//D,IAC5BwL,EAAOxL,GAAK,GAxExB,SAAsB0gE,EAAMO,EAAY/0D,EAAOu0D,GAC3C,GAAiC,oBAAtBC,EAAKQ,aACZ,OAAOR,EAAKQ,aAAaD,EAAY/0D,EAAOu0D,GAChD,IAAMU,EAAOj9D,OAAO,IACdk9D,EAAWl9D,OAAO,YAClB+9B,EAAKp/B,OAAQqJ,GAASi1D,EAAQC,GAC9Bj/B,EAAKt/B,OAAOqJ,EAAQk1D,GACpBxxC,EAAI6wC,EAAO,EAAI,EACftzD,EAAIszD,EAAO,EAAI,EACrBC,EAAKW,UAAUJ,EAAarxC,EAAGqS,EAAIw+B,GACnCC,EAAKW,UAAUJ,EAAa9zD,EAAGg1B,EAAIs+B,EACvC,CAiEQS,CAAaR,EAAMX,EAAW,EAAG77D,OAAqB,EAAdO,KAAKxE,QAAawgE,GAC1Dh8D,KAAKq8D,QAAQJ,EAAM,GACnB,IAAMY,GAAQ,EAAIf,EAAWI,YAAYt9C,GACzC5e,KAAK8H,MAAMkP,SAAQ,SAAC3a,EAAGd,GAAC,OAAKshE,EAAMD,UAAU,EAAIrhE,EAAGc,EAAG2/D,EAAK,GAChE,GAAC,oBACD,WACI,IAAQj1D,EAAsB/G,KAAtB+G,OAAQs0D,EAAcr7D,KAAdq7D,UAChBr7D,KAAK88D,WAAW/1D,GAChB,IAAMH,EAAMG,EAAO5K,MAAM,EAAGk/D,GAE5B,OADAr7D,KAAK+8D,UACEn2D,CACX,GAAC,wBACD,SAAW29C,GAAI,MACXA,IAAOA,EAAK,IAAIvkD,KAAKgc,cACrB,EAAAuoC,GAAGvlD,IAAG,UAAIgB,KAAK8H,QACf,IAAQwzD,EAAuDt7D,KAAvDs7D,SAAUv0D,EAA6C/G,KAA7C+G,OAAQvL,EAAqCwE,KAArCxE,OAAQmgE,EAA6B37D,KAA7B27D,SAAUD,EAAmB17D,KAAnB07D,UAAW/9B,EAAQ39B,KAAR29B,IAOvD,OANA4mB,EAAG/oD,OAASA,EACZ+oD,EAAG5mB,IAAMA,EACT4mB,EAAGoX,SAAWA,EACdpX,EAAGmX,UAAYA,EACXlgE,EAAS8/D,GACT/W,EAAGx9C,OAAO/H,IAAI+H,GACXw9C,CACX,KAAC,EAtFK,CAASuX,EAAWkB,MAwF9Br/D,EAAQi+D,KAAOA,oCC1Gfv0D,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ2H,IAAM3H,EAAQs/D,MAAQt/D,EAAQg0B,MAAQh0B,EAAQu/D,aAAU,EAChE,IAAMC,EAAa19D,OAAO,WAAK,IAAK,GAC9Bi9D,EAAOj9D,OAAO,IAEpB,SAASy9D,EAAQz2D,GAAe,IAAZ22D,EAAK,UAAH,8CAClB,OAAIA,EACO,CAAEjyC,EAAG/sB,OAAOqI,EAAI02D,GAAaz0D,EAAGtK,OAAQqI,GAAKi2D,EAAQS,IACzD,CAAEhyC,EAAsC,EAAnC/sB,OAAQqI,GAAKi2D,EAAQS,GAAiBz0D,EAA4B,EAAzBtK,OAAOqI,EAAI02D,GACpE,CAEA,SAASxrC,EAAM0rC,GAGX,IAH4B,IAAZD,EAAK,UAAH,8CACdE,EAAK,IAAIC,YAAYF,EAAI7hE,QACzBgiE,EAAK,IAAID,YAAYF,EAAI7hE,QACpBD,EAAI,EAAGA,EAAI8hE,EAAI7hE,OAAQD,IAAK,CACjC,MAAiB2hE,EAAQG,EAAI9hE,GAAI6hE,GAAzBjyC,EAAC,EAADA,EAAGziB,EAAC,EAADA,EAA0B,EACpB,CAACyiB,EAAGziB,GAApB40D,EAAG/hE,GAAE,KAAEiiE,EAAGjiE,GAAE,IACjB,CACA,MAAO,CAAC+hE,EAAIE,EAChB,CATA7/D,EAAQu/D,QAAUA,EAUlBv/D,EAAQg0B,MAAQA,EAEhBh0B,EAAQs/D,MADM,SAAC9xC,EAAGziB,GAAC,OAAMjJ,OAAO0rB,IAAM,IAAMuxC,EAAQj9D,OAAOiJ,IAAM,EAAE,EAuBnE,SAASpD,EAAIg4D,EAAIE,EAAIC,EAAIC,GACrB,IAAMh1D,GAAK80D,IAAO,IAAME,IAAO,GAC/B,MAAO,CAAEvyC,EAAImyC,EAAKG,GAAO/0D,EAAI,KAAH,IAAG,EAAK,IAAM,GAAM,EAAGA,EAAO,EAAJA,EACxD,CACA/K,EAAQ2H,IAAMA,EAEd,IAOMq4D,EAAM,CACRT,QAAAA,EAASvrC,MAAAA,EAAOsrC,MAAOt/D,EAAQs/D,MAC/BW,MAnCU,SAACzyC,EAAGziB,EAAGgC,GAAC,OAAKygB,IAAMzgB,CAAC,EAmCvBmzD,MAlCG,SAAC1yC,EAAGziB,EAAGgC,GAAC,OAAMygB,GAAM,GAAKzgB,EAAOhC,IAAMgC,CAAE,EAmClDozD,OAjCW,SAAC3yC,EAAGziB,EAAGgC,GAAC,OAAMygB,IAAMzgB,EAAMhC,GAAM,GAAKgC,CAAG,EAiC3CqzD,OAhCG,SAAC5yC,EAAGziB,EAAGgC,GAAC,OAAMygB,GAAM,GAAKzgB,EAAOhC,IAAMgC,CAAE,EAgCnCszD,OA9BL,SAAC7yC,EAAGziB,EAAGgC,GAAC,OAAMygB,GAAM,GAAKzgB,EAAOhC,IAAOgC,EAAI,EAAI,EA8BlCuzD,OA7Bb,SAAC9yC,EAAGziB,EAAGgC,GAAC,OAAMygB,IAAOzgB,EAAI,GAAQhC,GAAM,GAAKgC,CAAG,EA8B1DwzD,QA5BY,SAAC/yC,EAAGziB,GAAC,OAAKA,CAAC,EA4Bdy1D,QA3BG,SAAChzC,EAAGziB,GAAC,OAAKyiB,CAAC,EA4BvBizC,OA1BW,SAACjzC,EAAGziB,EAAGgC,GAAC,OAAMygB,GAAKzgB,EAAMhC,IAAO,GAAKgC,CAAG,EA0B3C2zD,OAzBG,SAAClzC,EAAGziB,EAAGgC,GAAC,OAAMhC,GAAKgC,EAAMygB,IAAO,GAAKzgB,CAAG,EAyBnC4zD,OAvBL,SAACnzC,EAAGziB,EAAGgC,GAAC,OAAMhC,GAAMgC,EAAI,GAAQygB,IAAO,GAAKzgB,CAAG,EAuBlC6zD,OAtBb,SAACpzC,EAAGziB,EAAGgC,GAAC,OAAMygB,GAAMzgB,EAAI,GAAQhC,IAAO,GAAKgC,CAAG,EAuB1DpF,IAAAA,EAAKk5D,MAbK,SAAChB,EAAIE,EAAIe,GAAE,OAAMjB,IAAO,IAAME,IAAO,IAAMe,IAAO,EAAE,EAalDC,MAZF,SAACphB,EAAKggB,EAAIG,EAAIkB,GAAE,OAAMrB,EAAKG,EAAKkB,GAAOrhB,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAAC,EAYtDshB,MAXT,SAACpB,EAAIE,EAAIe,EAAII,GAAE,OAAMrB,IAAO,IAAME,IAAO,IAAMe,IAAO,IAAMI,IAAO,EAAE,EAWrDC,MAVhB,SAACxhB,EAAKggB,EAAIG,EAAIkB,EAAII,GAAE,OAAMzB,EAAKG,EAAKkB,EAAKI,GAAOzhB,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAAC,EAUjD0hB,MARvB,SAAC1hB,EAAKggB,EAAIG,EAAIkB,EAAII,EAAIE,GAAE,OAAM3B,EAAKG,EAAKkB,EAAKI,EAAKE,GAAO3hB,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAAC,EAQnD4hB,MAT9B,SAAC1B,EAAIE,EAAIe,EAAII,EAAIM,GAAE,OAAM3B,IAAO,IAAME,IAAO,IAAMe,IAAO,IAAMI,IAAO,IAAMM,IAAO,EAAE,GAWpGxhE,EAAAA,QAAkBggE,kCCjElBt2D,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQwkC,YAAS,EACjBxkC,EAAQwkC,OAAS,CACbgO,UAAM5wC,EACN6wC,IAAqB,kBAAT/rC,MAAqB,WAAYA,KAAOA,KAAK89B,YAAS5iC,uCCLzD,gFACb8H,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQyuC,UAAO,EACf,IAAMyvB,EAAej/C,EAAQ,OACvBk/C,EAAal/C,EAAQ,OAErBwiD,EAAI,8BACN,WAAY39D,EAAM49D,GAAM,iBACpB,gBACK1D,UAAW,EAChB,EAAKD,WAAY,EACjBG,EAAaM,QAAQ16D,KAAKA,GAC1B,IAAM0H,GAAM,EAAI2yD,EAAWhgE,SAASujE,GAEpC,GADA,EAAKC,MAAQ79D,EAAK2pD,WACZ,EAAKkU,iBAAiBxD,EAAWkB,MACnC,MAAM,IAAIz+D,UAAU,uDACxB,IAAM+8D,EAAY,EAAKA,SAAW,EAAKgE,MAAMhE,SAC7C,EAAKD,UAAY,EAAKiE,MAAMjE,UAC5B,IAAMt8D,EAAM,IAAIrC,WAAW4+D,GAE3Bv8D,EAAIC,IAAImK,EAAI3N,OAAS,EAAK8jE,MAAMhE,SAAW75D,EAAK2pD,SAAS7zB,OAAOpuB,GAAK8nC,SAAW9nC,GAChF,IAAK,IAAI5N,EAAI,EAAGA,EAAIwD,EAAIvD,OAAQD,IAC5BwD,EAAIxD,IAAM,GACd,EAAK+jE,MAAM/nC,OAAOx4B,GAElB,EAAKwgE,MAAQ99D,EAAK2pD,SAElB,IAAK,IAAI7vD,EAAI,EAAGA,EAAIwD,EAAIvD,OAAQD,IAC5BwD,EAAIxD,IAAM,IAEF,OADZ,EAAKgkE,MAAMhoC,OAAOx4B,GAClBA,EAAIgH,KAAK,GAAG,CAChB,CAqCC,OArCA,yBACD,SAAOrK,GAGH,OAFAmgE,EAAaM,QAAQZ,OAAOv7D,MAC5BA,KAAKs/D,MAAM/nC,OAAO77B,GACXsE,IACX,GAAC,wBACD,SAAW4e,GACPi9C,EAAaM,QAAQZ,OAAOv7D,MAC5B67D,EAAaM,QAAQt2D,MAAM+Y,EAAK5e,KAAKq7D,WACrCr7D,KAAK27D,UAAW,EAChB37D,KAAKs/D,MAAMxC,WAAWl+C,GACtB5e,KAAKu/D,MAAMhoC,OAAO3Y,GAClB5e,KAAKu/D,MAAMzC,WAAWl+C,GACtB5e,KAAK+8D,SACT,GAAC,oBACD,WACI,IAAMn+C,EAAM,IAAIliB,WAAWsD,KAAKu/D,MAAMlE,WAEtC,OADAr7D,KAAK88D,WAAWl+C,GACTA,CACX,GAAC,wBACD,SAAW2lC,GAEPA,IAAOA,EAAKl9C,OAAO+jD,OAAO/jD,OAAOgkD,eAAerrD,MAAO,CAAC,IACxD,IAAQu/D,EAA2Dv/D,KAA3Du/D,MAAOD,EAAoDt/D,KAApDs/D,MAAO3D,EAA6C37D,KAA7C27D,SAAUD,EAAmC17D,KAAnC07D,UAAWJ,EAAwBt7D,KAAxBs7D,SAAUD,EAAcr7D,KAAdq7D,UAQrD,OANA9W,EAAGoX,SAAWA,EACdpX,EAAGmX,UAAYA,EACfnX,EAAG+W,SAAWA,EACd/W,EAAG8W,UAAYA,EACf9W,EAAGgb,MAAQA,EAAMC,WAAWjb,EAAGgb,OAC/Bhb,EAAG+a,MAAQA,EAAME,WAAWjb,EAAG+a,OACxB/a,CACX,GAAC,qBACD,WACIvkD,KAAK07D,WAAY,EACjB17D,KAAKu/D,MAAMxC,UACX/8D,KAAKs/D,MAAMvC,SACf,KAAC,EA9DK,CAASjB,EAAWkB,MAuE9Br/D,EAAQyuC,KADK,SAAC3qC,EAAM0H,EAAKiC,GAAO,OAAK,IAAIg0D,EAAK39D,EAAM0H,GAAKouB,OAAOnsB,GAAS6lC,QAAQ,EAEjFtzC,EAAQyuC,KAAKgf,OAAS,SAAC3pD,EAAM0H,GAAG,OAAK,IAAIi2D,EAAK39D,EAAM0H,EAAI,sCC9E3C,gFACb9B,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQmzC,YAAS,EACjB,IAAM2uB,EAAa7iD,EAAQ,OACrBk/C,EAAal/C,EAAQ,OAIrB8iD,EAAM,SAAC9gE,EAAGigB,EAAG9Q,GAAC,OAAMnP,EAAIigB,EAAMjgB,EAAImP,EAAM8Q,EAAI9Q,CAAE,EAI9C4xD,EAAW,IAAIpC,YAAY,CAC7B,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAIlFqC,EAAK,IAAIrC,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAIlFsC,EAAW,IAAItC,YAAY,IAC3BuC,EAAM,8BACR,aAAc,MAWS,OAXT,WACV,cAAM,GAAI,GAAI,GAAG,IAGZ5yC,EAAY,EAAR0yC,EAAG,GACZ,EAAKzyC,EAAY,EAARyyC,EAAG,GACZ,EAAKxyC,EAAY,EAARwyC,EAAG,GACZ,EAAKvyC,EAAY,EAARuyC,EAAG,GACZ,EAAKx7B,EAAY,EAARw7B,EAAG,GACZ,EAAKv7B,EAAY,EAARu7B,EAAG,GACZ,EAAKG,EAAY,EAARH,EAAG,GACZ,EAAKr7B,EAAY,EAARq7B,EAAG,GAAO,CACvB,CA4DC,OA5DA,sBACD,WAEI,MAAO,CAD4B5/D,KAA3BktB,EAA2BltB,KAAxBmtB,EAAwBntB,KAArBotB,EAAqBptB,KAAlBqtB,EAAkBrtB,KAAfokC,EAAepkC,KAAZqkC,EAAYrkC,KAAT+/D,EAAS//D,KAANukC,EAEjC,GACA,iBACA,SAAIrX,EAAGC,EAAGC,EAAGC,EAAG+W,EAAGC,EAAG07B,EAAGx7B,GACrBvkC,KAAKktB,EAAQ,EAAJA,EACTltB,KAAKmtB,EAAQ,EAAJA,EACTntB,KAAKotB,EAAQ,EAAJA,EACTptB,KAAKqtB,EAAQ,EAAJA,EACTrtB,KAAKokC,EAAQ,EAAJA,EACTpkC,KAAKqkC,EAAQ,EAAJA,EACTrkC,KAAK+/D,EAAQ,EAAJA,EACT//D,KAAKukC,EAAQ,EAAJA,CACb,GAAC,qBACD,SAAQ03B,EAAMx/D,GAEV,IAAK,IAAIlB,EAAI,EAAGA,EAAI,GAAIA,IAAKkB,GAAU,EACnCojE,EAAStkE,GAAK0gE,EAAK+D,UAAUvjE,GAAQ,GACzC,IAAK,IAAIlB,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,IAAM0kE,EAAMJ,EAAStkE,EAAI,IACnB2kE,EAAKL,EAAStkE,EAAI,GAClB4kE,GAAK,EAAIrE,EAAWsE,MAAMH,EAAK,IAAK,EAAInE,EAAWsE,MAAMH,EAAK,IAAOA,IAAQ,EAC7EI,GAAK,EAAIvE,EAAWsE,MAAMF,EAAI,KAAM,EAAIpE,EAAWsE,MAAMF,EAAI,IAAOA,IAAO,GACjFL,EAAStkE,GAAM8kE,EAAKR,EAAStkE,EAAI,GAAK4kE,EAAKN,EAAStkE,EAAI,IAAO,CACnE,CAEA,IAjEKqD,EAiECsuB,EAA2BltB,KAA3BktB,EAAGC,EAAwBntB,KAAxBmtB,EAAGC,EAAqBptB,KAArBotB,EAAGC,EAAkBrtB,KAAlBqtB,EAAG+W,EAAepkC,KAAfokC,EAAGC,EAAYrkC,KAAZqkC,EAAG07B,EAAS//D,KAAT+/D,EAAGx7B,EAAMvkC,KAANukC,EAC3B,IAAShpC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IACMiT,EAAM+1B,IADG,EAAIu3B,EAAWsE,MAAMh8B,EAAG,IAAK,EAAI03B,EAAWsE,MAAMh8B,EAAG,KAAM,EAAI03B,EAAWsE,MAAMh8B,EAAG,OAnEjGxlC,EAoE4BwlC,GAAGC,GApEPzlC,EAoEUmhE,GAAKJ,EAASpkE,GAAKskE,EAAStkE,GAAM,EAE/DkT,IADS,EAAIqtD,EAAWsE,MAAMlzC,EAAG,IAAK,EAAI4uC,EAAWsE,MAAMlzC,EAAG,KAAM,EAAI4uC,EAAWsE,MAAMlzC,EAAG,KAC7EwyC,EAAIxyC,EAAGC,EAAGC,GAAM,EACrCmX,EAAIw7B,EACJA,EAAI17B,EACJA,EAAID,EACJA,EAAK/W,EAAI7e,EAAM,EACf6e,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAK1e,EAAKC,EAAM,CACpB,CAEAye,EAAKA,EAAIltB,KAAKktB,EAAK,EACnBC,EAAKA,EAAIntB,KAAKmtB,EAAK,EACnBC,EAAKA,EAAIptB,KAAKotB,EAAK,EACnBC,EAAKA,EAAIrtB,KAAKqtB,EAAK,EACnB+W,EAAKA,EAAIpkC,KAAKokC,EAAK,EACnBC,EAAKA,EAAIrkC,KAAKqkC,EAAK,EACnB07B,EAAKA,EAAI//D,KAAK+/D,EAAK,EACnBx7B,EAAKA,EAAIvkC,KAAKukC,EAAK,EACnBvkC,KAAKhB,IAAIkuB,EAAGC,EAAGC,EAAGC,EAAG+W,EAAGC,EAAG07B,EAAGx7B,EAClC,GAAC,wBACD,WACIs7B,EAAS95D,KAAK,EAClB,GAAC,qBACD,WACI/F,KAAKhB,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BgB,KAAK+G,OAAOhB,KAAK,EACrB,KAAC,EAzEO,CAAS05D,EAAW7D,MA+EhCj+D,EAAQmzC,QAAS,EAAIgrB,EAAWwE,kBAAiB,kBAAM,IAAIR,CAAQ,wCC7GtD,mGACbz4D,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ4iE,SAAW5iE,EAAQ6iE,SAAW7iE,EAAQu9D,WAAav9D,EAAQs9D,WAAat9D,EAAQq9D,WAAar9D,EAAQo9D,WAAap9D,EAAQ8iE,SAAW9iE,EAAQ+iE,SAAW/iE,EAAQgjE,SAAWhjE,EAAQijE,SAAWjjE,EAAQkjE,OAASljE,EAAQmjE,aAAU,EAYzO,IAXA,IAAMjF,EAAej/C,EAAQ,OACvBmkD,EAAYnkD,EAAQ,OACpBk/C,EAAal/C,EAAQ,OAEpBokD,EAAmC,GAA1BC,EAA8B,GAAnBC,EAAuB,GAC5C1hE,EAAMC,OAAO,GACbojC,EAAMpjC,OAAO,GACbqjC,EAAMrjC,OAAO,GACb0hE,EAAM1hE,OAAO,GACb2hE,EAAQ3hE,OAAO,KACf4hE,EAAS5hE,OAAO,KACbmqB,EAAQ,EAAGsgB,EAAIrH,EAAKpb,EAAI,EAAGC,EAAI,EAAGkC,EAAQ,GAAIA,IAAS,CAC5D,MACS,CAAClC,GAAI,EAAID,EAAI,EAAIC,GAAK,GAA9BD,EAAC,KAAEC,EAAC,KACLs5C,EAAQvlE,KAAK,GAAK,EAAIisB,EAAID,IAE1Bw5C,EAAUxlE,MAAQmuB,EAAQ,IAAMA,EAAQ,GAAM,EAAK,IAGnD,IADA,IAAI5Z,EAAIxQ,EACCf,EAAI,EAAGA,EAAI,EAAGA,KACnByrC,GAAMA,GAAKrH,GAASqH,GAAKi3B,GAAOE,GAAWD,GACnCt+B,IACJ9yB,GAAK6yB,IAASA,GAAOpjC,OAAOhB,IAAMokC,GAE1Cq+B,EAAWzlE,KAAKuU,EACpB,CACA,IAA4E,IAAzC+wD,EAAU5E,QAAQxqC,MAAMuvC,GAAY,GAAK,GAArEI,EAAW,KAAEC,EAAW,KAEzBC,EAAQ,SAACr2C,EAAGziB,EAAGgC,GAAC,OAAKA,EAAI,GAAKq2D,EAAU5E,QAAQmC,OAAOnzC,EAAGziB,EAAGgC,GAAKq2D,EAAU5E,QAAQiC,OAAOjzC,EAAGziB,EAAGgC,EAAE,EACnG+2D,EAAQ,SAACt2C,EAAGziB,EAAGgC,GAAC,OAAKA,EAAI,GAAKq2D,EAAU5E,QAAQoC,OAAOpzC,EAAGziB,EAAGgC,GAAKq2D,EAAU5E,QAAQkC,OAAOlzC,EAAGziB,EAAGgC,EAAE,EAEzG,SAASo2D,EAAQp2D,GAGb,IAH6B,IAAb8E,EAAS,UAAH,6CAAG,GACnB2d,EAAI,IAAIowC,YAAY,IAEjB3zC,EAAQ,GAAKpa,EAAQoa,EAAQ,GAAIA,IAAS,CAE/C,IAAK,IAAInC,EAAI,EAAGA,EAAI,GAAIA,IACpB0F,EAAE1F,GAAK/c,EAAE+c,GAAK/c,EAAE+c,EAAI,IAAM/c,EAAE+c,EAAI,IAAM/c,EAAE+c,EAAI,IAAM/c,EAAE+c,EAAI,IAC5D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAOzB,IANA,IAAMi6C,GAAQj6C,EAAI,GAAK,GACjBk6C,GAAQl6C,EAAI,GAAK,GACjBm6C,EAAKz0C,EAAEw0C,GACPE,EAAK10C,EAAEw0C,EAAO,GACdG,EAAKN,EAAMI,EAAIC,EAAI,GAAK10C,EAAEu0C,GAC1BK,EAAKN,EAAMG,EAAIC,EAAI,GAAK10C,EAAEu0C,EAAO,GAC9Bh6C,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzBhd,EAAE+c,EAAIC,IAAMo6C,EACZp3D,EAAE+c,EAAIC,EAAI,IAAMq6C,EAMxB,IAFA,IAAIC,EAAOt3D,EAAE,GACTu3D,EAAOv3D,EAAE,GACJsF,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMjG,EAAQk3D,EAAUjxD,GAClB8xD,EAAKN,EAAMQ,EAAMC,EAAMl4D,GACvBg4D,EAAKN,EAAMO,EAAMC,EAAMl4D,GACvB4e,EAAKq4C,EAAQhxD,GACnBgyD,EAAOt3D,EAAEie,GACTs5C,EAAOv3D,EAAEie,EAAK,GACdje,EAAEie,GAAMm5C,EACRp3D,EAAEie,EAAK,GAAKo5C,CAChB,CAEA,IAAK,IAAIr6C,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACpB0F,EAAE1F,GAAK/c,EAAEgd,EAAID,GACjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpB/c,EAAEgd,EAAID,KAAO0F,GAAG1F,EAAI,GAAK,IAAM0F,GAAG1F,EAAI,GAAK,GACnD,CAEA/c,EAAE,IAAM42D,EAAY13C,GACpBlf,EAAE,IAAM62D,EAAY33C,EACxB,CACAuD,EAAEpnB,KAAK,EACX,CACApI,EAAQmjE,QAAUA,EAAQ,IACpBD,EAAM,8BAER,WAAYvF,EAAU4G,EAAQ7G,GAA2C,MAAhC8G,EAAY,UAAH,8CAAU3yD,EAAS,UAAH,6CAAG,GAcjE,GAdmE,WACnE,gBACK8rD,SAAWA,EAChB,EAAK4G,OAASA,EACd,EAAK7G,UAAYA,EACjB,EAAK8G,UAAYA,EACjB,EAAK3yD,OAASA,EACd,EAAKmuB,IAAM,EACX,EAAKykC,OAAS,EACd,EAAKzG,UAAW,EAChB,EAAKD,WAAY,EAEjBG,EAAaM,QAAQjgD,OAAOm/C,GAExB,GAAK,EAAKC,UAAY,EAAKA,UAAY,IACvC,MAAM,IAAIp/D,MAAM,4CAE2B,OAD/C,EAAKw7C,MAAQ,IAAIh7C,WAAW,KAC5B,EAAK2lE,SAAU,EAAIvG,EAAWwG,KAAK,EAAK5qB,OAAO,CACnD,CAuFC,OAvFA,yBACD,WACIopB,EAAQ9gE,KAAKqiE,QAASriE,KAAKwP,QAC3BxP,KAAKoiE,OAAS,EACdpiE,KAAK29B,IAAM,CACf,GAAC,oBACD,SAAOrgC,GACHu+D,EAAaM,QAAQZ,OAAOv7D,MAI5B,IAHA,IAAQs7D,EAAoBt7D,KAApBs7D,SAAU5jB,EAAU13C,KAAV03C,MAEZl7C,GADNc,GAAO,EAAIw+D,EAAWhgE,SAASwB,IACd9B,OACRmiC,EAAM,EAAGA,EAAMnhC,GAAM,CAE1B,IADA,IAAM4/D,EAAOn/C,KAAKC,IAAIo+C,EAAWt7D,KAAK29B,IAAKnhC,EAAMmhC,GACxCpiC,EAAI,EAAGA,EAAI6gE,EAAM7gE,IACtBm8C,EAAM13C,KAAK29B,QAAUrgC,EAAKqgC,KAC1B39B,KAAK29B,MAAQ29B,GACbt7D,KAAKuiE,QACb,CACA,OAAOviE,IACX,GAAC,oBACD,WACI,IAAIA,KAAK27D,SAAT,CAEA37D,KAAK27D,UAAW,EAChB,IAAQjkB,EAAiC13C,KAAjC03C,MAAOwqB,EAA0BliE,KAA1BkiE,OAAQvkC,EAAkB39B,KAAlB29B,IAAK29B,EAAat7D,KAAbs7D,SAE5B5jB,EAAM/Z,IAAQukC,EACU,KAAV,IAATA,IAAwBvkC,IAAQ29B,EAAW,GAC5Ct7D,KAAKuiE,SACT7qB,EAAM4jB,EAAW,IAAM,IACvBt7D,KAAKuiE,QARK,CASd,GAAC,uBACD,SAAU3jD,GACNi9C,EAAaM,QAAQZ,OAAOv7D,MAAM,GAClC67D,EAAaM,QAAQt2D,MAAM+Y,GAC3B5e,KAAKw3B,SAGL,IAFA,IAAMgrC,EAAYxiE,KAAK03C,MACf4jB,EAAat7D,KAAbs7D,SACC39B,EAAM,EAAGnhC,EAAMoiB,EAAIpjB,OAAQmiC,EAAMnhC,GAAM,CACxCwD,KAAKoiE,QAAU9G,GACft7D,KAAKuiE,SACT,IAAMnG,EAAOn/C,KAAKC,IAAIo+C,EAAWt7D,KAAKoiE,OAAQ5lE,EAAMmhC,GACpD/e,EAAI5f,IAAIwjE,EAAU/nC,SAASz6B,KAAKoiE,OAAQpiE,KAAKoiE,OAAShG,GAAOz+B,GAC7D39B,KAAKoiE,QAAUhG,EACfz+B,GAAOy+B,CACX,CACA,OAAOx9C,CACX,GAAC,qBACD,SAAQA,GAEJ,IAAK5e,KAAKmiE,UACN,MAAM,IAAIjmE,MAAM,yCACpB,OAAO8D,KAAKyiE,UAAU7jD,EAC1B,GAAC,iBACD,SAAI/Y,GAEA,OADAg2D,EAAaM,QAAQjgD,OAAOrW,GACrB7F,KAAK0iE,QAAQ,IAAIhmE,WAAWmJ,GACvC,GAAC,wBACD,SAAW+Y,GAEP,GADAi9C,EAAaM,QAAQ7gE,OAAOsjB,EAAK5e,MAC7BA,KAAK27D,SACL,MAAM,IAAIz/D,MAAM,+BAGpB,OAFA8D,KAAKyiE,UAAU7jD,GACf5e,KAAK+8D,UACEn+C,CACX,GAAC,oBACD,WACI,OAAO5e,KAAK88D,WAAW,IAAIpgE,WAAWsD,KAAKq7D,WAC/C,GAAC,qBACD,WACIr7D,KAAK07D,WAAY,EACjB17D,KAAK03C,MAAM3xC,KAAK,EACpB,GAAC,wBACD,SAAWw+C,GACP,IAAQ+W,EAAmDt7D,KAAnDs7D,SAAU4G,EAAyCliE,KAAzCkiE,OAAQ7G,EAAiCr7D,KAAjCq7D,UAAW7rD,EAAsBxP,KAAtBwP,OAAQ2yD,EAAcniE,KAAdmiE,UAY7C,OAXA5d,IAAOA,EAAK,IAAIsc,EAAOvF,EAAU4G,EAAQ7G,EAAW8G,EAAW3yD,IAC/D+0C,EAAG8d,QAAQrjE,IAAIgB,KAAKqiE,SACpB9d,EAAG5mB,IAAM39B,KAAK29B,IACd4mB,EAAG6d,OAASpiE,KAAKoiE,OACjB7d,EAAGoX,SAAW37D,KAAK27D,SACnBpX,EAAG/0C,OAASA,EAEZ+0C,EAAG2d,OAASA,EACZ3d,EAAG8W,UAAYA,EACf9W,EAAG4d,UAAYA,EACf5d,EAAGmX,UAAY17D,KAAK07D,UACbnX,CACX,KAAC,EA3GO,CAASuX,EAAWkB,MA6GhCr/D,EAAQkjE,OAASA,EACjB,IAAM8B,EAAM,SAACT,EAAQ5G,EAAUD,GAAS,OAAK,EAAIS,EAAWwE,kBAAiB,kBAAM,IAAIO,EAAOvF,EAAU4G,EAAQ7G,EAAU,GAAC,EAC3H19D,EAAQijE,SAAW+B,EAAI,EAAM,IAAK,IAKlChlE,EAAQgjE,SAAWgC,EAAI,EAAM,IAAK,IAClChlE,EAAQ+iE,SAAWiC,EAAI,EAAM,IAAK,IAClChlE,EAAQ8iE,SAAWkC,EAAI,EAAM,GAAI,IACjChlE,EAAQo9D,WAAa4H,EAAI,EAAM,IAAK,IAKpChlE,EAAQq9D,WAAa2H,EAAI,EAAM,IAAK,IACpChlE,EAAQs9D,WAAa0H,EAAI,EAAM,IAAK,IACpChlE,EAAQu9D,WAAayH,EAAI,EAAM,GAAI,IACnC,IAAMC,EAAW,SAACV,EAAQ5G,EAAUD,GAAS,OAAK,EAAIS,EAAW+G,0BAAyB,eAACv1B,EAAO,UAAH,6CAAG,CAAC,EAAC,OAAK,IAAIuzB,EAAOvF,EAAU4G,OAAuB3iE,IAAf+tC,EAAKw1B,MAAsBzH,EAAY/tB,EAAKw1B,OAAO,EAAK,GAAC,EAC/LnlE,EAAQ6iE,SAAWoC,EAAS,GAAM,IAAK,IACvCjlE,EAAQ4iE,SAAWqC,EAAS,GAAM,IAAK,wCChNvC,gFACAv7D,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ6V,YAAc7V,EAAQklE,wBAA0BllE,EAAQ2iE,gBAAkB3iE,EAAQolE,UAAYplE,EAAQq/D,KAAOr/D,EAAQhC,YAAcgC,EAAQ7B,QAAU6B,EAAQsB,YAActB,EAAQqlE,UAAYrlE,EAAQslE,SAAWtlE,EAAQZ,WAAaY,EAAQpB,WAAaoB,EAAQq+D,KAAOr+D,EAAQyiE,KAAOziE,EAAQu+D,WAAav+D,EAAQ2kE,IAAM3kE,EAAQulE,QAAK,EAGlV,IAAMC,EAAWvmD,EAAQ,KAGzBjf,EAAQulE,GADG,SAACrkE,GAAG,OAAK,IAAInC,WAAWmC,EAAIkI,OAAQlI,EAAI29D,WAAY39D,EAAIwJ,WAAW,EAG9E1K,EAAQ2kE,IADI,SAACzjE,GAAG,OAAK,IAAI0+D,YAAY1+D,EAAIkI,OAAQlI,EAAI29D,WAAYv/C,KAAK8a,MAAMl5B,EAAIwJ,WAAa,GAAG,EAIhG1K,EAAQu+D,WADW,SAACr9D,GAAG,OAAK,IAAIukE,SAASvkE,EAAIkI,OAAQlI,EAAI29D,WAAY39D,EAAIwJ,WAAW,EAQpF,GAJA1K,EAAQyiE,KADK,SAACniD,EAAMlU,GAAK,OAAMkU,GAAS,GAAKlU,EAAWkU,IAASlU,CAAM,EAEvEpM,EAAQq+D,KAAmE,KAA5D,IAAIt/D,WAAW,IAAI6gE,YAAY,CAAC,YAAax2D,QAAQ,IAG/DpJ,EAAQq+D,KACT,MAAM,IAAI9/D,MAAM,+CACpB,IAAMuvC,EAAQrwC,MAAMuB,KAAK,CAAEnB,OAAQ,MAAO,SAACa,EAAGd,GAAC,OAAKA,EAAEuC,SAAS,IAAIC,SAAS,EAAG,IAAI,IAcnFJ,EAAQpB,WAVR,SAAoByB,GAEhB,KAAMA,aAAkBtB,YACpB,MAAM,IAAIR,MAAM,uBAEpB,IADA,IAAI+B,EAAM,GACD1C,EAAI,EAAGA,EAAIyC,EAAOxC,OAAQD,IAC/B0C,GAAOwtC,EAAMztC,EAAOzC,IAExB,OAAO0C,CACX,EAsBAN,EAAQZ,WAjBR,SAAoBkB,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIM,UAAU,2CAA6CN,GAErE,GAAIA,EAAIzC,OAAS,EACb,MAAM,IAAIU,MAAM,6CAEpB,IADA,IAAMsC,EAAQ,IAAI9B,WAAWuB,EAAIzC,OAAS,GACjCD,EAAI,EAAGA,EAAIiD,EAAMhD,OAAQD,IAAK,CACnC,IAAMkD,EAAQ,EAAJlD,EACJ2C,EAAUD,EAAI9B,MAAMsC,EAAGA,EAAI,GAC3BN,EAAOC,OAAOC,SAASH,EAAS,IACtC,GAAIE,OAAOE,MAAMH,IAASA,EAAO,EAC7B,MAAM,IAAIjC,MAAM,yBACpBsC,EAAMjD,GAAK4C,CACf,CACA,OAAOK,CACX,EAIA,IAAMykE,EAAQ,6BAAG,kHAAe,kBAAlB,mCAGU,aAWvB,OAXuB,cAAxB,WAAyBI,EAAOC,EAAMC,GAAE,2EAChCC,EAAKC,KAAKC,MACLnoE,EAAI,EAAC,YAAEA,EAAI8nE,GAAK,iBAGO,GAF5BE,EAAGhoE,MAEG8wB,EAAOo3C,KAAKC,MAAQF,IACd,GAAKn3C,EAAOi3C,GAAI,uEAEtB,EAAI3lE,EAAQslE,YAAW,OAC7BO,GAAMn3C,EAAK,QAPY9wB,IAAG,4DASjC,sBAED,SAAS0D,EAAYK,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIf,UAAU,oCAAD,cAA4Ce,IAEnE,OAAO,IAAIH,aAAcjE,OAAOoE,EACpC,CAEA,SAASxD,EAAQwB,GAGb,GAFoB,kBAATA,IACPA,EAAO2B,EAAY3B,MACjBA,aAAgBZ,YAClB,MAAM,IAAI6B,UAAU,0CAAD,cAAkDjB,EAAI,MAC7E,OAAOA,CACX,CA5BAK,EAAQslE,SAAWA,EAcnBtlE,EAAQqlE,UAbR,SACyB,EAAD,qCAmBxBrlE,EAAQsB,YAAcA,EAQtBtB,EAAQ7B,QAAUA,EAmBlB6B,EAAQhC,YAdR,WAAgC,2BAAR+C,EAAM,yBAANA,EAAM,gBAC1B,IAAKA,EAAO8sC,OAAM,SAAC5sC,GAAC,OAAKA,aAAalC,UAAU,IAC5C,MAAM,IAAIR,MAAM,4BACpB,GAAsB,IAAlBwC,EAAOlD,OACP,OAAOkD,EAAO,GAGlB,IAFA,IAAMlD,EAASkD,EAAOC,QAAO,SAACC,EAAGC,GAAG,OAAKD,EAAIC,EAAIrD,MAAM,GAAE,GACnDsD,EAAS,IAAIpC,WAAWlB,GACrBD,EAAI,EAAGwD,EAAM,EAAGxD,EAAImD,EAAOlD,OAAQD,IAAK,CAC7C,IAAMsD,EAAMH,EAAOnD,GACnBuD,EAAOE,IAAIH,EAAKE,GAChBA,GAAOF,EAAIrD,MACf,CACA,OAAOsD,CACX,EAEA,IACMk+D,EAAI,kCAIL,OAJK,wBAEN,WACI,OAAOh9D,KAAKw/D,YAChB,KAAC,EAJK,GAMV7hE,EAAQq/D,KAAOA,EASfr/D,EAAQolE,UANR,SAAmBY,EAAUr2B,GACzB,QAAa/tC,IAAT+tC,IAAuC,kBAATA,IAFfs2B,EAEmDt2B,EAFH,oBAAxCjmC,OAAO+F,UAAUtP,SAAS8G,KAAKg/D,IAA8BA,EAAI5nD,cAAgB3U,SAGxG,MAAM,IAAI9I,UAAU,yCAHN,IAACqlE,EAKnB,OADev8D,OAAOkmC,OAAOo2B,EAAUr2B,EAE3C,EAUA3vC,EAAQ2iE,gBARR,SAAyBuD,GACrB,IAAMC,EAAQ,SAAC14D,GAAO,OAAKy4D,IAAkBtsC,OAAOz7B,EAAQsP,IAAU6lC,QAAQ,EACxE57B,EAAMwuD,IAIZ,OAHAC,EAAMzI,UAAYhmD,EAAIgmD,UACtByI,EAAMxI,SAAWjmD,EAAIimD,SACrBwI,EAAM1Y,OAAS,kBAAMyY,GAAiB,EAC/BC,CACX,EAUAnmE,EAAQklE,wBARR,SAAiCkB,GAC7B,IAAMD,EAAQ,SAAC79D,EAAKqnC,GAAI,OAAKy2B,EAASz2B,GAAM/V,OAAOz7B,EAAQmK,IAAMgrC,QAAQ,EACnE57B,EAAM0uD,EAAS,CAAC,GAItB,OAHAD,EAAMzI,UAAYhmD,EAAIgmD,UACtByI,EAAMxI,SAAWjmD,EAAIimD,SACrBwI,EAAM1Y,OAAS,SAAC9d,GAAI,OAAKy2B,EAASz2B,EAAK,EAChCw2B,CACX,EAgBAnmE,EAAQ6V,YAXR,WAAuC,IAAlBo9B,EAAc,UAAH,6CAAG,GAC/B,GAAIuyB,EAAShhC,OAAOiO,IAChB,OAAO+yB,EAAShhC,OAAOiO,IAAI/N,gBAAgB,IAAI3lC,WAAWk0C,IAEzD,GAAIuyB,EAAShhC,OAAOgO,KACrB,OAAO,IAAIzzC,WAAWymE,EAAShhC,OAAOgO,KAAK38B,YAAYo9B,GAAa7pC,QAGpE,MAAM,IAAI7K,MAAM,oDAExB,sCC9JAmL,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQ2kC,QAAU3kC,EAAQ8kC,UAAY9kC,EAAQ+kC,MAAQ/kC,EAAQglC,MAAQhlC,EAAQ0U,MAAQ1U,EAAQ4kC,gBAAkB5kC,EAAQkN,iBAAmBlN,EAAQikC,OAASjkC,EAAQ0M,SAAW1M,EAAQ6jC,KAAO7jC,EAAQ6kC,kBAAe,EACrN,IAAMwhC,EAASpnD,EAAQ,OACjBqnD,EAAWrnD,EAAQ,OACnBxa,EAAcwa,EAAQ,OACxBsnD,EAActnD,EAAQ,OAC1BvV,OAAOiI,eAAe3R,EAAS,eAAgB,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY1hC,YAAc,IACvHn7B,OAAOiI,eAAe3R,EAAS,OAAQ,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY1iC,IAAM,IACvGn6B,OAAOiI,eAAe3R,EAAS,WAAY,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY75D,QAAU,IAC/GhD,OAAOiI,eAAe3R,EAAS,SAAU,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAYtiC,MAAQ,IAC3Gv6B,OAAOiI,eAAe3R,EAAS,mBAAoB,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAYr5D,gBAAkB,IAC/HxD,OAAOiI,eAAe3R,EAAS,kBAAmB,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY3hC,eAAiB,IAC7Hl7B,OAAOiI,eAAe3R,EAAS,QAAS,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY7xD,KAAO,IACzGhL,OAAOiI,eAAe3R,EAAS,QAAS,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAYvhC,KAAO,IACzGt7B,OAAOiI,eAAe3R,EAAS,QAAS,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAYxhC,KAAO,IACzGr7B,OAAOiI,eAAe3R,EAAS,YAAa,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAYzhC,SAAW,IACjHp7B,OAAOiI,eAAe3R,EAAS,UAAW,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAOo8D,EAAY5hC,OAAS,IAE7GlgC,EAAYiQ,MAAM85B,eAAiB,SAAChjC,GACmB,IAAnD,IAAMgiB,EAAI64C,EAAO53B,KAAKgf,OAAO6Y,EAASnzB,OAAQ3nC,GAAK,mBADX4nC,EAAQ,iCAARA,EAAQ,kBAGhD,OADAA,EAAS/5B,SAAQ,SAAA/Q,GAAG,OAAIklB,EAAEoM,OAAOtxB,EAAI,IAC9BklB,EAAE8lB,QACb,iDCtBA,IAAIkzB,EAAmBnkE,MAAQA,KAAKmkE,iBAAoB,SAAUnmD,GAC9D,OAAQA,GAAOA,EAAIomD,WAAcpmD,EAAM,CAAE,QAAWA,EACxD,EACA3W,OAAOiI,eAAe3R,EAAS,aAAc,CAAE8J,OAAO,IACtD9J,EAAQwkC,OAASxkC,EAAQm9D,SAAWn9D,EAAQ0mE,YAAc1mE,EAAQZ,WAAaY,EAAQ2mE,YAAc3mE,EAAQsB,YAActB,EAAQu+D,WAAav+D,EAAQhC,YAAcgC,EAAQqqC,MAAQrqC,EAAQpB,WAAaoB,EAAQ4mE,YAAc5mE,EAAQ6mE,gBAAa,EAEtP,IAAMC,EAAYN,EAAgBvnD,EAAQ,QACpCi+C,EAAUj+C,EAAQ,OAClB4nD,EAAaC,EAAUtI,QAAQhB,KACrCx9D,EAAQ6mE,WAAaA,EACrB,IAAMD,EAAcE,EAAUtI,QAAQt2D,MACtClI,EAAQ4mE,YAAcA,EACtB,IAAIG,EAAU9nD,EAAQ,OACtBvV,OAAOiI,eAAe3R,EAAS,aAAc,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAO48D,EAAQnoE,UAAY,IAC/G8K,OAAOiI,eAAe3R,EAAS,QAAS,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAO48D,EAAQnoE,UAAY,IAC1G8K,OAAOiI,eAAe3R,EAAS,cAAe,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAO48D,EAAQ/oE,WAAa,IACjH0L,OAAOiI,eAAe3R,EAAS,aAAc,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAO48D,EAAQxI,UAAY,IAC/G70D,OAAOiI,eAAe3R,EAAS,cAAe,CAAEkK,YAAY,EAAMC,IAAK,WAAc,OAAO48D,EAAQzlE,WAAa,IAQjHtB,EAAQ2mE,YANR,SAAqBhnE,GACjB,KAAMA,aAAgBZ,YAClB,MAAM,IAAI6B,UAAU,wCAAD,cAAgDjB,IAEvE,OAAO,IAAIqnE,aAAc3nE,OAAOM,EACpC,EAMAK,EAAQZ,WAJR,SAAoBO,GAChB,IAAMsnE,EAAStnE,EAAK2Y,WAAW,MAAQ3Y,EAAKqL,UAAU,GAAKrL,EAC3D,OAAO,EAAIu9D,EAAQ99D,YAAY6nE,EACnC,EAcAjnE,EAAQ0mE,YAXR,SAAqBzlE,EAAGigB,GACpB,GAAIjgB,EAAEpD,SAAWqjB,EAAErjB,OACf,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAIqD,EAAEpD,OAAQD,IAC1B,GAAIqD,EAAErD,KAAOsjB,EAAEtjB,GACX,OAAO,EAGf,OAAO,CACX,EASAoC,EAAQm9D,SANR,SAAkBr5D,GACd,OAAO,SAACwE,GAEJ,OADAw+D,EAAUtI,QAAQt2D,MAAMI,GACjBxE,EAAKwE,EAChB,CACJ,EAEAtI,EAAQwkC,OAAU,WACd,IAAM0iC,EAA4B,kBAATxgE,MAAqB,WAAYA,KAAOA,KAAK89B,YAAS5iC,EACzEulE,EACwB,oBAAnBlyD,EAAOgK,SACdhK,EAAOgK,QAAQqoC,KAAKryC,GACxB,MAAO,CACHu9B,KAAM20B,IAAgBD,EAAYC,EAAY,eAAYvlE,EAC1D6wC,IAAKy0B,EAEb,CATkB,8tMCnDdE,GAAyB,EACzBC,GAAgB,EAEdC,EAA0C,CAAEC,MAAO,EAAG,QAAW,EAAGC,KAAM,EAAG1wB,QAAS,EAAG36B,MAAO,EAAG8D,IAAK,GAC1GwnD,EAAYH,EAAmB,QAI/BI,EAAwB,KA+B5B,IAEYC,EASAC,EAXNC,EA7BN,WACI,IACI,IAAMC,EAAyB,GAa/B,GAVA,CAAC,MAAO,MAAO,OAAQ,QAAQzuD,SAAQ,SAAC0uD,GACpC,IACI,GAA+B,SAA3B,OAAOxvD,UAAUwvD,GACjB,MAAM,IAAIxpE,MAAM,iBAEtB,MAAM4d,GACJ2rD,EAAQhqE,KAAKiqE,GAErB,IAEID,EAAQjqE,OACR,MAAM,IAAIU,MAAM,WAAaupE,EAAQx3D,KAAK,OAG9C,GAAInF,OAAOC,aAAa,KAAMmN,UAAU,SAAWpN,OAAOC,aAAa,IAAM,KACzE,MAAM,IAAI7M,MAAM,yBAEtB,MAAO4d,GACL,OAAOA,EAAM1O,QAGjB,OAAO,IACX,CAEwBu6D,IAExB,SAAYL,GACRA,EAAAA,MAAAA,QACAA,EAAAA,KAAAA,OACAA,EAAAA,QAAAA,UACAA,EAAAA,MAAAA,QACAA,EAAAA,IAAAA,KACH,CAND,CAAYA,IAAAA,EAAQ,KASpB,SAAYC,GAMRA,EAAAA,cAAAA,gBAGAA,EAAAA,gBAAAA,kBAIAA,EAAAA,sBAAAA,wBAIAA,EAAAA,cAAAA,gBAGAA,EAAAA,aAAAA,eAGAA,EAAAA,QAAAA,UAMAA,EAAAA,eAAAA,iBAKAA,EAAAA,cAAAA,gBAQAA,EAAAA,YAAAA,cAKAA,EAAAA,iBAAAA,mBAKAA,EAAAA,iBAAAA,mBAKAA,EAAAA,oBAAAA,sBAcAA,EAAAA,eAAAA,iBAIAA,EAAAA,mBAAAA,qBAIAA,EAAAA,cAAAA,gBAIAA,EAAAA,wBAAAA,0BAIAA,EAAAA,wBAAAA,0BAQAA,EAAAA,qBAAAA,uBAQAA,EAAAA,gBAAAA,iBACH,CAxGD,CAAYA,IAAAA,EAAS,KA0GrB,IAAMK,EAAM,mBAECC,EAAM,WAOf,WAAYhzD,IAAe,eACvBxL,OAAOiI,eAAetP,KAAM,UAAW,CACnC6H,YAAY,EACZJ,MAAOoL,EACPizD,UAAU,GAElB,CAwOC,OAxOA,4BAED,SAAKC,EAAoB5hE,GACrB,IAAM6hE,EAAQD,EAASxkE,cACC,MAApB0jE,EAAUe,IACVhmE,KAAKimE,mBAAmB,yBAA0B,WAAYF,GAE9DX,EAAYH,EAAUe,IAC1Bp8D,QAAQ8vC,IAAIyf,MAAMvvD,QAASzF,EAC/B,GAAC,mBAED,WAAyB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACrBnE,KAAKkmE,KAAKL,EAAOM,OAAOC,MAAOjiE,EACnC,GAAC,kBAED,WAAwB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACpBnE,KAAKkmE,KAAKL,EAAOM,OAAOE,KAAMliE,EAClC,GAAC,kBAED,WAAwB,2BAAhBA,EAAgB,yBAAhBA,EAAgB,gBACpBnE,KAAKkmE,KAAKL,EAAOM,OAAOG,QAASniE,EACrC,GAAC,uBAED,SAAUiH,EAAiBxC,EAAkBM,GAEzC,GAAI87D,EACA,OAAOhlE,KAAKumE,UAAU,iBAAkB39D,EAAM,CAAC,GAG9CA,IAAQA,EAAOi9D,EAAOnnB,OAAO8nB,eAC7Bt9D,IAAUA,EAAS,CAAC,GAEzB,IAAMu9D,EAAgC,GACtCp/D,OAAOuQ,KAAK1O,GAAQ8N,SAAQ,SAAC7N,GACzB,IAAM1B,EAAQyB,EAAOC,GACrB,IACI,GAAI1B,aAAiB/K,WAAY,CAE7B,IADA,IAAIuB,EAAM,GACD1C,EAAI,EAAGA,EAAIkM,EAAMjM,OAAQD,IAChC0C,GAAO2nE,EAAIn+D,EAAMlM,IAAM,GACvB0C,GAAO2nE,EAAe,GAAXn+D,EAAMlM,IAEnBkrE,EAAehrE,KAAK0N,EAAM,iBAAmBlL,EAAM,UAEnDwoE,EAAehrE,KAAK0N,EAAM,IAAMwL,KAAKC,UAAUnN,IAErD,MAAOqS,GACL2sD,EAAehrE,KAAK0N,EAAM,IAAMwL,KAAKC,UAAU1L,EAAOC,GAAKrL,aAEnE,IACA2oE,EAAehrE,KAAK,QAAD,OAAUmN,IAC7B69D,EAAehrE,KAAK,WAAD,OAAauE,KAAK6S,UAErC,IAAM6zD,EAASt7D,EAEX8xC,EAAM,GAEV,OAAQt0C,GACJ,KAAK28D,EAAUoB,cACXzpB,EAAM,gBACN,IAAM0pB,EAAQx7D,EAEd,OAAQw7D,GACJ,IAAK,WAAY,IAAK,YAAa,IAAK,mBACpC1pB,GAAO,IAAM0pB,EACb,MACJ,IAAK,iBAAkB,IAAK,iBACxB1pB,GAAO,eACP,MACJ,IAAK,yBACDA,GAAO,kBAGf,MAEJ,KAAKqoB,EAAUsB,eACf,KAAKtB,EAAUuB,mBACf,KAAKvB,EAAUwB,YACf,KAAKxB,EAAUyB,cACf,KAAKzB,EAAU0B,wBACf,KAAK1B,EAAU2B,qBACf,KAAK3B,EAAU4B,wBACXjqB,EAAMt0C,EAIVs0C,IACA9xC,GAAW,8CAAiD8xC,EAAM,MAGlEupB,EAAejrE,SACf4P,GAAW,KAAOq7D,EAAex4D,KAAK,MAAQ,KAIlD,IAAM6L,EAAa,IAAI5d,MAAMkP,GAQ7B,OAPA0O,EAAM4sD,OAASA,EACf5sD,EAAMlR,KAAOA,EAEbvB,OAAOuQ,KAAK1O,GAAQ8N,SAAQ,SAAS7N,GACjC2Q,EAAM3Q,GAAOD,EAAOC,EACxB,IAEO2Q,CACX,GAAC,wBAED,SAAW1O,EAAiBxC,EAAkBM,GAC1C,MAAMlJ,KAAKumE,UAAUn7D,EAASxC,EAAMM,EACxC,GAAC,gCAED,SAAmBkC,EAAiB+B,EAAc1F,GAC9C,OAAOzH,KAAKonE,WAAWh8D,EAASy6D,EAAOnnB,OAAO2oB,iBAAkB,CAC5DC,SAAUn6D,EACV1F,MAAOA,GAEf,GAAC,oBAED,SAAO8/D,EAAgBn8D,EAAiBxC,EAAkBM,GAChDq+D,GACNvnE,KAAKonE,WAAWh8D,EAASxC,EAAMM,EACnC,GAAC,4BAED,SAAeq+D,EAAgBn8D,EAAiB+B,EAAc1F,GACpD8/D,GACNvnE,KAAKimE,mBAAmB76D,EAAS+B,EAAM1F,EAC3C,GAAC,4BAED,SAAe2D,GACI,MAAXA,IAAmBA,EAAU,+CAC7Bo6D,GACAxlE,KAAKonE,WAAW,8CAA+CvB,EAAOnnB,OAAO8oB,sBAAuB,CAChGC,UAAW,6BAA8B/B,KAAMF,GAG3D,GAAC,6BAED,SAAgB/9D,EAAe2D,GACL,kBAAX3D,IAEI,MAAX2D,IAAmBA,EAAU,mBAE7B3D,EAAQ,GAAKA,GAAS,mBACtBzH,KAAKonE,WAAWh8D,EAASy6D,EAAOnnB,OAAOioB,cAAe,CAClDc,UAAW,mBACXb,MAAO,oBACPn/D,MAAOA,IAIXA,EAAQ,GACRzH,KAAKonE,WAAWh8D,EAASy6D,EAAOnnB,OAAOioB,cAAe,CAClDc,UAAW,mBACXb,MAAO,cACPn/D,MAAOA,IAGnB,GAAC,gCAED,SAAmBigE,EAAeC,EAAuBv8D,GAEjDA,EADAA,EACU,KAAOA,EAEP,GAGVs8D,EAAQC,GACR3nE,KAAKonE,WAAW,mBAAqBh8D,EAASy6D,EAAOnnB,OAAOkpB,iBAAkB,CAC1EF,MAAOA,EACPC,cAAeA,IAInBD,EAAQC,GACR3nE,KAAKonE,WAAW,qBAAuBh8D,EAASy6D,EAAOnnB,OAAOmpB,oBAAqB,CAC/EH,MAAOA,EACPC,cAAeA,GAG3B,GAAC,sBAED,SAASxiE,EAAa2iE,GACd3iE,IAAWkC,QAAoB,MAAVlC,GACrBnF,KAAKonE,WAAW,cAAevB,EAAOnnB,OAAOqoB,YAAa,CAAE55D,KAAM26D,EAAK36D,MAE/E,GAAC,2BAED,SAAchI,EAAa2iE,GACnB3iE,IAAW2iE,EACX9nE,KAAKonE,WACD,qCAAuCzyD,KAAKC,UAAUkzD,EAAK36D,MAAQ,6BACnE04D,EAAOnnB,OAAO8oB,sBACd,CAAEr6D,KAAMhI,EAAOgI,KAAMs6D,UAAW,QAE7BtiE,IAAWkC,QAAoB,MAAVlC,GAC5BnF,KAAKonE,WAAW,cAAevB,EAAOnnB,OAAOqoB,YAAa,CAAE55D,KAAM26D,EAAK36D,MAE/E,IAAC,2BAED,WAEI,OADKk4D,IAAiBA,EAAgB,IAAIQ,ECpX3B,iBDqXRR,CACX,GAAC,2BAED,SAAqB0C,EAAqBC,GAOtC,IANKD,GAAcC,GACfhoE,KAAKioE,eAAeb,WAAW,wCAAyCvB,EAAOnnB,OAAO8oB,sBAAuB,CACzGC,UAAW,kBAIf1C,EAAwB,CACxB,IAAKgD,EAAc,OACnB/nE,KAAKioE,eAAeb,WAAW,6BAA8BvB,EAAOnnB,OAAO8oB,sBAAuB,CAC9FC,UAAW,kBAInBzC,IAAkB+C,EAClBhD,IAA2BiD,CAC/B,GAAC,yBAED,SAAmBjC,GACf,IAAMC,EAAQf,EAAUc,EAASxkE,eACpB,MAATykE,EAIJZ,EAAYY,EAHRH,EAAOoC,eAAep+D,KAAK,uBAAyBk8D,EAI5D,GAAC,kBAED,SAAYlzD,GACR,OAAO,IAAIgzD,EAAOhzD,EACtB,KAAC,EArPc,GAGRgzD,EAAAA,OAASN,EAETM,EAAAA,OAASP,EErKb,ICID4C,EAAS,IAAIrC,EDJI,eCwDvB,SAASsC,EAAU1gE,GACf,QAAUA,EAAM2gE,WACpB,CAEA,SAASC,EAAS7pE,GACd,OAAIA,EAAMrC,QAEVqC,EAAMrC,MAAQ,WACV,IAAMgI,EAAO/I,MAAMgS,UAAUjR,MAAMyI,KAAK86B,WACxC,OAAO2oC,EAAS,IAAI3rE,WAAWtB,MAAMgS,UAAUjR,MAAMg9D,MAAM36D,EAAO2F,IACtE,GAL0B3F,CAQ9B,CAEM,SAAU8pE,EAAY7gE,GACxB,OAASlB,EAAYkB,MAAYA,EAAMjM,OAAS,IAAO+sE,EAAQ9gE,EACnE,CAEA,SAAS+gE,EAAU/gE,GACf,MAA0B,kBAAXA,GAAuBA,GAASA,GAAUA,EAAQ,IAAO,CAC5E,CAEM,SAAU8gE,EAAQ9gE,GACpB,GAAa,MAATA,EAAiB,OAAO,EAE5B,GAAIA,EAAMuU,cAAgBtf,WAAc,OAAO,EAC/C,GAAsB,kBAAX+K,EAAuB,OAAO,EACzC,IAAK+gE,EAAU/gE,EAAMjM,SAAWiM,EAAMjM,OAAS,EAAK,OAAO,EAE3D,IAAK,IAAID,EAAI,EAAGA,EAAIkM,EAAMjM,OAAQD,IAAK,CACnC,IAAMc,EAAIoL,EAAMlM,GAChB,IAAKitE,EAAUnsE,IAAMA,EAAI,GAAKA,GAAK,IAAO,OAAO,EAErD,OAAO,CACX,CAGM,SAAUosE,EAAShhE,EAAqCihE,GAG1D,GAFKA,IAAWA,EAAU,CAAC,GAEL,kBAAXjhE,EAAqB,CAC5BygE,EAAOS,gBAAgBlhE,EAAO,0BAG9B,IADA,IAAM3I,EAAS,GACR2I,GACH3I,EAAOoG,QAAgB,IAARuC,GACfA,EAAQpJ,SAASyK,OAAOrB,EAAQ,MAIpC,OAFsB,IAAlB3I,EAAOtD,QAAgBsD,EAAOrD,KAAK,GAEhC4sE,EAAS,IAAI3rE,WAAWoC,IASnC,GANI4pE,EAAQE,oBAAwC,kBAAXnhE,GAAiD,OAA1BA,EAAMkB,UAAU,EAAG,KAC9ElB,EAAQ,KAAOA,GAGhB0gE,EAAU1gE,KAAUA,EAAQA,EAAM2gE,eAElC7hE,EAAYkB,GAAQ,CACpB,IAAIxJ,EAAewJ,EAAOkB,UAAU,GAChC1K,EAAIzC,OAAS,IACU,SAAnBktE,EAAQG,OACR5qE,EAAM,IAAMA,EACc,UAAnByqE,EAAQG,OACf5qE,GAAO,IAEPiqE,EAAOjC,mBAAmB,yBAA0B,QAASx+D,IAKrE,IADA,IAAM3I,EAAS,GACNvD,EAAI,EAAGA,EAAI0C,EAAIzC,OAAQD,GAAK,EACjCuD,EAAOrD,KAAK4C,SAASJ,EAAI0K,UAAUpN,EAAGA,EAAI,GAAI,KAGlD,OAAO8sE,EAAS,IAAI3rE,WAAWoC,IAGnC,OAAIypE,EAAQ9gE,GACD4gE,EAAS,IAAI3rE,WAAW+K,IAG5BygE,EAAOjC,mBAAmB,yBAA0B,QAASx+D,EACxE,CAEM,SAAUvF,EAAOgY,GACnB,IAAM4uD,EAAU5uD,EAAM1S,KAAI,SAAA8Q,GAAI,OAAImwD,EAASnwD,EAAK,IAC1C9c,EAASstE,EAAQnqE,QAAO,SAACoqE,EAAOzwD,GAAI,OAAMywD,EAAQzwD,EAAK9c,MAAM,GAAG,GAEhEsD,EAAS,IAAIpC,WAAWlB,GAO9B,OALAstE,EAAQnqE,QAAO,SAAClC,EAAQusE,GAEpB,OADAlqE,EAAOE,IAAIgqE,EAAQvsE,GACZA,EAASusE,EAAOxtE,MAC3B,GAAG,GAEI6sE,EAASvpE,EACpB,CAEM,SAAUsH,EAAWqB,GACvB,IAAI3I,EAAqB2pE,EAAShhE,GAElC,GAAsB,IAAlB3I,EAAOtD,OAAgB,OAAOsD,EAIlC,IADA,IAAI9C,EAAQ,EACLA,EAAQ8C,EAAOtD,QAA4B,IAAlBsD,EAAO9C,IAAgBA,IAOvD,OAJIA,IACA8C,EAASA,EAAO3C,MAAMH,IAGnB8C,CACX,CAEM,SAAUmqE,EAAQxhE,EAAkBjM,IACtCiM,EAAQghE,EAAShhE,IAEPjM,OAASA,GACf0sE,EAAOjC,mBAAmB,qBAAsB,QAASvmC,UAAU,IAGvE,IAAM5gC,EAAS,IAAIpC,WAAWlB,GAE9B,OADAsD,EAAOE,IAAIyI,EAAOjM,EAASiM,EAAMjM,QAC1B6sE,EAASvpE,EACpB,CAGM,SAAUyH,EAAYkB,EAAYjM,GACpC,QAAsB,kBAAXiM,IAAwBA,EAAM4B,MAAM,wBAG3C7N,GAAUiM,EAAMjM,SAAW,EAAI,EAAIA,EAE3C,CAEA,IAAM0tE,EAAwB,mBAExB,SAAUC,EAAQ1hE,EAA8CihE,GAGlE,GAFKA,IAAWA,EAAU,CAAC,GAEL,kBAAXjhE,EAAqB,CAC5BygE,EAAOS,gBAAgBlhE,EAAO,yBAG9B,IADA,IAAIxJ,EAAM,GACHwJ,GACHxJ,EAAMirE,EAAsB,GAARzhE,GAAexJ,EACnCwJ,EAAQwV,KAAK8a,MAAMtwB,EAAQ,IAG/B,OAAIxJ,EAAIzC,QACAyC,EAAIzC,OAAS,IAAKyC,EAAM,IAAMA,GAC3B,KAAOA,GAGX,OAGX,GAAsB,kBAAXwJ,EAEP,OADAA,EAAQA,EAAM3J,SAAS,KACbtC,OAAS,EAAa,MAAQiM,EACjC,KAAOA,EAOlB,GAJIihE,EAAQE,oBAAwC,kBAAXnhE,GAAiD,OAA1BA,EAAMkB,UAAU,EAAG,KAC9ElB,EAAQ,KAAOA,GAGhB0gE,EAAU1gE,GAAU,OAAOA,EAAM2gE,cAErC,GAAI7hE,EAAYkB,GAUZ,OATaA,EAAOjM,OAAS,IACF,SAAnBktE,EAAQG,OACRphE,EAAQ,MAAiBA,EAAOkB,UAAU,GAChB,UAAnB+/D,EAAQG,OACfphE,GAAS,IAETygE,EAAOjC,mBAAmB,yBAA0B,QAASx+D,IAGrDA,EAAOlG,cAG3B,GAAIgnE,EAAQ9gE,GAAQ,CAEhB,IADA,IAAI3I,EAAS,KACJvD,EAAI,EAAGA,EAAIkM,EAAMjM,OAAQD,IAAK,CAClC,IAAIc,EAAIoL,EAAMlM,GACduD,GAAUoqE,GAAmB,IAAJ7sE,IAAa,GAAK6sE,EAAkB,GAAJ7sE,GAE9D,OAAOyC,EAGX,OAAOopE,EAAOjC,mBAAmB,wBAAyB,QAASx+D,EACvE,CAUM,SAAU2hE,EAAc9rE,GAC1B,GAAqB,kBAAVA,EACPA,EAAO6rE,EAAQ7rE,QACZ,IAAKiJ,EAAYjJ,IAAUA,EAAK9B,OAAS,EAC5C,OAAO,KAGX,OAAQ8B,EAAK9B,OAAS,GAAK,CAC/B,CAEM,SAAU6tE,EAAa/rE,EAAiBb,EAAgB6sE,GAS1D,MARqB,kBAAVhsE,EACPA,EAAO6rE,EAAQ7rE,KACPiJ,EAAYjJ,IAAUA,EAAK9B,OAAS,IAC5C0sE,EAAOjC,mBAAmB,kBAAmB,QAAS3oE,GAG1Db,EAAS,EAAI,EAAIA,EAEA,MAAb6sE,EACO,KAAOhsE,EAAKqL,UAAUlM,EAAQ,EAAI,EAAI6sE,GAG1C,KAAOhsE,EAAKqL,UAAUlM,EACjC,CAEM,SAAU8sE,EAAUrvD,GACtB,IAAIpb,EAAS,KAIb,OAHAob,EAAMlD,SAAQ,SAACsB,GACXxZ,GAAUqqE,EAAQ7wD,GAAM3P,UAAU,EACtC,IACO7J,CACX,CAEM,SAAU0qE,EAAS/hE,GACrB,IAAMgiE,EAAUC,EAAcP,EAAQ1hE,EAAO,CAAEohE,OAAQ,UACvD,MAAgB,OAAZY,EAA2B,MACxBA,CACX,CAEM,SAAUC,EAAcjiE,GACJ,kBAAXA,IAAuBA,EAAQ0hE,EAAQ1hE,IAE7ClB,EAAYkB,IACbygE,EAAOjC,mBAAmB,qBAAsB,QAASx+D,GAE7DA,EAAQA,EAAMkB,UAAU,GAExB,IADA,IAAIlM,EAAS,EACNA,EAASgL,EAAMjM,QAA4B,MAAlBiM,EAAMhL,IAAmBA,IACzD,MAAO,KAAOgL,EAAMkB,UAAUlM,EAClC,CAEM,SAAUktE,EAAWliE,EAAkBjM,GAWzC,IAVsB,kBAAXiM,EACPA,EAAQ0hE,EAAQ1hE,GACRlB,EAAYkB,IACpBygE,EAAOjC,mBAAmB,qBAAsB,QAASx+D,GAGzDA,EAAMjM,OAAS,EAAIA,EAAS,GAC5B0sE,EAAOjC,mBAAmB,qBAAsB,QAASvmC,UAAU,IAGhEj4B,EAAMjM,OAAS,EAAIA,EAAS,GAC/BiM,EAAQ,MAAQA,EAAMkB,UAAU,GAGpC,OAAOlB,CACX,CAEM,SAAUmiE,EAAep/D,GAE3B,IAAM1L,EAAS,CACX2L,EAAG,KACHC,EAAG,KACHm/D,IAAK,KACLC,cAAe,EACfztE,EAAG,EACH0tE,YAAa,KACbC,QAAS,MAGb,GAAI1B,EAAY99D,GAAY,CACxB,IAAI3E,EAAoB4iE,EAASj+D,GAGZ,KAAjB3E,EAAMrK,QAENsD,EAAOzC,EAAI,IAAMwJ,EAAM,KAAO,GAC9BA,EAAM,KAAO,IAEb/G,EAAO2L,EAAI0+D,EAAQtjE,EAAM1J,MAAM,EAAG,KAClC2C,EAAO4L,EAAIy+D,EAAQtjE,EAAM1J,MAAM,GAAI,MAEX,KAAjB0J,EAAMrK,QACbsD,EAAO2L,EAAI0+D,EAAQtjE,EAAM1J,MAAM,EAAG,KAClC2C,EAAO4L,EAAIy+D,EAAQtjE,EAAM1J,MAAM,GAAI,KACnC2C,EAAOzC,EAAIwJ,EAAM,KAGjBqiE,EAAOjC,mBAAmB,2BAA4B,YAAaz7D,GAKnE1L,EAAOzC,EAAI,KACM,IAAbyC,EAAOzC,GAAwB,IAAbyC,EAAOzC,EACzByC,EAAOzC,GAAK,GAEZ6rE,EAAOjC,mBAAmB,2BAA4B,YAAaz7D,IAK3E1L,EAAOgrE,cAAgB,EAAKhrE,EAAOzC,EAAI,EAGnCyC,EAAOgrE,gBAAiBjkE,EAAM,KAAO,KACzC/G,EAAO+qE,IAAMV,EAAQtjE,EAAM1J,MAAM,GAAI,SAElC,CASH,GARA2C,EAAO2L,EAAID,EAAUC,EACrB3L,EAAO4L,EAAIF,EAAUE,EACrB5L,EAAOzC,EAAImO,EAAUnO,EACrByC,EAAOgrE,cAAgBt/D,EAAUs/D,cACjChrE,EAAO+qE,IAAMr/D,EAAUq/D,IAIL,MAAd/qE,EAAO+qE,IAAa,CACpB,IAAMI,EAAKhB,EAAQR,EAAS3pE,EAAO+qE,KAAM,IACzC/qE,EAAO+qE,IAAMV,EAAQc,GAGrB,IAAMH,EAAkBG,EAAG,IAAM,IAAO,EAAG,EACf,MAAxBnrE,EAAOgrE,cACPhrE,EAAOgrE,cAAgBA,EAChBhrE,EAAOgrE,gBAAkBA,GAChC5B,EAAOjC,mBAAmB,uCAAwC,YAAaz7D,GAInFy/D,EAAG,IAAM,IACT,IAAMv/D,EAAIy+D,EAAQc,GACF,MAAZnrE,EAAO4L,EACP5L,EAAO4L,EAAIA,EACJ5L,EAAO4L,IAAMA,GACpBw9D,EAAOjC,mBAAmB,2BAA4B,YAAaz7D,GAK3E,GAA4B,MAAxB1L,EAAOgrE,cACS,MAAZhrE,EAAOzC,EACP6rE,EAAOjC,mBAAmB,wCAAyC,YAAaz7D,GAC5D,IAAb1L,EAAOzC,GAAwB,IAAbyC,EAAOzC,EAChCyC,EAAOgrE,cAAgBhrE,EAAOzC,EAE9ByC,EAAOgrE,cAAgB,EAAKhrE,EAAOzC,EAAI,OAG3C,GAAgB,MAAZyC,EAAOzC,EACPyC,EAAOzC,EAAI,GAAKyC,EAAOgrE,kBACpB,CACH,IAAMI,EAAsB,IAAbprE,EAAOzC,GAAwB,IAAbyC,EAAOzC,EAAWyC,EAAOzC,EAAI,EAAKyC,EAAOzC,EAAI,EAC1EyC,EAAOgrE,gBAAkBI,GACzBhC,EAAOjC,mBAAmB,qCAAsC,YAAaz7D,GAKzE,MAAZ1L,EAAO2L,GAAclE,EAAYzH,EAAO2L,GAGxC3L,EAAO2L,EAAIk/D,EAAW7qE,EAAO2L,EAAG,IAFhCy9D,EAAOjC,mBAAmB,iCAAkC,YAAaz7D,GAK7D,MAAZ1L,EAAO4L,GAAcnE,EAAYzH,EAAO4L,GAGxC5L,EAAO4L,EAAIi/D,EAAW7qE,EAAO4L,EAAG,IAFhCw9D,EAAOjC,mBAAmB,iCAAkC,YAAaz7D,GAK7E,IAAMy/D,EAAKxB,EAAS3pE,EAAO4L,GACvBu/D,EAAG,IAAM,KACT/B,EAAOjC,mBAAmB,2BAA4B,YAAaz7D,GAEnE1L,EAAOgrE,gBAAiBG,EAAG,IAAM,KACrC,IAAMJ,EAAMV,EAAQc,GAEhBnrE,EAAO+qE,MACFtjE,EAAYzH,EAAO+qE,MACpB3B,EAAOjC,mBAAmB,wBAAyB,YAAaz7D,GAEpE1L,EAAO+qE,IAAMF,EAAW7qE,EAAO+qE,IAAK,KAItB,MAAd/qE,EAAO+qE,IACP/qE,EAAO+qE,IAAMA,EACN/qE,EAAO+qE,MAAQA,GACtB3B,EAAOjC,mBAAmB,iCAAkC,YAAaz7D,GAOjF,OAHA1L,EAAOirE,YAAcjrE,EAAO+qE,IAC5B/qE,EAAOkrE,QAAUlrE,EAAO2L,EAAI3L,EAAOirE,YAAYphE,UAAU,GAElD7J,CACX,CAEM,SAAUqrE,EAAc3/D,GAG1B,OAAO2+D,EAAQjnE,EAAO,EAFtBsI,EAAYo/D,EAAep/D,IAGZC,EACVD,EAAUE,EACTF,EAAUs/D,cAAgB,OAAQ,SAE5C,yBCjeaj3D,EAAU,kBCWhBoJ,EAAKmuD,IAAAA,GAMNlC,EAAS,IAAIrC,EAAOhzD,GAEpBw3D,GAAoB,CAAC,EAErBC,GAAW,iBAiBjB,IAAIC,IAAuB,EAEdjvB,GAAS,WAIlB,WAAYkvB,EAAuBvsE,IAAW,eACtCusE,IAAqBH,IACrBnC,EAAOd,WAAW,uDAAwDvB,EAAOnnB,OAAO8oB,sBAAuB,CAC3GC,UAAW,oBAInBznE,KAAKyqE,KAAOxsE,EACZ+B,KAAK0qE,cAAe,EAEpBrjE,OAAOotD,OAAOz0D,KAClB,CA8OC,OA9OA,gCAED,SAASyH,GACL,OAAOg0C,GAAYkvB,GAAK3qE,MAAMygB,SAAShZ,GAC3C,GAAC,oBAED,SAAOA,GACH,OAAOg0C,GAAYkvB,GAAK3qE,MAAMsW,OAAO7O,GACzC,GAAC,iBAED,WACI,MAAqB,MAAjBzH,KAAKyqE,KAAK,GACHnvB,EAAU3+C,KAAKqD,KAAKyqE,KAAK9hE,UAAU,IAEvC3I,IACX,GAAC,iBAED,SAAIyjC,GACA,OAAOgY,GAAYkvB,GAAK3qE,MAAMsF,IAAIqlE,GAAKlnC,IAC3C,GAAC,iBAED,SAAIA,GACA,OAAOgY,GAAYkvB,GAAK3qE,MAAMkiB,IAAIyoD,GAAKlnC,IAC3C,GAAC,iBAED,SAAIA,GAKA,OAJU6X,EAAU3+C,KAAK8mC,GACnBpkB,UACFurD,GAAW,mBAAoB,OAE5BnvB,GAAYkvB,GAAK3qE,MAAMusB,IAAIo+C,GAAKlnC,IAC3C,GAAC,iBAED,SAAIA,GACA,OAAOgY,GAAYkvB,GAAK3qE,MAAM2W,IAAIg0D,GAAKlnC,IAC3C,GAAC,iBAED,SAAIA,GACA,IAAMh8B,EAAQkjE,GAAKlnC,GAInB,OAHIh8B,EAAMoZ,SACN+pD,GAAW,mBAAoB,OAE5BnvB,GAAYkvB,GAAK3qE,MAAM2sB,KAAKllB,GACvC,GAAC,iBAED,SAAIg8B,GACA,IAAMh8B,EAAQkjE,GAAKlnC,GAInB,OAHIh8B,EAAMoZ,SACN+pD,GAAW,iBAAkB,OAE1BnvB,GAAYkvB,GAAK3qE,MAAM4W,IAAInP,GACtC,GAAC,iBAED,SAAIg8B,GACA,IAAMh8B,EAAQkjE,GAAKlnC,GAInB,OAHIzjC,KAAK6qE,cAAgBpjE,EAAMoZ,UAC3B+pD,GAAW,yBAA0B,OAElCnvB,GAAYkvB,GAAK3qE,MAAMqhB,IAAI5Z,GACtC,GAAC,gBAED,SAAGg8B,GACC,IAAMh8B,EAAQkjE,GAAKlnC,GAInB,OAHIzjC,KAAK6qE,cAAgBpjE,EAAMoZ,UAC3B+pD,GAAW,yBAA0B,MAElCnvB,GAAYkvB,GAAK3qE,MAAMihB,GAAGxZ,GACrC,GAAC,iBAED,SAAIg8B,GACA,IAAMh8B,EAAQkjE,GAAKlnC,GAInB,OAHIzjC,KAAK6qE,cAAgBpjE,EAAMoZ,UAC3B+pD,GAAW,yBAA0B,OAElCnvB,GAAYkvB,GAAK3qE,MAAMyhB,IAAIha,GACtC,GAAC,kBAED,SAAKA,GAID,OAHIzH,KAAK6qE,cAAgBpjE,EAAQ,IAC7BmjE,GAAW,iBAAkB,QAE1BnvB,GAAYkvB,GAAK3qE,MAAM4rB,MAAMnkB,GACxC,GAAC,iBAED,SAAIA,GAIA,OAHIzH,KAAK6qE,cAAgBpjE,EAAQ,IAC7BmjE,GAAW,iBAAkB,OAE1BnvB,GAAYkvB,GAAK3qE,MAAMurB,KAAK9jB,GACvC,GAAC,iBAED,SAAIA,GAIA,OAHIzH,KAAK6qE,cAAgBpjE,EAAQ,IAC7BmjE,GAAW,iBAAkB,OAE1BnvB,GAAYkvB,GAAK3qE,MAAMyrB,KAAKhkB,GACvC,GAAC,gBAED,SAAGg8B,GACC,OAAOknC,GAAK3qE,MAAM8uB,GAAG67C,GAAKlnC,GAC9B,GAAC,gBAED,SAAGA,GACC,OAAOknC,GAAK3qE,MAAM0uB,GAAGi8C,GAAKlnC,GAC9B,GAAC,iBAED,SAAIA,GACA,OAAOknC,GAAK3qE,MAAM4uB,IAAI+7C,GAAKlnC,GAC/B,GAAC,gBAED,SAAGA,GACC,OAAOknC,GAAK3qE,MAAMsuB,GAAGq8C,GAAKlnC,GAC/B,GAAC,iBAEA,SAAIA,GACA,OAAOknC,GAAK3qE,MAAMwuB,IAAIm8C,GAAKlnC,GAC/B,GAAC,wBAED,WACI,MAAyB,MAAjBzjC,KAAKyqE,KAAK,EACtB,GAAC,oBAED,WACI,OAAOE,GAAK3qE,MAAMqf,QACtB,GAAC,sBAED,WACI,IACI,OAAOsrD,GAAK3qE,MAAMwf,WACpB,MAAO1F,GACL8wD,GAAW,WAAY,WAAY5qE,KAAKlC,YAE5C,OAAO,IACX,GAAC,sBAED,WACI,IACI,OAAO2B,OAAOO,KAAKlC,WACV,CAAX,MAAOmD,GAAI,CAEb,OAAOinE,EAAOd,WAAW,wCAAyCvB,EAAOnnB,OAAO8oB,sBAAuB,CACnG//D,MAAOzH,KAAKlC,YAEpB,GAAC,sBAED,WAcI,OAZI4hC,UAAUlkC,OAAS,IACE,KAAjBkkC,UAAU,GACL6qC,KACDA,IAAuB,EACvBrC,EAAOr+D,KAAK,0EAEQ,KAAjB61B,UAAU,GACjBwoC,EAAOd,WAAW,iFAAkFvB,EAAOnnB,OAAOmpB,oBAAqB,CAAC,GAExIK,EAAOd,WAAW,gDAAiDvB,EAAOnnB,OAAOmpB,oBAAqB,CAAC,IAGxG8C,GAAK3qE,MAAMlC,SAAS,GAC/B,GAAC,yBAED,WACI,OAAOkC,KAAKyqE,IAChB,GAAC,oBAED,SAAOthE,GACH,MAAO,CAAE+L,KAAM,YAAajX,IAAK+B,KAAKooE,cAC1C,IAAC,mBAED,SAAY3gE,GACR,GAAIA,aAAiB6zC,EAAa,OAAO7zC,EAEzC,GAAsB,kBAAXA,EACP,OAAIA,EAAM4B,MAAM,oBACL,IAAIiyC,EAAU+uB,GAAmBriC,GAAMvgC,IAG9CA,EAAM4B,MAAM,cACL,IAAIiyC,EAAU+uB,GAAmBriC,GAAM,IAAI/rB,EAAGxU,KAGlDygE,EAAOjC,mBAAmB,2BAA4B,QAASx+D,GAG1E,GAAsB,kBAAXA,EASP,OARIA,EAAQ,GACRmjE,GAAW,YAAa,iBAAkBnjE,IAG1CA,GAAS6iE,IAAY7iE,IAAU6iE,KAC/BM,GAAW,WAAY,iBAAkBnjE,GAGtC6zC,EAAU3+C,KAAKmM,OAAOrB,IAGjC,IAAMqjE,EAAgBrjE,EAEtB,GAAyB,kBAAdqjE,EACP,OAAOxvB,EAAU3+C,KAAKmuE,EAAShtE,YAGnC,GAAIyqE,EAAQuC,GACR,OAAOxvB,EAAU3+C,KAAKwsE,EAAQ2B,IAGlC,GAAIA,EAGA,GAAIA,EAAS1C,YAAa,CACtB,IAAMnqE,EAAM6sE,EAAS1C,cACrB,GAAoB,kBAATnqE,EACP,OAAOq9C,EAAU3+C,KAAKsB,OAGvB,CAEH,IAAIA,EAAM6sE,EAASL,KAOnB,GAJW,MAAPxsE,GAAiC,cAAlB6sE,EAAS51D,OACxBjX,EAAM6sE,EAAS7sE,KAGC,kBAATA,IACHsI,EAAYtI,IAAoB,MAAXA,EAAI,IAAcsI,EAAYtI,EAAI0K,UAAU,KACjE,OAAO2yC,EAAU3+C,KAAKsB,GAMtC,OAAOiqE,EAAOjC,mBAAmB,0BAA2B,QAASx+D,EACzE,GAAC,yBAED,SAAmBA,GACf,SAAUA,IAASA,EAAMijE,aAC7B,KAAC,EA7PiB,GAiQtB,SAAS1iC,GAAMvgC,GAGX,GAAsB,kBAAXA,EACP,OAAOugC,GAAMvgC,EAAM3J,SAAS,KAIhC,GAAiB,MAAb2J,EAAM,GAWN,MANiB,OAHjBA,EAAQA,EAAMkB,UAAU,IAGd,IAAcu/D,EAAOjC,mBAAmB,cAAe,QAASx+D,GAM5D,UAHdA,EAAQugC,GAAMvgC,IAGiBA,EAGxB,IAAMA,EAOjB,GAH8B,OAA1BA,EAAMkB,UAAU,EAAG,KAAelB,EAAQ,KAAOA,GAGvC,OAAVA,EAAkB,MAAO,OAM7B,IAHIA,EAAMjM,OAAS,IAAKiM,EAAQ,MAAQA,EAAMkB,UAAU,IAGjDlB,EAAMjM,OAAS,GAA+B,SAA1BiM,EAAMkB,UAAU,EAAG,IAC1ClB,EAAQ,KAAOA,EAAMkB,UAAU,GAGnC,OAAOlB,CACX,CAEA,SAASg0C,GAAYh0C,GACjB,OAAO6zC,GAAU3+C,KAAKqrC,GAAMvgC,GAChC,CAEA,SAASkjE,GAAKljE,GACV,IAAMxJ,EAAMq9C,GAAU3+C,KAAK8K,GAAO2gE,cAClC,MAAe,MAAXnqE,EAAI,GACI,IAAIge,EAAG,IAAMhe,EAAI0K,UAAU,GAAI,IAEpC,IAAIsT,EAAGhe,EAAI0K,UAAU,GAAI,GACpC,CAEA,SAASiiE,GAAWhE,EAAea,EAAmBhgE,GAClD,IAAMyB,EAAc,CAAE09D,MAAOA,EAAOa,UAAWA,GAG/C,OAFa,MAAThgE,IAAiByB,EAAOzB,MAAQA,GAE7BygE,EAAOd,WAAWR,EAAOf,EAAOnnB,OAAOioB,cAAez9D,EACjE,CCpWO,2SCIDg/D,GAAS,IAAIrC,EDJI,oBCMjB,SAAUkF,GAAqC/B,EAAW77D,EAAS1F,GACrEJ,OAAOiI,eAAe05D,EAAQ77D,EAAM,CAChCtF,YAAY,EACZJ,MAAOA,EACPq+D,UAAU,GAElB,CAGM,SAAUkF,GAAapvD,EAAWzS,GACpC,IAAK,IAAI5N,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIqgB,EAAKzS,GAAQ,OAAOyS,EAAKzS,GAC7B,IAAKyS,EAAKxO,WAAwC,kBAApBwO,EAAKxO,UAA2B,MAC9DwO,EAAOvU,OAAOgkD,eAAezvC,EAAKxO,WAAW4O,YAEjD,OAAO,IACX,CASM,SAAgBivD,GAAqBjC,2IAMvB,OALVkC,EAAmC7jE,OAAOuQ,KAAKoxD,GAAQxhE,KAAI,SAAC2B,GAC9D,IAAM1B,EAAQuhE,EAA4B7/D,GAC1C,OAAOM,QAAQC,QAAQjC,GAAO0jE,MAAK,SAAC9uE,GAAC,MAAM,CAAE8M,IAAKA,EAAK1B,MAAOpL,EAAG,GACrE,IAAE,SAEoBoN,QAAQ2hE,IAAIF,GAAS,OAA9B,OAAP/xD,EAAU,EAAH,uBAENA,EAAQxa,QAAO,SAACoqE,EAAOjqE,GAE1B,OADAiqE,EAAgBjqE,EAAOqK,KAAQrK,EAAO2I,MAC/BshE,CACX,GAAM,CAAC,IAAG,2CAGR,SAAUsC,GAAgBrC,EAAatvD,GACpCsvD,GAA6B,kBAAZA,GAClBd,GAAOjC,mBAAmB,iBAAkB,SAAU+C,GAG1D3hE,OAAOuQ,KAAKoxD,GAAQhyD,SAAQ,SAAC7N,GACpBuQ,EAAWvQ,IACZ++D,GAAOjC,mBAAmB,wBAA0B98D,EAAK,eAAiBA,EAAK6/D,EAEvF,GACJ,CAEM,SAAUsC,GAAetC,GAC3B,IAAMlqE,EAAc,CAAC,EACrB,IAAK,IAAMqK,KAAO6/D,EAAUlqE,EAAOqK,GAAO6/D,EAAO7/D,GACjD,OAAOrK,CACX,CAEA,IAAMysE,GAAqC,CAAEC,QAAQ,EAAMC,SAAS,EAAM,UAAY,EAAMvvD,QAAQ,EAAMY,QAAQ,GAElH,SAAS4uD,GAAU1C,GAGf,QAAezpE,IAAXypE,GAAmC,OAAXA,GAAmBuC,UAAcvC,GAAY,OAAO,EAEhF,GAAI5tE,MAAMC,QAAQ2tE,IAA8B,kBAAZA,EAAsB,CACtD,IAAK3hE,OAAOstD,SAASqU,GAAW,OAAO,EAGvC,IADA,IAAMpxD,EAAOvQ,OAAOuQ,KAAKoxD,GAChBztE,EAAI,EAAGA,EAAIqc,EAAKpc,OAAQD,IAAK,CAClC,IAAIkM,EAAa,KACjB,IACIA,EAAQuhE,EAAOpxD,EAAKrc,IACtB,MAAOue,GAGL,SAGJ,IAAK4xD,GAAUjkE,GAAU,OAAO,EAGpC,OAAO,EAGX,OAAOygE,GAAOjC,mBAAmB,mBAAD,cAA4B+C,GAAY,SAAUA,EACtF,CAIA,SAAS2C,GAAU3C,GAEf,GAAI0C,GAAU1C,GAAW,OAAOA,EAGhC,GAAI5tE,MAAMC,QAAQ2tE,GACd,OAAO3hE,OAAOotD,OAAOuU,EAAOxhE,KAAI,SAAC8Q,GAAI,OAAKszD,GAAStzD,EAAK,KAG5D,GAAuB,kBAAZ0wD,EAAsB,CAC7B,IAAMlqE,EAAmC,CAAC,EAC1C,IAAK,IAAMqK,KAAO6/D,EAAQ,CACtB,IAAMvhE,EAAQuhE,EAAO7/D,QACP5J,IAAVkI,GACJsjE,GAAejsE,EAAQqK,EAAKyiE,GAASnkE,IAGzC,OAAO3I,EAGX,OAAOopE,GAAOjC,mBAAmB,mBAAD,cAA4B+C,GAAY,SAAUA,EACtF,CAEM,SAAU4C,GAAY5C,GACxB,OAAO2C,GAAU3C,EACrB,CAEO,IAAM6C,IAAW,QACpB,WAAY1G,GACR,IAAK,IAAMh8D,KAD6B,eACtBg8D,EACRnlE,KAAMmJ,GAAOyiE,GAASzG,EAAKh8D,GAEzC,IC/HS0J,GAAU,YCQjBq1D,GAAS,IAAIrC,EAAOhzD,IAMpB,SAAUi5D,GAAkBhtE,GAE9B,IAAM4/C,EAAgE,GAiBtE,OAfoB,SAAdqtB,EAAuBC,EAA8BhD,GACvD,GAAK5tE,MAAMC,QAAQ2tE,GACnB,IAAK,IAAI7/D,KAAO6/D,EAAQ,CACpB,IAAMiD,EAAYD,EAAK7vE,QACvB8vE,EAAUxwE,KAAK0N,GAEf,IACK4iE,EAAYE,EAAWjD,EAAO7/D,IACjC,MAAO2Q,GACL4kC,EAAOjjD,KAAK,CAAEuwE,KAAMC,EAAWnyD,MAAOA,KAGlD,CACAiyD,CAAY,GAAKjtE,GAEV4/C,CAEX,CAIO,IAAewtB,GAAK,WAmBvB,WAAY/+D,EAAc+H,EAAci3D,EAAmBC,IAAgB,eAEvEpsE,KAAKmN,KAAOA,EACZnN,KAAKkV,KAAOA,EACZlV,KAAKmsE,UAAYA,EACjBnsE,KAAKosE,QAAUA,CACnB,CAIC,OAJA,mCAED,SAAYhhE,EAAiB3D,GACzBygE,GAAOjC,mBAAmB76D,EAASpL,KAAKmsE,UAAW1kE,EACvD,KAAC,EA7BsB,GAqCd4kE,GAAM,WAOf,WAAY3vD,IAAiB,eACzBquD,GAAe/qE,KAAM,WAAY0c,GAAY,IAC7C1c,KAAKssE,MAAQ,GACbtsE,KAAKusE,YAAc,EACnBvsE,KAAKwsE,SAAW,IAAI9vE,WAAWggB,EACnC,CAqDC,OArDA,0BAED,WACI,OAAO6sD,EAAUvpE,KAAKssE,MAC1B,GAAC,kBACD,WAAuB,OAAOtsE,KAAKusE,WAAa,GAAC,wBAEjD,SAAWjvE,GAGP,OAFA0C,KAAKssE,MAAM7wE,KAAK6B,GAChB0C,KAAKusE,aAAejvE,EAAK9B,OAClB8B,EAAK9B,MAChB,GAAC,0BAED,SAAaixE,GACT,OAAOzsE,KAAK0sE,WAAWxqE,EAAOuqE,EAAOH,OACzC,GAEA,wBACA,SAAW7kE,GACP,IAAI5B,EAAQ4iE,EAAShhE,GACfklE,EAAgB9mE,EAAMrK,OAASwE,KAAK0c,SAI1C,OAHIiwD,IACA9mE,EAAQ3D,EAAO,CAAE2D,EAAO7F,KAAKwsE,SAASrwE,MAAMwwE,MAEzC3sE,KAAK0sE,WAAW7mE,EAC3B,GAAC,uBAED,SAAU4B,GACN,IAAI5B,EAAQ4iE,EAASntB,GAAU3+C,KAAK8K,IAUpC,OATI5B,EAAMrK,OAASwE,KAAK0c,UACpBwrD,GAAOd,WAAW,sBAAuBvB,EAAOnnB,OAAOkuB,eAAgB,CACnEpxE,OAAQwE,KAAK0c,SACbjgB,OAAQoJ,EAAMrK,SAGlBqK,EAAMrK,OAASwE,KAAK0c,WACpB7W,EAAQ3D,EAAO,CAAElC,KAAKwsE,SAASrwE,MAAM0J,EAAMrK,OAASwE,KAAK0c,UAAW7W,KAEjEA,CACX,GAEA,wBACA,SAAW4B,GACP,OAAOzH,KAAK0sE,WAAW1sE,KAAK6sE,UAAUplE,GAC1C,GAAC,iCAED,WAAmB,WACThL,EAASuD,KAAKssE,MAAM9wE,OAG1B,OAFAwE,KAAKssE,MAAM7wE,KAAKuE,KAAKwsE,UACrBxsE,KAAKusE,aAAevsE,KAAK0c,SAClB,SAACjV,GACJ,EAAK6kE,MAAM7vE,GAAU,EAAKowE,UAAUplE,EACxC,CACJ,KAAC,EAjEc,GAoENqlE,GAAM,WASf,WAAYxvE,EAAiBof,EAAmBqwD,EAAyBC,IAAoB,eACzFjC,GAAe/qE,KAAM,QAASyoE,EAASnrE,IACvCytE,GAAe/qE,KAAM,WAAY0c,GAAY,IAC7CquD,GAAe/qE,KAAM,cAAe+sE,GACpChC,GAAe/qE,KAAM,aAAcgtE,GAEnChtE,KAAKitE,QAAU,CACnB,CAUC,OAVA,0BAED,WAAqB,OAAO9D,EAAQnpE,KAAKssE,MAAQ,GAAC,oBAClD,WAAyB,OAAOtsE,KAAKitE,OAAS,GAE9C,oBAOA,SAAO9/D,EAAc1F,GACjB,OAAIzH,KAAKktE,YAAsBltE,KAAKktE,YAAY//D,EAAM1F,GAC/CqlE,EAAOK,OAAOhgE,EAAM1F,EAC/B,GAAC,wBAED,SAAWhL,EAAgBjB,EAAgB4xE,GACvC,IAAIC,EAAgBpwD,KAAKS,KAAKliB,EAASwE,KAAK0c,UAAY1c,KAAK0c,SAW7D,OAVI1c,KAAKitE,QAAUI,EAAgBrtE,KAAKssE,MAAM9wE,SACtCwE,KAAKgtE,YAAcI,GAASptE,KAAKitE,QAAUzxE,GAAUwE,KAAKssE,MAAM9wE,OAChE6xE,EAAgB7xE,EAEhB0sE,GAAOd,WAAW,qBAAsBvB,EAAOnnB,OAAOkuB,eAAgB,CAClEpxE,OAAQwE,KAAKssE,MAAM9wE,OACnBiB,OAAQuD,KAAKitE,QAAUI,KAI5BrtE,KAAKssE,MAAMnwE,MAAM6D,KAAKitE,QAASjtE,KAAKitE,QAAUI,EACzD,GAAC,uBAED,SAAU5wE,GACN,OAAO,IAAIqwE,EAAO9sE,KAAKssE,MAAMnwE,MAAM6D,KAAKitE,QAAUxwE,GAASuD,KAAK0c,SAAU1c,KAAKktE,YAAaltE,KAAKgtE,WACrG,GAAC,uBAED,SAAUxxE,EAAgB4xE,GACtB,IAAIvnE,EAAQ7F,KAAKstE,WAAW,EAAG9xE,IAAU4xE,GAGzC,OAFAptE,KAAKitE,SAAWpnE,EAAMrK,OAEfqK,EAAM1J,MAAM,EAAGX,EAC1B,GAAC,uBAED,WACI,OAAO8/C,GAAU3+C,KAAKqD,KAAKutE,UAAUvtE,KAAK0c,UAC9C,IAAC,qBAvCD,SAAcvP,EAAc1F,GACxB,IAAI4B,EAAQ8D,EAAK9D,MAAM,mBAEvB,OADIA,GAAShL,SAASgL,EAAM,KAAO,KAAM5B,EAASA,EAAM+X,YACjD/X,CACX,KAAC,EA1Bc,0BC1Ib,SAAU/F,GAAUpE,GACtB,MAAO,KAAOkwE,KAAAA,WAAgB/E,EAASnrE,GAC3C,CCRO,ICQD4qE,GAAS,IAAIrC,EDRI,aCUvB,SAAS4H,GAAgBhmE,GAErB,IADA,IAAM3I,EAAS,GACR2I,GACH3I,EAAOoG,QAAgB,IAARuC,GACfA,IAAU,EAEd,OAAO3I,CACX,CAEA,SAAS4uE,GAAkBpwE,EAAkBb,EAAgBjB,GAEzD,IADA,IAAIsD,EAAS,EACJvD,EAAI,EAAGA,EAAIC,EAAQD,IACxBuD,EAAmB,IAATA,EAAgBxB,EAAKb,EAASlB,GAE5C,OAAOuD,CACX,CAEA,SAAS6uE,GAAQ3E,GACb,GAAI5tE,MAAMC,QAAQ2tE,GAAS,CACvB,IAAInuB,EAAyB,GAK7B,GAJAmuB,EAAOhyD,SAAQ,SAAS42D,GACpB/yB,EAAUA,EAAQ34C,OAAOyrE,GAAQC,GACrC,IAEI/yB,EAAQr/C,QAAU,GAElB,OADAq/C,EAAQ31C,QAAQ,IAAO21C,EAAQr/C,QACxBq/C,EAGX,IAAMr/C,EAASiyE,GAAgB5yB,EAAQr/C,QAGvC,OAFAA,EAAO0J,QAAQ,IAAO1J,EAAOA,QAEtBA,EAAO0G,OAAO24C,GAIpBytB,EAAYU,IACbd,GAAOjC,mBAAmB,+BAAgC,SAAU+C,GAGxE,IAAM1rE,EAAsBlC,MAAMgS,UAAUjR,MAAMyI,KAAK6jE,EAASO,IAEhE,GAAoB,IAAhB1rE,EAAK9B,QAAgB8B,EAAK,IAAM,IAChC,OAAOA,EAEJ,GAAIA,EAAK9B,QAAU,GAEtB,OADA8B,EAAK4H,QAAQ,IAAO5H,EAAK9B,QAClB8B,EAGX,IAAM9B,EAASiyE,GAAgBnwE,EAAK9B,QAGpC,OAFAA,EAAO0J,QAAQ,IAAO1J,EAAOA,QAEtBA,EAAO0G,OAAO5E,EACzB,CAEM,SAAUpC,GAAO8tE,GACnB,OAAOG,EAAQwE,GAAQ3E,GAC3B,CAOA,SAAS6E,GAAgBvwE,EAAkBb,EAAgBqxE,EAAqBtyE,GAG5E,IAFA,IAAMsD,EAAS,GAERgvE,EAAcrxE,EAAS,EAAIjB,GAAQ,CACtC,IAAM2B,EAAUC,GAAQE,EAAMwwE,GAE9BhvE,EAAOrD,KAAK0B,EAAQ2B,SAEpBgvE,GAAe3wE,EAAQ4wE,UACLtxE,EAAS,EAAIjB,GAC3B0sE,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAIjF,MAAO,CAACmB,SAAW,EAAIvyE,EAASsD,OAAQA,EAC5C,CAGA,SAAS1B,GAAQE,EAAkBb,GAM/B,GALoB,IAAhBa,EAAK9B,QACL0sE,GAAOd,WAAW,iBAAkBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAInEtvE,EAAKb,IAAW,IAAM,CACtB,IAAMuxE,EAAe1wE,EAAKb,GAAU,IAChCA,EAAS,EAAIuxE,EAAe1wE,EAAK9B,QACjC0sE,GAAOd,WAAW,+BAAgCvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAGrF,IAAMpxE,EAASkyE,GAAkBpwE,EAAMb,EAAS,EAAGuxE,GAKnD,OAJIvxE,EAAS,EAAIuxE,EAAexyE,EAAS8B,EAAK9B,QAC1C0sE,GAAOd,WAAW,8BAA+BvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAG7EiB,GAAgBvwE,EAAMb,EAAQA,EAAS,EAAIuxE,EAAcA,EAAexyE,GAE5E,GAAI8B,EAAKb,IAAW,IAAM,CAC7B,IAAMjB,EAAS8B,EAAKb,GAAU,IAK9B,OAJIA,EAAS,EAAIjB,EAAS8B,EAAK9B,QAC3B0sE,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAGtEiB,GAAgBvwE,EAAMb,EAAQA,EAAS,EAAGjB,GAE9C,GAAI8B,EAAKb,IAAW,IAAM,CAC7B,IAAMuxE,EAAe1wE,EAAKb,GAAU,IAChCA,EAAS,EAAIuxE,EAAe1wE,EAAK9B,QACjC0sE,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAG7E,IAAMpxE,EAASkyE,GAAkBpwE,EAAMb,EAAS,EAAGuxE,GAMnD,OALIvxE,EAAS,EAAIuxE,EAAexyE,EAAS8B,EAAK9B,QAC1C0sE,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAItE,CAAEmB,SAAW,EAAIC,EAAexyE,EAASsD,OADjCqqE,EAAQ7rE,EAAKnB,MAAMM,EAAS,EAAIuxE,EAAcvxE,EAAS,EAAIuxE,EAAexyE,KAGtF,GAAI8B,EAAKb,IAAW,IAAM,CAC7B,IAAMjB,EAAS8B,EAAKb,GAAU,IAM9B,OALIA,EAAS,EAAIjB,EAAS8B,EAAK9B,QAC3B0sE,GAAOd,WAAW,iBAAkBvB,EAAOnnB,OAAOkuB,eAAgB,CAAC,GAIhE,CAAEmB,SAAW,EAAIvyE,EAASsD,OADlBqqE,EAAQ7rE,EAAKnB,MAAMM,EAAS,EAAGA,EAAS,EAAIjB,KAG/D,MAAO,CAAEuyE,SAAU,EAAGjvE,OAAQqqE,EAAQ7rE,EAAKb,IAC/C,CAEM,SAAUO,GAAOM,GACnB,IAAMuI,EAAQ4iE,EAASnrE,GACjBH,EAAUC,GAAQyI,EAAO,GAI/B,OAHI1I,EAAQ4wE,WAAaloE,EAAMrK,QAC3B0sE,GAAOjC,mBAAmB,mBAAoB,OAAQ3oE,GAEnDH,EAAQ2B,MACnB,CCzJO,ICSDopE,GAAS,IAAIrC,EDTI,iBCWvB,SAASoI,GAAmB5sE,GACnBkF,EAAYlF,EAAS,KACtB6mE,GAAOjC,mBAAmB,kBAAmB,UAAW5kE,GAQ5D,IAHA,IAAM6sE,GAFN7sE,EAAUA,EAAQE,eAEIoH,UAAU,GAAGgpB,MAAM,IAEnCw8C,EAAW,IAAIzxE,WAAW,IACvBnB,EAAI,EAAGA,EAAI,GAAIA,IACpB4yE,EAAS5yE,GAAK2yE,EAAM3yE,GAAG0N,WAAW,GAKtC,IAFA,IAAMykC,EAAS+6B,EAAS/mE,GAAUysE,IAEzB5yE,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACpBmyC,EAAOnyC,GAAK,IAAM,GAAM,IACzB2yE,EAAM3yE,GAAK2yE,EAAM3yE,GAAGqG,gBAEF,GAAjB8rC,EAAOnyC,GAAK,KAAc,IAC3B2yE,EAAM3yE,EAAI,GAAK2yE,EAAM3yE,EAAI,GAAGqG,eAIpC,MAAO,KAAOssE,EAAMjgE,KAAK,GAC7B,CAeA,IADA,IAAMmgE,GAA8C,CAAC,EAC5C7yE,GAAI,EAAGA,GAAI,GAAIA,KAAO6yE,GAAWtlE,OAAOvN,KAAMuN,OAAOvN,IAC9D,IAAK,IAAIA,GAAI,EAAGA,GAAI,GAAIA,KAAO6yE,GAAWtlE,OAAOC,aAAa,GAAKxN,KAAMuN,OAAO,GAAKvN,IAGrF,IAdeksB,GAcT4mD,GAAapxD,KAAK8a,OAdTtQ,GAFkB,iBAGzBxK,KAAKqxD,MAAgBrxD,KAAKqxD,MAAM7mD,IAC7BxK,KAAKy8B,IAAIjyB,IAAKxK,KAAKsxD,OAc9B,SAASC,GAAantE,GAOlB,IAHA,IAAI8sE,GAFJ9sE,GADAA,EAAUA,EAAQO,eACA+G,UAAU,GAAKtH,EAAQsH,UAAU,EAAG,GAAK,MAEpCgpB,MAAM,IAAInqB,KAAI,SAACuG,GAAQ,OAAOqgE,GAAWrgE,EAAI,IAAGE,KAAK,IAGrEkgE,EAAS3yE,QAAU6yE,IAAW,CACjC,IAAI79D,EAAQ29D,EAASxlE,UAAU,EAAG0lE,IAClCF,EAAW9vE,SAASmS,EAAO,IAAM,GAAK29D,EAASxlE,UAAU6H,EAAMhV,QAInE,IADA,IAAIizE,EAAW3lE,OAAO,GAAMzK,SAAS8vE,EAAU,IAAM,IAC9CM,EAASjzE,OAAS,GAAKizE,EAAW,IAAMA,EAE/C,OAAOA,CACX,CAEM,SAAUC,GAAWrtE,GACvB,IT0RwBoG,ES1RpB3I,EAAS,KAMb,GAJwB,kBAAbuC,GACP6mE,GAAOjC,mBAAmB,kBAAmB,UAAW5kE,GAGxDA,EAAQgI,MAAM,0BAGkB,OAA5BhI,EAAQsH,UAAU,EAAG,KAAetH,EAAU,KAAOA,GAEzDvC,EAASmvE,GAAmB5sE,GAGxBA,EAAQgI,MAAM,kCAAoCvK,IAAWuC,GAC7D6mE,GAAOjC,mBAAmB,uBAAwB,UAAW5kE,QAI9D,GAAIA,EAAQgI,MAAM,kCAAmC,CAQxD,IALIhI,EAAQsH,UAAU,EAAG,KAAO6lE,GAAantE,IACzC6mE,GAAOjC,mBAAmB,oBAAqB,UAAW5kE,GTmQ1CoG,EShQCpG,EAAQsH,UAAU,GAAvC7J,ETiQI,IAAImd,EAAGxU,EAAO,IAAK3J,SAAS,IShQzBgB,EAAOtD,OAAS,IAAMsD,EAAS,IAAMA,EAC5CA,EAASmvE,GAAmB,KAAOnvE,QAGnCopE,GAAOjC,mBAAmB,kBAAmB,UAAW5kE,GAG5D,OAAOvC,CACX,CAEM,SAAU6vE,GAAUttE,GACtB,IAEI,OADAqtE,GAAWrtE,IACJ,CACM,CAAf,MAAOyY,GAAQ,CACjB,OAAO,CACX,CAEM,SAAU80D,GAAevtE,GAE3B,IADA,ITiPwBoG,ESjPpBonE,GTiPoBpnE,ESjPCinE,GAAWrtE,GAASsH,UAAU,GTkP/C,IAAIsT,EAAGxU,EAAO,IAAK3J,SAAS,KSlPuB8D,cACpDitE,EAAOrzE,OAAS,IAAMqzE,EAAS,IAAMA,EAC5C,MAAO,KAAOL,GAAa,OAASK,GAAUA,CAClD,CAGM,SAAUC,GAAmBC,GAC/B,IAAIpyE,EAAe,KACnB,IACIA,EAAO+xE,GAAWK,EAAYpyE,MAChC,MAAOmd,GACLouD,GAAOjC,mBAAmB,uBAAwB,cAAe8I,GAKrE,OAAOL,GAAWrF,EAAa3nE,GAAUxG,GAAO,CAAEyB,EAFpCyJ,EAAWqiE,EAASntB,GAAU3+C,KAAKoyE,EAAYpvE,OAAOyoE,mBAED,IACvE,CAEM,SAAU4G,GAAkBryE,EAAcqF,EAAiBitE,GAO7D,OAN4B,KAAxB7F,EAAcpnE,IACdkmE,GAAOjC,mBAAmB,wBAAyB,OAAQjkE,GAE3B,KAAhConE,EAAc6F,IACd/G,GAAOjC,mBAAmB,gCAAiC,eAAgBgJ,GAExEP,GAAWrF,EAAa3nE,GAAUQ,EAAO,CAAE,OAAQwsE,GAAW/xE,GAAOqF,EAAMitE,KAAkB,IACxG,CCtJO,ICUKC,GAQAC,GAZNjH,GAAS,IAAIrC,EDNI,iBC0DvB,SAASuJ,GAAW1I,EAAyBjqE,EAAgBoJ,EAA0BvK,EAAuB+zE,GAG1G,GAAI3I,IAAWyI,GAAgBG,YAAc5I,IAAWyI,GAAgBI,oBAAqB,CAEzF,IADA,IAAIh0E,EAAI,EACC8mB,EAAI5lB,EAAS,EAAG4lB,EAAIxc,EAAMrK,QAC3BqK,EAAMwc,IAAM,IAAM,EADiBA,IAEvC9mB,IAEJ,OAAOA,EAKX,OAAImrE,IAAWyI,GAAgBK,QACpB3pE,EAAMrK,OAASiB,EAAS,EAI5B,CACX,EApEA,SAAYyyE,GACRA,EAAAA,QAAAA,GACAA,EAAAA,IAAAA,MACAA,EAAAA,IAAAA,MACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,MACH,CAND,CAAYA,KAAAA,GAAwB,KAQpC,SAAYC,GAGRA,EAAAA,oBAAAA,+BAIAA,EAAAA,WAAAA,uBAIAA,EAAAA,QAAAA,iBAIAA,EAAAA,iBAAAA,4BAKAA,EAAAA,aAAAA,qBAKAA,EAAAA,gBAAAA,mBAKAA,EAAAA,SAAAA,yBACH,CA/BD,CAAYA,KAAAA,GAAe,KA8EpB,IAAMM,GAAsDpoE,OAAOotD,OAAO,CAC7E36C,MA3CJ,SAAmB4sD,EAAyBjqE,EAAgBoJ,EAA0BvK,EAAuB+zE,GACzG,OAAOnH,GAAOjC,mBAAmB,+BAAD,OAAiCxpE,EAAO,aAAMiqE,GAAW,QAAS7gE,EACtG,EA0CI6pE,OAAQN,GACRloE,QAnBJ,SAAqBw/D,EAAyBjqE,EAAgBoJ,EAA0BvK,EAAuB+zE,GAG3G,OAAI3I,IAAWyI,GAAgBQ,UAC3Br0E,EAAOG,KAAK4zE,GACL,IAIX/zE,EAAOG,KAAK,OAGL2zE,GAAW1I,EAAQjqE,EAAQoJ,GACtC,IAUA,SAAS+pE,GAAkB/pE,EAAkBgqE,GAC1B,MAAXA,IAAmBA,EAAUJ,GAAe31D,OAEhDjU,EAAQ4iE,EAAS5iE,GAMjB,IAJA,IAAM/G,EAAwB,GAC1BvD,EAAI,EAGFA,EAAIsK,EAAMrK,QAAQ,CAEpB,IAAMuS,EAAIlI,EAAMtK,KAGhB,GAAIwS,GAAK,IAAM,EAAf,CAMA,IAAI+hE,EAAc,KACdC,EAAe,KAGnB,GAAmB,OAAV,IAAJhiE,GACD+hE,EAAc,EACdC,EAAe,SAGZ,GAAmB,OAAV,IAAJhiE,GACR+hE,EAAc,EACdC,EAAe,SAGZ,IAAmB,OAAV,IAAJhiE,GAIL,CAECxS,GAAKs0E,EADU,OAAV,IAAJ9hE,GACYohE,GAAgBI,oBAEhBJ,GAAgBG,WAFqB/zE,EAAI,EAAGsK,EAAO/G,GAIpE,SATAgxE,EAAc,EACdC,EAAe,MAYnB,GAAIx0E,EAAI,EAAIu0E,GAAejqE,EAAMrK,OAC7BD,GAAKs0E,EAAQV,GAAgBK,QAASj0E,EAAI,EAAGsK,EAAO/G,OADxD,CAQA,IAFA,IAAI8H,EAAMmH,GAAM,GAAM,EAAI+hE,EAAc,GAAM,EAErCrxE,EAAI,EAAGA,EAAIqxE,EAAarxE,IAAK,CAClC,IAAIuxE,EAAWnqE,EAAMtK,GAGrB,GAAyB,MAAT,IAAXy0E,GAA0B,CAC3Bz0E,GAAKs0E,EAAQV,GAAgBc,iBAAkB10E,EAAGsK,EAAO/G,GACzD8H,EAAM,KACN,MAGJA,EAAOA,GAAO,EAAiB,GAAXopE,EACpBz0E,IAIQ,OAARqL,IAGAA,EAAM,QACNrL,GAAKs0E,EAAQV,GAAgBe,aAAc30E,EAAI,EAAIu0E,EAAajqE,EAAO/G,EAAQ8H,GAK/EA,GAAO,OAAUA,GAAO,MACxBrL,GAAKs0E,EAAQV,GAAgBgB,gBAAiB50E,EAAI,EAAIu0E,EAAajqE,EAAO/G,EAAQ8H,GAKlFA,GAAOmpE,EACPx0E,GAAKs0E,EAAQV,GAAgBQ,SAAUp0E,EAAI,EAAIu0E,EAAajqE,EAAO/G,EAAQ8H,GAI/E9H,EAAOrD,KAAKmL,UA5ER9H,EAAOrD,KAAKsS,GA+EpB,OAAOjP,CACX,CAGM,SAAUsxE,GAAY9wE,GAA8E,IAAjEomE,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiCwJ,GAAyB38C,QAE3FmzC,GAAQwJ,GAAyB38C,UACjC21C,GAAOmI,iBACP/wE,EAAMA,EAAI4W,UAAUwvD,IAIxB,IADA,IAAI5mE,EAAS,GACJvD,EAAI,EAAGA,EAAI+D,EAAI9D,OAAQD,IAAK,CACjC,IAAMwS,EAAIzO,EAAI2J,WAAW1N,GAEzB,GAAIwS,EAAI,IACJjP,EAAOrD,KAAKsS,QAET,GAAIA,EAAI,KACXjP,EAAOrD,KAAMsS,GAAK,EAAK,KACvBjP,EAAOrD,KAAU,GAAJsS,EAAY,UAEtB,GAAoB,QAAX,MAAJA,GAAuB,CAC/BxS,IACA,IAAMywC,EAAK1sC,EAAI2J,WAAW1N,GAE1B,GAAIA,GAAK+D,EAAI9D,QAA4B,SAAZ,MAALwwC,GACpB,MAAM,IAAI9vC,MAAM,wBAIpB,IAAMo0E,EAAO,QAAgB,KAAJviE,IAAe,KAAY,KAALi+B,GAC/CltC,EAAOrD,KAAM60E,GAAQ,GAAM,KAC3BxxE,EAAOrD,KAAO60E,GAAQ,GAAM,GAAQ,KACpCxxE,EAAOrD,KAAO60E,GAAQ,EAAK,GAAQ,KACnCxxE,EAAOrD,KAAa,GAAP60E,EAAe,UAG5BxxE,EAAOrD,KAAMsS,GAAK,GAAM,KACxBjP,EAAOrD,KAAOsS,GAAK,EAAK,GAAQ,KAChCjP,EAAOrD,KAAU,GAAJsS,EAAY,KAIjC,OAAO06D,EAAS3pE,EACpB,CAEA,SAASyxE,GAAW9oE,GAChB,IAAMxJ,EAAO,OAASwJ,EAAM3J,SAAS,IACrC,MAAO,MAAQG,EAAI0K,UAAU1K,EAAIzC,OAAS,EAC9C,CAEM,SAAUg1E,GAAqB3qE,EAAkBgqE,GACnD,MAAO,IAAMD,GAAkB/pE,EAAOgqE,GAASroE,KAAI,SAACipE,GAChD,GAAIA,EAAY,IAAK,CACjB,OAAQA,GACJ,KAAK,EAAI,MAAO,MAChB,KAAK,EAAI,MAAO,MAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,OAGpB,GAAIA,GAAa,IAAMA,EAAY,IAC/B,OAAO3nE,OAAOC,aAAa0nE,GAInC,OAAIA,GAAa,MACNF,GAAWE,GAIfF,GAAyC,QADhDE,GAAa,QACoB,GAAM,OAAmBF,GAAiC,OAAT,KAAZE,GAC1E,IAAGxiE,KAAK,IAAM,GAClB,CAEM,SAAUyiE,GAAcC,GAC1B,OAAOA,EAAWnpE,KAAI,SAACipE,GACnB,OAAIA,GAAa,MACN3nE,OAAOC,aAAa0nE,IAE/BA,GAAa,MACN3nE,OAAOC,aACqB,OAA5B0nE,GAAa,GAAM,MACC,OAAT,KAAZA,IAEV,IAAGxiE,KAAK,GACZ,CAEM,SAAU2iE,GAAa/qE,EAAkBgqE,GAC3C,OAAOa,GAAcd,GAAkB/pE,EAAOgqE,GAClD,CAEM,SAAUgB,GAAiBvxE,GAA8E,IAAjEomE,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiCwJ,GAAyB38C,QACpG,OAAOq9C,GAAkBQ,GAAY9wE,EAAKomE,GAC9C,CCnSM,SAAUoL,GAAGjjE,GACf,OAAOnM,GAAU0uE,GAAYviE,GACjC,CCEO,IAAMkjE,GAAa,0CAEtB,WAAY5E,GAAiB,kCACnB,UAAW,UAAWA,GAAW,EAC3C,CAiBC,OAjBA,oCAED,WACI,MAAO,4CACX,GAAC,oBAED,SAAOM,EAAgBhlE,GACnB,IACIA,EAAQinE,GAAWjnE,GACrB,MAAOqS,GACL9Z,KAAKgxE,YAAYl3D,EAAM1O,QAAS3D,GAEpC,OAAOglE,EAAOwE,WAAWxpE,EAC7B,GAAC,oBAED,SAAOypE,GACH,OAAOxC,GAAW/E,EAAWuH,EAAOC,YAAY/I,cAAe,IACnE,KAAC,EArBqB,CAAQ8D,ICFrBkF,GAAe,0CAGxB,WAAYC,GAAY,MAED,OAFC,gBACpB,cAAMA,EAAMlkE,KAAMkkE,EAAMn8D,UAAM3V,EAAW8xE,EAAMjF,UAC1CiF,MAAQA,EAAM,CACvB,CAYC,OAZA,oCAED,WACI,OAAOrxE,KAAKqxE,MAAMC,cACtB,GAAC,oBAED,SAAO7E,EAAgBhlE,GACnB,OAAOzH,KAAKqxE,MAAMn2E,OAAOuxE,EAAQhlE,EACrC,GAAC,oBAED,SAAOypE,GACH,OAAOlxE,KAAKqxE,MAAMr0E,OAAOk0E,EAC7B,KAAC,EAlBuB,CAAQhF,ICD9BhE,GAAS,IAAIrC,EAAOhzD,IAKpB,SAAUirB,GAAK2uC,EAAgB8E,EAA8B3wE,GAC/D,IAAImV,EAA0B,KAE9B,GAAI3a,MAAMC,QAAQuF,GACfmV,EAAcnV,OAEV,GAAIA,GAA6B,kBAAZA,EAAsB,CAC9C,IAAI4wE,EAAwC,CAAC,EAE7Cz7D,EAAcw7D,EAAO/pE,KAAI,SAAC6pE,GACtB,IAAMlkE,EAAOkkE,EAAMlF,UAmBnB,OAlBKh/D,GACD+6D,GAAOd,WAAW,wDAAyDvB,EAAOnnB,OAAO2oB,iBAAkB,CACvGC,SAAU,SACV+J,MAAOA,EACP5pE,MAAO7G,IAIX4wE,EAAOrkE,IACP+6D,GAAOd,WAAW,0DAA2DvB,EAAOnnB,OAAO2oB,iBAAkB,CACzGC,SAAU,SACV+J,MAAOA,EACP5pE,MAAO7G,IAIf4wE,EAAOrkE,IAAQ,EAERvM,EAAOuM,EAClB,SAGA+6D,GAAOjC,mBAAmB,sBAAuB,QAASrlE,GAG1D2wE,EAAO/1E,SAAWua,EAAYva,QAC9B0sE,GAAOjC,mBAAmB,8BAA+B,QAASrlE,GAGtE,IAAI6wE,EAAe,IAAIpF,GAAOI,EAAO/vD,UACjCg1D,EAAgB,IAAIrF,GAAOI,EAAO/vD,UAElCi1D,EAAmD,GACvDJ,EAAOv6D,SAAQ,SAACq6D,EAAOhsE,GACnB,IAAIoC,EAAQsO,EAAY1Q,GAExB,GAAIgsE,EAAMjF,QAAS,CAEf,IAAIwF,EAAgBF,EAAcl2E,OAGlC61E,EAAMn2E,OAAOw2E,EAAejqE,GAG5B,IAAIoqE,EAAaJ,EAAaK,sBAC9BH,EAAYl2E,MAAK,SAACs2E,GACdF,EAAWE,EAAaH,EAC5B,SAGAP,EAAMn2E,OAAOu2E,EAAchqE,EAEnC,IAGAkqE,EAAY36D,SAAQ,SAACg7D,GAAWA,EAAKP,EAAaj2E,OAAS,IAE3D,IAAIA,EAASixE,EAAOwF,aAAaR,GAEjC,OADAj2E,GAAUixE,EAAOwF,aAAaP,EAElC,CAEM,SAAUQ,GAAOhB,EAAgBK,GACnC,IAAI3wE,EAAc,GAGduxE,EAAajB,EAAOkB,UAAU,GAElCb,EAAOv6D,SAAQ,SAACq6D,GACZ,IAAI5pE,EAAa,KAEjB,GAAI4pE,EAAMjF,QAAS,CACf,IAAI3vE,EAASy0E,EAAOC,YAChBkB,EAAeF,EAAWC,UAAU31E,EAAO+iB,YAC/C,IACI/X,EAAQ4pE,EAAMr0E,OAAOq1E,GACvB,MAAOv4D,GAEL,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAOkuB,eAAkB,MAAM9yD,GACzDrS,EAAQqS,GACFw4D,SAAWjB,EAAMlkE,KACvB1F,EAAM0F,KAAOkkE,EAAMlF,UACnB1kE,EAAMyN,KAAOm8D,EAAMn8D,WAIvB,IACIzN,EAAQ4pE,EAAMr0E,OAAOk0E,GACvB,MAAOp3D,GAEL,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAOkuB,eAAkB,MAAM9yD,GACzDrS,EAAQqS,GACFw4D,SAAWjB,EAAMlkE,KACvB1F,EAAM0F,KAAOkkE,EAAMlF,UACnB1kE,EAAMyN,KAAOm8D,EAAMn8D,UAId3V,GAATkI,GACA7G,EAAOnF,KAAKgM,EAEpB,IAGA,IAAM8qE,EAAchB,EAAO5yE,QAAO,SAACoqE,EAAOsI,GACtC,IAAMlkE,EAAOkkE,EAAMlF,UAKnB,OAJIh/D,IACK47D,EAAM57D,KAAS47D,EAAM57D,GAAQ,GAClC47D,EAAM57D,MAEH47D,CACX,GAAiC,CAAC,GAGlCwI,EAAOv6D,SAAQ,SAACq6D,EAAchsE,GAC1B,IAAI8H,EAAOkkE,EAAMlF,UACjB,GAAKh/D,GAA8B,IAAtBolE,EAAYplE,KAEZ,WAATA,IAAqBA,EAAO,WAEZ,MAAhBvM,EAAOuM,IAAX,CAEA,IAAM1F,EAAQ7G,EAAOyE,GAEjBoC,aAAiBvL,MACjBmL,OAAOiI,eAAe1O,EAAQuM,EAAM,CAChCtF,YAAY,EACZC,IAAK,WAAQ,MAAML,CAAO,IAG9B7G,EAAOuM,GAAQ1F,EAEvB,IAEA,IAFG,eAEMlM,GACL,IAAMkM,EAAQ7G,EAAOrF,GACjBkM,aAAiBvL,OACjBmL,OAAOiI,eAAe1O,EAAQrF,EAAG,CAC7BsM,YAAY,EACZC,IAAK,WAAQ,MAAML,CAAO,GAEjC,EAPIlM,EAAI,EAAGA,EAAIqF,EAAOpF,OAAQD,IAAK,EAA/BA,GAUT,OAAO8L,OAAOotD,OAAO7zD,EACzB,CAGO,IAAM4xE,GAAW,0CAIpB,WAAYnB,EAAc71E,EAAgB2wE,GAAiB,sBACvD,IAAMj3D,EAAQm8D,EAAMn8D,KAAO,KAAO1Z,GAAU,EAAIA,EAAQ,IAAM,IACxD4wE,GAAuB,IAAZ5wE,GAAiB61E,EAAMjF,QAInB,OAHrB,cAAM,QAASl3D,EAAMi3D,EAAWC,IAE3BiF,MAAQA,EACb,EAAK71E,OAASA,EAAO,CACzB,CAsDC,OAtDA,oCAED,WAKI,IAHA,IAAMi3E,EAAezyE,KAAKqxE,MAAMC,eAE1BxyE,EAAqB,GAClBvD,EAAI,EAAGA,EAAIyE,KAAKxE,OAAQD,IAC7BuD,EAAOrD,KAAKg3E,GAEhB,OAAO3zE,CACX,GAAC,oBAED,SAAO2tE,EAAgBhlE,GACdrM,MAAMC,QAAQoM,IACfzH,KAAKgxE,YAAY,uBAAwBvpE,GAG7C,IAAIigE,EAAQ1nE,KAAKxE,QAEF,IAAXksE,IACAA,EAAQjgE,EAAMjM,OACdixE,EAAOwE,WAAWxpE,EAAMjM,SAG5B0sE,GAAOwK,mBAAmBjrE,EAAMjM,OAAQksE,EAAO,eAAiB1nE,KAAKmsE,UAAY,IAAKnsE,KAAKmsE,UAAY,KAGvG,IADA,IAAIoF,EAAS,GACJh2E,EAAI,EAAGA,EAAIkM,EAAMjM,OAAQD,IAAOg2E,EAAO91E,KAAKuE,KAAKqxE,OAE1D,OAAOvzC,GAAK2uC,EAAQ8E,EAAQ9pE,EAChC,GAAC,oBAED,SAAOypE,GACH,IAAIxJ,EAAQ1nE,KAAKxE,QACF,IAAXksE,GAQY,IAPZA,EAAQwJ,EAAOC,YAAY3xD,YAOV0xD,EAAO5E,MAAM9wE,QAC1B0sE,GAAOd,WAAW,2BAA4BvB,EAAOnnB,OAAOkuB,eAAgB,CACxEpxE,OAAQ01E,EAAO5E,MAAM9wE,OACrBksE,MAAOA,IAKnB,IADA,IAAI6J,EAAS,GACJh2E,EAAI,EAAGA,EAAImsE,EAAOnsE,IAAOg2E,EAAO91E,KAAK,IAAI21E,GAAepxE,KAAKqxE,QAEtE,OAAOH,EAAO/D,OAAOntE,KAAKmN,KAAM+kE,GAAOhB,EAAQK,GACnD,KAAC,EAjEmB,CAAQrF,ICpKnByG,GAAa,0CAEtB,WAAYxG,GAAiB,kCACnB,OAAQ,OAAQA,GAAW,EACrC,CAYC,OAZA,oCAED,WACI,OAAO,CACX,GAAC,oBAED,SAAOM,EAAgBhlE,GACnB,OAAOglE,EAAOwE,WAAWxpE,EAAQ,EAAG,EACxC,GAAC,oBAED,SAAOypE,GACH,OAAOA,EAAO/D,OAAOntE,KAAKkV,MAAOg8D,EAAOC,YAAY9xD,SACxD,KAAC,EAhBqB,CAAQ6sD,ICErB0G,GAAkB,0CAC3B,WAAY19D,EAAci3D,GAAiB,kCAClCj3D,EAAMA,EAAMi3D,GAAW,EAChC,CAeC,OAfA,oCAED,WACI,MAAO,IACX,GAAC,oBAED,SAAOM,EAAgBhlE,GACnBA,EAAQghE,EAAShhE,GACjB,IAAIjM,EAASixE,EAAOwE,WAAWxpE,EAAMjM,QAErC,OADAA,GAAUixE,EAAOoG,WAAWprE,EAEhC,GAAC,oBAED,SAAOypE,GACH,OAAOA,EAAO3D,UAAU2D,EAAOC,YAAY3xD,YAAY,EAC3D,KAAC,EAlB0B,CAAQ0sD,IAqB1B4G,GAAW,0CACpB,WAAY3G,GAAiB,kCACnB,QAASA,EACnB,CAIC,OAJA,8BAED,SAAO+E,GACH,OAAOA,EAAO/D,OAAOntE,KAAKmN,KAAMg8D,GAAQ,qDAAa+H,IACzD,KAAC,EAPmB,CAAQ0B,ICpBnBG,GAAgB,0CAGzB,WAAYn9D,EAAcu2D,GAAiB,sBACvC,IAAIh/D,EAAO,QAAUrE,OAAO8M,GAEX,OADjB,cAAMzI,EAAMA,EAAMg/D,GAAW,IACxBv2D,KAAOA,EAAK,CACrB,CAcC,OAdA,oCAED,WACI,MAAQ,qEAAsEjN,UAAU,EAAG,EAAgB,EAAZ3I,KAAK4V,KACxG,GAAC,oBAED,SAAO62D,EAAgBhlE,GACnB,IAAInK,EAAOmrE,EAAShhE,GAEpB,OADInK,EAAK9B,SAAWwE,KAAK4V,MAAQ5V,KAAKgxE,YAAY,wBAAyBvpE,GACpEglE,EAAOoG,WAAWv1E,EAC7B,GAAC,oBAED,SAAO4zE,GACH,OAAOA,EAAO/D,OAAOntE,KAAKmN,KAAMg8D,EAAQ+H,EAAO3D,UAAUvtE,KAAK4V,OAClE,KAAC,EArBwB,CAAQs2D,ICHxB8G,GAAU,0CAEnB,WAAY7G,GAAiB,kCACnB,OAAQ,GAAIA,GAAW,EACjC,CAcC,OAdA,oCAED,WACI,OAAO,IACX,GAAC,oBAED,SAAOM,EAAgBhlE,GAEnB,OADa,MAATA,GAAiBzH,KAAKgxE,YAAY,WAAYvpE,GAC3CglE,EAAOoG,WAAW,GAC7B,GAAC,oBAED,SAAO3B,GAEH,OADAA,EAAO3D,UAAU,GACV2D,EAAO/D,OAAOntE,KAAKmN,KAAM,KACpC,KAAC,EAlBkB,CAAQ++D,ICFzB+G,GAAuC33B,GAAU3+C,MAAM,GACvDu2E,GAAgC53B,GAAU3+C,KAAK,GAC/Cw2E,GAA+B73B,GAAU3+C,KAAK,GAC9Cy2E,GAA+B93B,GAAU3+C,KAAK,GAC9C02E,GAAuC/3B,GAAU3+C,KAAK,uBACtD22E,GAAsCh4B,GAAU3+C,KAAK,sEAErD42E,GAAqCj4B,GAAU3+C,KAAK,uEACpD62E,GAAqCl4B,GAAU3+C,KAAK,sECH7C82E,GAAY,0CAIrB,WAAY79D,EAAc89D,EAAiBvH,GAAiB,sBACxD,IAAMh/D,GAASumE,EAAS,MAAO,QAAkB,EAAP99D,EAIrB,OAHrB,cAAMzI,EAAMA,EAAMg/D,GAAW,IAExBv2D,KAAOA,EACZ,EAAK89D,OAASA,EAAO,CACzB,CAqCC,OArCA,oCAED,WACI,OAAO,CACX,GAAC,oBAED,SAAOjH,EAAgBhlE,GACnB,IAAIpL,EAAIi/C,GAAU3+C,KAAK8K,GAGnBksE,EAAeL,GAAWloD,KAAuB,EAAlBqhD,EAAO/vD,UAC1C,GAAI1c,KAAK0zE,OAAQ,CACb,IAAIE,EAASD,EAAavoD,KAAiB,EAAZprB,KAAK4V,KAAW,IAC3CvZ,EAAEiyB,GAAGslD,IAAWv3E,EAAEqyB,GAAGklD,EAAOtuE,IAAI6tE,IAAKx8D,IAAIs8D,OACzCjzE,KAAKgxE,YAAY,sBAAuBvpE,QAErCpL,EAAEqyB,GAAGwkD,KAAS72E,EAAEiyB,GAAGqlD,EAAavoD,KAAiB,EAAZprB,KAAK4V,SACjD5V,KAAKgxE,YAAY,sBAAuBvpE,GAS5C,OANApL,EAAIA,EAAEia,OAAmB,EAAZtW,KAAK4V,MAAUwV,KAAiB,EAAZprB,KAAK4V,MAElC5V,KAAK0zE,SACLr3E,EAAIA,EAAEokB,SAAqB,EAAZzgB,KAAK4V,MAAUU,OAAO,EAAIm2D,EAAO/vD,WAG7C+vD,EAAOwE,WAAW50E,EAC7B,GAAC,oBAED,SAAO60E,GACH,IAAIzpE,EAAQypE,EAAOC,YAAY/lD,KAAiB,EAAZprB,KAAK4V,MAMzC,OAJI5V,KAAK0zE,SACLjsE,EAAQA,EAAMgZ,SAAqB,EAAZzgB,KAAK4V,OAGzBs7D,EAAO/D,OAAOntE,KAAKmN,KAAM1F,EACpC,KAAC,EA/CoB,CAAQykE,ICApB2H,GAAY,0CAErB,WAAY1H,GAAiB,kCACnB,SAAUA,EACpB,CAYC,OAZA,oCAED,WACI,MAAO,EACX,GAAC,oBAED,SAAOM,EAAgBhlE,GACnB,OAAO,qDAAaglE,EAAQ2D,GAAY3oE,GAC5C,GAAC,oBAED,SAAOypE,GACH,OAAON,IAAa,qDAAaM,GACrC,KAAC,EAhBoB,CAAQ0B,ICFpBkB,GAAW,0CAGpB,WAAYvC,EAAsBpF,GAAiB,sBAC/C,IAAIC,GAAU,EACRt1D,EAAuB,GAC7By6D,EAAOv6D,SAAQ,SAACq6D,GACRA,EAAMjF,UAAWA,GAAU,GAC/Bt1D,EAAMrb,KAAK41E,EAAMn8D,KACrB,IACA,IAAMA,EAAQ,SAAW4B,EAAM7I,KAAK,KAAO,IAGtB,OADrB,cAAM,QAASiH,EAAMi3D,EAAWC,IAC3BmF,OAASA,EAAO,CACzB,CAuCC,OAvCA,oCAED,WACI,IAAM3wE,EAAc,GACpBZ,KAAKuxE,OAAOv6D,SAAQ,SAACq6D,GACjBzwE,EAAOnF,KAAK41E,EAAMC,eACtB,IAGA,IAAMiB,EAAcvyE,KAAKuxE,OAAO5yE,QAAO,SAACoqE,EAAOsI,GAC3C,IAAMlkE,EAAOkkE,EAAMlF,UAKnB,OAJIh/D,IACK47D,EAAM57D,KAAS47D,EAAM57D,GAAQ,GAClC47D,EAAM57D,MAEH47D,CACX,GAAiC,CAAC,GAclC,OAXA/oE,KAAKuxE,OAAOv6D,SAAQ,SAACq6D,EAAchsE,GAC/B,IAAI8H,EAAOkkE,EAAMlF,UACZh/D,GAA8B,IAAtBolE,EAAYplE,KAEZ,WAATA,IAAqBA,EAAO,WAEZ,MAAhBvM,EAAOuM,KAEXvM,EAAOuM,GAAQvM,EAAOyE,IAC1B,IAEOgC,OAAOotD,OAAO7zD,EACzB,GAAC,oBAED,SAAO6rE,EAAgBhlE,GACnB,OAAOq2B,GAAK2uC,EAAQzsE,KAAKuxE,OAAQ9pE,EACrC,GAAC,oBAED,SAAOypE,GACH,OAAOA,EAAO/D,OAAOntE,KAAKmN,KAAM+kE,GAAOhB,EAAQlxE,KAAKuxE,QACxD,KAAC,EArDmB,CAAQrF,ICE1BhE,GAAS,IAAIrC,EAAOhzD,IA0BpBw3D,GAAoB,CAAC,EAqBvB0J,GAAgD,CAAEC,UAAU,EAAMC,QAAQ,EAAMC,SAAS,GACzFC,GAA+C,CAAEH,UAAU,EAAMC,QAAQ,GAC7E,SAASG,GAAcl/D,EAAc/H,GACjC,GAAa,UAAT+H,GAA6B,WAATA,GACpB,GAAI6+D,GAAe5mE,GAAS,OAAO,OAChC,GAAa,YAAT+H,GACP,GAAa,YAAT/H,EAAsB,OAAO,OAC9B,IAAI+H,EAAKzM,QAAQ,MAAQ,GAAc,UAATyM,IAC7Bi/D,GAAchnE,GAAS,OAAO,EAKtC,OAHI4mE,GAAe5mE,IAAkB,YAATA,IACxB+6D,GAAOjC,mBAAmB,mBAAoB,OAAQ94D,IAEnD,CACX,CAkKA,SAASknE,GAASrL,EAAa9/D,GAC3B,IAAK,IAAIC,KAAOD,EAAU6hE,GAAe/B,EAAQ7/D,EAAKD,EAAOC,GACjE,CAEO,IAAMmrE,GAA4CjtE,OAAOotD,OAAO,CAEnE8f,QAAS,UAGTC,QAAS,UAGTC,KAAM,OAGNjmB,KAAM,SAGJkmB,GAAiB,IAAIC,OAAO,sBAErBC,GAAS,WA0BlB,WAAYpK,EAAuBthE,IAAW,eACtCshE,IAAqBH,IAAqBnC,GAAOd,WAAW,iBAAkBvB,EAAOnnB,OAAO8oB,sBAAuB,CACnHC,UAAW,oBAEf4M,GAASr0E,KAAMkJ,GAEf,IAAIG,EAAQrJ,KAAKkV,KAAK7L,MAAMqrE,IAExBL,GAASr0E,KADTqJ,EACe,CACXwrE,YAAax2E,SAASgL,EAAM,IAAM,MAClCyrE,cAAeF,EAAUG,WAAW,CAChC7/D,KAAM7L,EAAM,GACZ2rE,WAAYh1E,KAAKg1E,aAErB1C,SAAU,SAGC,CACXuC,YAAa,KACbC,cAAe,KACfxC,SAA+B,MAAnBtyE,KAAKg1E,WAAsB,QAASh1E,KAAKkV,OAI7DlV,KAAKi1E,cAAe,EAEpB5tE,OAAOotD,OAAOz0D,KAClB,CAsFC,OAjFD,8BACA,SAAOk1E,GAMH,GALKA,IAAUA,EAASZ,GAAYC,SAC/BD,GAAYY,IACbhN,GAAOjC,mBAAmB,sBAAuB,SAAUiP,GAG3DA,IAAWZ,GAAY9lB,KAAM,CAC7B,IAAI1vD,EAAc,CACdoW,KAA0B,UAAlBlV,KAAKsyE,SAAwB,QAAStyE,KAAKkV,KACnD/H,KAAOnN,KAAKmN,WAAQ5N,GAMxB,MAJ6B,mBAAlBS,KAAKm1E,UAA0Br2E,EAAOq2E,QAAUn1E,KAAKm1E,SAC5Dn1E,KAAKg1E,aACLl2E,EAAOk2E,WAAah1E,KAAKg1E,WAAWxtE,KAAI,SAAC4tE,GAAI,OAAKzgE,KAAKI,MAAMqgE,EAAKF,OAAOA,GAAQ,KAE9EvgE,KAAKC,UAAU9V,GAG1B,IAAIA,EAAS,GA0Bb,MAvBsB,UAAlBkB,KAAKsyE,UACLxzE,GAAUkB,KAAK80E,cAAcI,OAAOA,GACpCp2E,GAAU,KAAOkB,KAAK60E,YAAc,EAAI,GAAI/rE,OAAO9I,KAAK60E,cAAgB,KAElD,UAAlB70E,KAAKsyE,UACD4C,IAAWZ,GAAYC,UACvBz1E,GAAUkB,KAAKkV,MAEnBpW,GAAU,IAAMkB,KAAKg1E,WAAWxtE,KAC5B,SAAC4tE,GAAI,OAAKA,EAAKF,OAAOA,EAAO,IAC/BjnE,KAAMinE,IAAWZ,GAAYG,KAAQ,KAAM,KAAO,KAEpD31E,GAAUkB,KAAKkV,KAInBggE,IAAWZ,GAAYC,WACF,IAAjBv0E,KAAKm1E,UAAoBr2E,GAAU,YACnCo2E,IAAWZ,GAAYG,MAAQz0E,KAAKmN,OACpCrO,GAAU,IAAMkB,KAAKmN,OAItBrO,CACX,IAAC,mBAED,SAAY2I,EAA8C4tE,GACtD,MAAsB,kBAAX5tE,EACAmtE,EAAUU,WAAW7tE,EAAO4tE,GAEhCT,EAAUG,WAAWttE,EAChC,GAAC,wBAED,SAAkBA,GACd,OAAImtE,EAAUW,YAAY9tE,GAAiBA,EAEpC,IAAImtE,EAAUvK,GAAmB,CACpCl9D,KAAO1F,EAAM0F,MAAQ,KACrB+H,KAAMsgE,GAAW/tE,EAAMyN,MACvBigE,QAA4B,MAAjB1tE,EAAM0tE,QAAmB,OAAQ1tE,EAAM0tE,QAClDH,WAAavtE,EAAMutE,WAAavtE,EAAMutE,WAAWxtE,IAAIotE,EAAUG,YAAa,MAEpF,GAAC,wBAED,SAAkBttE,EAAe4tE,GAU7B,OATqBllC,EAhT7B,SAAwByX,EAAeytB,GAEnC,IAAII,EAAgB7tB,EACpB,SAASwf,EAAW7rE,GAChB2sE,GAAOjC,mBAAmB,oCAAD,OAAsC1qE,GAAM,QAASqsD,EAClF,CAGA,SAAS8tB,EAAQC,GACb,IAAIxlC,EAAkB,CAAEj7B,KAAM,GAAI/H,KAAM,GAAIwoE,OAAQA,EAAQj+B,MAAO,CAAEk+B,WAAW,IAEhF,OADIP,IAAgBllC,EAAKglC,SAAU,GAC5BhlC,CACX,CANAyX,EAAQA,EAAM1gD,QAAQ,MAAO,KAW7B,IAHA,IAAIyuE,EAAoB,CAAEzgE,KAAM,GAAI/H,KAAM,GAAIuqC,MAAO,CAAEk+B,WAAW,IAC9DzlC,EAAOwlC,EAEFp6E,EAAI,EAAGA,EAAIqsD,EAAMpsD,OAAQD,IAAK,CACnC,IAAIwS,EAAI65C,EAAMrsD,GACd,OAAQwS,GACJ,IAAK,IACGoiC,EAAKuH,MAAMk+B,WAA2B,KAAdzlC,EAAKj7B,KAC7Bi7B,EAAKj7B,KAAO,QACJi7B,EAAKuH,MAAMm+B,aACnBzO,EAAW7rE,GAEf40C,EAAKuH,MAAMk+B,WAAY,EACvBzlC,EAAKj7B,KAAOsgE,GAAWrlC,EAAKj7B,MAC5Bi7B,EAAK6kC,WAAa,CAAEU,EAAQvlC,IAC5BA,EAAOA,EAAK6kC,WAAW,GACvB,MAEJ,IAAK,WACM7kC,EAAKuH,MAEM,YAAdvH,EAAKhjC,OACAkoE,GAAgBjO,EAAW7rE,GAChC40C,EAAKglC,SAAU,EACfhlC,EAAKhjC,KAAO,IAGZinE,GAAcjkC,EAAKj7B,KAAMi7B,EAAKhjC,QAASgjC,EAAKhjC,KAAO,IAEvDgjC,EAAKj7B,KAAOsgE,GAAWrlC,EAAKj7B,MAE5B,IAAI04D,EAAQz9B,GACZA,EAAOA,EAAKwlC,SACCvO,EAAW7rE,UACjBqyE,EAAM+H,OACbxlC,EAAKuH,MAAMm+B,aAAc,EACzB1lC,EAAKuH,MAAMo+B,WAAY,EACvB3lC,EAAKuH,MAAMq+B,YAAa,EACxB,MAEJ,IAAK,WACM5lC,EAAKuH,MAEM,YAAdvH,EAAKhjC,OACAkoE,GAAgBjO,EAAW7rE,GAChC40C,EAAKglC,SAAU,EACfhlC,EAAKhjC,KAAO,IAGZinE,GAAcjkC,EAAKj7B,KAAMi7B,EAAKhjC,QAASgjC,EAAKhjC,KAAO,IAEvDgjC,EAAKj7B,KAAOsgE,GAAWrlC,EAAKj7B,MAE5B,IAAI8gE,EAAqBN,EAAQvlC,EAAKwlC,QAEtCxlC,EAAKwlC,OAAOX,WAAWv5E,KAAKu6E,UACrB7lC,EAAKwlC,OACZxlC,EAAO6lC,EACP,MAGJ,IAAK,IAGG7lC,EAAKuH,MAAMk+B,WACO,KAAdzlC,EAAKj7B,OACLi7B,EAAKj7B,KAAOsgE,GAAWrlC,EAAKj7B,aACrBi7B,EAAKuH,MAAMk+B,UAClBzlC,EAAKuH,MAAMo+B,WAAY,EACvB3lC,EAAKuH,MAAMm+B,aAAc,GAK7B1lC,EAAKuH,MAAMo+B,WACO,KAAd3lC,EAAKhjC,OACa,YAAdgjC,EAAKhjC,MACAkoE,GAAgBjO,EAAW7rE,GAC5B40C,EAAKglC,SAAW/N,EAAW7rE,GAC/B40C,EAAKglC,SAAU,EACfhlC,EAAKhjC,KAAO,IACLinE,GAAcjkC,EAAKj7B,KAAMi7B,EAAKhjC,MACrCgjC,EAAKhjC,KAAO,GAEZgjC,EAAKuH,MAAMo+B,WAAY,GAKnC,MAEJ,IAAK,IACI3lC,EAAKuH,MAAMq+B,YAAc3O,EAAW7rE,GAEzC40C,EAAKj7B,MAAQnH,EAEboiC,EAAKuH,MAAMq+B,YAAa,EACxB5lC,EAAKuH,MAAMo+B,WAAY,EACvB3lC,EAAKuH,MAAMu+B,WAAY,EACvB,MAEJ,IAAK,IACI9lC,EAAKuH,MAAMu+B,WAAa7O,EAAW7rE,GAExC40C,EAAKj7B,MAAQnH,EAEboiC,EAAKuH,MAAMu+B,WAAY,EACvB9lC,EAAKuH,MAAMq+B,YAAa,EACxB5lC,EAAKuH,MAAMo+B,WAAY,EACvB,MAEJ,QACQ3lC,EAAKuH,MAAMk+B,WACXzlC,EAAKj7B,MAAQnH,EACboiC,EAAKuH,MAAMm+B,aAAc,EACzB1lC,EAAKuH,MAAMq+B,YAAa,GACjB5lC,EAAKuH,MAAMo+B,WAClB3lC,EAAKhjC,MAAQY,SACNoiC,EAAKuH,MAAMq+B,YACX5lC,EAAKuH,MAAMu+B,UAClB9lC,EAAKj7B,MAAQnH,EAEbq5D,EAAW7rE,IAoB3B,OAfI40C,EAAKwlC,QAAUzN,GAAOjC,mBAAmB,iBAAkB,QAASre,UAEjE+tB,EAAOj+B,MAEI,YAAdvH,EAAKhjC,MACAkoE,GAAgBjO,EAAWqO,EAAcj6E,OAAS,GACnD20C,EAAKglC,SAAW/N,EAAWqO,EAAcj6E,OAAS,GACtD20C,EAAKglC,SAAU,EACfhlC,EAAKhjC,KAAO,IACLinE,GAAcjkC,EAAKj7B,KAAMi7B,EAAKhjC,QACrCgjC,EAAKhjC,KAAO,IAGhBwoE,EAAOzgE,KAAOsgE,GAAWG,EAAOzgE,MAEzBygE,CACX,CA4J2BO,CAAezuE,IAAS4tE,GARhCT,EAAUG,WAAW,CACxB5nE,KAAMgjC,EAAKhjC,KACX+H,KAAMi7B,EAAKj7B,KACXigE,QAAShlC,EAAKglC,QACdH,WAAY7kC,EAAK6kC,aALzB,IAAqB7kC,CAUzB,GAAC,yBAED,SAAmB1oC,GACf,QAAmB,MAATA,IAAiBA,EAAMwtE,aACrC,KAAC,EA3IiB,GA8ItB,SAASkB,GAAY1uE,EAAe2uE,GAChC,OAyoBJ,SAAsB3uE,GAClBA,EAAQA,EAAM4uE,OAKd,IAHA,IAAIv3E,EAAS,GACTiqE,EAAQ,GACRuN,EAAQ,EACH75E,EAAS,EAAGA,EAASgL,EAAMjM,OAAQiB,IAAU,CAClD,IAAIsR,EAAItG,EAAMhL,GACJ,MAANsR,GAAuB,IAAVuoE,GACbx3E,EAAOrD,KAAKstE,GACZA,EAAQ,KAERA,GAASh7D,EACC,MAANA,EACAuoE,IACa,MAANvoE,IAEQ,MADfuoE,GAEIpO,GAAOjC,mBAAmB,yBAA0B,QAASx+D,IAKzEshE,GAASjqE,EAAOrD,KAAKstE,GAEzB,OAAOjqE,CACX,CAnqBWy3E,CAAa9uE,GAAOD,KAAI,SAACogD,GAAK,OAAKgtB,GAAUU,WAAW1tB,EAAOwuB,EAAW,GACrF,CAUO,IAAeI,GAAQ,WAQ1B,WAAYhM,EAAuBthE,IAAW,eACtCshE,IAAqBH,IACrBnC,GAAOd,WAAW,2BAA4BvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/EC,UAAW,mBAGnB4M,GAASr0E,KAAMkJ,GAEflJ,KAAKy2E,aAAc,EAEnBpvE,OAAOotD,OAAOz0D,KAClB,CAwDC,OAxDA,iCAID,SAAYyH,GACR,OAAI+uE,EAASE,WAAWjvE,GAAiBA,EAEnB,kBAAXA,EACA+uE,EAASlB,WAAW7tE,GAGxB+uE,EAASzB,WAAWttE,EAC/B,GAAC,wBAED,SAAkBA,GACd,GAAI+uE,EAASE,WAAWjvE,GAAU,OAAOA,EAEzC,OAAQA,EAAMyN,MACV,IAAK,WACD,OAAOyhE,GAAiB5B,WAAWttE,GACvC,IAAK,QACD,OAAOmvE,GAAc7B,WAAWttE,GACpC,IAAK,cACD,OAAOovE,GAAoB9B,WAAWttE,GAC1C,IAAK,QACD,OAAOqvE,GAAc/B,WAAWttE,GACpC,IAAK,WACL,IAAK,UAED,OAAO,KAGf,OAAOygE,GAAOjC,mBAAmB,0BAA2B,QAASx+D,EACzE,GAAC,wBAED,SAAkBA,GAMd,MAA4B,WAF5BA,GADAA,GADAA,EAAQA,EAAMP,QAAQ,MAAO,MACfA,QAAQ,MAAO,MAAMA,QAAQ,MAAO,MAAMA,QAAQ,OAAQ,MAC1DmvE,QAEJ1kD,MAAM,KAAK,GACXilD,GAActB,WAAW7tE,EAAMkB,UAAU,GAAG0tE,QACnB,aAAxB5uE,EAAMkqB,MAAM,KAAK,GACjBglD,GAAiBrB,WAAW7tE,EAAMkB,UAAU,GAAG0tE,QAChB,gBAA/B5uE,EAAMkqB,MAAM,KAAK,GAAG0kD,OACpBQ,GAAoBvB,WAAW7tE,EAAM4uE,QACb,UAAxB5uE,EAAMkqB,MAAM,KAAK,GAClBmlD,GAAcxB,WAAW7tE,EAAMkB,UAAU,GAAG0tE,QAG/CnO,GAAOjC,mBAAmB,uBAAwB,QAASx+D,EACtE,GAAC,wBAED,SAAkBA,GACd,SAAUA,IAASA,EAAMgvE,YAC7B,KAAC,EA3EyB,GAkFjBG,GAAc,qGA2FtB,OA3FsB,8BAGvB,SAAO1B,GAMH,GALKA,IAAUA,EAASZ,GAAYC,SAC/BD,GAAYY,IACbhN,GAAOjC,mBAAmB,sBAAuB,SAAUiP,GAG3DA,IAAWZ,GAAY9lB,KACvB,OAAO75C,KAAKC,UAAU,CAClBM,KAAM,QACN6hE,UAAW/2E,KAAK+2E,UAChB5pE,KAAMnN,KAAKmN,KACX6pE,OAAQh3E,KAAKg3E,OAAOxvE,KAAI,SAACrM,GAAK,OAAKwZ,KAAKI,MAAM5Z,EAAM+5E,OAAOA,GAAQ,MAI3E,IAAIp2E,EAAS,GAgBb,OAdIo2E,IAAWZ,GAAYC,UACvBz1E,GAAU,UAGdA,GAAUkB,KAAKmN,KAAO,IAAMnN,KAAKg3E,OAAOxvE,KACpC,SAACrM,GAAK,OAAKA,EAAM+5E,OAAOA,EAAO,IACjCjnE,KAAMinE,IAAWZ,GAAYG,KAAQ,KAAM,KAAO,KAEhDS,IAAWZ,GAAYC,SACnBv0E,KAAK+2E,YACLj4E,GAAU,cAIXA,EAAOu3E,MAClB,IAAC,mBAED,SAAY5uE,GACR,MAAsB,kBAAXA,EACAmvE,EAActB,WAAW7tE,GAE7BmvE,EAAc7B,WAAWttE,EACpC,GAAC,wBAED,SAAkBA,GACd,GAAImvE,EAAcK,gBAAgBxvE,GAAU,OAAOA,EAEhC,UAAfA,EAAMyN,MACNgzD,GAAOjC,mBAAmB,uBAAwB,QAASx+D,GAG/D,IAAMyB,EAAoC,CACtCiE,KAAM+pE,GAAiBzvE,EAAM0F,MAC7B4pE,UAAWtvE,EAAMsvE,UACjBC,OAASvvE,EAAMuvE,OAASvvE,EAAMuvE,OAAOxvE,IAAIotE,GAAUG,YAAc,GACjE7/D,KAAM,SAGV,OAAO,IAAI0hE,EAAcvM,GAAmBnhE,EAChD,GAAC,wBAED,SAAkBzB,GAEd,IAAI4B,EAAQ5B,EAAM4B,MAAM8tE,IACnB9tE,GACD6+D,GAAOjC,mBAAmB,uBAAwB,QAASx+D,GAG/D,IAAIsvE,GAAY,EAahB,OAZA1tE,EAAM,GAAGsoB,MAAM,KAAK3a,SAAQ,SAACogE,GACzB,OAAOA,EAASf,QACZ,IAAK,YACDU,GAAY,EACZ,MACJ,IAAK,GACD,MACJ,QACI7O,GAAOr+D,KAAK,qBAAuButE,GAE/C,IAEOR,EAAc7B,WAAW,CAC5B5nE,KAAM9D,EAAM,GAAGgtE,OACfU,UAAWA,EACXC,OAAQb,GAAY9sE,EAAM,IAAI,GAC9B6L,KAAM,SAEd,GAAC,6BAED,SAAuBzN,GACnB,OAAQA,GAASA,EAAMgvE,aAA8B,UAAfhvE,EAAMyN,IAChD,KAAC,EA3FsB,CAAQshE,IA8FnC,SAASa,GAAS5vE,EAAeyB,GAC7BA,EAAO+4C,IAAM,KAEb,IAAIq1B,EAAQ7vE,EAAMkqB,MAAM,KACxB,OAAqB,IAAjB2lD,EAAM97E,QACF87E,EAAM97E,OAAS,GACf0sE,GAAOjC,mBAAmB,uCAAwC,QAASx+D,GAE1E6vE,EAAM,GAAGjuE,MAAM,aAChB6+D,GAAOjC,mBAAmB,2CAA4C,QAASx+D,GAEnFyB,EAAO+4C,IAAM3G,GAAU3+C,KAAK26E,EAAM,IAC3BA,EAAM,IAGV7vE,CACX,CAEA,SAAS8vE,GAAe9vE,EAAeyB,GACnCA,EAAOsuE,UAAW,EAClBtuE,EAAOuuE,SAAU,EACjBvuE,EAAOwuE,gBAAkB,aAEzBjwE,EAAMkqB,MAAM,KAAK3a,SAAQ,SAACogE,GACtB,OAAQA,EAASf,QACb,IAAK,WACDntE,EAAOsuE,UAAW,EAClB,MACJ,IAAK,UACDtuE,EAAOuuE,SAAU,EACjBvuE,EAAOwuE,gBAAkB,UACzB,MACJ,IAAK,aACDxuE,EAAOuuE,SAAU,EACjBvuE,EAAOwuE,gBAAkB,aACzB,MACJ,IAAK,OACDxuE,EAAOsuE,UAAW,EAClBtuE,EAAOwuE,gBAAkB,OACzB,MACJ,IAAK,OACDxuE,EAAOsuE,UAAW,EAClBtuE,EAAOwuE,gBAAkB,OACzB,MACJ,IAAK,WACL,IAAK,SACL,IAAK,GACD,MACJ,QACI9tE,QAAQ8vC,IAAI,qBAAuB09B,GAE/C,GACJ,CAeA,SAASO,GAAYlwE,GACjB,IAAI3I,EAAc,CACd04E,UAAU,EACVC,SAAS,EACTC,gBAAiB,WAmDrB,OAhD6B,MAAzBjwE,EAAMiwE,iBACN54E,EAAO44E,gBAAkBjwE,EAAMiwE,gBAG/B54E,EAAO04E,SAAuC,SAA3B14E,EAAO44E,iBAAyD,SAA3B54E,EAAO44E,gBACzC,MAAlBjwE,EAAM+vE,YACC/vE,EAAM+vE,WAAc14E,EAAO04E,UAC9BtP,GAAOjC,mBAAmB,iDAAmDnnE,EAAO44E,gBAAiB,QAASjwE,GAKtH3I,EAAO24E,QAAsC,YAA3B34E,EAAO44E,gBACJ,MAAjBjwE,EAAMgwE,WACChwE,EAAMgwE,UAAa34E,EAAO24E,SAC7BvP,GAAOjC,mBAAmB,gDAAkDnnE,EAAO44E,gBAAiB,QAASjwE,IAI7F,MAAjBA,EAAMgwE,SACb34E,EAAO24E,UAAYhwE,EAAMgwE,QAGH,MAAlBhwE,EAAM+vE,UAAqB14E,EAAO24E,SAA0B,gBAAfhwE,EAAMyN,MACnDgzD,GAAOjC,mBAAmB,sCAAuC,QAASx+D,GAG9E3I,EAAO04E,WAAa/vE,EAAM+vE,SAEtB14E,EAAO04E,SACP14E,EAAO44E,gBAAkB,OAEzB54E,EAAO44E,gBAAmB54E,EAAO24E,QAAU,UAAW,aAGtD34E,EAAO24E,SAAW34E,EAAO04E,UACzBtP,GAAOjC,mBAAmB,wCAAyC,QAASx+D,IAGvD,MAAlBA,EAAM+vE,UACb14E,EAAO04E,WAAa/vE,EAAM+vE,SAC1B14E,EAAO24E,SAAW34E,EAAO04E,SACzB14E,EAAO44E,gBAAmB54E,EAAO04E,SAAW,OAAQ,WAE9B,gBAAf/vE,EAAMyN,MACbgzD,GAAOjC,mBAAmB,sCAAuC,QAASx+D,GAGvE3I,CACX,CAQO,IAAM+3E,GAAoB,qGAwF5B,OAxF4B,8BAK7B,SAAO3B,GAMH,GALKA,IAAUA,EAASZ,GAAYC,SAC/BD,GAAYY,IACbhN,GAAOjC,mBAAmB,sBAAuB,SAAUiP,GAG3DA,IAAWZ,GAAY9lB,KACvB,OAAO75C,KAAKC,UAAU,CAClBM,KAAM,cACNwiE,gBAA4C,eAAzB13E,KAAK03E,gBAAoC13E,KAAK03E,qBAAiBn4E,EAClFk4E,QAASz3E,KAAKy3E,QACdx1B,IAAMjiD,KAAKiiD,IAAMjiD,KAAKiiD,IAAIziC,gBAAYjgB,EACtCy3E,OAAQh3E,KAAKg3E,OAAOxvE,KAAI,SAACrM,GAAK,OAAKwZ,KAAKI,MAAM5Z,EAAM+5E,OAAOA,GAAQ,MAIvEA,IAAWZ,GAAYC,SACvBrM,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAO8oB,sBAAuB,CAC9FC,UAAW,oBAInB,IAAI3oE,EAAS,eAAiBkB,KAAKg3E,OAAOxvE,KACtC,SAACrM,GAAK,OAAKA,EAAM+5E,OAAOA,EAAO,IACjCjnE,KAAMinE,IAAWZ,GAAYG,KAAQ,KAAM,KAAO,KAMpD,OAJIz0E,KAAK03E,iBAA4C,eAAzB13E,KAAK03E,kBAC7B54E,GAAUkB,KAAK03E,gBAAkB,KAG9B54E,EAAOu3E,MAClB,IAAC,mBAED,SAAY5uE,GACR,MAAsB,kBAAXA,EACAovE,EAAoBvB,WAAW7tE,GAEnCovE,EAAoB9B,WAAWttE,EAC1C,GAAC,wBAED,SAAkBA,GACd,GAAIovE,EAAoBe,sBAAsBnwE,GAAU,OAAOA,EAE5C,gBAAfA,EAAMyN,MACNgzD,GAAOjC,mBAAmB,6BAA8B,QAASx+D,GAGrE,IAAIiwC,EAAQigC,GAAYlwE,GACpBiwC,EAAM8/B,UACNtP,GAAOjC,mBAAmB,iCAAkC,QAASx+D,GAGzE,IAAMyB,EAA0C,CAC5CiE,KAAM,KACN+H,KAAMzN,EAAMyN,KACZ8hE,OAASvvE,EAAMuvE,OAASvvE,EAAMuvE,OAAOxvE,IAAIotE,GAAUG,YAAa,GAChE0C,QAAS//B,EAAM+/B,QACfC,gBAAiBhgC,EAAMggC,gBACvBz1B,IAAMx6C,EAAMw6C,IAAM3G,GAAU3+C,KAAK8K,EAAMw6C,KAAM,MAGjD,OAAO,IAAI40B,EAAoBxM,GAAmBnhE,EACtD,GAAC,wBAED,SAAkBzB,GACd,IAAIyB,EAAc,CAAEgM,KAAM,eAItB2iE,GAFJpwE,EAAQ4vE,GAAS5vE,EAAOyB,IAELG,MAAM8tE,IASzB,OARKU,GAA+B,gBAArBA,EAAO,GAAGxB,QACrBnO,GAAOjC,mBAAmB,6BAA8B,QAASx+D,GAGrEyB,EAAO8tE,OAASb,GAAY0B,EAAO,GAAGxB,QAAQ,GAE9CkB,GAAeM,EAAO,GAAGxB,OAAQntE,GAE1B2tE,EAAoB9B,WAAW7rE,EAC1C,GAAC,mCAED,SAA6BzB,GACzB,OAAQA,GAASA,EAAMgvE,aAA8B,gBAAfhvE,EAAMyN,IAChD,KAAC,EAxF4B,CAAQshE,IAgG5BG,GAAiB,qGA2HzB,OA3HyB,8BAI1B,SAAOzB,GAMH,GALKA,IAAUA,EAASZ,GAAYC,SAC/BD,GAAYY,IACbhN,GAAOjC,mBAAmB,sBAAuB,SAAUiP,GAG3DA,IAAWZ,GAAY9lB,KACvB,OAAO75C,KAAKC,UAAU,CAClBM,KAAM,WACN/H,KAAMnN,KAAKmN,KACXqqE,SAAUx3E,KAAKw3E,SACfE,gBAA4C,eAAzB13E,KAAK03E,gBAAoC13E,KAAK03E,qBAAiBn4E,EAClFk4E,QAASz3E,KAAKy3E,QACdx1B,IAAMjiD,KAAKiiD,IAAMjiD,KAAKiiD,IAAIziC,gBAAYjgB,EACtCy3E,OAAQh3E,KAAKg3E,OAAOxvE,KAAI,SAACrM,GAAK,OAAKwZ,KAAKI,MAAM5Z,EAAM+5E,OAAOA,GAAQ,IACnE4C,QAAS93E,KAAK83E,QAAQtwE,KAAI,SAAClM,GAAM,OAAKqZ,KAAKI,MAAMzZ,EAAO45E,OAAOA,GAAQ,MAI/E,IAAIp2E,EAAS,GA8Bb,OA5BIo2E,IAAWZ,GAAYC,UACvBz1E,GAAU,aAGdA,GAAUkB,KAAKmN,KAAO,IAAMnN,KAAKg3E,OAAOxvE,KACpC,SAACrM,GAAK,OAAKA,EAAM+5E,OAAOA,EAAO,IACjCjnE,KAAMinE,IAAWZ,GAAYG,KAAQ,KAAM,KAAO,KAEhDS,IAAWZ,GAAYC,UACnBv0E,KAAK03E,gBACwB,eAAzB13E,KAAK03E,kBACL54E,GAAWkB,KAAK03E,gBAAkB,KAE/B13E,KAAKw3E,WACZ14E,GAAU,SAGVkB,KAAK83E,SAAW93E,KAAK83E,QAAQt8E,SAC7BsD,GAAU,YAAckB,KAAK83E,QAAQtwE,KACjC,SAAClM,GAAM,OAAKA,EAAO45E,OAAOA,EAAO,IACnCjnE,KAAK,MAAQ,MAGH,MAAZjO,KAAKiiD,MACLnjD,GAAU,IAAMkB,KAAKiiD,IAAInkD,WAAa,MAIvCgB,EAAOu3E,MAClB,IAAC,mBAED,SAAY5uE,GACR,MAAsB,kBAAXA,EACAkvE,EAAiBrB,WAAW7tE,GAEhCkvE,EAAiB5B,WAAWttE,EACvC,GAAC,wBAED,SAAkBA,GACd,GAAIkvE,EAAiBoB,mBAAmBtwE,GAAU,OAAOA,EAEtC,aAAfA,EAAMyN,MACNgzD,GAAOjC,mBAAmB,0BAA2B,QAASx+D,GAGlE,IAAIiwC,EAAQigC,GAAYlwE,GAElByB,EAAuC,CACzCgM,KAAMzN,EAAMyN,KACZ/H,KAAM+pE,GAAiBzvE,EAAM0F,MAC7BqqE,SAAU9/B,EAAM8/B,SAChBR,OAASvvE,EAAMuvE,OAASvvE,EAAMuvE,OAAOxvE,IAAIotE,GAAUG,YAAa,GAChE+C,QAAUrwE,EAAMqwE,QAAUrwE,EAAMqwE,QAAQtwE,IAAIotE,GAAUG,YAAa,GACnE0C,QAAS//B,EAAM+/B,QACfC,gBAAiBhgC,EAAMggC,gBACvBz1B,IAAMx6C,EAAMw6C,IAAM3G,GAAU3+C,KAAK8K,EAAMw6C,KAAM,MAGjD,OAAO,IAAI00B,EAAiBtM,GAAmBnhE,EACnD,GAAC,wBAED,SAAkBzB,GACd,IAAIyB,EAAc,CAAEgM,KAAM,YAGtBoiE,GAFJ7vE,EAAQ4vE,GAAS5vE,EAAOyB,IAENyoB,MAAM,aACpB2lD,EAAM97E,OAAS,GACf0sE,GAAOjC,mBAAmB,0BAA2B,QAASx+D,GAGlE,IAAIowE,EAASP,EAAM,GAAGjuE,MAAM8tE,IAa5B,GAZKU,GACD3P,GAAOjC,mBAAmB,6BAA8B,QAASx+D,GAGrEyB,EAAOiE,KAAO0qE,EAAO,GAAGxB,OACpBntE,EAAOiE,MAAQ+pE,GAAiBhuE,EAAOiE,MAE3CjE,EAAO8tE,OAASb,GAAY0B,EAAO,IAAI,GAEvCN,GAAeM,EAAO,GAAGxB,OAAQntE,GAG7BouE,EAAM97E,OAAS,EAAG,CACnB,IAAIw8E,EAAUV,EAAM,GAAGjuE,MAAM8tE,IACH,IAArBa,EAAQ,GAAG3B,QAAqC,IAArB2B,EAAQ,GAAG3B,QACtCnO,GAAOjC,mBAAmB,oBAAqB,QAASx+D,GAE5DyB,EAAO4uE,QAAU3B,GAAY6B,EAAQ,IAAI,QAEzC9uE,EAAO4uE,QAAU,GAGrB,OAAOnB,EAAiB5B,WAAW7rE,EACvC,GAAC,gCAED,SAA0BzB,GACtB,OAAQA,GAASA,EAAMgvE,aAA8B,aAAfhvE,EAAMyN,IAChD,KAAC,EA3HyB,CAAQ2hE,IAiItC,SAASoB,GAAeC,GACpB,IAAMntE,EAAMmtE,EAAShD,SAIrB,MAHY,kBAARnqE,GAAmC,mBAARA,GAC3Bm9D,GAAOjC,mBAAmB,+BAAD,OAAiCl7D,EAAI,UAAU,WAAYmtE,GAEjFA,CACX,CAEO,IAAMpB,GAAc,qGAsEtB,OAtEsB,8BAEvB,SAAO5B,GAMH,GALKA,IAAUA,EAASZ,GAAYC,SAC/BD,GAAYY,IACbhN,GAAOjC,mBAAmB,sBAAuB,SAAUiP,GAG3DA,IAAWZ,GAAY9lB,KACvB,OAAO75C,KAAKC,UAAU,CAClBM,KAAM,QACN/H,KAAMnN,KAAKmN,KACX6pE,OAAQh3E,KAAKg3E,OAAOxvE,KAAI,SAACrM,GAAK,OAAKwZ,KAAKI,MAAM5Z,EAAM+5E,OAAOA,GAAQ,MAI3E,IAAIp2E,EAAS,GAUb,OARIo2E,IAAWZ,GAAYC,UACvBz1E,GAAU,WAGdA,GAAUkB,KAAKmN,KAAO,IAAMnN,KAAKg3E,OAAOxvE,KACpC,SAACrM,GAAK,OAAKA,EAAM+5E,OAAOA,EAAO,IACjCjnE,KAAMinE,IAAWZ,GAAYG,KAAQ,KAAM,KAAO,MAEtC4B,MAClB,IAAC,mBAED,SAAY5uE,GACR,MAAsB,kBAAXA,EACAqvE,EAAcxB,WAAW7tE,GAE7BqvE,EAAc/B,WAAWttE,EACpC,GAAC,wBAED,SAAkBA,GACd,GAAIqvE,EAAcqB,gBAAgB1wE,GAAU,OAAOA,EAEhC,UAAfA,EAAMyN,MACNgzD,GAAOjC,mBAAmB,uBAAwB,QAASx+D,GAG/D,IAAMyB,EAA+B,CACjCgM,KAAMzN,EAAMyN,KACZ/H,KAAM+pE,GAAiBzvE,EAAM0F,MAC7B6pE,OAASvvE,EAAMuvE,OAASvvE,EAAMuvE,OAAOxvE,IAAIotE,GAAUG,YAAa,IAGpE,OAAOkD,GAAe,IAAInB,EAAczM,GAAmBnhE,GAC/D,GAAC,wBAED,SAAkBzB,GACd,IAAIyB,EAAc,CAAEgM,KAAM,SAEtB2iE,EAASpwE,EAAM4B,MAAM8tE,IAUzB,OATKU,GACD3P,GAAOjC,mBAAmB,0BAA2B,QAASx+D,GAGlEyB,EAAOiE,KAAO0qE,EAAO,GAAGxB,OACpBntE,EAAOiE,MAAQ+pE,GAAiBhuE,EAAOiE,MAE3CjE,EAAO8tE,OAASb,GAAY0B,EAAO,IAAI,GAEhCI,GAAenB,EAAc/B,WAAW7rE,GACnD,GAAC,6BAED,SAAuBzB,GACnB,OAAQA,GAASA,EAAMgvE,aAA8B,UAAfhvE,EAAMyN,IAChD,KAAC,EAtEsB,CAAQshE,IAyEnC,SAAShB,GAAWtgE,GAWhB,OARIA,EAAK7L,MAAM,mBACX6L,EAAO,UAAYA,EAAKvM,UAAU,GAC3BuM,EAAK7L,MAAM,oBAClB6L,EAAO,SAAWA,EAAKvM,UAAU,IAK9BuM,CACX,CAGA,IAAMkjE,GAAkB,IAAIzD,OAAO,8BACnC,SAASuC,GAAiBzvE,GAItB,OAHKA,GAAUA,EAAM4B,MAAM+uE,KACvBlQ,GAAOjC,mBAAmB,uBAAD,OAAyBx+D,EAAM,KAAK,QAASA,GAEnEA,CACX,CAEA,IAAM0vE,GAAa,IAAIxC,OAAO,gCCvgC9B,IAAMzM,GAAS,IAAIrC,EAAOhzD,IAgBpBwlE,GAAiB,IAAI1D,OAAO,mBAC5B2D,GAAkB,IAAI3D,OAAO,qBAKtB4D,GAAQ,WAGjB,WAAYxL,IAAuB,eAC/BhC,GAAe/qE,KAAM,aAAc+sE,GAAc,KACrD,CAkFC,OAlFA,iCAED,SAAUnlB,GAAgB,WAEtB,OAAQA,EAAM0qB,UACV,IAAK,UACD,OAAO,IAAIvB,GAAanpB,EAAMz6C,MAClC,IAAK,OACD,OAAO,IAAIwlE,GAAa/qB,EAAMz6C,MAClC,IAAK,SACD,OAAO,IAAI0mE,GAAYjsB,EAAMz6C,MACjC,IAAK,QACD,OAAO,IAAI2lE,GAAWlrB,EAAMz6C,MAChC,IAAK,QACD,OAAO,IAAIqlE,GAAWxyE,KAAKw4E,UAAU5wB,EAAMktB,eAAgBltB,EAAMitB,YAAajtB,EAAMz6C,MACxF,IAAK,QACD,OAAO,IAAI2mE,IAAYlsB,EAAMotB,YAAc,IAAIxtE,KAAI,SAACixE,GAChD,OAAO,EAAKD,UAAUC,EAC1B,IAAI7wB,EAAMz6C,MACd,IAAK,GACD,OAAO,IAAI6lE,GAAUprB,EAAMz6C,MAInC,IAAI9D,EAAQu+C,EAAM1yC,KAAK7L,MAAMivE,IAC7B,GAAIjvE,EAAO,CACP,IAAIuM,EAAOvX,SAASgL,EAAM,IAAM,OAIhC,OAHa,IAATuM,GAAcA,EAAO,KAAQA,EAAO,IAAO,IAC3CsyD,GAAOjC,mBAAmB,WAAa58D,EAAM,GAAK,cAAe,QAASu+C,GAEvE,IAAI6rB,GAAY79D,EAAO,EAAiB,QAAbvM,EAAM,GAAeu+C,EAAMz6C,MAKjE,GADA9D,EAAQu+C,EAAM1yC,KAAK7L,MAAMgvE,IACd,CACP,IAAIziE,EAAOvX,SAASgL,EAAM,IAI1B,OAHa,IAATuM,GAAcA,EAAO,KACrBsyD,GAAOjC,mBAAmB,uBAAwB,QAASre,GAExD,IAAImrB,GAAgBn9D,EAAMgyC,EAAMz6C,MAG3C,OAAO+6D,GAAOjC,mBAAmB,eAAgB,OAAQre,EAAM1yC,KACnE,GAAC,0BAED,WAAyB,OAAO,EAAI,GAAC,wBAErC,SAAW5X,EAAkB0vE,GACzB,OAAO,IAAIF,GAAOxvE,EAAM0C,KAAK04E,eAAgB14E,KAAK+sE,WAAYC,EAClE,GAAC,wBAED,WACI,OAAO,IAAIX,GAAOrsE,KAAK04E,eAC3B,GAAC,6BAED,SAAgB5hE,GAAwC,WAC9Cy6D,EAAuBz6D,EAAMtP,KAAI,SAAC0N,GAAI,OAAK,EAAKsjE,UAAU5D,GAAUj4E,KAAKuY,GAAM,IAErF,OADc,IAAI4+D,GAAWvC,EAAQ,KACxBD,cACjB,GAAC,oBAED,SAAOx6D,EAA0ClW,GAA0B,WACnEkW,EAAMtb,SAAWoF,EAAOpF,QACxB0sE,GAAOd,WAAW,+BAAgCvB,EAAOnnB,OAAO2oB,iBAAkB,CAC9EK,MAAO,CAAE5wD,MAAOA,EAAMtb,OAAQoF,OAAQA,EAAOpF,QAC7CiM,MAAO,CAAEqP,MAAOA,EAAOlW,OAAQA,KAIvC,IAAM2wE,EAASz6D,EAAMtP,KAAI,SAAC0N,GAAI,OAAK,EAAKsjE,UAAU5D,GAAUj4E,KAAKuY,GAAM,IACjEm8D,EAAS,IAAIyC,GAAWvC,EAAQ,KAEhC9E,EAASzsE,KAAK24E,aAEpB,OADAtH,EAAMn2E,OAAOuxE,EAAQ7rE,GACd6rE,EAAOnvE,IAClB,GAAC,oBAED,SAAOwZ,EAA0CxZ,EAAiB8vE,GAAe,WACvEmE,EAAuBz6D,EAAMtP,KAAI,SAAC0N,GAAI,OAAK,EAAKsjE,UAAU5D,GAAUj4E,KAAKuY,GAAM,IAErF,OADc,IAAI4+D,GAAWvC,EAAQ,KACxBv0E,OAAOgD,KAAK44E,WAAWnQ,EAASnrE,GAAO8vE,GACxD,KAAC,EAvFgB,GA0FRyL,GAA4B,IAAIN,GC1GvCrQ,GAAS,IAAIrC,EAAOhzD,IAIbimE,GAAe,uHAAQjN,IAQvBkN,GAAuB,uHAAQlN,IAS/BmN,GAAiB,uHAAQnN,IAQzBoN,GAAQ,qGAMhB,OANgB,sCAIjB,SAAiBxxE,GACb,SAAUA,IAASA,EAAMyxE,WAC7B,KAAC,EANgB,CAAQrN,IASvBsN,GAA8G,CAChH,aAAc,CAAE3uE,UAAW,gBAAiB2C,KAAM,QAAS6pE,OAAQ,CAAE,UAAYtQ,QAAQ,GACzF,aAAc,CAAEl8D,UAAW,iBAAkB2C,KAAM,QAAS6pE,OAAQ,CAAE,aAG1E,SAASoC,GAAgBC,EAAkBv/D,GACvC,IAAMw/D,EAAO,IAAIp9E,MAAM,0DAAD,OAA4Dm9E,IAElF,OADMC,EAAMx/D,MAAQA,EACbw/D,CACX,CAeO,IAAMC,GAAS,WAclB,WAAYC,GAAmE,2BAQ3EzO,GAAe/qE,KAAM,aANK,kBAAfw5E,EACD7kE,KAAKI,MAAMykE,GAEXA,GAG4BhyE,KAAI,SAAC0wE,GACvC,OAAO1B,GAAS75E,KAAKu7E,EACzB,IAAG/vB,QAAO,SAAC+vB,GAAQ,OAAkB,MAAZA,CAAgB,KAEzCnN,GAAe/qE,KAAM,YAAagrE,GAAS,0CAA6B,cAAtCA,IAElCD,GAAe/qE,KAAM,YAAa,CAAC,GACnC+qE,GAAe/qE,KAAM,SAAU,CAAC,GAChC+qE,GAAe/qE,KAAM,SAAU,CAAC,GAChC+qE,GAAe/qE,KAAM,UAAW,CAAC,GAGjCA,KAAKw5E,UAAUxiE,SAAQ,SAACkhE,GACpB,IAAIuB,EAAyC,KAC7C,OAAQvB,EAAShjE,MACb,IAAK,cACD,OAAI,EAAKwkE,YACLxR,GAAOr+D,KAAK,2CAIhBkhE,GAAe,EAAM,SAA+BmN,GAExD,IAAK,WAGDuB,EAAS,EAAKE,UACd,MACJ,IAAK,QAEDF,EAAS,EAAKG,OACd,MACJ,IAAK,QACDH,EAAS,EAAK/6B,OACd,MACJ,QACI,OAGR,IAAIl0C,EAAY0tE,EAAShD,SACrBuE,EAAOjvE,GACP09D,GAAOr+D,KAAK,0BAA4BW,GAI5CivE,EAAOjvE,GAAa0tE,CACxB,IAGKl4E,KAAK05E,QACN3O,GAAe/qE,KAAM,SAAU62E,GAAoBl6E,KAAK,CACpD86E,SAAS,EACTviE,KAAM,iBAId61D,GAAe/qE,KAAM,gBAAgB,EACzC,CA4iBC,OA5iBA,8BAED,SAAOk1E,GACEA,IAAUA,EAASZ,GAAYG,MAChCS,IAAWZ,GAAYC,SACvBrM,GAAOjC,mBAAmB,gDAAiD,SAAUiP,GAGzF,IAAM2E,EAAM75E,KAAKw5E,UAAUhyE,KAAI,SAAC0wE,GAAQ,OAAKA,EAAShD,OAAOA,EAAO,IAGpE,OAAIA,IAAWZ,GAAY9lB,KACf75C,KAAKC,UAAUilE,EAAIryE,KAAI,SAAC/I,GAAC,OAAKkW,KAAKI,MAAMtW,EAAE,KAGhDo7E,CACX,GAEA,yBAkBA,SAAYC,GACR,GAAIvzE,EAAYuzE,GAA2B,CACvC,IAAK,IAAM3sE,KAAQnN,KAAK25E,UACpB,GAAIG,IAA6B95E,KAAK+5E,WAAW5sE,GAC7C,OAAOnN,KAAK25E,UAAUxsE,GAG9B+6D,GAAOjC,mBAAmB,uBAAwB,UAAW6T,GAIjE,IAA+C,IAA3CA,EAAyBrxE,QAAQ,KAAa,CAC9C,IAAM0E,EAAO2sE,EAAyBzD,OAChC2D,EAAW3yE,OAAOuQ,KAAK5X,KAAK25E,WAAWxxB,QAAO,SAAC5tB,GAAC,OAAMA,EAAE5I,MAAM,KAAgB,KAAOxkB,CAAI,IAO/F,OANwB,IAApB6sE,EAASx+E,OACT0sE,GAAOjC,mBAAmB,uBAAwB,OAAQ94D,GACnD6sE,EAASx+E,OAAS,GACzB0sE,GAAOjC,mBAAmB,8BAA+B,OAAQ94D,GAG9DnN,KAAK25E,UAAUK,EAAS,IAInC,IAAMl7E,EAASkB,KAAK25E,UAAUhD,GAAiBrB,WAAWwE,GAA0B5E,UAIpF,OAHKp2E,GACDopE,GAAOjC,mBAAmB,uBAAwB,YAAa6T,GAE5Dh7E,CACX,GAEA,sBACA,SAASm7E,GACL,GAAI1zE,EAAY0zE,GAAyB,CACrC,IAAMC,EAAYD,EAAuB14E,cACzC,IAAK,IAAM4L,KAAQnN,KAAK45E,OACpB,GAAIM,IAAcl6E,KAAKm6E,cAAchtE,GACjC,OAAOnN,KAAK45E,OAAOzsE,GAG3B+6D,GAAOjC,mBAAmB,oBAAqB,YAAaiU,GAIhE,IAA6C,IAAzCD,EAAuBxxE,QAAQ,KAAa,CAC5C,IAAM0E,EAAO8sE,EAAuB5D,OAC9B2D,EAAW3yE,OAAOuQ,KAAK5X,KAAK45E,QAAQzxB,QAAO,SAAC5tB,GAAC,OAAMA,EAAE5I,MAAM,KAAgB,KAAOxkB,CAAI,IAO5F,OANwB,IAApB6sE,EAASx+E,OACT0sE,GAAOjC,mBAAmB,oBAAqB,OAAQ94D,GAChD6sE,EAASx+E,OAAS,GACzB0sE,GAAOjC,mBAAmB,2BAA4B,OAAQ94D,GAG3DnN,KAAK45E,OAAOI,EAAS,IAIhC,IAAMl7E,EAASkB,KAAK45E,OAAOhD,GAActB,WAAW2E,GAAwB/E,UAI5E,OAHKp2E,GACDopE,GAAOjC,mBAAmB,oBAAqB,YAAagU,GAEzDn7E,CACX,GAEA,sBACA,SAASg7E,GACL,GAAIvzE,EAAYuzE,GAA2B,CACvC,IAAMC,EAAa/O,GAA2DhrE,KAAKgc,YAAa,cAChG,IAAK,IAAM7O,KAAQnN,KAAK0+C,OAAQ,CAE5B,GAAIo7B,IAA6BC,EADnB/5E,KAAK0+C,OAAOvxC,IAEtB,OAAOnN,KAAK0+C,OAAOvxC,GAG3B+6D,GAAOjC,mBAAmB,oBAAqB,UAAW6T,GAI9D,IAA+C,IAA3CA,EAAyBrxE,QAAQ,KAAa,CAC9C,IAAM0E,EAAO2sE,EAAyBzD,OAChC2D,EAAW3yE,OAAOuQ,KAAK5X,KAAK0+C,QAAQyJ,QAAO,SAAC5tB,GAAC,OAAMA,EAAE5I,MAAM,KAAgB,KAAOxkB,CAAI,IAO5F,OANwB,IAApB6sE,EAASx+E,OACT0sE,GAAOjC,mBAAmB,oBAAqB,OAAQ94D,GAChD6sE,EAASx+E,OAAS,GACzB0sE,GAAOjC,mBAAmB,2BAA4B,OAAQ94D,GAG3DnN,KAAK0+C,OAAOs7B,EAAS,IAIhC,IAAMl7E,EAASkB,KAAK0+C,OAAOi4B,GAAiBrB,WAAWwE,GAA0B5E,UAIjF,OAHKp2E,GACDopE,GAAOjC,mBAAmB,oBAAqB,YAAa6T,GAEzDh7E,CACX,GAEA,wBACA,SAAWo5E,GACP,GAAyB,kBAAdA,EACP,IACIA,EAAWl4E,KAAKo6E,YAAYlC,GAC9B,MAAOp+D,GACL,IACIo+D,EAAWl4E,KAAKq6E,SAAiBnC,GACnC,MAAOluD,GACL,MAAMlQ,GAKlB,OAAOkxD,GAA2DhrE,KAAKgc,YAAa,aAA7EgvD,CAA2FkN,EACtG,GAEA,2BACA,SAAcoC,GAKV,MAJ8B,kBAAnBA,IACPA,EAAgBt6E,KAAKu6E,SAASD,IAG3BtP,GAAwChrE,KAAKgc,YAAa,gBAA1DgvD,CAA2EsP,EACtF,GAAC,2BAGD,SAAcpxE,EAAkC5L,GAC5C,OAAO0C,KAAKw6E,UAAUx9E,OAAOkM,EAAQ5L,EACzC,GAAC,2BAED,SAAc4L,EAAkCtI,GAC5C,OAAOZ,KAAKw6E,UAAUt/E,OAAOgO,EAAQtI,EACzC,GAAC,0BAED,SAAaA,GACT,OAAOZ,KAAKy6E,cAAcz6E,KAAK05E,OAAO1C,OAAQp2E,GAAU,GAC5D,GAAC,+BAED,SAAkBs3E,EAAkC56E,GACvB,kBAAd46E,IACPA,EAAWl4E,KAAKq6E,SAASnC,IAG7B,IAAMryE,EAAQ4iE,EAASnrE,GAMvB,OAJI6rE,EAAQtjE,EAAM1J,MAAM,EAAG,MAAQ6D,KAAK+5E,WAAW7B,IAC/ChQ,GAAOjC,mBAAmB,uCAAD,OAAyCiS,EAAS/qE,KAAK,KAAK,OAAQg8D,EAAQtjE,IAGlG7F,KAAK06E,cAAcxC,EAASlB,OAAQnxE,EAAM1J,MAAM,GAC3D,GAAC,+BAED,SAAkB+7E,EAAkCt3E,GAKhD,MAJyB,kBAAds3E,IACPA,EAAWl4E,KAAKq6E,SAASnC,IAGtB/O,EAAQjnE,EAAO,CAClBlC,KAAK+5E,WAAW7B,GAChBl4E,KAAKy6E,cAAcvC,EAASlB,OAAQp2E,GAAU,MAEtD,GAEA,gCACA,SAAmB+5E,EAA6Cr9E,GAC3B,kBAAtBq9E,IACPA,EAAmB36E,KAAKo6E,YAAYO,IAGxC,IAAM90E,EAAQ4iE,EAASnrE,GAMvB,OAJI6rE,EAAQtjE,EAAM1J,MAAM,EAAG,MAAQ6D,KAAK+5E,WAAWY,IAC/CzS,GAAOjC,mBAAmB,0CAAD,OAA4C0U,EAAiBxtE,KAAK,KAAK,OAAQg8D,EAAQtjE,IAG7G7F,KAAK06E,cAAcC,EAAiB3D,OAAQnxE,EAAM1J,MAAM,GACnE,GAEA,gCACA,SAAmBw+E,EAA6C/5E,GAK5D,MAJiC,kBAAtB+5E,IACPA,EAAmB36E,KAAKo6E,YAAYO,IAGjCxR,EAAQjnE,EAAO,CAClBlC,KAAK+5E,WAAWY,GAChB36E,KAAKy6E,cAAcE,EAAiB3D,OAAQp2E,GAAU,MAE9D,GAEA,kCACA,SAAqB+5E,EAA6Cr9E,GAC7B,kBAAtBq9E,IACPA,EAAmB36E,KAAKo6E,YAAYO,IAGxC,IAAI90E,EAAQ4iE,EAASnrE,GAEjBopE,EAAiB,KACjBt7D,EAAU,GACVwvE,EAAoB,KACpBC,EAAoB,KACpBC,EAAyB,KAC7B,OAAQj1E,EAAMrK,OAASwE,KAAKw6E,UAAU9B,gBAClC,KAAK,EACD,IACI,OAAO14E,KAAKw6E,UAAUx9E,OAAO29E,EAAiB7C,QAASjyE,EAC1C,CAAf,MAAOiU,GAAQ,CACjB,MAEJ,KAAK,EACD,IAAMihE,EAAW5R,EAAQtjE,EAAM1J,MAAM,EAAG,IAClC6+E,EAAU7B,GAAc4B,GAC9B,GAAIC,EACAJ,EAAY56E,KAAKw6E,UAAUx9E,OAAOg+E,EAAQhE,OAAQnxE,EAAM1J,MAAM,IAC9D0+E,EAAYG,EAAQ7tE,KACpB2tE,EAAiBE,EAAQxwE,UACrBwwE,EAAQtU,SAAUA,EAASkU,EAAU,IACvB,UAAdC,EACAzvE,EAAU,4EAAH,OAAgFuJ,KAAKC,UAAUgmE,EAAU,KAC3F,UAAdC,IACPzvE,EAAU,yEAAH,OAA6EwvE,EAAU,UAGlG,IACI,IAAM9gE,EAAQ9Z,KAAKq6E,SAASU,GAC5BH,EAAY56E,KAAKw6E,UAAUx9E,OAAO8c,EAAMk9D,OAAQnxE,EAAM1J,MAAM,IAC5D0+E,EAAY/gE,EAAM3M,KAClB2tE,EAAiBhhE,EAAMo7D,QACV,CAAf,MAAOp7D,GAAQ,EAM7B,OAAOouD,GAAOd,WAAW,wBAA0Bh8D,EAASy6D,EAAOnnB,OAAOmoB,eAAgB,CACtF1wB,OAAQwkC,EAAiBzF,SACzB53E,KAAM6rE,EAAQ7rE,GAAOs9E,UAAAA,EAAWC,UAAAA,EAAWC,eAAAA,EAAgBpU,OAAAA,GAEnE,GAEA,kCACA,SAAqBiU,EAA6C/5E,GAK9D,MAJiC,kBAAtB+5E,IACPA,EAAmB36E,KAAKo6E,YAAYO,IAGjCxR,EAAQnpE,KAAKw6E,UAAUt/E,OAAOy/E,EAAiB7C,QAASl3E,GAAU,IAC7E,GAEA,gCACA,SAAmB05E,EAAuC15E,GAA0B,WAClD,kBAAnB05E,IACPA,EAAgBt6E,KAAKu6E,SAASD,IAG9B15E,EAAOpF,OAAS8+E,EAActD,OAAOx7E,QACrC0sE,GAAOd,WAAW,0BAA4BkT,EAAcpF,SAAUrP,EAAOnnB,OAAOmpB,oBAAqB,CACrGP,SAAU,SACV7/D,MAAO7G,IAIf,IAAIq6E,EAAwC,GACvCX,EAAcvD,WAAakE,EAAOx/E,KAAKuE,KAAKm6E,cAAcG,IAE/D,IAAMY,EAAc,SAACtzB,EAAkBngD,GACnC,MAAmB,WAAfmgD,EAAM1yC,KACE47D,GAAGrpE,GACW,UAAfmgD,EAAM1yC,KACLxT,GAAUynE,EAAQ1hE,KAGX,SAAfmgD,EAAM1yC,MAAqC,mBAAXzN,IAChCA,EAASA,EAAQ,OAAQ,QAGzBmgD,EAAM1yC,KAAK7L,MAAM,YACjB5B,EAAQ6zC,GAAU3+C,KAAK8K,GAAO2gE,eAIf,YAAfxgB,EAAM1yC,MAAsB,EAAKslE,UAAUt/E,OAAQ,CAAE,WAAa,CAAEuM,IACjEkiE,EAAWR,EAAQ1hE,GAAQ,IACtC,EAyBA,IAvBA7G,EAAOoW,SAAQ,SAACvP,EAAOpC,GAEnB,IAAIuiD,EAAwB0yB,EAAetD,OAAO3xE,GAE7CuiD,EAAMutB,QAOE,MAAT1tE,EACAwzE,EAAOx/E,KAAK,MACc,UAAnBmsD,EAAM0qB,UAA2C,UAAnB1qB,EAAM0qB,SAC3CpK,GAAOjC,mBAAmB,gDAAkD,YAAcre,EAAMz6C,KAAO1F,GAChGrM,MAAMC,QAAQoM,GACrBwzE,EAAOx/E,KAAKgM,EAAMD,KAAI,SAACC,GAAK,OAAKyzE,EAAYtzB,EAAOngD,EAAM,KAE1DwzE,EAAOx/E,KAAKy/E,EAAYtzB,EAAOngD,IAblB,MAATA,GACAygE,GAAOjC,mBAAmB,qDAAuD,YAAcre,EAAMz6C,KAAO1F,EAcxH,IAGOwzE,EAAOz/E,QAAwC,OAA9By/E,EAAOA,EAAOz/E,OAAS,IAC3Cy/E,EAAOE,MAGX,OAAOF,CACX,GAAC,4BAED,SAAeX,EAAuC15E,GAA0B,WAC9C,kBAAnB05E,IACPA,EAAgBt6E,KAAKu6E,SAASD,IAGlC,IAAMW,EAAwB,GAExBG,EAA8B,GAC9BC,EAA4B,GA6BlC,OA3BKf,EAAcvD,WACfkE,EAAOx/E,KAAKuE,KAAKm6E,cAAcG,IAG/B15E,EAAOpF,SAAW8+E,EAActD,OAAOx7E,QACvC0sE,GAAOjC,mBAAmB,kCAAmC,SAAUrlE,GAG3E05E,EAActD,OAAOhgE,SAAQ,SAAC4wC,EAAOviD,GACjC,IAAMoC,EAAQ7G,EAAOyE,GACrB,GAAIuiD,EAAMutB,QACN,GAAmB,WAAfvtB,EAAM1yC,KACN+lE,EAAOx/E,KAAKq1E,GAAGrpE,SACZ,GAAmB,UAAfmgD,EAAM1yC,KACb+lE,EAAOx/E,KAAKiG,GAAU+F,QACnB,IAAuB,UAAnBmgD,EAAM0qB,UAA2C,UAAnB1qB,EAAM0qB,SAE3C,MAAM,IAAIp2E,MAAM,mBAEhB++E,EAAOx/E,KAAK,EAAK++E,UAAUt/E,OAAO,CAAE0sD,EAAM1yC,MAAQ,CAAEzN,UAGxD2zE,EAAU3/E,KAAKmsD,GACfyzB,EAAW5/E,KAAKgM,EAExB,IAEO,CACHnK,KAAM0C,KAAKw6E,UAAUt/E,OAAOkgF,EAAYC,GACxCJ,OAAQA,EAEhB,GAEA,4BACA,SAAeX,EAAuCh9E,EAAiB29E,GAKnE,GAJ8B,kBAAnBX,IACPA,EAAgBt6E,KAAKu6E,SAASD,IAGpB,MAAVW,IAAmBX,EAAcvD,UAAW,CAC5C,IAAIuE,EAAYt7E,KAAKm6E,cAAcG,GAC9B/zE,EAAY00E,EAAO,GAAI,KAAOA,EAAO,GAAG15E,gBAAkB+5E,GAC3DpT,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAO2oB,iBAAkB,CAAEC,SAAU,YAAaiU,SAAUD,EAAW7zE,MAAOwzE,EAAO,KAE7IA,EAASA,EAAO9+E,MAAM,GAG1B,IAAIg5E,EAA4B,GAC5BqG,EAA+B,GAC/BpP,EAA0B,GAE9BkO,EAActD,OAAOhgE,SAAQ,SAAC4wC,EAAOviD,GAC7BuiD,EAAMutB,QACa,WAAfvtB,EAAM1yC,MAAoC,UAAf0yC,EAAM1yC,MAAuC,UAAnB0yC,EAAM0qB,UAA2C,UAAnB1qB,EAAM0qB,UACzF6C,EAAQ15E,KAAKm5E,GAAUG,WAAW,CAAE7/D,KAAM,UAAW/H,KAAMy6C,EAAMz6C,QACjEi/D,EAAQ3wE,MAAK,KAEb05E,EAAQ15E,KAAKmsD,GACbwkB,EAAQ3wE,MAAK,KAGjB+/E,EAAW//E,KAAKmsD,GAChBwkB,EAAQ3wE,MAAK,GAErB,IAEA,IAAIggF,EAA2B,MAAVR,EAAkBj7E,KAAKw6E,UAAUx9E,OAAOm4E,EAASjzE,EAAO+4E,IAAU,KACnFS,EAAmB17E,KAAKw6E,UAAUx9E,OAAOw+E,EAAYl+E,GAAM,GAE3DwB,EAAkD,GAClD68E,EAAkB,EAAGC,EAAe,EACxCtB,EAActD,OAAOhgE,SAAQ,SAAC4wC,EAAOviD,GACjC,GAAIuiD,EAAMutB,QACN,GAAqB,MAAjBsG,EACA38E,EAAOuG,GAAS,IAAI4zE,GAAQ,CAAEC,YAAY,EAAMz3E,KAAM,YAEnD,GAAI2qE,EAAQ/mE,GACfvG,EAAOuG,GAAS,IAAI4zE,GAAQ,CAAEC,YAAY,EAAMz3E,KAAMg6E,EAAcG,YAGpE,IACI98E,EAAOuG,GAASo2E,EAAcG,KAChC,MAAO9hE,GACLhb,EAAOuG,GAASyU,OAIxB,IACIhb,EAAOuG,GAASq2E,EAAiBC,KACnC,MAAO7hE,GACLhb,EAAOuG,GAASyU,EAKxB,GAAI8tC,EAAMz6C,MAA8B,MAAtBrO,EAAO8oD,EAAMz6C,MAAe,CAC1C,IAAM1F,EAAQ3I,EAAOuG,GAGjBoC,aAAiBvL,MACjBmL,OAAOiI,eAAexQ,EAAQ8oD,EAAMz6C,KAAM,CACtCtF,YAAY,EACZC,IAAK,WAAQ,MAAMsxE,GAAgB,YAAD,OAAczkE,KAAKC,UAAUgzC,EAAMz6C,OAAU1F,EAAQ,IAG3F3I,EAAO8oD,EAAMz6C,MAAQ1F,EAGjC,IAGA,IADA,eACSlM,GACL,IAAMkM,EAAQ3I,EAAOvD,GACjBkM,aAAiBvL,OACjBmL,OAAOiI,eAAexQ,EAAQvD,EAAG,CAC7BsM,YAAY,EACZC,IAAK,WAAQ,MAAMsxE,GAAgB,SAAD,OAAW79E,GAAMkM,EAAQ,GAElE,EAPIlM,EAAI,EAAGA,EAAIuD,EAAOtD,OAAQD,IAAK,EAA/BA,GAUT,OAAO8L,OAAOotD,OAAO31D,EACzB,GAGA,8BACA,SAAiBi/B,GACb,IAAIm6C,EAAWl4E,KAAKo6E,YAAYr8C,EAAGzgC,KAAKqL,UAAU,EAAG,IAAIpH,eAEzD,OAAK22E,EAEE,IAAIa,GAAuB,CAC9B50E,KAAMnE,KAAKw6E,UAAUx9E,OAAOk7E,EAASlB,OAAQ,KAAOj5C,EAAGzgC,KAAKqL,UAAU,KACtEgyE,iBAAkBzC,EAClB/qE,KAAM+qE,EAAS/qE,KACf3C,UAAW0tE,EAAShD,SACpBX,QAASv0E,KAAK+5E,WAAW7B,GACzBzwE,MAAO6zC,GAAU3+C,KAAKohC,EAAGt2B,OAAS,OARd,IAU5B,GAMA,sBACA,SAASiyC,GACL,IAAIw+B,EAAWl4E,KAAKu6E,SAAS7gC,EAAIuhC,OAAO,IAExC,OAAK/C,GAAYA,EAASnB,UAAoB,KAOxC,IAAI+B,GAAe,CACrBwB,cAAepC,EACf/qE,KAAM+qE,EAAS/qE,KACf3C,UAAW0tE,EAAShD,SACpBhsB,MAAOlpD,KAAKm6E,cAAcjC,GAC1B/zE,KAAMnE,KAAK67E,eAAe3D,EAAUx+B,EAAIp8C,KAAMo8C,EAAIuhC,SAE1D,GAAC,wBAED,SAAW39E,GACP,IAAMw+E,EAAU3S,EAAQ7rE,GACpB46E,EAAWl4E,KAAKq6E,SAASyB,EAAQnzE,UAAU,EAAG,IAAIpH,eAEtD,OAAK22E,EAEE,IAAIc,GAAiB,CACxB70E,KAAMnE,KAAKw6E,UAAUx9E,OAAOk7E,EAASlB,OAAQ,KAAO8E,EAAQnzE,UAAU,KACtEozE,cAAe7D,EACf/qE,KAAM+qE,EAAS/qE,KACf3C,UAAW0tE,EAAShD,SACpBX,QAASv0E,KAAK+5E,WAAW7B,KAPL,IAS5B,IAGA,0BA3gBA,WACI,OAAOW,EACX,GAAC,wBAED,SAAkBx3E,GACd,OAAOqtE,GAAWrtE,EACtB,GAAC,wBAED,SAAkB62E,GACd,OAAO7O,EAAayH,GAAGoH,EAAShD,UAAW,EAAG,EAClD,GAAC,2BAED,SAAqBoF,GACjB,OAAOxJ,GAAGwJ,EAAcpF,SAC5B,GAAC,yBAygBD,SAAmBztE,GACf,SAAUA,IAASA,EAAMu0E,aAC7B,KAAC,EA3nBiB,0SClEhB9T,GAAS,IAAIrC,ECXI,2BDsJDoW,GAAU,qGAO3B,OAP2B,wCAK5B,SAAmBx0E,GACf,SAAUA,IAASA,EAAMy0E,aAC7B,KAAC,EAP2B,CAAQrQ,IA4ElBsQ,GAAQ,WAgF1B,6BACIjU,GAAOkU,cAAc,gBAAD,0BAAaD,GACjCpR,GAAe/qE,KAAM,eAAe,EACxC,CAIC,OAJA,kCA3EK,2JAC0B,gBAAMirE,GAAkB,CAChDz6D,MAAOxQ,KAAKq8E,SAAS,UACrBv6B,SAAU9hD,KAAKs8E,cAAcC,OAAM,SAACziE,GAGhC,OAAO,IACX,MACF,OAWD,OAXC,SAPMtJ,EAAK,EAALA,MAAOsxC,EAAQ,EAARA,SASX06B,EAAoB,KAAMz6B,EAAe,KAAMC,EAAuB,KAEtExxC,GAASA,EAAMsyC,gBAIf05B,EAAoBhsE,EAAMsyC,cAC1Bd,EAAuB1G,GAAU3+C,KAAK,cACtColD,EAAevxC,EAAMsyC,cAAcnsC,IAAI,GAAGrR,IAAI08C,IACjD,kBAEM,CAAEw6B,kBAAAA,EAAmBz6B,aAAAA,EAAcC,qBAAAA,EAAsBF,SAAAA,IAAU,kDAoC9E,yBACA,SAAY26B,EAAsB33E,GAC9B,OAAO9E,KAAKiF,GAAGw3E,EAAW33E,EAC9B,GAEA,4BACA,SAAe23E,EAAsB33E,GACjC,OAAO9E,KAAK4d,IAAI6+D,EAAW33E,EAC/B,IAAC,yBAYD,SAAkB2C,GACd,SAAUA,IAASA,EAAMi1E,YAC7B,KAAC,EAvFyB,0SEzNxBxU,GAAS,IAAIrC,ECTI,yBDWjB8W,GAAwC,CAC1C,aAAc,kBAAmB,UAAW,aAAc,OAAQ,OAAQ,WAAY,WAAY,eAAgB,uBAAwB,QAAS,KAAM,OAAQ,SAG/JC,GAAgB,CAClB/W,EAAOnnB,OAAOooB,mBACdjB,EAAOnnB,OAAOsoB,cACdnB,EAAOnnB,OAAOuoB,yBAuCI4V,GAAM,WA8BxB,6BACI3U,GAAOkU,cAAc,gBAAD,0BAAaS,GACjC9R,GAAe/qE,KAAM,aAAa,EACtC,CAsPC,OAlPD,kCAEM,SAAW88E,mIAEN,OADP98E,KAAK+8E,eAAe,cAAc,SACrB/8E,KAAKi6C,SAAS+iC,WAAWh9E,KAAK0uE,aAAcoO,GAAS,0FACrE,iCAEK,SAAoBA,mIAEf,OADP98E,KAAK+8E,eAAe,uBAAuB,SAC9B/8E,KAAKi6C,SAASgjC,oBAAoBj9E,KAAK0uE,aAAcoO,GAAS,0FAG/E,yBACM,SAAY/N,yIAEH,OADX/uE,KAAK+8E,eAAe,eAAe,SAClB9R,GAAkBjrE,KAAKk9E,iBAAiBnO,IAAa,OAC/D,OADDhxC,EAAK,EAAH,cACK/9B,KAAKi6C,SAASkjC,YAAYp/C,GAAG,0FAG9C,kBACM,SAAKgxC,EAA6C+N,yIAEzC,OADX98E,KAAK+8E,eAAe,QAAQ,SACX9R,GAAkBjrE,KAAKk9E,iBAAiBnO,IAAa,OAC/D,OADDhxC,EAAK,EAAH,cACK/9B,KAAKi6C,SAASr1C,KAAKm5B,EAAI++C,GAAS,0FAGjD,6BACM,SAAgB/N,2IAEP,OADX/uE,KAAK+8E,eAAe,mBAAmB,SACtB/8E,KAAKo9E,oBAAoBrO,GAAY,OACrC,OADXhxC,EAAK,EAAH,cACe/9B,KAAKg3C,gBAAgBjZ,GAAG,OACxC,OADDshB,EAAW,EAAH,cACDr/C,KAAKi6C,SAASnD,gBAAgBuI,GAAS,2FACvD,wBAEK,iJAEc,OADhBr/C,KAAK+8E,eAAe,cAAc,SACZ/8E,KAAKi6C,SAASojC,aAAY,OAAnC,OAAP/3B,EAAU,EAAH,uBACNA,EAAQr7C,SAAO,kDACzB,yBAEK,2IAEK,OADPjK,KAAK+8E,eAAe,eAAe,SACtB/8E,KAAKi6C,SAASqiC,cAAa,0FAC3C,wBAEK,2IAEK,OADPt8E,KAAK+8E,eAAe,cAAc,SACrB/8E,KAAKi6C,SAASqjC,aAAY,0FAC1C,yBAGK,SAAYnwE,mIAEP,OADPnN,KAAK+8E,eAAe,eAAe,SACtB/8E,KAAKi6C,SAASsjC,YAAYpwE,GAAK,0FAahD,8BACA,SAAiB4hE,GACb,IAAK,IAAM5lE,KAAO4lE,GAC+B,IAAzC4N,GAAuBl0E,QAAQU,IAC/B++D,GAAOjC,mBAAmB,4BAA8B98D,EAAK,cAAe4lE,GAIpF,IAAMhxC,EAAKutC,GAAYyD,GAkBvB,OAhBe,MAAXhxC,EAAGphC,KACHohC,EAAGphC,KAAOqD,KAAK0uE,aAIf3wC,EAAGphC,KAAO8M,QAAQ2hE,IAAI,CAClB3hE,QAAQC,QAAQq0B,EAAGphC,MACnBqD,KAAK0uE,eACNvD,MAAK,SAACrsE,GAIL,OAHIA,EAAO,GAAGyC,gBAAkBzC,EAAO,GAAGyC,eACtC2mE,GAAOjC,mBAAmB,wBAAyB,cAAe8I,GAE/DjwE,EAAO,EAClB,IAGGi/B,CACX,GAQA,iCACM,SAAoBgxC,sJAEqB,gBAAM9D,GAAkBjrE,KAAKk9E,iBAAiBnO,IAAa,OAsBrG,GApBY,OAFPhxC,EAAE,QAEDwmB,KACHxmB,EAAGwmB,GAAK96C,QAAQC,QAAQq0B,EAAGwmB,IAAI4mB,MAAK,SAAO5mB,GAAE,OAAIi5B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,+EACnC,MAANj5B,EAAU,yCAAW,MAAI,OACb,OADa,SACPvkD,KAAKu9E,YAAYh5B,GAAG,OAGzC,OAFc,OADTljD,EAAU,EAAH,OAET6mE,GAAOjC,mBAAmB,qCAAsC,QAAS1hB,GAC5E,kBACMljD,GAAO,+CACjB,IAGD08B,EAAGwmB,GAAGg4B,OAAM,SAACziE,GAAa,KAIxB2jE,EAAiC,MAAnB1/C,EAAGgkB,cAAmD,MAA3BhkB,EAAGikB,qBAC/B,MAAfjkB,EAAG+jB,UAAiC,IAAZ/jB,EAAG7oB,OAAcuoE,EAErB,IAAZ1/C,EAAG7oB,MAA0B,IAAZ6oB,EAAG7oB,OAAeuoE,GAC3CvV,GAAOjC,mBAAmB,4EAA6E,cAAe8I,GAFtH7G,GAAOjC,mBAAmB,+CAAgD,cAAe8I,GAK5E,IAAZhxC,EAAG7oB,MAAyB,MAAX6oB,EAAG7oB,MAAqC,MAAnB6oB,EAAGgkB,cAAmD,MAA3BhkB,EAAGikB,qBAA6B,iBAElGjkB,EAAG7oB,KAAO,EAAE,2BAEO,IAAZ6oB,EAAG7oB,MAA0B,IAAZ6oB,EAAG7oB,KAAU,iBAIlB,MAAf6oB,EAAG+jB,WAAoB/jB,EAAG+jB,SAAW9hD,KAAKs8E,eAAgB,wBAK9C,OAL8C,UAKxCt8E,KAAKs9E,aAAY,QAAjCI,EAAU,EAAH,KAEE,MAAX3/C,EAAG7oB,KAGyB,MAAxBwoE,EAAQ37B,cAAwD,MAAhC27B,EAAQ17B,sBAIxCjkB,EAAG7oB,KAAO,EAES,MAAf6oB,EAAG+jB,UAGGA,EAAW/jB,EAAG+jB,gBACb/jB,EAAG+jB,SACV/jB,EAAGgkB,aAAeD,EAClB/jB,EAAGikB,qBAAuBF,IAIH,MAAnB/jB,EAAGgkB,eAAwBhkB,EAAGgkB,aAAe27B,EAAQ37B,cAC1B,MAA3BhkB,EAAGikB,uBAAgCjkB,EAAGikB,qBAAuB07B,EAAQ17B,wBAGlD,MAApB07B,EAAQ57B,UAIX27B,GACAvV,GAAOd,WAAW,oCAAqCvB,EAAOnnB,OAAO8oB,sBAAuB,CACxFC,UAAW,wBAKA,MAAf1pC,EAAG+jB,WAAoB/jB,EAAG+jB,SAAW47B,EAAQ57B,UAGjD/jB,EAAG7oB,KAAO,GAIVgzD,GAAOd,WAAW,oCAAqCvB,EAAOnnB,OAAO8oB,sBAAuB,CACxFC,UAAW,sBAIA,IAAZ1pC,EAAG7oB,OAIa,MAAnB6oB,EAAGgkB,eAAwBhkB,EAAGgkB,aAAe27B,EAAQ37B,cAC1B,MAA3BhkB,EAAGikB,uBAAgCjkB,EAAGikB,qBAAuB07B,EAAQ17B,uBAC5E,QAgCE,OA7BS,MAAZjkB,EAAGp+B,QAAiBo+B,EAAGp+B,MAAQK,KAAKi9E,oBAAoB,YAEzC,MAAfl/C,EAAGqkB,WACHrkB,EAAGqkB,SAAWpiD,KAAKm9E,YAAYp/C,GAAIw+C,OAAM,SAACziE,GACtC,GAAI8iE,GAAcn0E,QAAQqR,EAAMlR,OAAS,EACrC,MAAMkR,EAGV,OAAOouD,GAAOd,WAAW,4EAA6EvB,EAAOnnB,OAAOyoB,wBAAyB,CACzIrtD,MAAOA,EACPikB,GAAIA,GAEZ,KAGc,MAAdA,EAAG9zB,QACH8zB,EAAG9zB,QAAUjK,KAAK29E,aAElB5/C,EAAG9zB,QAAUR,QAAQ2hE,IAAI,CACrB3hE,QAAQC,QAAQq0B,EAAG9zB,SACnBjK,KAAK29E,eACNxS,MAAK,SAAChyD,GAIL,OAHmB,IAAfA,EAAQ,IAAYA,EAAQ,KAAOA,EAAQ,IAC3C+uD,GAAOjC,mBAAmB,2BAA4B,cAAe8I,GAElE51D,EAAQ,EACnB,IACH,UAEY8xD,GAAkBltC,GAAG,4FAKtC,4BAEA,SAAe0pC,GACNznE,KAAKi6C,UAAYiuB,GAAOd,WAAW,mBAAoBvB,EAAOnnB,OAAO8oB,sBAAuB,CAC7FC,UAAYA,GAAa,kBAEjC,IAAC,uBAED,SAAgBhgE,GACZ,SAAUA,IAASA,EAAMm2E,UAC7B,KAAC,EAvRuB,GA0RfC,GAAW,0CAGpB,WAAYx8E,EAAiB44C,GAAmB,MAGO,OAHP,eAC5C,eACA8wB,IAAe,UAAM,UAAW1pE,GAChC0pE,IAAe,UAAM,WAAY9wB,GAAY,MAAM,CACvD,CA0BC,OA1BA,kCAED,WACI,OAAOxwC,QAAQC,QAAQ1J,KAAKqB,QAChC,GAAC,mBAED,SAAM+J,EAAiBq8D,GACnB,OAAOh+D,QAAQC,UAAUyhE,MAAK,WAC1BjD,GAAOd,WAAWh8D,EAASy6D,EAAOnnB,OAAO8oB,sBAAuB,CAAEC,UAAWA,GACjF,GACJ,GAAC,yBAED,SAAYr8D,GACR,OAAOpL,KAAK89E,MAAM,kCAAmC,cACzD,GAAC,6BAED,SAAgB/O,GACZ,OAAO/uE,KAAK89E,MAAM,sCAAuC,kBAC7D,GAAC,4BAED,SAAe1jE,EAAyBtD,EAA8CrP,GAClF,OAAOzH,KAAK89E,MAAM,oCAAqC,gBAC3D,GAAC,qBAED,SAAQ7jC,GACJ,OAAO,IAAI4jC,EAAW79E,KAAKqB,QAAS44C,EACxC,KAAC,EAjCmB,CAAQ4iC,oZEnVhC,OAAiBphE,GAEjB,SAASA,GAAOC,EAAKzV,GACnB,IAAKyV,EACH,MAAM,IAAIxf,MAAM+J,GAAO,mBAC3B,CAEAwV,GAAOsiE,MAAQ,SAAqBr1E,EAAG+B,EAAGxE,GACxC,GAAIyC,GAAK+B,EACP,MAAM,IAAIvO,MAAM+J,GAAQ,qBAAuByC,EAAI,OAAS+B,EAChE,2BCRA,IAAI4H,EAAQ1U,EAkCZ,SAASqgF,EAAM//D,GACb,OAAoB,IAAhBA,EAAKziB,OACA,IAAMyiB,EAENA,CACX,CAGA,SAAS+pB,EAAM/hC,GAEb,IADA,IAAIW,EAAM,GACDrL,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,IAC9BqL,GAAOo3E,EAAM/3E,EAAI1K,GAAGuC,SAAS,KAC/B,OAAO8I,CACT,CAfAyL,EAAM3L,QA9BN,SAAiBT,EAAKg4E,GACpB,GAAI7iF,MAAMC,QAAQ4K,GAChB,OAAOA,EAAI9J,QACb,IAAK8J,EACH,MAAO,GACT,IAAIW,EAAM,GACV,GAAmB,kBAARX,EAAkB,CAC3B,IAAK,IAAI1K,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,IAC9BqL,EAAIrL,GAAc,EAAT0K,EAAI1K,GACf,OAAOqL,CACX,CACE,GAAY,QAARq3E,EAAe,EACjBh4E,EAAMA,EAAIiB,QAAQ,eAAgB,KAC1B1L,OAAS,IAAM,IACrByK,EAAM,IAAMA,GACd,IAAS1K,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,GAAK,EACnCqL,EAAInL,KAAK4C,SAAS4H,EAAI1K,GAAK0K,EAAI1K,EAAI,GAAI,IAC7C,MACI,IAASA,EAAI,EAAGA,EAAI0K,EAAIzK,OAAQD,IAAK,CACnC,IAAIwS,EAAI9H,EAAIgD,WAAW1N,GACnB4kB,EAAKpS,GAAK,EACV+Q,EAAS,IAAJ/Q,EACLoS,EACFvZ,EAAInL,KAAK0kB,EAAIrB,GAEblY,EAAInL,KAAKqjB,EACjB,CAEE,OAAOlY,CACT,EASAyL,EAAM2rE,MAAQA,EAQd3rE,EAAM21B,MAAQA,EAEd31B,EAAMnX,OAAS,SAAgB2D,EAAKo/E,GAClC,MAAY,QAARA,EACKj2C,EAAMnpC,GAENA,CACX,0BCvDA,IAAIwT,EAAQ1U,EAKZ0U,EAAMoJ,OAASyiE,GACf7rE,EAAM3L,QAAUy3E,GAASz3E,QACzB2L,EAAM2rE,MAAQG,GAASH,MACvB3rE,EAAM21B,MAAQm2C,GAASn2C,MACvB31B,EAAMnX,OAASijF,GAASjjF,OA6BxBmX,EAAM+rE,OA1BN,SAAgBz3E,EAAKgX,EAAGkN,GACtB,IAAIwzD,EAAM,IAAIjjF,MAAM6hB,KAAKE,IAAIxW,EAAIyP,YAAayU,GAAQ,GACtDwzD,EAAIt4E,KAAK,GAKT,IAHA,IAAI4jB,EAAK,GAAMhM,EAAI,EACfpW,EAAIZ,EAAI0X,QAEH9iB,EAAI,EAAGA,EAAI8iF,EAAI7iF,OAAQD,IAAK,CACnC,IAAI62B,EACApU,EAAMzW,EAAEuY,MAAM6J,EAAK,GACnBpiB,EAAEmmB,SAEF0E,EADEpU,GAAO2L,GAAM,GAAK,GACfA,GAAM,GAAK3L,EAEZA,EACNzW,EAAEskB,MAAMuG,IAERA,EAAI,EAGNisD,EAAI9iF,GAAK62B,EACT7qB,EAAEwY,OAAO,EACb,CAEE,OAAOs+D,CACT,EA0DAhsE,EAAMisE,OAtDN,SAAgBn5C,EAAIE,GAClB,IAAIk5C,EAAM,CACR,GACA,IAGFp5C,EAAKA,EAAG9mB,QACRgnB,EAAKA,EAAGhnB,QAIR,IAHA,IAEImgE,EAFAxjD,EAAK,EACLC,EAAK,EAEFkK,EAAGlX,MAAM+M,GAAM,GAAKqK,EAAGpX,MAAMgN,GAAM,GAAG,CAE3C,IAMIkP,EAYAC,EAlBAq0C,EAAOt5C,EAAGrlB,MAAM,GAAKkb,EAAM,EAC3B0jD,EAAOr5C,EAAGvlB,MAAM,GAAKmb,EAAM,EACnB,IAARwjD,IACFA,GAAO,GACG,IAARC,IACFA,GAAO,GAGPv0C,EADgB,KAAP,EAANs0C,GACE,EAGO,KADZD,EAAMr5C,EAAGrlB,MAAM,GAAKkb,EAAM,IACF,IAAPwjD,GAAqB,IAARE,EAGvBD,GAFCA,EAIVF,EAAI,GAAG9iF,KAAK0uC,GAIVC,EADgB,KAAP,EAANs0C,GACE,EAGO,KADZF,EAAMn5C,EAAGvlB,MAAM,GAAKmb,EAAM,IACF,IAAPujD,GAAqB,IAARC,EAGvBC,GAFCA,EAIVH,EAAI,GAAG9iF,KAAK2uC,GAGR,EAAIpP,IAAOmP,EAAK,IAClBnP,EAAK,EAAIA,GACP,EAAIC,IAAOmP,EAAK,IAClBnP,EAAK,EAAIA,GACXkK,EAAGplB,OAAO,GACVslB,EAAGtlB,OAAO,EACd,CAEE,OAAOw+D,CACT,EAUAlsE,EAAMssE,eAPN,SAAwB/a,EAAKz2D,EAAMyxE,GACjC,IAAIz1E,EAAM,IAAMgE,EAChBy2D,EAAIx2D,UAAUD,GAAQ,WACpB,YAAqB5N,IAAdS,KAAKmJ,GAAqBnJ,KAAKmJ,GACpCnJ,KAAKmJ,GAAOy1E,EAASh6E,KAAK5E,KAChC,CACA,EAOAqS,EAAMwsE,WAJN,SAAoBh5E,GAClB,MAAwB,kBAAVA,EAAqBwM,EAAM3L,QAAQb,EAAO,OACtDA,CACJ,EAMAwM,EAAMysE,UAHN,SAAmBj5E,GACjB,OAAO,IAAIoW,IAAJ,CAAOpW,EAAO,MAAO,KAC9B,KChHIu4E,GAAS/rE,GAAM+rE,OACfE,GAASjsE,GAAMisE,OACf7iE,GAASpJ,GAAMoJ,OAEnB,SAASsjE,GAAU7pE,EAAM8pE,GACvBh/E,KAAKkV,KAAOA,EACZlV,KAAK8oB,EAAI,IAAI7M,IAAJ,CAAO+iE,EAAKl2D,EAAG,IAGxB9oB,KAAKwc,IAAMwiE,EAAK7tD,MAAQlV,IAAAA,IAAO+iE,EAAK7tD,OAASlV,IAAAA,KAAQjc,KAAK8oB,GAG1D9oB,KAAKwD,KAAO,IAAIyY,IAAJ,CAAO,GAAG+S,MAAMhvB,KAAKwc,KACjCxc,KAAKiyB,IAAM,IAAIhW,IAAJ,CAAO,GAAG+S,MAAMhvB,KAAKwc,KAChCxc,KAAKi/E,IAAM,IAAIhjE,IAAJ,CAAO,GAAG+S,MAAMhvB,KAAKwc,KAGhCxc,KAAKyG,EAAIu4E,EAAKv4E,GAAK,IAAIwV,IAAJ,CAAO+iE,EAAKv4E,EAAG,IAClCzG,KAAK+E,EAAIi6E,EAAKj6E,GAAK/E,KAAKk/E,cAAcF,EAAKj6E,EAAGi6E,EAAKG,MAGnDn/E,KAAKo/E,QAAU,IAAIhkF,MAAM,GACzB4E,KAAKq/E,QAAU,IAAIjkF,MAAM,GACzB4E,KAAKs/E,QAAU,IAAIlkF,MAAM,GACzB4E,KAAKu/E,QAAU,IAAInkF,MAAM,GAEzB4E,KAAKw/E,WAAax/E,KAAKyG,EAAIzG,KAAKyG,EAAE2P,YAAc,EAGhD,IAAIqpE,EAAcz/E,KAAKyG,GAAKzG,KAAK8oB,EAAEyD,IAAIvsB,KAAKyG,IACvCg5E,GAAeA,EAAYxxD,KAAK,KAAO,EAC1CjuB,KAAK0/E,KAAO,MAEZ1/E,KAAK2/E,eAAgB,EACrB3/E,KAAK0/E,KAAO1/E,KAAKyG,EAAEuoB,MAAMhvB,KAAKwc,KAElC,CACA,OAAiBuiE,GAqNjB,SAASa,GAAUC,EAAO3qE,GACxBlV,KAAK6/E,MAAQA,EACb7/E,KAAKkV,KAAOA,EACZlV,KAAK8/E,YAAc,IACrB,CAvNAf,GAAU3xE,UAAUo5B,MAAQ,WAC1B,MAAM,IAAItqC,MAAM,kBAClB,EAEA6iF,GAAU3xE,UAAU2yE,SAAW,WAC7B,MAAM,IAAI7jF,MAAM,kBAClB,EAEA6iF,GAAU3xE,UAAU4yE,aAAe,SAAsBl3D,EAAGvhB,GAC1DkU,GAAOqN,EAAEg3D,aACT,IAAIG,EAAUn3D,EAAEo3D,cAEZ7B,EAAMD,GAAO72E,EAAG,EAAGvH,KAAKw/E,YACxBjsD,GAAK,GAAM0sD,EAAQE,KAAO,IAAOF,EAAQE,KAAO,IAAM,EAAI,EAAI,GAClE5sD,GAAK,EAGL,IACI90B,EACA2hF,EAFAC,EAAO,GAGX,IAAK5hF,EAAI,EAAGA,EAAI4/E,EAAI7iF,OAAQiD,GAAKwhF,EAAQE,KAAM,CAC7CC,EAAO,EACP,IAAK,IAAI13E,EAAIjK,EAAIwhF,EAAQE,KAAO,EAAGz3E,GAAKjK,EAAGiK,IACzC03E,GAAQA,GAAQ,GAAK/B,EAAI31E,GAC3B23E,EAAK5kF,KAAK2kF,EACd,CAIE,IAFA,IAAIxhF,EAAIoB,KAAKsgF,OAAO,KAAM,KAAM,MAC5BzhE,EAAI7e,KAAKsgF,OAAO,KAAM,KAAM,MACvB/kF,EAAIg4B,EAAGh4B,EAAI,EAAGA,IAAK,CAC1B,IAAKkD,EAAI,EAAGA,EAAI4hF,EAAK7kF,OAAQiD,KAC3B2hF,EAAOC,EAAK5hF,MACClD,EACXsjB,EAAIA,EAAE0hE,SAASN,EAAQv6C,OAAOjnC,IACvB2hF,KAAU7kF,IACjBsjB,EAAIA,EAAE0hE,SAASN,EAAQv6C,OAAOjnC,GAAGqiB,QAErCliB,EAAIA,EAAE0G,IAAIuZ,EACd,CACE,OAAOjgB,EAAE4hF,KACX,EAEAzB,GAAU3xE,UAAUqzE,SAAW,SAAkB33D,EAAGvhB,GAClD,IAAIoW,EAAI,EAGJ+iE,EAAY53D,EAAE63D,cAAchjE,GAChCA,EAAI+iE,EAAUpuD,IAQd,IAPA,IAAIA,EAAMouD,EAAUh7C,OAGhB24C,EAAMD,GAAO72E,EAAGoW,EAAG3d,KAAKw/E,YAGxBxyD,EAAMhtB,KAAKsgF,OAAO,KAAM,KAAM,MACzB/kF,EAAI8iF,EAAI7iF,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAExC,IAAK,IAAImN,EAAI,EAAGnN,GAAK,GAAgB,IAAX8iF,EAAI9iF,GAAUA,IACtCmN,IAKF,GAJInN,GAAK,GACPmN,IACFskB,EAAMA,EAAI4zD,KAAKl4E,GAEXnN,EAAI,EACN,MACF,IAAI62B,EAAIisD,EAAI9iF,GACZkgB,GAAa,IAAN2W,GAIHpF,EAHW,WAAXlE,EAAE5T,KAEAkd,EAAI,EACApF,EAAIuzD,SAASjuD,EAAKF,EAAI,GAAM,IAE5BpF,EAAIuzD,SAASjuD,GAAMF,EAAI,GAAM,GAAGtR,OAGpCsR,EAAI,EACApF,EAAI1nB,IAAIgtB,EAAKF,EAAI,GAAM,IAEvBpF,EAAI1nB,IAAIgtB,GAAMF,EAAI,GAAM,GAAGtR,MAEzC,CACE,MAAkB,WAAXgI,EAAE5T,KAAoB8X,EAAIwzD,MAAQxzD,CAC3C,EAEA+xD,GAAU3xE,UAAUyzE,YAAc,SAAqBC,EACrDp7C,EACAq7C,EACAvkF,EACAwkF,GACA,IAMIzlF,EACAkD,EACAqqB,EARAm4D,EAAWjhF,KAAKo/E,QAChB9sD,EAAMtyB,KAAKq/E,QACXhB,EAAMr+E,KAAKs/E,QAGXniE,EAAM,EAIV,IAAK5hB,EAAI,EAAGA,EAAIiB,EAAKjB,IAAK,CAExB,IAAImlF,GADJ53D,EAAI4c,EAAOnqC,IACOolF,cAAcG,GAChCG,EAAS1lF,GAAKmlF,EAAUpuD,IACxBA,EAAI/2B,GAAKmlF,EAAUh7C,MACvB,CAGE,IAAKnqC,EAAIiB,EAAM,EAAGjB,GAAK,EAAGA,GAAK,EAAG,CAChC,IAAIqD,EAAIrD,EAAI,EACRsjB,EAAItjB,EACR,GAAoB,IAAhB0lF,EAASriF,IAA4B,IAAhBqiF,EAASpiE,GAAlC,CAQA,IAAIqiE,EAAO,CACTx7C,EAAO9mC,GACP,KACA,KACA8mC,EAAO7mB,IAI4B,IAAjC6mB,EAAO9mC,GAAG8oB,EAAErK,IAAIqoB,EAAO7mB,GAAG6I,IAC5Bw5D,EAAK,GAAKx7C,EAAO9mC,GAAG0G,IAAIogC,EAAO7mB,IAC/BqiE,EAAK,GAAKx7C,EAAO9mC,GAAGuiF,MAAMZ,SAAS76C,EAAO7mB,GAAGiC,QACM,IAA1C4kB,EAAO9mC,GAAG8oB,EAAErK,IAAIqoB,EAAO7mB,GAAG6I,EAAE4I,WACrC4wD,EAAK,GAAKx7C,EAAO9mC,GAAGuiF,MAAMZ,SAAS76C,EAAO7mB,IAC1CqiE,EAAK,GAAKx7C,EAAO9mC,GAAG0G,IAAIogC,EAAO7mB,GAAGiC,SAElCogE,EAAK,GAAKx7C,EAAO9mC,GAAGuiF,MAAMZ,SAAS76C,EAAO7mB,IAC1CqiE,EAAK,GAAKx7C,EAAO9mC,GAAGuiF,MAAMZ,SAAS76C,EAAO7mB,GAAGiC,QAG/C,IAAIzb,EAAQ,EACT,GACA,GACA,GACA,EACD,EACA,EACA,EACA,EACA,GAGEk5E,EAAMD,GAAOyC,EAAOniF,GAAImiF,EAAOliE,IAInC,IAHA1B,EAAMF,KAAKE,IAAIohE,EAAI,GAAG/iF,OAAQ2hB,GAC9BkhE,EAAIz/E,GAAK,IAAIxD,MAAM+hB,GACnBkhE,EAAIx/D,GAAK,IAAIzjB,MAAM+hB,GACd1e,EAAI,EAAGA,EAAI0e,EAAK1e,IAAK,CACxB,IAAI2iF,EAAiB,EAAZ7C,EAAI,GAAG9/E,GACZ4iF,EAAiB,EAAZ9C,EAAI,GAAG9/E,GAEhB4/E,EAAIz/E,GAAGH,GAAK4G,EAAiB,GAAV+7E,EAAK,IAAUC,EAAK,IACvChD,EAAIx/D,GAAGpgB,GAAK,EACZ6zB,EAAI1zB,GAAKsiF,CACf,CA5CA,MALM7C,EAAIz/E,GAAKw/E,GAAO2C,EAAOniF,GAAIqiF,EAASriF,GAAIoB,KAAKw/E,YAC7CnB,EAAIx/D,GAAKu/D,GAAO2C,EAAOliE,GAAIoiE,EAASpiE,GAAI7e,KAAKw/E,YAC7CriE,EAAMF,KAAKE,IAAIkhE,EAAIz/E,GAAGpD,OAAQ2hB,GAC9BA,EAAMF,KAAKE,IAAIkhE,EAAIx/D,GAAGrjB,OAAQ2hB,EA+CpC,CAEE,IAAI6P,EAAMhtB,KAAKsgF,OAAO,KAAM,KAAM,MAC9BjrE,EAAMrV,KAAKu/E,QACf,IAAKhkF,EAAI4hB,EAAK5hB,GAAK,EAAGA,IAAK,CAGzB,IAFA,IAAIgM,EAAI,EAEDhM,GAAK,GAAG,CACb,IAAIiI,GAAO,EACX,IAAK/E,EAAI,EAAGA,EAAIjC,EAAKiC,IACnB4W,EAAI5W,GAAiB,EAAZ4/E,EAAI5/E,GAAGlD,GACD,IAAX8Z,EAAI5W,KACN+E,GAAO,GAEX,IAAKA,EACH,MACF+D,IACAhM,GACN,CAII,GAHIA,GAAK,GACPgM,IACFylB,EAAMA,EAAI4zD,KAAKr5E,GACXhM,EAAI,EACN,MAEF,IAAKkD,EAAI,EAAGA,EAAIjC,EAAKiC,IAAK,CACxB,IAAI2zB,EAAI/c,EAAI5W,GAEF,IAAN2zB,IAEKA,EAAI,EACXtJ,EAAIwJ,EAAI7zB,GAAI2zB,EAAI,GAAM,GACfA,EAAI,IACXtJ,EAAIwJ,EAAI7zB,IAAK2zB,EAAI,GAAM,GAAGtR,OAG1BkM,EADa,WAAXlE,EAAE5T,KACE8X,EAAIuzD,SAASz3D,GAEbkE,EAAI1nB,IAAIwjB,GACtB,CACA,CAEE,IAAKvtB,EAAI,EAAGA,EAAIiB,EAAKjB,IACnB+2B,EAAI/2B,GAAK,KAEX,OAAIylF,EACKh0D,EAEAA,EAAIwzD,KACf,EAOAzB,GAAUa,UAAYA,GAEtBA,GAAUxyE,UAAU0hB,GAAK,WACvB,MAAM,IAAI5yB,MAAM,kBAClB,EAEA0jF,GAAUxyE,UAAU2yE,SAAW,WAC7B,OAAO//E,KAAK6/E,MAAME,SAAS//E,KAC7B,EAEA++E,GAAU3xE,UAAUk0E,YAAc,SAAqBz7E,EAAOo4E,GAC5Dp4E,EAAQwM,GAAM3L,QAAQb,EAAOo4E,GAE7B,IAAIzhF,EAAMwD,KAAK8oB,EAAEzgB,aAGjB,IAAkB,IAAbxC,EAAM,IAA4B,IAAbA,EAAM,IAA4B,IAAbA,EAAM,KACjDA,EAAMrK,OAAS,IAAM,EAAIgB,EAS3B,OARiB,IAAbqJ,EAAM,GACR4V,GAAO5V,EAAMA,EAAMrK,OAAS,GAAK,IAAM,GACnB,IAAbqK,EAAM,IACb4V,GAAO5V,EAAMA,EAAMrK,OAAS,GAAK,IAAM,GAE9BwE,KAAKwmC,MAAM3gC,EAAM1J,MAAM,EAAG,EAAIK,GACvCqJ,EAAM1J,MAAM,EAAIK,EAAK,EAAI,EAAIA,IAG1B,IAAkB,IAAbqJ,EAAM,IAA4B,IAAbA,EAAM,KAC3BA,EAAMrK,OAAS,IAAMgB,EAC/B,OAAOwD,KAAKuhF,WAAW17E,EAAM1J,MAAM,EAAG,EAAIK,GAAmB,IAAbqJ,EAAM,IAExD,MAAM,IAAI3J,MAAM,uBAClB,EAEA0jF,GAAUxyE,UAAUo0E,iBAAmB,SAA0BvD,GAC/D,OAAOj+E,KAAK9E,OAAO+iF,GAAK,EAC1B,EAEA2B,GAAUxyE,UAAUugE,QAAU,SAAiB3D,GAC7C,IAAIxtE,EAAMwD,KAAK6/E,MAAM/2D,EAAEzgB,aACnBof,EAAIznB,KAAKyhF,OAAO/6E,QAAQ,KAAMlK,GAElC,OAAIwtE,EACK,CAAEhqE,KAAK0hF,OAAOp0D,SAAW,EAAO,GAAOprB,OAAOulB,GAEhD,CAAE,GAAOvlB,OAAOulB,EAAGznB,KAAK0hF,OAAOh7E,QAAQ,KAAMlK,GACtD,EAEAojF,GAAUxyE,UAAUlS,OAAS,SAAgB+iF,EAAKjU,GAChD,OAAO33D,GAAMnX,OAAO8E,KAAK2tE,QAAQ3D,GAAUiU,EAC7C,EAEA2B,GAAUxyE,UAAUskC,WAAa,SAAoB/F,GACnD,GAAI3rC,KAAK8/E,YACP,OAAO9/E,KAET,IAAI8/E,EAAc,CAChBG,QAAS,KACT5B,IAAK,KACLh7C,KAAM,MAOR,OALAy8C,EAAYzB,IAAMr+E,KAAK2gF,cAAc,GACrCb,EAAYG,QAAUjgF,KAAKkgF,YAAY,EAAGv0C,GAC1Cm0C,EAAYz8C,KAAOrjC,KAAK2hF,WACxB3hF,KAAK8/E,YAAcA,EAEZ9/E,IACT,EAEA4/E,GAAUxyE,UAAUw0E,YAAc,SAAqBr6E,GACrD,IAAKvH,KAAK8/E,YACR,OAAO,EAET,IAAIG,EAAUjgF,KAAK8/E,YAAYG,QAC/B,QAAKA,GAGEA,EAAQv6C,OAAOlqC,QAAUyhB,KAAKS,MAAMnW,EAAE6O,YAAc,GAAK6pE,EAAQE,KAC1E,EAEAP,GAAUxyE,UAAU8yE,YAAc,SAAqBC,EAAMx0C,GAC3D,GAAI3rC,KAAK8/E,aAAe9/E,KAAK8/E,YAAYG,QACvC,OAAOjgF,KAAK8/E,YAAYG,QAI1B,IAFA,IAAIA,EAAU,CAAEjgF,MACZgtB,EAAMhtB,KACDzE,EAAI,EAAGA,EAAIowC,EAAOpwC,GAAK4kF,EAAM,CACpC,IAAK,IAAI1hF,EAAI,EAAGA,EAAI0hF,EAAM1hF,IACxBuuB,EAAMA,EAAI60D,MACZ5B,EAAQxkF,KAAKuxB,EACjB,CACE,MAAO,CACLmzD,KAAMA,EACNz6C,OAAQu6C,EAEZ,EAEAL,GAAUxyE,UAAUuzE,cAAgB,SAAuBruD,GACzD,GAAItyB,KAAK8/E,aAAe9/E,KAAK8/E,YAAYzB,IACvC,OAAOr+E,KAAK8/E,YAAYzB,IAK1B,IAHA,IAAIz3E,EAAM,CAAE5G,MACRmd,GAAO,GAAKmV,GAAO,EACnBuvD,EAAc,IAAR1kE,EAAY,KAAOnd,KAAK6hF,MACzBtmF,EAAI,EAAGA,EAAI4hB,EAAK5hB,IACvBqL,EAAIrL,GAAKqL,EAAIrL,EAAI,GAAG+J,IAAIu8E,GAC1B,MAAO,CACLvvD,IAAKA,EACLoT,OAAQ9+B,EAEZ,EAEAg5E,GAAUxyE,UAAUu0E,SAAW,WAC7B,OAAO,IACT,EAEA/B,GAAUxyE,UAAUwzE,KAAO,SAAcr5E,GAEvC,IADA,IAAIkD,EAAIzK,KACCzE,EAAI,EAAGA,EAAIgM,EAAGhM,IACrBkP,EAAIA,EAAEo3E,MACR,OAAOp3E,CACT,yBC5X6B,oBAAlBpD,OAAO+jD,OAEhBx4C,EAAOjV,QAAU,SAAkBie,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAKxO,UAAY/F,OAAO+jD,OAAOvvC,EAAUzO,UAAW,CAClD4O,YAAa,CACXvU,MAAOmU,EACP/T,YAAY,EACZi+D,UAAU,EACVgc,cAAc,KAIxB,EAGElvE,EAAOjV,QAAU,SAAkBie,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAAS3O,UAAYyO,EAAUzO,UAC/BwO,EAAKxO,UAAY,IAAI2O,EACrBH,EAAKxO,UAAU4O,YAAcJ,CACnC,CACA,KClBIH,GAASpJ,GAAMoJ,OAEnB,SAASsmE,GAAW/C,GAClBgD,GAAKp9E,KAAK5E,KAAM,QAASg/E,GAEzBh/E,KAAKpB,EAAI,IAAIqd,IAAJ,CAAO+iE,EAAKpgF,EAAG,IAAIowB,MAAMhvB,KAAKwc,KACvCxc,KAAK6e,EAAI,IAAI5C,IAAJ,CAAO+iE,EAAKngE,EAAG,IAAImQ,MAAMhvB,KAAKwc,KACvCxc,KAAKiiF,KAAOjiF,KAAKi/E,IAAI5uD,UAErBrwB,KAAKkiF,MAAqC,IAA7BliF,KAAKpB,EAAEwwB,UAAUnB,KAAK,GACnCjuB,KAAKmiF,OAAmD,IAA1CniF,KAAKpB,EAAEwwB,UAAUlN,IAAIliB,KAAK8oB,GAAGmF,MAAM,GAGjDjuB,KAAKoiF,KAAOpiF,KAAKqiF,iBAAiBrD,GAClCh/E,KAAKsiF,YAAc,IAAIlnF,MAAM,GAC7B4E,KAAKuiF,YAAc,IAAInnF,MAAM,EAC/B,CACAugB,GAASomE,GAAYC,IACrB,OAAiBD,GAiOjB,SAASr/C,GAAMm9C,EAAOp4D,EAAGC,EAAG86D,GAC1BR,GAAKpC,UAAUh7E,KAAK5E,KAAM6/E,EAAO,UACvB,OAANp4D,GAAoB,OAANC,GAChB1nB,KAAKynB,EAAI,KACTznB,KAAK0nB,EAAI,KACT1nB,KAAKyiF,KAAM,IAEXziF,KAAKynB,EAAI,IAAIxL,IAAJ,CAAOwL,EAAG,IACnBznB,KAAK0nB,EAAI,IAAIzL,IAAJ,CAAOyL,EAAG,IAEf86D,IACFxiF,KAAKynB,EAAE6H,SAAStvB,KAAK6/E,MAAMrjE,KAC3Bxc,KAAK0nB,EAAE4H,SAAStvB,KAAK6/E,MAAMrjE,MAExBxc,KAAKynB,EAAEjL,MACVxc,KAAKynB,EAAIznB,KAAKynB,EAAEuH,MAAMhvB,KAAK6/E,MAAMrjE,MAC9Bxc,KAAK0nB,EAAElL,MACVxc,KAAK0nB,EAAI1nB,KAAK0nB,EAAEsH,MAAMhvB,KAAK6/E,MAAMrjE,MACnCxc,KAAKyiF,KAAM,EAEf,CA2NA,SAASC,GAAO7C,EAAOp4D,EAAGC,EAAG0K,GAC3B4vD,GAAKpC,UAAUh7E,KAAK5E,KAAM6/E,EAAO,YACvB,OAANp4D,GAAoB,OAANC,GAAoB,OAAN0K,GAC9BpyB,KAAKynB,EAAIznB,KAAK6/E,MAAM5tD,IACpBjyB,KAAK0nB,EAAI1nB,KAAK6/E,MAAM5tD,IACpBjyB,KAAKoyB,EAAI,IAAInW,IAAJ,CAAO,KAEhBjc,KAAKynB,EAAI,IAAIxL,IAAJ,CAAOwL,EAAG,IACnBznB,KAAK0nB,EAAI,IAAIzL,IAAJ,CAAOyL,EAAG,IACnB1nB,KAAKoyB,EAAI,IAAInW,IAAJ,CAAOmW,EAAG,KAEhBpyB,KAAKynB,EAAEjL,MACVxc,KAAKynB,EAAIznB,KAAKynB,EAAEuH,MAAMhvB,KAAK6/E,MAAMrjE,MAC9Bxc,KAAK0nB,EAAElL,MACVxc,KAAK0nB,EAAI1nB,KAAK0nB,EAAEsH,MAAMhvB,KAAK6/E,MAAMrjE,MAC9Bxc,KAAKoyB,EAAE5V,MACVxc,KAAKoyB,EAAIpyB,KAAKoyB,EAAEpD,MAAMhvB,KAAK6/E,MAAMrjE,MAEnCxc,KAAK2iF,KAAO3iF,KAAKoyB,IAAMpyB,KAAK6/E,MAAM5tD,GACpC,CAjeA8vD,GAAW30E,UAAUi1E,iBAAmB,SAA0BrD,GAEhE,GAAKh/E,KAAKkiF,OAAUliF,KAAK+E,GAAM/E,KAAKyG,GAAwB,IAAnBzG,KAAK8oB,EAAExJ,KAAK,GAArD,CAIA,IAAI+jB,EACAu/C,EACJ,GAAI5D,EAAK37C,KACPA,EAAO,IAAIpnB,IAAJ,CAAO+iE,EAAK37C,KAAM,IAAIrU,MAAMhvB,KAAKwc,SACnC,CACL,IAAIqmE,EAAQ7iF,KAAK8iF,cAAc9iF,KAAK8oB,GAGpCua,GADAA,EAAOw/C,EAAM,GAAGxlE,IAAIwlE,EAAM,IAAM,EAAIA,EAAM,GAAKA,EAAM,IACzC7zD,MAAMhvB,KAAKwc,IAC3B,CACE,GAAIwiE,EAAK4D,OACPA,EAAS,IAAI3mE,IAAJ,CAAO+iE,EAAK4D,OAAQ,QACxB,CAEL,IAAIG,EAAU/iF,KAAK8iF,cAAc9iF,KAAKyG,GACsB,IAAxDzG,KAAK+E,EAAE4R,IAAIosE,EAAQ,IAAIt7D,EAAEpK,IAAIrd,KAAK+E,EAAE0iB,EAAEoI,OAAOwT,IAC/Cu/C,EAASG,EAAQ,IAEjBH,EAASG,EAAQ,GACjBtnE,GAA2D,IAApDzb,KAAK+E,EAAE4R,IAAIisE,GAAQn7D,EAAEpK,IAAIrd,KAAK+E,EAAE0iB,EAAEoI,OAAOwT,KAEtD,CAeE,MAAO,CACLA,KAAMA,EACNu/C,OAAQA,EACRI,MAdEhE,EAAKgE,MACChE,EAAKgE,MAAMx7E,KAAI,SAASy7E,GAC9B,MAAO,CACLrkF,EAAG,IAAIqd,IAAJ,CAAOgnE,EAAIrkF,EAAG,IACjBigB,EAAG,IAAI5C,IAAJ,CAAOgnE,EAAIpkE,EAAG,IAEzB,IAEY7e,KAAKkjF,cAAcN,GApCrB,CA4CV,EAEAb,GAAW30E,UAAU01E,cAAgB,SAAuBn8E,GAI1D,IAAI6V,EAAM7V,IAAQ3G,KAAK8oB,EAAI9oB,KAAKwc,IAAMP,IAAAA,KAAQtV,GAC1Cs7E,EAAO,IAAIhmE,IAAJ,CAAO,GAAG+S,MAAMxS,GAAK6T,UAC5B8yD,EAAQlB,EAAK3xD,SAEb5lB,EAAI,IAAIuR,IAAJ,CAAO,GAAG+S,MAAMxS,GAAK8T,SAASH,UAAUN,OAAOoyD,GAIvD,MAAO,CAFEkB,EAAM5zD,OAAO7kB,GAAG0kB,UAChB+zD,EAAM1zD,OAAO/kB,GAAG0kB,UAE3B,EAEA2yD,GAAW30E,UAAU81E,cAAgB,SAAuBN,GA2B1D,IAzBA,IAYItgE,EACA8B,EAEA3B,EACA8B,EAEA3B,EACA8B,EAEA0+D,EAEA34E,EACAgd,EAxBA47D,EAAWrjF,KAAKyG,EAAEilB,MAAMzO,KAAK8a,MAAM/3B,KAAKyG,EAAE2P,YAAc,IAIxDsc,EAAIkwD,EACJvmF,EAAI2D,KAAKyG,EAAE4X,QACXyP,EAAK,IAAI7R,IAAJ,CAAO,GACZqnE,EAAK,IAAIrnE,IAAJ,CAAO,GACZ8R,EAAK,IAAI9R,IAAJ,CAAO,GACZsnE,EAAK,IAAItnE,IAAJ,CAAO,GAaZ1gB,EAAI,EAGa,IAAdm3B,EAAEzE,KAAK,IAAU,CACtB,IAAIpO,EAAIxjB,EAAEkwB,IAAImG,GACdjoB,EAAIpO,EAAE6lB,IAAIrC,EAAElJ,IAAI+b,IAChBjL,EAAIsG,EAAG7L,IAAIrC,EAAElJ,IAAImX,IACjB,IAAIpG,EAAI67D,EAAGrhE,IAAIrC,EAAElJ,IAAI2sE,IAErB,IAAK7gE,GAAMhY,EAAE4S,IAAIgmE,GAAY,EAC3B/gE,EAAK8gE,EAAMtiE,MACXsD,EAAK0J,EACLrL,EAAKhY,EAAEqW,MACPyD,EAAKkD,OACA,GAAIhF,GAAc,MAANlnB,EACjB,MAEF6nF,EAAQ34E,EAERpO,EAAIq2B,EACJA,EAAIjoB,EACJsjB,EAAKD,EACLA,EAAKrG,EACL87D,EAAKD,EACLA,EAAK57D,CACT,CACE9E,EAAKnY,EAAEqW,MACP4D,EAAK+C,EAEL,IAAI+7D,EAAO/gE,EAAGgI,MAAMnlB,IAAIif,EAAGkG,OAiB3B,OAhBW7H,EAAG6H,MAAMnlB,IAAIof,EAAG+F,OAClBpN,IAAImmE,IAAS,IACpB5gE,EAAKN,EACLoC,EAAKN,GAIH3B,EAAGnG,WACLmG,EAAKA,EAAG3B,MACRyD,EAAKA,EAAGzD,OAEN8B,EAAGtG,WACLsG,EAAKA,EAAG9B,MACR4D,EAAKA,EAAG5D,OAGH,CACL,CAAEliB,EAAG6jB,EAAI5D,EAAG0F,GACZ,CAAE3lB,EAAGgkB,EAAI/D,EAAG6F,GAEhB,EAEAq9D,GAAW30E,UAAUq2E,WAAa,SAAoBl8E,GACpD,IAAIy7E,EAAQhjF,KAAKoiF,KAAKY,MAClBU,EAAKV,EAAM,GACXW,EAAKX,EAAM,GAEXj3C,EAAK43C,EAAG9kE,EAAElI,IAAIpP,GAAGqlB,SAAS5sB,KAAKyG,GAC/BulC,EAAK03C,EAAG7kE,EAAEiC,MAAMnK,IAAIpP,GAAGqlB,SAAS5sB,KAAKyG,GAErCm9E,EAAK73C,EAAGp1B,IAAI+sE,EAAG9kF,GACfilF,EAAK73C,EAAGr1B,IAAIgtE,EAAG/kF,GACfklF,EAAK/3C,EAAGp1B,IAAI+sE,EAAG7kE,GACfklE,EAAK/3C,EAAGr1B,IAAIgtE,EAAG9kE,GAKnB,MAAO,CAAEsmB,GAFA59B,EAAE2a,IAAI0hE,GAAI1hE,IAAI2hE,GAENx+C,GADRy+C,EAAGx+E,IAAIy+E,GAAIjjE,MAEtB,EAEAihE,GAAW30E,UAAUm0E,WAAa,SAAoB95D,EAAG+B,IACvD/B,EAAI,IAAIxL,IAAJ,CAAOwL,EAAG,KACPjL,MACLiL,EAAIA,EAAEuH,MAAMhvB,KAAKwc,MAEnB,IAAI+mE,EAAK97D,EAAEuI,SAASH,OAAOpI,GAAG+H,QAAQ/H,EAAEoI,OAAO7vB,KAAKpB,IAAI4wB,QAAQxvB,KAAK6e,GACjE6I,EAAI67D,EAAGpzD,UACX,GAA6C,IAAzCzI,EAAEsI,SAASP,OAAO8zD,GAAIlmE,IAAIrd,KAAKwD,MACjC,MAAM,IAAItH,MAAM,iBAIlB,IAAIwxB,EAAQhG,EAAE0H,UAAU1B,QAIxB,OAHIlE,IAAQkE,IAAUlE,GAAOkE,KAC3BhG,EAAIA,EAAE4I,UAEDtwB,KAAKwmC,MAAM/e,EAAGC,EACvB,EAEAq6D,GAAW30E,UAAU2yE,SAAW,SAAkBv5C,GAChD,GAAIA,EAAMi8C,IACR,OAAO,EAET,IAAIh7D,EAAI+e,EAAM/e,EACVC,EAAI8e,EAAM9e,EAEVwf,EAAKlnC,KAAKpB,EAAEixB,OAAOpI,GACnBu8D,EAAMv8D,EAAEuI,SAASH,OAAOpI,GAAG+H,QAAQ0X,GAAI1X,QAAQxvB,KAAK6e,GACxD,OAA2C,IAApC6I,EAAEsI,SAASN,QAAQs0D,GAAK/1D,KAAK,EACtC,EAEA8zD,GAAW30E,UAAU62E,gBACjB,SAAyBv+C,EAAQq7C,EAAQC,GAGvC,IAFA,IAAIkD,EAAUlkF,KAAKsiF,YACf6B,EAAUnkF,KAAKuiF,YACVhnF,EAAI,EAAGA,EAAImqC,EAAOlqC,OAAQD,IAAK,CACtC,IAAIo2B,EAAQ3xB,KAAKyjF,WAAW1C,EAAOxlF,IAC/ButB,EAAI4c,EAAOnqC,GACX8nC,EAAOva,EAAE64D,WAEThwD,EAAMwT,GAAG7oB,WACXqV,EAAMwT,GAAGvkB,OACTkI,EAAIA,EAAEhI,KAAI,IAER6Q,EAAM0T,GAAG/oB,WACXqV,EAAM0T,GAAGzkB,OACTyiB,EAAOA,EAAKviB,KAAI,IAGlBojE,EAAY,EAAJ3oF,GAASutB,EACjBo7D,EAAY,EAAJ3oF,EAAQ,GAAK8nC,EACrB8gD,EAAY,EAAJ5oF,GAASo2B,EAAMwT,GACvBg/C,EAAY,EAAJ5oF,EAAQ,GAAKo2B,EAAM0T,EACnC,CAIM,IAHA,IAAIz+B,EAAM5G,KAAK6gF,YAAY,EAAGqD,EAASC,EAAa,EAAJ5oF,EAAOylF,GAG9CviF,EAAI,EAAGA,EAAQ,EAAJlD,EAAOkD,IACzBylF,EAAQzlF,GAAK,KACb0lF,EAAQ1lF,GAAK,KAEf,OAAOmI,CACb,EAuBA+U,GAAS+mB,GAAOs/C,GAAKpC,WAErBmC,GAAW30E,UAAUo5B,MAAQ,SAAe/e,EAAGC,EAAG86D,GAChD,OAAO,IAAI9/C,GAAM1iC,KAAMynB,EAAGC,EAAG86D,EAC/B,EAEAT,GAAW30E,UAAU8xE,cAAgB,SAAuBtb,EAAKpnD,GAC/D,OAAOkmB,GAAM0hD,SAASpkF,KAAM4jE,EAAKpnD,EACnC,EAEAkmB,GAAMt1B,UAAUu0E,SAAW,WACzB,GAAK3hF,KAAK6/E,MAAMuC,KAAhB,CAGA,IAAI7pB,EAAMv4D,KAAK8/E,YACf,GAAIvnB,GAAOA,EAAIl1B,KACb,OAAOk1B,EAAIl1B,KAEb,IAAIA,EAAOrjC,KAAK6/E,MAAMr5C,MAAMxmC,KAAKynB,EAAEoI,OAAO7vB,KAAK6/E,MAAMuC,KAAK/+C,MAAOrjC,KAAK0nB,GACtE,GAAI6wC,EAAK,CACP,IAAIsnB,EAAQ7/E,KAAK6/E,MACbwE,EAAU,SAASv7D,GACrB,OAAO+2D,EAAMr5C,MAAM1d,EAAErB,EAAEoI,OAAOgwD,EAAMuC,KAAK/+C,MAAOva,EAAEpB,EACxD,EACI6wC,EAAIl1B,KAAOA,EACXA,EAAKy8C,YAAc,CACjBz8C,KAAM,KACNg7C,IAAK9lB,EAAI8lB,KAAO,CACd/rD,IAAKimC,EAAI8lB,IAAI/rD,IACboT,OAAQ6yB,EAAI8lB,IAAI34C,OAAOl+B,IAAI68E,IAE7BpE,QAAS1nB,EAAI0nB,SAAW,CACtBE,KAAM5nB,EAAI0nB,QAAQE,KAClBz6C,OAAQ6yB,EAAI0nB,QAAQv6C,OAAOl+B,IAAI68E,IAGvC,CACE,OAAOhhD,CAzBC,CA0BV,EAEAX,GAAMt1B,UAAUqS,OAAS,WACvB,OAAKzf,KAAK8/E,YAGH,CAAE9/E,KAAKynB,EAAGznB,KAAK0nB,EAAG1nB,KAAK8/E,aAAe,CAC3CG,QAASjgF,KAAK8/E,YAAYG,SAAW,CACnCE,KAAMngF,KAAK8/E,YAAYG,QAAQE,KAC/Bz6C,OAAQ1lC,KAAK8/E,YAAYG,QAAQv6C,OAAOvpC,MAAM,IAEhDkiF,IAAKr+E,KAAK8/E,YAAYzB,KAAO,CAC3B/rD,IAAKtyB,KAAK8/E,YAAYzB,IAAI/rD,IAC1BoT,OAAQ1lC,KAAK8/E,YAAYzB,IAAI34C,OAAOvpC,MAAM,MATrC,CAAE6D,KAAKynB,EAAGznB,KAAK0nB,EAY1B,EAEAgb,GAAM0hD,SAAW,SAAkBvE,EAAOjc,EAAKpnD,GAC1B,kBAARonD,IACTA,EAAMjvD,KAAKI,MAAM6uD,IACnB,IAAIh9D,EAAMi5E,EAAMr5C,MAAMo9B,EAAI,GAAIA,EAAI,GAAIpnD,GACtC,IAAKonD,EAAI,GACP,OAAOh9D,EAET,SAAS09E,EAAU1gB,GACjB,OAAOic,EAAMr5C,MAAMo9B,EAAI,GAAIA,EAAI,GAAIpnD,EACvC,CAEE,IAAI+7C,EAAMqL,EAAI,GAYd,OAXAh9D,EAAIk5E,YAAc,CAChBz8C,KAAM,KACN48C,QAAS1nB,EAAI0nB,SAAW,CACtBE,KAAM5nB,EAAI0nB,QAAQE,KAClBz6C,OAAQ,CAAE9+B,GAAM1E,OAAOq2D,EAAI0nB,QAAQv6C,OAAOl+B,IAAI88E,KAEhDjG,IAAK9lB,EAAI8lB,KAAO,CACd/rD,IAAKimC,EAAI8lB,IAAI/rD,IACboT,OAAQ,CAAE9+B,GAAM1E,OAAOq2D,EAAI8lB,IAAI34C,OAAOl+B,IAAI88E,MAGvC19E,CACT,EAEA87B,GAAMt1B,UAAUoR,QAAU,WACxB,OAAIxe,KAAKukF,aACA,sBACF,gBAAkBvkF,KAAKynB,EAAE2H,UAAUtxB,SAAS,GAAI,GACnD,OAASkC,KAAK0nB,EAAE0H,UAAUtxB,SAAS,GAAI,GAAK,GAClD,EAEA4kC,GAAMt1B,UAAUm3E,WAAa,WAC3B,OAAOvkF,KAAKyiF,GACd,EAEA//C,GAAMt1B,UAAU9H,IAAM,SAAawjB,GAEjC,GAAI9oB,KAAKyiF,IACP,OAAO35D,EAGT,GAAIA,EAAE25D,IACJ,OAAOziF,KAGT,GAAIA,KAAK8uB,GAAGhG,GACV,OAAO9oB,KAAK6hF,MAGd,GAAI7hF,KAAK8gB,MAAMgO,GAAGhG,GAChB,OAAO9oB,KAAK6/E,MAAMr5C,MAAM,KAAM,MAGhC,GAAwB,IAApBxmC,KAAKynB,EAAEpK,IAAIyL,EAAErB,GACf,OAAOznB,KAAK6/E,MAAMr5C,MAAM,KAAM,MAEhC,IAAIz4B,EAAI/N,KAAK0nB,EAAE+H,OAAO3G,EAAEpB,GACN,IAAd3Z,EAAEkgB,KAAK,KACTlgB,EAAIA,EAAE8hB,OAAO7vB,KAAKynB,EAAEgI,OAAO3G,EAAErB,GAAG4I,YAClC,IAAIm0D,EAAKz2E,EAAEiiB,SAASN,QAAQ1vB,KAAKynB,GAAGiI,QAAQ5G,EAAErB,GAC1Cg9D,EAAK12E,EAAE8hB,OAAO7vB,KAAKynB,EAAEgI,OAAO+0D,IAAK90D,QAAQ1vB,KAAK0nB,GAClD,OAAO1nB,KAAK6/E,MAAMr5C,MAAMg+C,EAAIC,EAC9B,EAEA/hD,GAAMt1B,UAAUy0E,IAAM,WACpB,GAAI7hF,KAAKyiF,IACP,OAAOziF,KAGT,IAAI0kF,EAAM1kF,KAAK0nB,EAAE6H,OAAOvvB,KAAK0nB,GAC7B,GAAoB,IAAhBg9D,EAAIz2D,KAAK,GACX,OAAOjuB,KAAK6/E,MAAMr5C,MAAM,KAAM,MAEhC,IAAI5nC,EAAIoB,KAAK6/E,MAAMjhF,EAEfmvB,EAAK/tB,KAAKynB,EAAEuI,SACZ20D,EAAQD,EAAIr0D,UACZtiB,EAAIggB,EAAGwB,OAAOxB,GAAIyB,QAAQzB,GAAIyB,QAAQ5wB,GAAGixB,OAAO80D,GAEhDH,EAAKz2E,EAAEiiB,SAASN,QAAQ1vB,KAAKynB,EAAE8H,OAAOvvB,KAAKynB,IAC3Cg9D,EAAK12E,EAAE8hB,OAAO7vB,KAAKynB,EAAEgI,OAAO+0D,IAAK90D,QAAQ1vB,KAAK0nB,GAClD,OAAO1nB,KAAK6/E,MAAMr5C,MAAMg+C,EAAIC,EAC9B,EAEA/hD,GAAMt1B,UAAUq0E,KAAO,WACrB,OAAOzhF,KAAKynB,EAAE2H,SAChB,EAEAsT,GAAMt1B,UAAUs0E,KAAO,WACrB,OAAO1hF,KAAK0nB,EAAE0H,SAChB,EAEAsT,GAAMt1B,UAAUuJ,IAAM,SAAapP,GAEjC,OADAA,EAAI,IAAI0U,IAAJ,CAAO1U,EAAG,IACVvH,KAAKukF,aACAvkF,KACAA,KAAK4hF,YAAYr6E,GACjBvH,KAAK6/E,MAAMG,aAAahgF,KAAMuH,GAC9BvH,KAAK6/E,MAAMuC,KACXpiF,KAAK6/E,MAAMoE,gBAAgB,CAAEjkF,MAAQ,CAAEuH,IAEvCvH,KAAK6/E,MAAMY,SAASzgF,KAAMuH,EACrC,EAEAm7B,GAAMt1B,UAAUw3E,OAAS,SAAgBz/C,EAAI0+C,EAAIx+C,GAC/C,IAAIK,EAAS,CAAE1lC,KAAM6jF,GACjB9C,EAAS,CAAE57C,EAAIE,GACnB,OAAIrlC,KAAK6/E,MAAMuC,KACNpiF,KAAK6/E,MAAMoE,gBAAgBv+C,EAAQq7C,GAEnC/gF,KAAK6/E,MAAMgB,YAAY,EAAGn7C,EAAQq7C,EAAQ,EACrD,EAEAr+C,GAAMt1B,UAAUy3E,QAAU,SAAiB1/C,EAAI0+C,EAAIx+C,GACjD,IAAIK,EAAS,CAAE1lC,KAAM6jF,GACjB9C,EAAS,CAAE57C,EAAIE,GACnB,OAAIrlC,KAAK6/E,MAAMuC,KACNpiF,KAAK6/E,MAAMoE,gBAAgBv+C,EAAQq7C,GAAQ,GAE3C/gF,KAAK6/E,MAAMgB,YAAY,EAAGn7C,EAAQq7C,EAAQ,GAAG,EACxD,EAEAr+C,GAAMt1B,UAAU0hB,GAAK,SAAYhG,GAC/B,OAAO9oB,OAAS8oB,GACT9oB,KAAKyiF,MAAQ35D,EAAE25D,MACVziF,KAAKyiF,KAA2B,IAApBziF,KAAKynB,EAAEpK,IAAIyL,EAAErB,IAAgC,IAApBznB,KAAK0nB,EAAErK,IAAIyL,EAAEpB,GAChE,EAEAgb,GAAMt1B,UAAU0T,IAAM,SAAagkE,GACjC,GAAI9kF,KAAKyiF,IACP,OAAOziF,KAET,IAAI4G,EAAM5G,KAAK6/E,MAAMr5C,MAAMxmC,KAAKynB,EAAGznB,KAAK0nB,EAAE4I,UAC1C,GAAIw0D,GAAe9kF,KAAK8/E,YAAa,CACnC,IAAIvnB,EAAMv4D,KAAK8/E,YACXj7C,EAAS,SAAS/b,GACpB,OAAOA,EAAEhI,KACf,EACIla,EAAIk5E,YAAc,CAChBzB,IAAK9lB,EAAI8lB,KAAO,CACd/rD,IAAKimC,EAAI8lB,IAAI/rD,IACboT,OAAQ6yB,EAAI8lB,IAAI34C,OAAOl+B,IAAIq9B,IAE7Bo7C,QAAS1nB,EAAI0nB,SAAW,CACtBE,KAAM5nB,EAAI0nB,QAAQE,KAClBz6C,OAAQ6yB,EAAI0nB,QAAQv6C,OAAOl+B,IAAIq9B,IAGvC,CACE,OAAOj+B,CACT,EAEA87B,GAAMt1B,UAAU+zE,IAAM,WACpB,OAAInhF,KAAKyiF,IACAziF,KAAK6/E,MAAMS,OAAO,KAAM,KAAM,MAE7BtgF,KAAK6/E,MAAMS,OAAOtgF,KAAKynB,EAAGznB,KAAK0nB,EAAG1nB,KAAK6/E,MAAM5tD,IAEzD,EAsBAtW,GAAS+mE,GAAQV,GAAKpC,WAEtBmC,GAAW30E,UAAUkzE,OAAS,SAAgB74D,EAAGC,EAAG0K,GAClD,OAAO,IAAIswD,GAAO1iF,KAAMynB,EAAGC,EAAG0K,EAChC,EAEAswD,GAAOt1E,UAAUozE,IAAM,WACrB,GAAIxgF,KAAKukF,aACP,OAAOvkF,KAAK6/E,MAAMr5C,MAAM,KAAM,MAEhC,IAAIu+C,EAAO/kF,KAAKoyB,EAAE/B,UACd20D,EAAQD,EAAK/0D,SACbkX,EAAKlnC,KAAKynB,EAAEoI,OAAOm1D,GACnB79C,EAAKnnC,KAAK0nB,EAAEmI,OAAOm1D,GAAOn1D,OAAOk1D,GAErC,OAAO/kF,KAAK6/E,MAAMr5C,MAAMU,EAAIC,EAC9B,EAEAu7C,GAAOt1E,UAAU0T,IAAM,WACrB,OAAO9gB,KAAK6/E,MAAMS,OAAOtgF,KAAKynB,EAAGznB,KAAK0nB,EAAE4I,SAAUtwB,KAAKoyB,EACzD,EAEAswD,GAAOt1E,UAAU9H,IAAM,SAAawjB,GAElC,GAAI9oB,KAAKukF,aACP,OAAOz7D,EAGT,GAAIA,EAAEy7D,aACJ,OAAOvkF,KAGT,IAAIilF,EAAMn8D,EAAEsJ,EAAEpC,SACV+c,EAAK/sC,KAAKoyB,EAAEpC,SACZma,EAAKnqC,KAAKynB,EAAEoI,OAAOo1D,GACnB76C,EAAKthB,EAAErB,EAAEoI,OAAOkd,GAChBszB,EAAKrgE,KAAK0nB,EAAEmI,OAAOo1D,EAAIp1D,OAAO/G,EAAEsJ,IAChC8yD,EAAKp8D,EAAEpB,EAAEmI,OAAOkd,EAAGld,OAAO7vB,KAAKoyB,IAE/BjH,EAAIgf,EAAG1a,OAAO2a,GACd3/B,EAAI41D,EAAG5wC,OAAOy1D,GAClB,GAAkB,IAAd/5D,EAAE8C,KAAK,GACT,OAAkB,IAAdxjB,EAAEwjB,KAAK,GACFjuB,KAAK6/E,MAAMS,OAAO,KAAM,KAAM,MAE9BtgF,KAAK6hF,MAGhB,IAAIjmD,EAAKzQ,EAAE6E,SACP6L,EAAKD,EAAG/L,OAAO1E,GACf9uB,EAAI8tC,EAAGta,OAAO+L,GAEd4oD,EAAK/5E,EAAEulB,SAASR,QAAQqM,GAAInM,QAAQrzB,GAAGqzB,QAAQrzB,GAC/CooF,EAAKh6E,EAAEolB,OAAOxzB,EAAEqzB,QAAQ80D,IAAK90D,QAAQ2wC,EAAGxwC,OAAOgM,IAC/CspD,EAAKnlF,KAAKoyB,EAAEvC,OAAO/G,EAAEsJ,GAAGvC,OAAO1E,GAEnC,OAAOnrB,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAUmzE,SAAW,SAAkBz3D,GAE5C,GAAI9oB,KAAKukF,aACP,OAAOz7D,EAAEq4D,MAGX,GAAIr4D,EAAEy7D,aACJ,OAAOvkF,KAGT,IAAI+sC,EAAK/sC,KAAKoyB,EAAEpC,SACZma,EAAKnqC,KAAKynB,EACV2iB,EAAKthB,EAAErB,EAAEoI,OAAOkd,GAChBszB,EAAKrgE,KAAK0nB,EACVw9D,EAAKp8D,EAAEpB,EAAEmI,OAAOkd,GAAIld,OAAO7vB,KAAKoyB,GAEhCjH,EAAIgf,EAAG1a,OAAO2a,GACd3/B,EAAI41D,EAAG5wC,OAAOy1D,GAClB,GAAkB,IAAd/5D,EAAE8C,KAAK,GACT,OAAkB,IAAdxjB,EAAEwjB,KAAK,GACFjuB,KAAK6/E,MAAMS,OAAO,KAAM,KAAM,MAE9BtgF,KAAK6hF,MAGhB,IAAIjmD,EAAKzQ,EAAE6E,SACP6L,EAAKD,EAAG/L,OAAO1E,GACf9uB,EAAI8tC,EAAGta,OAAO+L,GAEd4oD,EAAK/5E,EAAEulB,SAASR,QAAQqM,GAAInM,QAAQrzB,GAAGqzB,QAAQrzB,GAC/CooF,EAAKh6E,EAAEolB,OAAOxzB,EAAEqzB,QAAQ80D,IAAK90D,QAAQ2wC,EAAGxwC,OAAOgM,IAC/CspD,EAAKnlF,KAAKoyB,EAAEvC,OAAO1E,GAEvB,OAAOnrB,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAUwzE,KAAO,SAAchqE,GACpC,GAAY,IAARA,EACF,OAAO5W,KACT,GAAIA,KAAKukF,aACP,OAAOvkF,KACT,IAAK4W,EACH,OAAO5W,KAAK6hF,MAEd,IAAItmF,EACJ,GAAIyE,KAAK6/E,MAAMqC,OAASliF,KAAK6/E,MAAMsC,OAAQ,CACzC,IAAI13E,EAAIzK,KACR,IAAKzE,EAAI,EAAGA,EAAIqb,EAAKrb,IACnBkP,EAAIA,EAAEo3E,MACR,OAAOp3E,CACX,CAIE,IAAI7L,EAAIoB,KAAK6/E,MAAMjhF,EACfqjF,EAAOjiF,KAAK6/E,MAAMoC,KAElBmD,EAAKplF,KAAKynB,EACV49D,EAAKrlF,KAAK0nB,EACV49D,EAAKtlF,KAAKoyB,EACVmzD,EAAMD,EAAGt1D,SAASA,SAGlBw1D,EAAMH,EAAG91D,OAAO81D,GACpB,IAAK9pF,EAAI,EAAGA,EAAIqb,EAAKrb,IAAK,CACxB,IAAIkqF,EAAML,EAAGp1D,SACT01D,EAAOF,EAAIx1D,SACX21D,EAAOD,EAAK11D,SACZjiB,EAAI03E,EAAIl2D,OAAOk2D,GAAKj2D,QAAQi2D,GAAKj2D,QAAQ5wB,EAAEixB,OAAO01D,IAElD5uD,EAAKyuD,EAAGv1D,OAAO61D,GACflB,EAAKz2E,EAAEiiB,SAASN,QAAQiH,EAAGpH,OAAOoH,IAClCC,EAAKD,EAAGjH,QAAQ80D,GAChBoB,EAAM73E,EAAE8hB,OAAO+G,GACnBgvD,EAAMA,EAAIp2D,QAAQo2D,GAAKl2D,QAAQi2D,GAC/B,IAAIR,EAAKK,EAAI31D,OAAOy1D,GAChB/pF,EAAI,EAAIqb,IACV2uE,EAAMA,EAAI11D,OAAO81D,IAEnBP,EAAKZ,EACLc,EAAKH,EACLK,EAAMI,CACV,CAEE,OAAO5lF,KAAK6/E,MAAMS,OAAO8E,EAAII,EAAI31D,OAAOoyD,GAAOqD,EACjD,EAEA5C,GAAOt1E,UAAUy0E,IAAM,WACrB,OAAI7hF,KAAKukF,aACAvkF,KAELA,KAAK6/E,MAAMqC,MACNliF,KAAK6lF,WACL7lF,KAAK6/E,MAAMsC,OACXniF,KAAK8lF,YAEL9lF,KAAK+lF,MAChB,EAEArD,GAAOt1E,UAAUy4E,SAAW,WAC1B,IAAIrB,EACAC,EACAU,EAEJ,GAAInlF,KAAK2iF,KAAM,CAMb,IAAIqD,EAAKhmF,KAAKynB,EAAEuI,SAEZi2D,EAAKjmF,KAAK0nB,EAAEsI,SAEZk2D,EAAOD,EAAGj2D,SAEVtlB,EAAI1K,KAAKynB,EAAE8H,OAAO02D,GAAIj2D,SAASN,QAAQs2D,GAAIt2D,QAAQw2D,GACvDx7E,EAAIA,EAAE8kB,QAAQ9kB,GAEd,IAAI6e,EAAIy8D,EAAGz2D,OAAOy2D,GAAIx2D,QAAQw2D,GAE1Bh2E,EAAIuZ,EAAEyG,SAASN,QAAQhlB,GAAGglB,QAAQhlB,GAGlCy7E,EAAQD,EAAK12D,QAAQ02D,GAEzBC,GADAA,EAAQA,EAAM32D,QAAQ22D,IACR32D,QAAQ22D,GAGtB3B,EAAKx0E,EAELy0E,EAAKl7D,EAAEsG,OAAOnlB,EAAEglB,QAAQ1f,IAAI0f,QAAQy2D,GAEpChB,EAAKnlF,KAAK0nB,EAAE6H,OAAOvvB,KAAK0nB,EAC5B,KAAS,CAML,IAAI9oB,EAAIoB,KAAKynB,EAAEuI,SAEXnR,EAAI7e,KAAK0nB,EAAEsI,SAEXjiB,EAAI8Q,EAAEmR,SAENvyB,EAAIuC,KAAKynB,EAAE8H,OAAO1Q,GAAGmR,SAASN,QAAQ9wB,GAAG8wB,QAAQ3hB,GACrDtQ,EAAIA,EAAE+xB,QAAQ/xB,GAEd,IAAIwD,EAAIrC,EAAE2wB,OAAO3wB,GAAG4wB,QAAQ5wB,GAExB27B,EAAIt5B,EAAE+uB,SAGNo2D,EAAKr4E,EAAEyhB,QAAQzhB,GAEnBq4E,GADAA,EAAKA,EAAG52D,QAAQ42D,IACR52D,QAAQ42D,GAGhB5B,EAAKjqD,EAAE7K,QAAQjyB,GAAGiyB,QAAQjyB,GAE1BgnF,EAAKxjF,EAAE4uB,OAAOpyB,EAAEiyB,QAAQ80D,IAAK90D,QAAQ02D,GAGrCjB,GADAA,EAAKnlF,KAAK0nB,EAAEmI,OAAO7vB,KAAKoyB,IAChB5C,QAAQ21D,EACpB,CAEE,OAAOnlF,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAU04E,UAAY,WAC3B,IAAItB,EACAC,EACAU,EAEJ,GAAInlF,KAAK2iF,KAAM,CAMb,IAAIqD,EAAKhmF,KAAKynB,EAAEuI,SAEZi2D,EAAKjmF,KAAK0nB,EAAEsI,SAEZk2D,EAAOD,EAAGj2D,SAEVtlB,EAAI1K,KAAKynB,EAAE8H,OAAO02D,GAAIj2D,SAASN,QAAQs2D,GAAIt2D,QAAQw2D,GACvDx7E,EAAIA,EAAE8kB,QAAQ9kB,GAEd,IAAI6e,EAAIy8D,EAAGz2D,OAAOy2D,GAAIx2D,QAAQw2D,GAAIx2D,QAAQxvB,KAAK6/E,MAAMjhF,GAEjDoR,EAAIuZ,EAAEyG,SAASN,QAAQhlB,GAAGglB,QAAQhlB,GAEtC85E,EAAKx0E,EAEL,IAAIm2E,EAAQD,EAAK12D,QAAQ02D,GAEzBC,GADAA,EAAQA,EAAM32D,QAAQ22D,IACR32D,QAAQ22D,GACtB1B,EAAKl7D,EAAEsG,OAAOnlB,EAAEglB,QAAQ1f,IAAI0f,QAAQy2D,GAEpChB,EAAKnlF,KAAK0nB,EAAE6H,OAAOvvB,KAAK0nB,EAC5B,KAAS,CAKL,IAAIsG,EAAQhuB,KAAKoyB,EAAEpC,SAEfq2D,EAAQrmF,KAAK0nB,EAAEsI,SAEfqT,EAAOrjC,KAAKynB,EAAEoI,OAAOw2D,GAErBC,EAAQtmF,KAAKynB,EAAEgI,OAAOzB,GAAO6B,OAAO7vB,KAAKynB,EAAE8H,OAAOvB,IACtDs4D,EAAQA,EAAM/2D,OAAO+2D,GAAO92D,QAAQ82D,GAEpC,IAAIC,EAAQljD,EAAK7T,QAAQ6T,GAErBmjD,GADJD,EAAQA,EAAM/2D,QAAQ+2D,IACJh3D,OAAOg3D,GACzB/B,EAAK8B,EAAMt2D,SAASN,QAAQ82D,GAE5BrB,EAAKnlF,KAAK0nB,EAAE6H,OAAOvvB,KAAKoyB,GAAGpC,SAASN,QAAQ22D,GAAO32D,QAAQ1B,GAE3D,IAAIy4D,EAAUJ,EAAMr2D,SAGpBy2D,GADAA,GADAA,EAAUA,EAAQj3D,QAAQi3D,IACRj3D,QAAQi3D,IACRj3D,QAAQi3D,GAC1BhC,EAAK6B,EAAMz2D,OAAO02D,EAAM72D,QAAQ80D,IAAK90D,QAAQ+2D,EACjD,CAEE,OAAOzmF,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAU24E,KAAO,WACtB,IAAInnF,EAAIoB,KAAK6/E,MAAMjhF,EAGfwmF,EAAKplF,KAAKynB,EACV49D,EAAKrlF,KAAK0nB,EACV49D,EAAKtlF,KAAKoyB,EACVmzD,EAAMD,EAAGt1D,SAASA,SAElBy1D,EAAML,EAAGp1D,SACT02D,EAAMrB,EAAGr1D,SAETjiB,EAAI03E,EAAIl2D,OAAOk2D,GAAKj2D,QAAQi2D,GAAKj2D,QAAQ5wB,EAAEixB,OAAO01D,IAElDoB,EAAOvB,EAAG71D,OAAO61D,GAEjBzuD,GADJgwD,EAAOA,EAAKn3D,QAAQm3D,IACN92D,OAAO62D,GACjBlC,EAAKz2E,EAAEiiB,SAASN,QAAQiH,EAAGpH,OAAOoH,IAClCC,EAAKD,EAAGjH,QAAQ80D,GAEhBoC,EAAOF,EAAI12D,SAGf42D,GADAA,GADAA,EAAOA,EAAKp3D,QAAQo3D,IACRp3D,QAAQo3D,IACRp3D,QAAQo3D,GACpB,IAAInC,EAAK12E,EAAE8hB,OAAO+G,GAAIlH,QAAQk3D,GAC1BzB,EAAKE,EAAG91D,OAAO81D,GAAIx1D,OAAOy1D,GAE9B,OAAOtlF,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAUy5E,KAAO,WACtB,IAAK7mF,KAAK6/E,MAAMqC,MACd,OAAOliF,KAAK6hF,MAAMv8E,IAAItF,MAMxB,IAAIgmF,EAAKhmF,KAAKynB,EAAEuI,SAEZi2D,EAAKjmF,KAAK0nB,EAAEsI,SAEZoX,EAAKpnC,KAAKoyB,EAAEpC,SAEZk2D,EAAOD,EAAGj2D,SAEVzG,EAAIy8D,EAAGz2D,OAAOy2D,GAAIx2D,QAAQw2D,GAE1Bc,EAAKv9D,EAAEyG,SAEP/uB,EAAIjB,KAAKynB,EAAE8H,OAAO02D,GAAIj2D,SAASN,QAAQs2D,GAAIt2D,QAAQw2D,GAKnDa,GAFJ9lF,GADAA,GADAA,EAAIA,EAAEuuB,QAAQvuB,IACRsuB,OAAOtuB,GAAGuuB,QAAQvuB,IAClByuB,QAAQo3D,IAEH92D,SAEPhgB,EAAIk2E,EAAK12D,QAAQ02D,GAGrBl2E,GADAA,GADAA,EAAIA,EAAEwf,QAAQxf,IACRwf,QAAQxf,IACRwf,QAAQxf,GAEd,IAAI0iB,EAAInJ,EAAEiG,QAAQvuB,GAAG+uB,SAASN,QAAQo3D,GAAIp3D,QAAQq3D,GAAIr3D,QAAQ1f,GAE1Dg3E,EAAOf,EAAGp2D,OAAO6C,GAErBs0D,GADAA,EAAOA,EAAKx3D,QAAQw3D,IACRx3D,QAAQw3D,GACpB,IAAIxC,EAAKxkF,KAAKynB,EAAEoI,OAAOk3D,GAAIr3D,QAAQs3D,GAEnCxC,GADAA,EAAKA,EAAGh1D,QAAQg1D,IACRh1D,QAAQg1D,GAEhB,IAAIC,EAAKzkF,KAAK0nB,EAAEmI,OAAO6C,EAAE7C,OAAO7f,EAAE0f,QAAQgD,IAAIhD,QAAQzuB,EAAE4uB,OAAOk3D,KAG/DtC,GADAA,GADAA,EAAKA,EAAGj1D,QAAQi1D,IACRj1D,QAAQi1D,IACRj1D,QAAQi1D,GAEhB,IAAIU,EAAKnlF,KAAKoyB,EAAE7C,OAAOtuB,GAAG+uB,SAASN,QAAQ0X,GAAI1X,QAAQq3D,GAEvD,OAAO/mF,KAAK6/E,MAAMS,OAAOkE,EAAIC,EAAIU,EACnC,EAEAzC,GAAOt1E,UAAUuJ,IAAM,SAAapP,EAAG0/E,GAGrC,OAFA1/E,EAAI,IAAI0U,IAAJ,CAAO1U,EAAG0/E,GAEPjnF,KAAK6/E,MAAMY,SAASzgF,KAAMuH,EACnC,EAEAm7E,GAAOt1E,UAAU0hB,GAAK,SAAYhG,GAChC,GAAe,WAAXA,EAAE5T,KACJ,OAAOlV,KAAK8uB,GAAGhG,EAAEq4D,OAEnB,GAAInhF,OAAS8oB,EACX,OAAO,EAGT,IAAIikB,EAAK/sC,KAAKoyB,EAAEpC,SACZi1D,EAAMn8D,EAAEsJ,EAAEpC,SACd,GAA2D,IAAvDhwB,KAAKynB,EAAEoI,OAAOo1D,GAAKv1D,QAAQ5G,EAAErB,EAAEoI,OAAOkd,IAAK9e,KAAK,GAClD,OAAO,EAGT,IAAIi5D,EAAKn6C,EAAGld,OAAO7vB,KAAKoyB,GACpB+0D,EAAMlC,EAAIp1D,OAAO/G,EAAEsJ,GACvB,OAA8D,IAAvDpyB,KAAK0nB,EAAEmI,OAAOs3D,GAAKz3D,QAAQ5G,EAAEpB,EAAEmI,OAAOq3D,IAAKj5D,KAAK,EACzD,EAEAy0D,GAAOt1E,UAAUg6E,OAAS,SAAgB3/D,GACxC,IAAI4/D,EAAKrnF,KAAKoyB,EAAEpC,SACZ3G,EAAK5B,EAAEuH,MAAMhvB,KAAK6/E,MAAMrjE,KAAKqT,OAAOw3D,GACxC,GAAuB,IAAnBrnF,KAAKynB,EAAEpK,IAAIgM,GACb,OAAO,EAIT,IAFA,IAAIi+D,EAAK7/D,EAAEpJ,QACPrO,EAAIhQ,KAAK6/E,MAAMH,KAAK7vD,OAAOw3D,KACtB,CAEP,GADAC,EAAGtlE,KAAKhiB,KAAK6/E,MAAMp5E,GACf6gF,EAAGjqE,IAAIrd,KAAK6/E,MAAM/2D,IAAM,EAC1B,OAAO,EAGT,GADAO,EAAGmG,QAAQxf,GACY,IAAnBhQ,KAAKynB,EAAEpK,IAAIgM,GACb,OAAO,CACb,CACA,EAEAq5D,GAAOt1E,UAAUoR,QAAU,WACzB,OAAIxe,KAAKukF,aACA,uBACF,iBAAmBvkF,KAAKynB,EAAE3pB,SAAS,GAAI,GAC1C,OAASkC,KAAK0nB,EAAE5pB,SAAS,GAAI,GAC7B,OAASkC,KAAKoyB,EAAEt0B,SAAS,GAAI,GAAK,GACxC,EAEA4kF,GAAOt1E,UAAUm3E,WAAa,WAE5B,OAA0B,IAAnBvkF,KAAKoyB,EAAEnE,KAAK,EACrB,2BCv6BA,IAAI4xD,EAAQliF,EAEZkiF,EAAM1jE,KAAOorE,GACb1H,EAAM2H,MAAQC,GACd5H,EAAMptD,KAAI,KACVotD,EAAM6H,QAAO,6BCLb,IAsKInvB,EAtKAovB,EAAShqF,EAMT8d,EAASpJ,GAAMoJ,OAEnB,SAASmsE,EAAYlf,GACE,UAAjBA,EAAQxzD,KACVlV,KAAK6/E,MAAQ,IAAIA,GAAM2H,MAAM9e,GACL,YAAjBA,EAAQxzD,KACflV,KAAK6/E,MAAQ,IAAIA,GAAM6H,QAAQhf,GAE/B1oE,KAAK6/E,MAAQ,IAAIA,GAAMptD,KAAKi2C,GAC9B1oE,KAAK+E,EAAI/E,KAAK6/E,MAAM96E,EACpB/E,KAAKyG,EAAIzG,KAAK6/E,MAAMp5E,EACpBzG,KAAKyB,KAAOinE,EAAQjnE,KAEpBga,EAAOzb,KAAK+E,EAAEg7E,WAAY,iBAC1BtkE,EAAOzb,KAAK+E,EAAE4R,IAAI3W,KAAKyG,GAAG89E,aAAc,0BAC1C,CAGA,SAASsD,EAAY16E,EAAMu7D,GACzBrhE,OAAOiI,eAAeq4E,EAAQx6E,EAAM,CAClC20E,cAAc,EACdj6E,YAAY,EACZC,IAAK,WACH,IAAI+3E,EAAQ,IAAI+H,EAAYlf,GAM5B,OALArhE,OAAOiI,eAAeq4E,EAAQx6E,EAAM,CAClC20E,cAAc,EACdj6E,YAAY,EACZJ,MAAOo4E,IAEFA,CACb,GAEA,CAhBA8H,EAAOC,YAAcA,EAkBrBC,EAAY,OAAQ,CAClB3yE,KAAM,QACNic,MAAO,OACPrI,EAAG,wDACHlqB,EAAG,wDACHigB,EAAG,wDACHpY,EAAG,wDACHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,wDACA,2DAIJ8iF,EAAY,OAAQ,CAClB3yE,KAAM,QACNic,MAAO,OACPrI,EAAG,iEACHlqB,EAAG,iEACHigB,EAAG,iEACHpY,EAAG,iEACHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,iEACA,oEAIJ8iF,EAAY,OAAQ,CAClB3yE,KAAM,QACNic,MAAO,KACPrI,EAAG,0EACHlqB,EAAG,0EACHigB,EAAG,0EACHpY,EAAG,0EACHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,0EACA,6EAIJ8iF,EAAY,OAAQ,CAClB3yE,KAAM,QACNic,MAAO,KACPrI,EAAG,8GAEHlqB,EAAG,8GAEHigB,EAAG,8GAEHpY,EAAG,8GAEHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,8GAEA,iHAKJ8iF,EAAY,OAAQ,CAClB3yE,KAAM,QACNic,MAAO,KACPrI,EAAG,2JAGHlqB,EAAG,2JAGHigB,EAAG,2JAGHpY,EAAG,2JAGHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,2JAGA,8JAMJ8iF,EAAY,aAAc,CACxB3yE,KAAM,OACNic,MAAO,SACPrI,EAAG,sEACHlqB,EAAG,QACHigB,EAAG,IACHpY,EAAG,sEACHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,OAIJ8iF,EAAY,UAAW,CACrB3yE,KAAM,UACNic,MAAO,SACPrI,EAAG,sEACHlqB,EAAG,KACHmP,EAAG,IAEHtQ,EAAG,sEACHgJ,EAAG,sEACHhF,KAAMA,KAAAA,OACN09E,MAAM,EACNp6E,EAAG,CACD,mEAGA,sEAKJ,IACEwzD,EAAG,YAGL,CAFE,MAAOt3D,GACPs3D,OAAMh5D,CACR,CAEAsoF,EAAY,YAAa,CACvB3yE,KAAM,QACNic,MAAO,OACPrI,EAAG,0EACHlqB,EAAG,IACHigB,EAAG,IACHpY,EAAG,0EACH0kB,EAAG,IACH1pB,KAAMA,KAAAA,OAGN4hC,KAAM,mEACNu/C,OAAQ,mEACRI,MAAO,CACL,CACEpkF,EAAG,mCACHigB,EAAG,qCAEL,CACEjgB,EAAG,oCACHigB,EAAG,qCAIPsgE,MAAM,EACNp6E,EAAG,CACD,mEACA,mEACAwzD,QCrMJ,SAASuvB,GAASpf,GAChB,KAAM1oE,gBAAgB8nF,IACpB,OAAO,IAAIA,GAASpf,GACtB1oE,KAAKyB,KAAOinE,EAAQjnE,KACpBzB,KAAK+nF,aAAerf,EAAQqf,WAE5B/nF,KAAK8xB,OAAS9xB,KAAKyB,KAAKumF,QACxBhoF,KAAKioF,WAAavf,EAAQuf,YAAcjoF,KAAKyB,KAAKymF,aAElDloF,KAAKmoF,QAAU,KACfnoF,KAAKooF,eAAiB,KACtBpoF,KAAKk9B,EAAI,KACTl9B,KAAK4kC,EAAI,KAET,IAAIyjD,EAAUh2E,GAAM3L,QAAQgiE,EAAQ2f,QAAS3f,EAAQ4f,YAAc,OAC/D3oF,EAAQ0S,GAAM3L,QAAQgiE,EAAQ/oE,MAAO+oE,EAAQ6f,UAAY,OACzDC,EAAOn2E,GAAM3L,QAAQgiE,EAAQ8f,KAAM9f,EAAQ+f,SAAW,OAC1DhtE,GAAO4sE,EAAQ7sF,QAAWwE,KAAKioF,WAAa,EACrC,mCAAqCjoF,KAAKioF,WAAa,SAC9DjoF,KAAKyc,MAAM4rE,EAAS1oF,EAAO6oF,EAC7B,CACA,OAAiBV,GAEjBA,GAAS16E,UAAUqP,MAAQ,SAAc4rE,EAAS1oF,EAAO6oF,GACvD,IAAI1mD,EAAOumD,EAAQnmF,OAAOvC,GAAOuC,OAAOsmF,GAExCxoF,KAAKk9B,EAAI,IAAI9hC,MAAM4E,KAAK8xB,OAAS,GACjC9xB,KAAK4kC,EAAI,IAAIxpC,MAAM4E,KAAK8xB,OAAS,GACjC,IAAK,IAAIv2B,EAAI,EAAGA,EAAIyE,KAAK4kC,EAAEppC,OAAQD,IACjCyE,KAAKk9B,EAAE3hC,GAAK,EACZyE,KAAK4kC,EAAErpC,GAAK,EAGdyE,KAAK0oF,QAAQ5mD,GACb9hC,KAAKmoF,QAAU,EACfnoF,KAAKooF,eAAiB,eACxB,EAEAN,GAAS16E,UAAUu7E,MAAQ,WACzB,OAAO,IAAIlnF,KAAAA,MAAUzB,KAAKyB,KAAMzB,KAAKk9B,EACvC,EAEA4qD,GAAS16E,UAAUs7E,QAAU,SAAgB5mD,GAC3C,IAAI8mD,EAAO5oF,KAAK2oF,QACApxD,OAAOv3B,KAAK4kC,GACZrN,OAAO,CAAE,IACrBuK,IACF8mD,EAAOA,EAAKrxD,OAAOuK,IACrB9hC,KAAKk9B,EAAI0rD,EAAK33C,SACdjxC,KAAK4kC,EAAI5kC,KAAK2oF,QAAQpxD,OAAOv3B,KAAK4kC,GAAGqM,SAChCnP,IAGL9hC,KAAKk9B,EAAIl9B,KAAK2oF,QACApxD,OAAOv3B,KAAK4kC,GACZrN,OAAO,CAAE,IACTA,OAAOuK,GACPmP,SACdjxC,KAAK4kC,EAAI5kC,KAAK2oF,QAAQpxD,OAAOv3B,KAAK4kC,GAAGqM,SACvC,EAEA62C,GAAS16E,UAAU0gC,OAAS,SAAgBu6C,EAASC,EAAYhjF,EAAKujF,GAE1C,kBAAfP,IACTO,EAASvjF,EACTA,EAAMgjF,EACNA,EAAa,MAGfD,EAAUh2E,GAAM3L,QAAQ2hF,EAASC,GACjChjF,EAAM+M,GAAM3L,QAAQpB,EAAKujF,GAEzBptE,GAAO4sE,EAAQ7sF,QAAWwE,KAAKioF,WAAa,EACrC,mCAAqCjoF,KAAKioF,WAAa,SAE9DjoF,KAAK0oF,QAAQL,EAAQnmF,OAAOoD,GAAO,KACnCtF,KAAKmoF,QAAU,CACjB,EAEAL,GAAS16E,UAAU2gC,SAAW,SAAkBvxC,EAAKyhF,EAAK34E,EAAKujF,GAC7D,GAAI7oF,KAAKmoF,QAAUnoF,KAAKooF,eACtB,MAAM,IAAIlsF,MAAM,sBAGC,kBAAR+hF,IACT4K,EAASvjF,EACTA,EAAM24E,EACNA,EAAM,MAIJ34E,IACFA,EAAM+M,GAAM3L,QAAQpB,EAAKujF,GAAU,OACnC7oF,KAAK0oF,QAAQpjF,IAIf,IADA,IAAIwjF,EAAO,GACJA,EAAKttF,OAASgB,GACnBwD,KAAK4kC,EAAI5kC,KAAK2oF,QAAQpxD,OAAOv3B,KAAK4kC,GAAGqM,SACrC63C,EAAOA,EAAK5mF,OAAOlC,KAAK4kC,GAG1B,IAAIh+B,EAAMkiF,EAAK3sF,MAAM,EAAGK,GAGxB,OAFAwD,KAAK0oF,QAAQpjF,GACbtF,KAAKmoF,UACE91E,GAAMnX,OAAO0L,EAAKq3E,EAC3B,EC5GA,IAAIxiE,GAASpJ,GAAMoJ,OAEnB,SAASstE,GAAQC,EAAItgB,GACnB1oE,KAAKgpF,GAAKA,EACVhpF,KAAKipF,KAAO,KACZjpF,KAAKkpF,IAAM,KAGPxgB,EAAQugB,MACVjpF,KAAKmpF,eAAezgB,EAAQugB,KAAMvgB,EAAQ0gB,SACxC1gB,EAAQwgB,KACVlpF,KAAKqpF,cAAc3gB,EAAQwgB,IAAKxgB,EAAQ4gB,OAC5C,CACA,OAAiBP,GAEjBA,GAAQQ,WAAa,SAAoBP,EAAIE,EAAKjL,GAChD,OAAIiL,aAAeH,GACVG,EAEF,IAAIH,GAAQC,EAAI,CACrBE,IAAKA,EACLI,OAAQrL,GAEZ,EAEA8K,GAAQS,YAAc,SAAqBR,EAAIC,EAAMhL,GACnD,OAAIgL,aAAgBF,GACXE,EAEF,IAAIF,GAAQC,EAAI,CACrBC,KAAMA,EACNG,QAASnL,GAEb,EAEA8K,GAAQ37E,UAAU2yE,SAAW,WAC3B,IAAImJ,EAAMlpF,KAAKypF,YAEf,OAAIP,EAAI3E,aACC,CAAEzlF,QAAQ,EAAO4nE,OAAQ,sBAC7BwiB,EAAInJ,WAEJmJ,EAAIvyE,IAAI3W,KAAKgpF,GAAGnJ,MAAMp5E,GAAG89E,aAGvB,CAAEzlF,QAAQ,EAAM4nE,OAAQ,MAFtB,CAAE5nE,QAAQ,EAAO4nE,OAAQ,uBAFzB,CAAE5nE,QAAQ,EAAO4nE,OAAQ,4BAKpC,EAEAqiB,GAAQ37E,UAAUq8E,UAAY,SAAmBzf,EAASiU,GAUxD,MARuB,kBAAZjU,IACTiU,EAAMjU,EACNA,EAAU,MAGPhqE,KAAKkpF,MACRlpF,KAAKkpF,IAAMlpF,KAAKgpF,GAAGjkF,EAAE4R,IAAI3W,KAAKipF,OAE3BhL,EAGEj+E,KAAKkpF,IAAIhuF,OAAO+iF,EAAKjU,GAFnBhqE,KAAKkpF,GAGhB,EAEAH,GAAQ37E,UAAUs8E,WAAa,SAAoBzL,GACjD,MAAY,QAARA,EACKj+E,KAAKipF,KAAKnrF,SAAS,GAAI,GAEvBkC,KAAKipF,IAChB,EAEAF,GAAQ37E,UAAU+7E,eAAiB,SAAwBhgF,EAAK80E,GAC9Dj+E,KAAKipF,KAAO,IAAIhtE,IAAJ,CAAO9S,EAAK80E,GAAO,IAI/Bj+E,KAAKipF,KAAOjpF,KAAKipF,KAAKt8D,KAAK3sB,KAAKgpF,GAAGnJ,MAAMp5E,EAC3C,EAEAsiF,GAAQ37E,UAAUi8E,cAAgB,SAAuBlgF,EAAK80E,GAC5D,GAAI90E,EAAIse,GAAKte,EAAIue,EAWf,MAP2B,SAAvB1nB,KAAKgpF,GAAGnJ,MAAM3qE,KAChBuG,GAAOtS,EAAIse,EAAG,qBACkB,UAAvBznB,KAAKgpF,GAAGnJ,MAAM3qE,MACS,YAAvBlV,KAAKgpF,GAAGnJ,MAAM3qE,MACvBuG,GAAOtS,EAAIse,GAAKte,EAAIue,EAAG,qCAEzB1nB,KAAKkpF,IAAMlpF,KAAKgpF,GAAGnJ,MAAMr5C,MAAMr9B,EAAIse,EAAGte,EAAIue,IAG5C1nB,KAAKkpF,IAAMlpF,KAAKgpF,GAAGnJ,MAAMyB,YAAYn4E,EAAK80E,EAC5C,EAGA8K,GAAQ37E,UAAUu8E,OAAS,SAAgBT,GAIzC,OAHIA,EAAInJ,YACNtkE,GAAOytE,EAAInJ,WAAY,8BAElBmJ,EAAIvyE,IAAI3W,KAAKipF,MAAMxH,MAC5B,EAGAsH,GAAQ37E,UAAUo0B,KAAO,SAAcv7B,EAAKg4E,EAAKvV,GAC/C,OAAO1oE,KAAKgpF,GAAGxnD,KAAKv7B,EAAKjG,KAAMi+E,EAAKvV,EACtC,EAEAqgB,GAAQ37E,UAAUw0B,OAAS,SAAgB37B,EAAKuE,GAC9C,OAAOxK,KAAKgpF,GAAGpnD,OAAO37B,EAAKuE,EAAWxK,KACxC,EAEA+oF,GAAQ37E,UAAUoR,QAAU,WAC1B,MAAO,eAAiBxe,KAAKipF,MAAQjpF,KAAKipF,KAAKnrF,SAAS,GAAI,IACrD,UAAYkC,KAAKkpF,KAAOlpF,KAAKkpF,IAAI1qE,WAAa,IACvD,ECnHA,IAAI/C,GAASpJ,GAAMoJ,OAEnB,SAASgnB,GAAUimC,EAASuV,GAC1B,GAAIvV,aAAmBjmC,GACrB,OAAOimC,EAEL1oE,KAAK4pF,WAAWlhB,EAASuV,KAG7BxiE,GAAOitD,EAAQj+D,GAAKi+D,EAAQh+D,EAAG,4BAC/B1K,KAAKyK,EAAI,IAAIwR,IAAJ,CAAOysD,EAAQj+D,EAAG,IAC3BzK,KAAK0K,EAAI,IAAIuR,IAAJ,CAAOysD,EAAQh+D,EAAG,SACGnL,IAA1BmpE,EAAQoB,cACV9pE,KAAK8pE,cAAgB,KAErB9pE,KAAK8pE,cAAgBpB,EAAQoB,cACjC,CACA,OAAiBrnC,GAEjB,SAASonD,KACP7pF,KAAK8pF,MAAQ,CACf,CAEA,SAASC,GAAUruF,EAAKotB,GACtB,IAAIkhE,EAAUtuF,EAAIotB,EAAEghE,SACpB,KAAgB,IAAVE,GACJ,OAAOA,EAET,IAAIC,EAAqB,GAAVD,EAGf,GAAiB,IAAbC,GAAkBA,EAAW,EAC/B,OAAO,EAIT,IADA,IAAIvuE,EAAM,EACDngB,EAAI,EAAGqiB,EAAMkL,EAAEghE,MAAOvuF,EAAI0uF,EAAU1uF,IAAKqiB,IAChDlC,IAAQ,EACRA,GAAOhgB,EAAIkiB,GACXlC,KAAS,EAIX,QAAIA,GAAO,OAIXoN,EAAEghE,MAAQlsE,EACHlC,EACT,CAEA,SAASwuE,GAAUxuF,GAGjB,IAFA,IAAIH,EAAI,EACJiB,EAAMd,EAAIF,OAAS,GACfE,EAAIH,MAAqB,IAAbG,EAAIH,EAAI,KAAcA,EAAIiB,GAC5CjB,IAEF,OAAU,IAANA,EACKG,EAEFA,EAAIS,MAAMZ,EACnB,CA2DA,SAAS4uF,GAAgBtrF,EAAKrC,GAC5B,GAAIA,EAAM,IACRqC,EAAIpD,KAAKe,OADX,CAIA,IAAI4tF,EAAS,GAAKntE,KAAKy8B,IAAIl9C,GAAOygB,KAAKotE,MAAQ,GAE/C,IADAxrF,EAAIpD,KAAc,IAAT2uF,KACAA,GACPvrF,EAAIpD,KAAMe,KAAS4tF,GAAU,GAAM,KAErCvrF,EAAIpD,KAAKe,EANX,CAOA,CApEAimC,GAAUr1B,UAAUw8E,WAAa,SAAoBtsF,EAAM2gF,GACzD3gF,EAAO+U,GAAM3L,QAAQpJ,EAAM2gF,GAC3B,IAAIn1D,EAAI,IAAI+gE,GACZ,GAAwB,KAApBvsF,EAAKwrB,EAAEghE,SACT,OAAO,EAET,IAAIttF,EAAMutF,GAAUzsF,EAAMwrB,GAC1B,IAAY,IAARtsB,EACF,OAAO,EAET,GAAKA,EAAMssB,EAAEghE,QAAWxsF,EAAK9B,OAC3B,OAAO,EAET,GAAwB,IAApB8B,EAAKwrB,EAAEghE,SACT,OAAO,EAET,IAAIp4D,EAAOq4D,GAAUzsF,EAAMwrB,GAC3B,IAAa,IAAT4I,EACF,OAAO,EAET,IAAIjnB,EAAInN,EAAKnB,MAAM2sB,EAAEghE,MAAOp4D,EAAO5I,EAAEghE,OAErC,GADAhhE,EAAEghE,OAASp4D,EACa,IAApBp0B,EAAKwrB,EAAEghE,SACT,OAAO,EAET,IAAIQ,EAAOP,GAAUzsF,EAAMwrB,GAC3B,IAAa,IAATwhE,EACF,OAAO,EAET,GAAIhtF,EAAK9B,SAAW8uF,EAAOxhE,EAAEghE,MAC3B,OAAO,EAET,IAAIp/E,EAAIpN,EAAKnB,MAAM2sB,EAAEghE,MAAOQ,EAAOxhE,EAAEghE,OACrC,GAAa,IAATr/E,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAEtO,MAAM,EAKlB,CACE,GAAa,IAATuO,EAAE,GAAU,CACd,KAAW,IAAPA,EAAE,IAIJ,OAAO,EAHPA,EAAIA,EAAEvO,MAAM,EAKlB,CAME,OAJA6D,KAAKyK,EAAI,IAAIwR,IAAJ,CAAOxR,GAChBzK,KAAK0K,EAAI,IAAIuR,IAAJ,CAAOvR,GAChB1K,KAAK8pE,cAAgB,MAEd,CACT,EAeArnC,GAAUr1B,UAAUm9E,MAAQ,SAAetM,GACzC,IAAIxzE,EAAIzK,KAAKyK,EAAE/D,UACXgE,EAAI1K,KAAK0K,EAAEhE,UAYf,IATW,IAAP+D,EAAE,KACJA,EAAI,CAAE,GAAIvI,OAAOuI,IAER,IAAPC,EAAE,KACJA,EAAI,CAAE,GAAIxI,OAAOwI,IAEnBD,EAAIy/E,GAAUz/E,GACdC,EAAIw/E,GAAUx/E,IAENA,EAAE,MAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAEvO,MAAM,GAEd,IAAI0C,EAAM,CAAE,GACZsrF,GAAgBtrF,EAAK4L,EAAEjP,SACvBqD,EAAMA,EAAIqD,OAAOuI,IACbhP,KAAK,GACT0uF,GAAgBtrF,EAAK6L,EAAElP,QACvB,IAAIgvF,EAAW3rF,EAAIqD,OAAOwI,GACtB9D,EAAM,CAAE,IAGZ,OAFAujF,GAAgBvjF,EAAK4jF,EAAShvF,QAC9BoL,EAAMA,EAAI1E,OAAOsoF,GACVn4E,GAAMnX,OAAO0L,EAAKq3E,EAC3B,EC/JA,IAAInvC,GAAI,2CACJrzB,GAASpJ,GAAMoJ,OAKnB,SAASgvE,GAAG/hB,GACV,KAAM1oE,gBAAgByqF,IACpB,OAAO,IAAIA,GAAG/hB,GAGO,kBAAZA,IACTjtD,GAAOpU,OAAO+F,UAAUqJ,eAAe7R,KAAK+iF,GAAQjf,GAClD,iBAAmBA,GAErBA,EAAUif,GAAOjf,IAIfA,aAAmBif,GAAOC,cAC5Blf,EAAU,CAAEmX,MAAOnX,IAErB1oE,KAAK6/E,MAAQnX,EAAQmX,MAAMA,MAC3B7/E,KAAKyG,EAAIzG,KAAK6/E,MAAMp5E,EACpBzG,KAAK0qF,GAAK1qF,KAAKyG,EAAEilB,MAAM,GACvB1rB,KAAK+E,EAAI/E,KAAK6/E,MAAM96E,EAGpB/E,KAAK+E,EAAI2jE,EAAQmX,MAAM96E,EACvB/E,KAAK+E,EAAE2sC,WAAWg3B,EAAQmX,MAAMp5E,EAAE2P,YAAc,GAGhDpW,KAAKyB,KAAOinE,EAAQjnE,MAAQinE,EAAQmX,MAAMp+E,IAC5C,CACA,OAAiBgpF,GAEjBA,GAAGr9E,UAAU+F,QAAU,SAAiBu1D,GACtC,OAAO,IAAIqgB,GAAQ/oF,KAAM0oE,EAC3B,EAEA+hB,GAAGr9E,UAAUu9E,eAAiB,SAAwB1B,EAAMhL,GAC1D,OAAO8K,GAAQS,YAAYxpF,KAAMipF,EAAMhL,EACzC,EAEAwM,GAAGr9E,UAAUw9E,cAAgB,SAAuB1B,EAAKjL,GACvD,OAAO8K,GAAQQ,WAAWvpF,KAAMkpF,EAAKjL,EACvC,EAEAwM,GAAGr9E,UAAUy9E,WAAa,SAAoBniB,GACvCA,IACHA,EAAU,CAAC,GAcb,IAXA,IAAI76B,EAAO,IAAIi6C,GAAS,CACtBrmF,KAAMzB,KAAKyB,KACX+mF,KAAM9f,EAAQ8f,KACdC,QAAS/f,EAAQ+f,SAAW,OAC5BJ,QAAS3f,EAAQ2f,SAAWv5C,GAAK9uC,KAAKyB,KAAKymF,cAC3CI,WAAY5f,EAAQ2f,SAAW3f,EAAQ4f,YAAc,OACrD3oF,MAAOK,KAAKyG,EAAEC,YAGZb,EAAQ7F,KAAKyG,EAAE4B,aACfyiF,EAAM9qF,KAAKyG,EAAEyb,IAAI,IAAIjG,IAAJ,CAAO,MACnB,CACP,IAAIgtE,EAAO,IAAIhtE,IAAJ,CAAO4xB,EAAKE,SAASloC,IAChC,KAAIojF,EAAK5rE,IAAIytE,GAAO,GAIpB,OADA7B,EAAKzoE,MAAM,GACJxgB,KAAK2qF,eAAe1B,EAC/B,CACA,EAEAwB,GAAGr9E,UAAU29E,aAAe,SAAsB9kF,EAAK+kF,GACrD,IAAIh9D,EAA2B,EAAnB/nB,EAAIoC,aAAmBrI,KAAKyG,EAAE2P,YAG1C,OAFI4X,EAAQ,IACV/nB,EAAMA,EAAIylB,MAAMsC,KACbg9D,GAAa/kF,EAAIoX,IAAIrd,KAAKyG,IAAM,EAC5BR,EAAIic,IAAIliB,KAAKyG,GAEbR,CACX,EAEAwkF,GAAGr9E,UAAUo0B,KAAO,SAAcv7B,EAAKkD,EAAK80E,EAAKvV,GAC5B,kBAARuV,IACTvV,EAAUuV,EACVA,EAAM,MAEHvV,IACHA,EAAU,CAAC,GAEbv/D,EAAMnJ,KAAK2qF,eAAexhF,EAAK80E,GAC/Bh4E,EAAMjG,KAAK+qF,aAAa,IAAI9uE,IAAJ,CAAOhW,EAAK,KAqBpC,IAlBA,IAAIJ,EAAQ7F,KAAKyG,EAAE4B,aACf4iF,EAAO9hF,EAAIugF,aAAahjF,QAAQ,KAAMb,GAGtClG,EAAQsG,EAAIS,QAAQ,KAAMb,GAG1BgoC,EAAO,IAAIi6C,GAAS,CACtBrmF,KAAMzB,KAAKyB,KACX4mF,QAAS4C,EACTtrF,MAAOA,EACP6oF,KAAM9f,EAAQ8f,KACdC,QAAS/f,EAAQ+f,SAAW,SAI1ByC,EAAMlrF,KAAKyG,EAAEyb,IAAI,IAAIjG,IAAJ,CAAO,IAEnBkvE,EAAO,GAAKA,IAAQ,CAC3B,IAAI5jF,EAAImhE,EAAQnhE,EACdmhE,EAAQnhE,EAAE4jF,GACV,IAAIlvE,IAAJ,CAAO4xB,EAAKE,SAAS/tC,KAAKyG,EAAE4B,eAE9B,MADAd,EAAIvH,KAAK+qF,aAAaxjF,GAAG,IACnB0mB,KAAK,IAAM,GAAK1mB,EAAE8V,IAAI6tE,IAAQ,GAApC,CAGA,IAAIE,EAAKprF,KAAK+E,EAAE4R,IAAIpP,GACpB,IAAI6jF,EAAG7G,aAAP,CAGA,IAAI8G,EAAMD,EAAG3J,OACTh3E,EAAI4gF,EAAI1+D,KAAK3sB,KAAKyG,GACtB,GAAkB,IAAdgE,EAAEwjB,KAAK,GAAX,CAGA,IAAIvjB,EAAInD,EAAE2mB,KAAKluB,KAAKyG,GAAGkQ,IAAIlM,EAAEkM,IAAIxN,EAAIugF,cAAc1nE,KAAK/b,IAExD,GAAkB,KADlByE,EAAIA,EAAEiiB,KAAK3sB,KAAKyG,IACVwnB,KAAK,GAAX,CAGA,IAAI67C,GAAiBshB,EAAG1J,OAAOh0D,QAAU,EAAI,IACT,IAAf29D,EAAIhuE,IAAI5S,GAAW,EAAI,GAQ5C,OALIi+D,EAAQl7B,WAAa9iC,EAAE2S,IAAIrd,KAAK0qF,IAAM,IACxChgF,EAAI1K,KAAKyG,EAAEyb,IAAIxX,GACfo/D,GAAiB,GAGZ,IAAIrnC,GAAU,CAAEh4B,EAAGA,EAAGC,EAAGA,EAAGo/D,cAAeA,GAXxC,CALA,CALA,CAJA,CA0Bd,CACA,EAEA2gB,GAAGr9E,UAAUw0B,OAAS,SAAgB37B,EAAKuE,EAAWrB,EAAK80E,GACzDh4E,EAAMjG,KAAK+qF,aAAa,IAAI9uE,IAAJ,CAAOhW,EAAK,KACpCkD,EAAMnJ,KAAK4qF,cAAczhF,EAAK80E,GAI9B,IAAIxzE,GAHJD,EAAY,IAAIi4B,GAAUj4B,EAAW,QAGnBC,EACdC,EAAIF,EAAUE,EAClB,GAAID,EAAEwjB,KAAK,GAAK,GAAKxjB,EAAE4S,IAAIrd,KAAKyG,IAAM,EACpC,OAAO,EACT,GAAIiE,EAAEujB,KAAK,GAAK,GAAKvjB,EAAE2S,IAAIrd,KAAKyG,IAAM,EACpC,OAAO,EAGT,IAGIqiB,EAHA4lB,EAAOhkC,EAAEwjB,KAAKluB,KAAKyG,GACnB0jC,EAAKuE,EAAK/3B,IAAI1Q,GAAK0mB,KAAK3sB,KAAKyG,GAC7B2jC,EAAKsE,EAAK/3B,IAAIlM,GAAGkiB,KAAK3sB,KAAKyG,GAG/B,OAAKzG,KAAK6/E,MAAMF,gBAWhB72D,EAAI9oB,KAAK+E,EAAE8/E,QAAQ16C,EAAIhhC,EAAIsgF,YAAar/C,IAClCm6C,cAMCz7D,EAAEs+D,OAAO38E,KAjBdqe,EAAI9oB,KAAK+E,EAAE6/E,OAAOz6C,EAAIhhC,EAAIsgF,YAAar/C,IACjCm6C,cAGkC,IAAjCz7D,EAAE24D,OAAO90D,KAAK3sB,KAAKyG,GAAG4W,IAAI5S,EAcrC,EAEAggF,GAAGr9E,UAAUk+E,cAAgB,SAASrlF,EAAKuE,EAAW/L,EAAGw/E,GACvDxiE,IAAQ,EAAIhd,KAAOA,EAAG,4CACtB+L,EAAY,IAAIi4B,GAAUj4B,EAAWyzE,GAErC,IAAIx3E,EAAIzG,KAAKyG,EACTxF,EAAI,IAAIgb,IAAJ,CAAOhW,GACXwE,EAAID,EAAUC,EACdC,EAAIF,EAAUE,EAGd++B,EAAa,EAAJhrC,EACT8sF,EAAc9sF,GAAK,EACvB,GAAIgM,EAAE4S,IAAIrd,KAAK6/E,MAAM/2D,EAAE6D,KAAK3sB,KAAK6/E,MAAMp5E,KAAO,GAAK8kF,EACjD,MAAM,IAAIrvF,MAAM,wCAIhBuO,EADE8gF,EACEvrF,KAAK6/E,MAAM0B,WAAW92E,EAAEnF,IAAItF,KAAK6/E,MAAMp5E,GAAIgjC,GAE3CzpC,KAAK6/E,MAAM0B,WAAW92E,EAAGg/B,GAE/B,IAAI+hD,EAAOhhF,EAAUC,EAAEyjB,KAAKznB,GACxB45D,EAAK55D,EAAEyb,IAAIjhB,GAAG0V,IAAI60E,GAAM7+D,KAAKlmB,GAC7By+E,EAAKx6E,EAAEiM,IAAI60E,GAAM7+D,KAAKlmB,GAI1B,OAAOzG,KAAK+E,EAAE6/E,OAAOvkB,EAAI51D,EAAGy6E,EAC9B,EAEAuF,GAAGr9E,UAAUq+E,oBAAsB,SAASxqF,EAAGuJ,EAAW49B,EAAG61C,GAE3D,GAAgC,QADhCzzE,EAAY,IAAIi4B,GAAUj4B,EAAWyzE,IACvBnU,cACZ,OAAOt/D,EAAUs/D,cAEnB,IAAK,IAAIvuE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAImwF,EACJ,IACEA,EAAS1rF,KAAKsrF,cAAcrqF,EAAGuJ,EAAWjP,EAGhD,CAFM,MAAO0F,GACP,QACN,CAEI,GAAIyqF,EAAO58D,GAAGsZ,GACZ,OAAO7sC,CACb,CACE,MAAM,IAAIW,MAAM,uCAClB,MCjPIuuF,qBCCJ,IAAIkB,EAAWhuF,EAEfguF,EAAS94E,QAAOA,QAChB84E,EAASt5E,MAAQk1E,GACjBoE,EAAS78C,KAAI,2CACb68C,EAAS9L,MAAQ4H,GACjBkE,EAAShE,OAASiE,GAGlBD,EAAS3C,GAAK6C,GACdF,EAASG,MAAK,QDXD9C,GEQP9gB,GAAS,IAAIrC,ECTI,qBDWnBkmB,GAAa,KACjB,SAASC,KAIL,OAHKD,KACDA,GAAS,IAAItB,GAAG,cAEbsB,EACX,CAEO,IAAME,GAAU,WAYnB,WAAY9pF,IAAqB,eAC7B4oE,GAAe/qE,KAAM,QAAS,aAE9B+qE,GAAe/qE,KAAM,aAAcmpE,EAAQhnE,IACJ,KAAnCinE,EAAcppE,KAAKmC,aACnB+lE,GAAOjC,mBAAmB,sBAAuB,aAAc,kBAGnE,IAAM9yD,EAAU64E,KAAWrB,eAAeliB,EAASzoE,KAAKmC,aAExD4oE,GAAe/qE,KAAM,YAAa,KAAOmT,EAAQs2E,WAAU,EAAO,QAClE1e,GAAe/qE,KAAM,sBAAuB,KAAOmT,EAAQs2E,WAAU,EAAM,QAE3E1e,GAAe/qE,KAAM,iBAAiB,EAC1C,CA8BC,OA9BA,iCAED,SAAUyjC,GACN,IAAMyoD,EAAMF,KAAWpB,cAAcniB,EAASzoE,KAAKsC,YAC7CshF,EAAMoI,KAAWpB,cAAcniB,EAAShlC,IAC9C,MAAO,KAAOyoD,EAAGhD,IAAI5jF,IAAIs+E,EAAGsF,KAAK1H,iBAAiB,MACtD,GAAC,wBAED,SAAWvwC,GACP,IAAM99B,EAAU64E,KAAWrB,eAAeliB,EAASzoE,KAAKmC,aAClDgqF,EAAc1jB,EAASx3B,GACF,KAAvBk7C,EAAY3wF,QACZ0sE,GAAOjC,mBAAmB,oBAAqB,SAAUh1B,GAE7D,IAAMzmC,EAAY2I,EAAQquB,KAAK2qD,EAAa,CAAE3+C,WAAW,IACzD,OAAOo8B,EAAe,CAClBE,cAAet/D,EAAUs/D,cACzBr/D,EAAGk/D,EAAW,KAAOn/D,EAAUC,EAAE3M,SAAS,IAAK,IAC/C4M,EAAGi/D,EAAW,KAAOn/D,EAAUE,EAAE5M,SAAS,IAAK,KAEvD,GAAC,iCAED,SAAoBsuF,GAChB,IAAMj5E,EAAU64E,KAAWrB,eAAeliB,EAASzoE,KAAKmC,aAClDkqF,EAAeL,KAAWpB,cAAcniB,EAAS6jB,GAAiBF,KACxE,OAAOziB,EAAW,KAAOx2D,EAAQw2E,OAAO0C,EAAa5C,aAAa3rF,SAAS,IAAK,GACpF,IAAC,2BAED,SAAoB2J,GAChB,SAAUA,IAASA,EAAM8kF,cAC7B,KAAC,EAxDkB,GA2DjB,SAAU1hF,GAAiBomC,EAAmBzmC,GAChD,IAAMO,EAAM6+D,EAAep/D,GACrBgiF,EAAK,CAAE/hF,EAAGg+D,EAAS19D,EAAIN,GAAIC,EAAG+9D,EAAS19D,EAAIL,IACjD,MAAO,KAAOshF,KAAWV,cAAc7iB,EAASx3B,GAASu7C,EAAIzhF,EAAI++D,eAAe5uE,OAAO,OAAO,EAClG,CAEM,SAAUoxF,GAAiBnjF,EAAgBsjF,GAC7C,IAAM5mF,EAAQ4iE,EAASt/D,GAEvB,GAAqB,KAAjBtD,EAAMrK,OAAe,CACrB,IAAMkxF,EAAa,IAAIT,GAAWpmF,GAClC,OAAI4mF,EACO,KAAOT,KAAWrB,eAAe9kF,GAAO4jF,WAAU,EAAM,OAE5DiD,EAAWpqF,UAEf,OAAqB,KAAjBuD,EAAMrK,OACTixF,EAAqBtjB,EAAQtjE,GAC1B,KAAOmmF,KAAWpB,cAAc/kF,GAAO4jF,WAAU,EAAO,OAEvC,KAAjB5jF,EAAMrK,OACRixF,EACE,KAAOT,KAAWpB,cAAc/kF,GAAO4jF,WAAU,EAAM,OADpCtgB,EAAQtjE,GAI/BqiE,GAAOjC,mBAAmB,gCAAiC,MAAO,aAC7E,CExGO,ICyBK0mB,GAZNzkB,GAAS,IAAIrC,EDbI,sBCoFvB,SAAS+mB,GAAcnlF,GACnB,MAAc,OAAVA,EAAyB,KACtBinE,GAAWjnE,EACtB,CAEA,SAASolF,GAAaplF,GAClB,MAAc,OAAVA,EAAyByrE,GACtB53B,GAAU3+C,KAAK8K,EAC1B,EAnEA,SAAYklF,GACRA,EAAAA,EAAAA,OAAAA,GAAAA,SACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,QAAAA,GAAAA,SACH,CAJD,CAAYA,KAAAA,GAAgB,KAsE5B,IAAMG,GAAoB,CACtB,CAAE3/E,KAAM,QAAYnG,UAAW,GAAI+lF,SAAS,GAC5C,CAAE5/E,KAAM,WAAYnG,UAAW,GAAI+lF,SAAS,GAC5C,CAAE5/E,KAAM,WAAYnG,UAAW,GAAI+lF,SAAS,GAC5C,CAAE5/E,KAAM,KAAe3R,OAAQ,IAC/B,CAAE2R,KAAM,QAAYnG,UAAW,GAAI+lF,SAAS,GAC5C,CAAE5/E,KAAM,SAGNwvE,GAAuD,CACzD1yE,SAAS,EAAM3M,MAAM,EAAM8kD,UAAU,EAAMN,UAAS,EAAMniD,OAAO,EAAM4kD,IAAI,EAAMrvC,MAAM,EAAMzN,OAAO,GAGlG,SAAUulF,GAAe7jF,GAE3B,OAAOulE,GAAWrF,EAAa3nE,GAAU2nE,EADvBijB,GAAiBnjF,GAC8B,IAAK,IAC1E,CAEM,SAAU8jF,GAAeh8C,EAAmBzmC,GAC9C,OAAOwiF,GAAeniF,GAAiB49D,EAASx3B,GAASzmC,GAC7D,CAEA,SAAS0iF,GAAazlF,EAAqB0F,GACvC,IAAMrO,EAASsH,EAAWk1C,GAAU3+C,KAAK8K,GAAO2gE,eAIhD,OAHItpE,EAAOtD,OAAS,IAChB0sE,GAAOjC,mBAAmB,sBAAwB94D,EAAO,eAAiBA,EAAO1F,GAE9E3I,CACX,CAEA,SAASquF,GAAarqF,EAAc20D,GAChC,MAAO,CACHp2D,QAASqtE,GAAW5rE,GACpB20D,aAAcA,GAAe,IAAIjwD,KAAI,SAAC4lF,EAAY/nF,GAI9C,OAHkC,KAA9B+jE,EAAcgkB,IACdllB,GAAOjC,mBAAmB,iCAAkC,cAAF,OAAiBnjE,EAAK,YAAKuC,EAAM,KAAK+nF,GAE7FA,EAAW7rF,aACtB,IAER,CAEM,SAAU8rF,GAAc5lF,GAC1B,GAAIrM,MAAMC,QAAQoM,GACd,OAA0FA,EAAOD,KAAI,SAACxI,EAAKqG,GACvG,OAAIjK,MAAMC,QAAQ2D,IACVA,EAAIxD,OAAS,GACb0sE,GAAOjC,mBAAmB,wDAAyD,SAAF,OAAY5gE,EAAM,KAAKrG,GAErGmuF,GAAanuF,EAAI,GAAIA,EAAI,KAE7BmuF,GAAanuF,EAAIqC,QAASrC,EAAIy4D,YACzC,IAGJ,IAAM34D,EAAiEuI,OAAOuQ,KAAKnQ,GAAOD,KAAI,SAAC1E,GAC3F,IAAM20D,EAAoChwD,EAAM3E,GAAMnE,QAAO,SAACoqE,EAAOqkB,GAEjE,OADArkB,EAAMqkB,IAAc,EACbrkB,CACX,GAAyB,CAAC,GAC1B,OAAOokB,GAAarqF,EAAMuE,OAAOuQ,KAAK6/C,GAAav+C,OACvD,IAEA,OADApa,EAAOoa,MAAK,SAACta,EAAGigB,GAAC,OAAMjgB,EAAEyC,QAAQisF,cAAczuE,EAAExd,QAAQ,IAClDvC,CACX,CAEA,SAASyuF,GAAiB9lF,GACtB,OAAO4lF,GAAc5lF,GAAOD,KAAI,SAACxI,GAAG,MAAK,CAAEA,EAAIqC,QAASrC,EAAIy4D,YAAa,GAC7E,CAEA,SAAS+1B,GAAkBze,EAAkCvkE,GAIzD,GAA4B,MAAxBukE,EAAYjtB,SAAkB,CAC9B,IAAMA,EAAWxG,GAAU3+C,KAAKoyE,EAAYjtB,UACtCC,EAAezG,GAAU3+C,KAAKoyE,EAAYhtB,cAAgB,GAC3DD,EAAShzB,GAAGizB,IACbmmB,GAAOjC,mBAAmB,6CAA8C,KAAM,CAC1EnkB,SAAAA,EAAUC,aAAAA,IAKtB,IAAM0rC,EAAc,CAChBP,GAAane,EAAY9kE,SAAW,EAAG,WACvCijF,GAAane,EAAYpvE,OAAS,EAAG,SACrCutF,GAAane,EAAY/sB,sBAAwB,EAAG,wBACpDkrC,GAAane,EAAYhtB,cAAgB,EAAG,gBAC5CmrC,GAAane,EAAY3sB,UAAY,EAAG,YACpB,MAAlB2sB,EAAYxqB,GAAcmqB,GAAWK,EAAYxqB,IAAK,KACxD2oC,GAAane,EAAYtnE,OAAS,EAAG,SACpCsnE,EAAYzxE,MAAQ,KACpBiwF,GAAiBxe,EAAYlb,YAAc,KAGhD,GAAIrpD,EAAW,CACX,IAAMO,EAAM6+D,EAAep/D,GAC3BijF,EAAOhyF,KAAKyxF,GAAaniF,EAAI++D,cAAe,kBAC5C2jB,EAAOhyF,KAAK2K,EAAW2E,EAAIN,IAC3BgjF,EAAOhyF,KAAK2K,EAAW2E,EAAIL,IAG/B,OAAO6+D,EAAU,CAAE,OAAQmkB,GAAWD,IAC1C,CAEA,SAASE,GAAkB5e,EAAkCvkE,GACzD,IAAMijF,EAAc,CAChBP,GAAane,EAAY9kE,SAAW,EAAG,WACvCijF,GAAane,EAAYpvE,OAAS,EAAG,SACrCutF,GAAane,EAAYjtB,UAAY,EAAG,YACxCorC,GAAane,EAAY3sB,UAAY,EAAG,YACpB,MAAlB2sB,EAAYxqB,GAAcmqB,GAAWK,EAAYxqB,IAAK,KACxD2oC,GAAane,EAAYtnE,OAAS,EAAG,SACpCsnE,EAAYzxE,MAAQ,KACpBiwF,GAAiBxe,EAAYlb,YAAc,KAGhD,GAAIrpD,EAAW,CACX,IAAMO,EAAM6+D,EAAep/D,GAC3BijF,EAAOhyF,KAAKyxF,GAAaniF,EAAI++D,cAAe,kBAC5C2jB,EAAOhyF,KAAK2K,EAAW2E,EAAIN,IAC3BgjF,EAAOhyF,KAAK2K,EAAW2E,EAAIL,IAG/B,OAAO6+D,EAAU,CAAE,OAAQmkB,GAAWD,IAC1C,CAmFM,SAAUnuC,GAAUyvB,EAAkCvkE,GAExD,GAAwB,MAApBukE,EAAY75D,MAAqC,IAArB65D,EAAY75D,KAIxC,OAH8B,MAA1B65D,EAAYlb,YACZqU,GAAOjC,mBAAmB,kEAAmE,cAAe8I,GApFxH,SAAoBA,EAAkCvkE,GAClD6gE,GAAgB0D,EAAa4N,IAE7B,IAAMr8E,EAAkC,GAExCwsF,GAAkB91E,SAAQ,SAAS42E,GAC/B,IAAInmF,EAAcsnE,EAAa6e,EAAUzgF,OAAU,GAC7Cu7D,EAAuB,CAAC,EAC1BklB,EAAUb,UAAWrkB,EAAQG,OAAS,QAC1CphE,EAAQghE,EAASU,EAAQ1hE,EAAOihE,IAG5BklB,EAAUpyF,QAAUiM,EAAMjM,SAAWoyF,EAAUpyF,QAAUiM,EAAMjM,OAAS,GACxE0sE,GAAOjC,mBAAmB,sBAAwB2nB,EAAUzgF,KAAO,eAAiBygF,EAAUzgF,KAAO1F,GAIrGmmF,EAAU5mF,YACVS,EAAQrB,EAAWqB,IACTjM,OAASoyF,EAAU5mF,WACzBkhE,GAAOjC,mBAAmB,sBAAwB2nB,EAAUzgF,KAAO,eAAiBygF,EAAUzgF,KAAO1F,GAI7GnH,EAAI7E,KAAK0tE,EAAQ1hE,GACrB,IAEA,IAAIwC,EAAU,EAsBd,GArB2B,MAAvB8kE,EAAY9kE,QAIY,kBAFxBA,EAAU8kE,EAAY9kE,UAGlBi+D,GAAOjC,mBAAmB,8BAA+B,cAAe8I,GAGrEvkE,IAAc89D,EAAY99D,IAAcA,EAAUnO,EAAI,KAE7D4N,EAAUgT,KAAK8a,OAAOvtB,EAAUnO,EAAI,IAAM,IAI9B,IAAZ4N,IACA3J,EAAI7E,KAAK0tE,EAAQl/D,IACjB3J,EAAI7E,KAAK,MACT6E,EAAI7E,KAAK,QAIR+O,EACD,OAAOkjF,GAAWptF,GAKtB,IAAMyK,EAAM6+D,EAAep/D,GAGvBnO,EAAI,GAAK0O,EAAI++D,cAmBjB,OAlBgB,IAAZ7/D,GACA3J,EAAI66E,MACJ76E,EAAI66E,MACJ76E,EAAI66E,MACJ9+E,GAAe,EAAV4N,EAAc,EAGfc,EAAI1O,EAAI,IAAM0O,EAAI1O,IAAMA,GACvB6rE,GAAOjC,mBAAmB,2CAA4C,YAAaz7D,IAEjFO,EAAI1O,IAAMA,GAChB6rE,GAAOjC,mBAAmB,2CAA4C,YAAaz7D,GAGxFlK,EAAI7E,KAAK0tE,EAAQ9sE,IACjBiE,EAAI7E,KAAK2K,EAAWqiE,EAAS19D,EAAIN,KACjCnK,EAAI7E,KAAK2K,EAAWqiE,EAAS19D,EAAIL,KAE1BgjF,GAAWptF,EACtB,CAQeutF,CAAW9e,EAAavkE,GAInC,OAAQukE,EAAY75D,MAChB,KAAK,EACD,OAAOy4E,GAAkB5e,EAAavkE,GAC1C,KAAK,EACD,OAAOgjF,GAAkBze,EAAavkE,GAK9C,OAAO09D,GAAOd,WAAW,iCAAD,OAAmC2H,EAAY75D,MAAS2wD,EAAOnnB,OAAO8oB,sBAAuB,CACjHC,UAAW,uBACXqmB,gBAAiB/e,EAAY75D,MAErC,CAEA,SAAS64E,GAAmBhwD,EAAiB0vD,EAAuBnuC,GAChE,IACI,IAAM0uC,EAAQnB,GAAaY,EAAO,IAAIjuE,WACtC,GAAc,IAAVwuE,GAAyB,IAAVA,EAAe,MAAM,IAAI9xF,MAAM,aAClD6hC,EAAG1hC,EAAI2xF,EACT,MAAOl0E,GACLouD,GAAOjC,mBAAmB,oCAAqC,IAAKwnB,EAAO,IAG/E1vD,EAAGtzB,EAAIk/D,EAAW8jB,EAAO,GAAI,IAC7B1vD,EAAGrzB,EAAIi/D,EAAW8jB,EAAO,GAAI,IAE7B,IACI,IAAMx8C,EAASvvC,GAAU49C,EAAUvhB,IACnCA,EAAGphC,KAAOswF,GAAeh8C,EAAQ,CAAExmC,EAAGszB,EAAGtzB,EAAGC,EAAGqzB,EAAGrzB,EAAGo/D,cAAe/rC,EAAG1hC,GAC1D,CAAf,MAAOyd,GAAQ,CACrB,CAoIM,SAAU/E,GAAMk5E,GAClB,IAAMpzC,EAAU4tB,EAASwlB,GAGzB,GAAIpzC,EAAQ,GAAK,IAAQ,OAvE7B,SAAgBozC,GACZ,IAAMlf,EAAc2e,GAAWO,GAEJ,IAAvBlf,EAAYvzE,QAAuC,IAAvBuzE,EAAYvzE,QACxC0sE,GAAOjC,mBAAmB,0BAA2B,iBAAkBgoB,GAG3E,IAAMlwD,EAAkB,CACpBp+B,MAAUktF,GAAa9d,EAAY,IAAIvvD,WACvCsiC,SAAU+qC,GAAa9d,EAAY,IACnC3sB,SAAUyqC,GAAa9d,EAAY,IACnCxqB,GAAUqoC,GAAc7d,EAAY,IACpCtnE,MAAUolF,GAAa9d,EAAY,IACnCzxE,KAAUyxE,EAAY,GACtB9kE,QAAU,GAId,GAA2B,IAAvB8kE,EAAYvzE,OAAgB,OAAOuiC,EAEvC,IACIA,EAAG1hC,EAAIi/C,GAAU3+C,KAAKoyE,EAAY,IAAIvvD,WAExC,MAAO1F,GAEL,OAAOikB,EAMX,GAHAA,EAAGtzB,EAAIk/D,EAAWoF,EAAY,GAAI,IAClChxC,EAAGrzB,EAAIi/D,EAAWoF,EAAY,GAAI,IAE9BzzB,GAAU3+C,KAAKohC,EAAGtzB,GAAG4U,UAAYi8B,GAAU3+C,KAAKohC,EAAGrzB,GAAG2U,SAEtD0e,EAAG9zB,QAAU8zB,EAAG1hC,EAChB0hC,EAAG1hC,EAAI,MAEJ,CAGH0hC,EAAG9zB,QAAUgT,KAAK8a,OAAOgG,EAAG1hC,EAAI,IAAM,GAClC0hC,EAAG9zB,QAAU,IAAK8zB,EAAG9zB,QAAU,GAEnC,IAAI6/D,EAAgB/rC,EAAG1hC,EAAI,GAErBiE,EAAMyuE,EAAY5yE,MAAM,EAAG,GAEd,IAAf4hC,EAAG9zB,UACH3J,EAAI7E,KAAK0tE,EAAQprC,EAAG9zB,UACpB3J,EAAI7E,KAAK,MACT6E,EAAI7E,KAAK,MACTquE,GAA8B,EAAb/rC,EAAG9zB,QAAc,GAGtC,IAAMgnC,EAASvvC,GAAUgsF,GAAWptF,IACpC,IACIy9B,EAAGphC,KAAOswF,GAAeh8C,EAAQ,CAAExmC,EAAG0+D,EAAQprC,EAAGtzB,GAAIC,EAAGy+D,EAAQprC,EAAGrzB,GAAIo/D,cAAeA,GACzE,CAAf,MAAOhwD,GAAQ,CAEjBikB,EAAGt8B,KAAOC,GAAUusF,GAKxB,OAFAlwD,EAAG7oB,KAAO,KAEH6oB,CACX,CAOoCmwD,CAAOrzC,GAGvC,OAAQA,EAAQ,IACZ,KAAK,EACD,OA1GZ,SAAuBA,GACnB,IAAMk0B,EAAc2e,GAAW7yC,EAAQ1+C,MAAM,IAElB,IAAvB4yE,EAAYvzE,QAAuC,KAAvBuzE,EAAYvzE,QACxC0sE,GAAOjC,mBAAmB,kDAAmD,UAAWkD,EAAQtuB,IAGpG,IAAM9c,EAAkB,CACpB7oB,KAAY,EACZjL,QAAY4iF,GAAa9d,EAAY,IAAIvvD,WACzC7f,MAAYktF,GAAa9d,EAAY,IAAIvvD,WACzCsiC,SAAY+qC,GAAa9d,EAAY,IACrC3sB,SAAYyqC,GAAa9d,EAAY,IACrCxqB,GAAYqoC,GAAc7d,EAAY,IACtCtnE,MAAYolF,GAAa9d,EAAY,IACrCzxE,KAAYyxE,EAAY,GACxBlb,WAAYw5B,GAActe,EAAY,KAI1C,OAA2B,IAAvBA,EAAYvzE,SAEhBuiC,EAAGt8B,KAAOC,GAAUm5C,GAEpBkzC,GAAmBhwD,EAAIgxC,EAAY5yE,MAAM,GAAIwxF,KAJN5vD,CAO3C,CA+EmBowD,CAActzC,GACzB,KAAK,EACD,OA7IZ,SAAuBA,GACnB,IAAMk0B,EAAc2e,GAAW7yC,EAAQ1+C,MAAM,IAElB,IAAvB4yE,EAAYvzE,QAAuC,KAAvBuzE,EAAYvzE,QACxC0sE,GAAOjC,mBAAmB,kDAAmD,UAAWkD,EAAQtuB,IAGpG,IAAMmH,EAAuB6qC,GAAa9d,EAAY,IAChDhtB,EAAe8qC,GAAa9d,EAAY,IACxChxC,EAAkB,CACpB7oB,KAAuB,EACvBjL,QAAuB4iF,GAAa9d,EAAY,IAAIvvD,WACpD7f,MAAuBktF,GAAa9d,EAAY,IAAIvvD,WACpDwiC,qBAAuBA,EACvBD,aAAuBA,EACvBD,SAAuB,KACvBM,SAAuByqC,GAAa9d,EAAY,IAChDxqB,GAAuBqoC,GAAc7d,EAAY,IACjDtnE,MAAuBolF,GAAa9d,EAAY,IAChDzxE,KAAuByxE,EAAY,GACnClb,WAAuBw5B,GAActe,EAAY,KAIrD,OAA2B,IAAvBA,EAAYvzE,SAEhBuiC,EAAGt8B,KAAOC,GAAUm5C,GAEpBkzC,GAAmBhwD,EAAIgxC,EAAY5yE,MAAM,GAAIqxF,KAJNzvD,CAO3C,CA8GmBqwD,CAAcvzC,GAK7B,OAAOqtB,GAAOd,WAAW,iCAAD,OAAmCvsB,EAAQ,IAAOgrB,EAAOnnB,OAAO8oB,sBAAuB,CAC3GC,UAAW,mBACXqmB,gBAAiBjzC,EAAQ,IAEjC,CCjfO,2SCcDqtB,GAAS,IAAIrC,EDdI,mBC8GjB8W,GAAuD,CACzD1yE,SAAS,EAAM3M,MAAM,EAAMX,MAAM,EAAMylD,UAAU,EAAMN,UAAS,EAAMniD,OAAO,EAAM4kD,IAAI,EAAM98C,OAAO,EACpGyN,MAAM,EAAM2+C,YAAY,EACxB9R,cAAc,EAAMC,sBAAsB,EAC1CqsC,YAAY,EACZC,iBAAiB,GAGrB,SAAe/Q,GAAY5zE,EAA6B4kF,2IACvC,gBAAMA,EAAa,OAMhC,MAJqB,kBAFfphF,EAAO,EAAH,OAGN+6D,GAAOjC,mBAAmB,8BAA+B,OAAQ94D,GAGrE,2BAEWuhE,GAAWvhE,IAAK,wCASX,OANXxD,GACDu+D,GAAOd,WAAW,sDAAuDvB,EAAOnnB,OAAO8oB,sBAAuB,CAC1GC,UAAW,gBAElB,UAEqB99D,EAAS4zE,YAAYpwE,GAAK,QAI/C,OAFc,OAFT9L,EAAU,EAAH,OAGT6mE,GAAOjC,mBAAmB,kDAAmD,OAAQ94D,GACxF,kBAEM9L,GAAO,yDAIlB,SAAemtF,GAAiB7kF,EAA6BlC,EAAYgnF,uIACjErzF,MAAMC,QAAQozF,GAAY,CAAF,eACjB,OADiB,SACXhlF,QAAQ2hE,IAAIqjB,EAAUjnF,KAAI,SAACinF,EAAWppF,GAC/C,OAAOmpF,GACH7kF,EACEvO,MAAMC,QAAQoM,GAAUA,EAAMpC,GAAQoC,EAAMgnF,EAAUthF,MACxDshF,EAER,KAAG,OAIsC,OAI2B,QAU8B,yCAlB/F,UAGgB,YAAnBA,EAAUv5E,KAAkB,gBACrB,OADqB,SACfqoE,GAAY5zE,EAAUlC,GAAM,UAGtB,UAAnBgnF,EAAUv5E,KAAgB,iBACnB,OADmB,UACbs5E,GAAiB7kF,EAAUlC,EAAOgnF,EAAUzZ,YAAW,WAG7C,UAAvByZ,EAAUnc,SAAoB,oBACzBl3E,MAAMC,QAAQoM,GAAQ,CAAF,yCACdgC,QAAQilF,OAAOxmB,GAAO3B,UAAU,0BAA2BV,EAAOnnB,OAAO2oB,iBAAkB,CAC9FC,SAAU,QACV7/D,MAAAA,MACD,QAEA,OAFA,UAEMgC,QAAQ2hE,IAAI3jE,EAAMD,KAAI,SAACnL,GAAC,OAAKmyF,GAAiB7kF,EAAUtN,EAAGoyF,EAAU3Z,cAAc,KAAE,iCAG/FrtE,GAAK,4CAGhB,SAAe21E,GAAoBuR,EAAoBzW,EAA4B/zE,kKA0C9D,OAxCbyqF,EAA2B,CAAC,EAC5BzqF,EAAK3I,SAAW08E,EAASlB,OAAOx7E,OAAS,GAAuC,kBAA3B2I,EAAKA,EAAK3I,OAAS,KACxEozF,EAAYtjB,GAAYnnE,EAAKg3E,QAIjCjT,GAAOwK,mBAAmBvuE,EAAK3I,OAAQ08E,EAASlB,OAAOx7E,OAAQ,sBAG3DmzF,EAASE,OACLD,EAAUjyF,KAGViyF,EAAUjyF,KAAOsuE,GAAkB,CAC/B6jB,SAAUvR,GAAYoR,EAASE,OAAQD,EAAUjyF,MACjDkyF,OAAQF,EAASE,OAAOngB,eACzBvD,MAAK,SAAO4jB,GAAK,OAAIvR,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,sEAKnB,OAJG9O,GAAWqgB,EAAMF,UAAYE,EAAMD,UACnC5mB,GAAOd,WAAW,8CAA+CvB,EAAOnnB,OAAO8oB,sBAAuB,CAClGC,UAAW,mBAElB,kBAEMsnB,EAAMD,UAAQ,0CACxB,IAGDF,EAAUjyF,KAAOgyF,EAASE,OAAOngB,aAG9BkgB,EAAUjyF,OACjBiyF,EAAUjyF,KAAO4gF,GAAYoR,EAAS10C,SAAU20C,EAAUjyF,OAQ9D,SACuBsuE,GAAkB,CACrC9mE,KAAMqqF,GAAiBG,EAASE,QAAUF,EAAS10C,SAAU91C,EAAM+zE,EAASlB,QAC5E31E,QAASstF,EAASK,gBAClBJ,UAAY3jB,GAAkB2jB,IAAc,CAAC,IAC/C,OAwBF,GA5BMK,EAAW,EAAH,KAOR3xF,EAAOqxF,EAASO,UAAUC,mBAAmBjX,EAAU+W,EAAS9qF,MAChE45B,EAA2B,CAC/BzgC,KAAMA,EACNinD,GAAI0qC,EAAS5tF,SAOC,OAHV8nB,EAAK8lE,EAASL,WAGbjvF,QAAiBo+B,EAAGp+B,MAAQ27C,GAAU3+C,KAAKwsB,EAAGxpB,OAAO6f,YACzC,MAAf2J,EAAGi5B,WAAoBrkB,EAAGqkB,SAAW9G,GAAU3+C,KAAKwsB,EAAGi5B,WACxC,MAAfj5B,EAAG24B,WAAoB/jB,EAAG+jB,SAAWxG,GAAU3+C,KAAKwsB,EAAG24B,WACpC,MAAnB34B,EAAG44B,eAAwBhkB,EAAGgkB,aAAezG,GAAU3+C,KAAKwsB,EAAG44B,eACpC,MAA3B54B,EAAG64B,uBAAgCjkB,EAAGikB,qBAAuB1G,GAAU3+C,KAAKwsB,EAAG64B,uBACpE,MAAX74B,EAAGxsB,OAAgBohC,EAAGphC,KAAOwsB,EAAGxsB,MAErB,MAAXwsB,EAAGjU,OAAgB6oB,EAAG7oB,KAAOiU,EAAGjU,MACf,MAAjBiU,EAAG0qC,aAAsB91B,EAAG81B,WAAaw5B,GAAclkE,EAAG0qC,aAG3C,MAAf91B,EAAGqkB,UAAoC,MAAhB81B,EAASj2B,IAAa,CAQ7C,IAFImtC,EAAY,KACVvpF,EAAQ4iE,EAASnrE,GACd/B,EAAI,EAAGA,EAAIsK,EAAMrK,OAAQD,IAC9B6zF,GAAa,EACTvpF,EAAMtK,KAAM6zF,GAAa,IAEjCrxD,EAAGqkB,SAAW9G,GAAU3+C,KAAKu7E,EAASj2B,KAAK38C,IAAI8pF,GA+ClD,OA3CGjmE,EAAG1hB,SACG4nF,EAAU/zC,GAAU3+C,KAAKwsB,EAAG1hB,QACrB4X,UAAa64D,EAAST,SAC/BvP,GAAOd,WAAW,2CAA4CvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/FC,UAAW,kBACXhgE,MAAOmnF,EAAUnnF,QAGzBs2B,EAAGt2B,MAAQ4nF,GAGXlmE,EAAGklE,aACHtwD,EAAGswD,WAAa/iB,GAAYniD,EAAGklE,aAG/BllE,EAAGmlE,kBACHvwD,EAAGuwD,kBAAoBnlE,EAAGmlE,wBAIvBM,EAAUjvF,aACVivF,EAAUxsC,gBACVwsC,EAAU9sC,gBACV8sC,EAAUjyF,YACViyF,EAAUnnF,aAEVmnF,EAAU15E,YACV05E,EAAU/6B,kBAEV+6B,EAAU7sC,oBACV6sC,EAAU5sC,4BAEV4sC,EAAUP,kBACVO,EAAUN,gBAIXgB,EAAYjoF,OAAOuQ,KAAKg3E,GAAWzmC,QAAO,SAACh/C,GAAG,OAA+B,MAAnBylF,EAAWzlF,EAAY,IACnFmmF,EAAU9zF,QACV0sE,GAAOd,WAAW,mBAAD,OAAqBkoB,EAAU9nF,KAAI,SAACkB,GAAC,OAAKiM,KAAKC,UAAUlM,EAAE,IAAEuF,KAAK,MAAS43D,EAAOnnB,OAAO8oB,sBAAuB,CAC7HC,UAAW,YACXmnB,UAAWU,IAElB,kBAEMvxD,GAAE,4CAwBb,SAASwxD,GAAgBZ,EAAoB5wD,GACzC,IAAMyxD,EAAOzxD,EAAGyxD,KAAKvqC,KAAKlnB,GAC1BA,EAAGyxD,KAAO,SAACC,GACP,OAAOD,EAAKC,GAAetkB,MAAK,SAACukB,GAiC7B,OAhCAA,EAAQ9V,OAAS8V,EAAQC,KAAKnoF,KAAI,SAACkyC,GAC/B,IAAIx1C,EAAuB0nE,GAASlyB,GAChCk2C,EAAyB,KAC7B,IACIA,EAASjB,EAASO,UAAUW,SAASn2C,EAC7B,CAAV,MAAOz4C,GAAG,CAwBZ,OArBI2uF,IACA1rF,EAAMC,KAAOyrF,EAAOzrF,KACpBD,EAAMlH,OAAS,SAACM,EAAiB29E,GAC7B,OAAO0T,EAASO,UAAUrT,eAAe+T,EAAOtV,cAAeh9E,EAAM29E,EACzE,EACA/2E,EAAMA,MAAQ0rF,EAAOziF,KACrBjJ,EAAM4rF,eAAiBF,EAAOplF,WAIlCtG,EAAMc,eAAiB,WAAQ,OAAO2pF,EAAS10C,QAAU,EACzD/1C,EAAMm4E,SAAW,WACb,OAAOsS,EAAS10C,SAASoiC,SAASqT,EAAQK,UAC9C,EACA7rF,EAAM8rF,eAAiB,WACnB,OAAOrB,EAAS10C,SAAS+1C,eAAeN,EAAQO,gBACpD,EACA/rF,EAAMgsF,sBAAwB,WAC1B,OAAOzmF,QAAQC,QAAQgmF,EAC3B,EAEOxrF,CACX,IAEOwrF,CACX,GACJ,CACJ,CAEA,SAASS,GAAUxB,EAAoBzW,EAA4BkY,GAC/D,IAAMC,EAAoB1B,EAASE,QAAUF,EAAS10C,SAEtD,OAAO,WAAkC,2BAAhB91C,EAAgB,yBAAhBA,EAAgB,8JAEb,GAApB24E,OAAWv9E,EACX4E,EAAK3I,SAAW08E,EAASlB,OAAOx7E,OAAS,GAAuC,kBAA3B2I,EAAKA,EAAK3I,OAAS,GAAgB,gBAC/C,GACf,OADpBozF,EAAYtjB,GAAYnnE,EAAKg3E,QACrB2B,SAAgB,gBACf,OADe,SACT8R,EAAU9R,SAAQ,OAAnCA,EAAW,EAAH,mBAEL8R,EAAU9R,SACjB34E,EAAK1I,KAAKmzF,GAAW,UAIS,MAA9BD,EAAS2B,kBAAyB,iBAClC,OADkC,UAC5B3B,EAAS4B,UAAUzT,GAAS,QAI3B,OAJ2B,UAIrBM,GAAoBuR,EAAUzW,EAAU/zE,GAAK,QAC/C,OADT45B,EAAK,EAAH,eACasyD,EAAiBzrF,KAAKm5B,EAAI++C,GAAS,QAMnD,OANCh+E,EAAS,EAAH,eAGJ2I,EAAQknF,EAASO,UAAUsB,qBAAqBtY,EAAUp5E,GAC1DsxF,GAA8C,IAA5BlY,EAASJ,QAAQt8E,SACnCiM,EAAQA,EAAM,IACjB,kBACMA,GAAK,QAOX,MAPW,2BAGR,KAAMmB,OAASi9D,EAAOnnB,OAAOmoB,iBAC7B,KAAMxlE,QAAUstF,EAASttF,QACzB,KAAM8C,KAAOA,EACb,KAAM4qE,YAAchxC,GACvB,gEAIb,CA0BA,SAAS0yD,GAAa9B,EAAoBzW,EAA4BkY,GAClE,OAAIlY,EAASV,SACF2Y,GAAUxB,EAAUzW,EAAUkY,GA1B7C,SAAmBzB,EAAoBzW,GACnC,OAAO,WAAkC,2BAAhB/zE,EAAgB,yBAAhBA,EAAgB,wJAOrC,GANKwqF,EAASE,QACV3mB,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAO8oB,sBAAuB,CAC9FC,UAAW,oBAKe,MAA9BknB,EAAS2B,kBAAyB,gBAClC,OADkC,SAC5B3B,EAAS4B,YAAW,OAGZ,OAHY,SAGNnT,GAAoBuR,EAAUzW,EAAU/zE,GAAK,OAE1D,OAFLusF,EAAY,EAAH,cAEE/B,EAASE,OAAO/3C,gBAAgB45C,GAAU,OAG7B,OAHxB3yD,EAAK,EAAH,KAGRwxD,GAAgBZ,EAAU5wD,GAAI,kBAEvBA,GAAE,4CAEjB,CAMW4yD,CAAUhC,EAAUzW,EAC/B,CAEA,SAAS0Y,GAAYzoC,GACjB,OAAIA,EAAO9mD,SAA6B,MAAjB8mD,EAAO8yB,QAA2C,IAAzB9yB,EAAO8yB,OAAOz/E,QAItD2sD,EAAO9mD,SAAW,KAAO,KAAO8mD,EAAO8yB,OAAS9yB,EAAO8yB,OAAOzzE,KAAI,SAAC0hD,GACvE,OAAI9tD,MAAMC,QAAQ6tD,GACPA,EAAMj7C,KAAK,KAEfi7C,CACX,IAAGj7C,KAAK,KAAM,IARH,GASf,CAAC,IAEK4iF,GAAY,WAKd,WAAYt/C,EAAa4W,IAAmB,eACxC4iB,GAAe/qE,KAAM,MAAOuxC,GAC5Bw5B,GAAe/qE,KAAM,SAAUmoD,GAC/BnoD,KAAK8wF,WAAa,EACtB,CAmDC,OAnDA,mCAED,SAAYhsF,EAAoBisF,GAC5B/wF,KAAK8wF,WAAWr1F,KAAK,CAAEqJ,SAAUA,EAAUisF,KAAMA,GACrD,GAAC,4BAED,SAAejsF,GACX,IAAIksF,GAAO,EACXhxF,KAAK8wF,WAAa9wF,KAAK8wF,WAAW3oC,QAAO,SAAC7vC,GACtC,SAAI04E,GAAQ14E,EAAKxT,WAAaA,KAC9BksF,GAAO,GACA,EACX,GACJ,GAAC,gCAED,WACIhxF,KAAK8wF,WAAa,EACtB,GAAC,uBAED,WACI,OAAO9wF,KAAK8wF,WAAWtpF,KAAI,SAACjM,GAAC,OAAKA,EAAEuJ,QAAQ,GAChD,GAAC,2BAED,WACI,OAAO9E,KAAK8wF,WAAWt1F,MAC3B,GAAC,iBAED,SAAI2I,GAAgB,WACVU,EAAgB7E,KAAK6E,gBAc3B,OAbA7E,KAAK8wF,WAAa9wF,KAAK8wF,WAAW3oC,QAAO,SAAC7vC,GAEtC,IAAM24E,EAAW9sF,EAAKhI,QAQtB,OALA+0F,YAAW,WACP54E,EAAKxT,SAASq0D,MAAM,EAAM83B,EAC9B,GAAG,IAGM34E,EAAKy4E,IAClB,IAEOlsF,CACX,GAAC,0BAED,SAAaX,GACb,GAEA,qBACA,SAAQA,GACJ,MAAO,CAAEA,EACb,KAAC,EA5Da,GA+DZitF,GAAkB,0CACpB,+CACU,QAAS,KACnB,CAAC,iBAHmB,CAAQN,IAa1BO,GAAqB,0CAKvB,WAAY/vF,EAAiBgwF,EAA8BnZ,EAAyB+C,GAAoC,sBACpH,IAAM9yB,EAAsB,CACxB9mD,QAASA,GAGT6nD,EAAQmoC,EAAkBlX,cAAcjC,GAWD,OAVvC+C,GACI/xB,IAAU+xB,EAAO,IAAM/S,GAAOjC,mBAAmB,iBAAkB,SAAUgV,GACjF9yB,EAAO8yB,OAASA,EAAO9+E,SAEvBgsD,EAAO8yB,OAAS,CAAE/xB,GAGtB,cAAM0nC,GAAYzoC,GAASA,GAC3B4iB,IAAe,UAAM,UAAW1pE,GAChC0pE,IAAe,UAAM,YAAasmB,GAClCtmB,IAAe,UAAM,WAAYmN,GAAU,CAC/C,CA4BC,OA5BA,oCAGD,SAAah0E,GAAY,YACrB,2DAAmBA,GAEnBA,EAAMA,MAAQlE,KAAKk4E,SAAS/qE,KAC5BjJ,EAAM4rF,eAAiB9vF,KAAKk4E,SAAShD,SAErChxE,EAAMlH,OAAS,SAACM,EAAiB29E,GAC7B,OAAO,EAAKiU,UAAUrT,eAAe,EAAK3D,SAAU56E,EAAM29E,EAC9D,EAEA,IACI/2E,EAAMC,KAAOnE,KAAKkvF,UAAUrT,eAAe77E,KAAKk4E,SAAUh0E,EAAM5G,KAAM4G,EAAM+2E,QAC9E,MAAOnhE,GACL5V,EAAMC,KAAO,KACbD,EAAMotF,YAAcx3E,EAE5B,GAAC,qBAED,SAAQ5V,GACJ,IAAMw6C,EAASotB,GAAkB5nE,EAAMC,MACvC,GAAIu6C,EAAOljD,OAAU,MAAMkjD,EAAO,GAAG5kC,MAErC,IAAM3V,GAAQD,EAAMC,MAAQ,IAAIhI,QAEhC,OADAgI,EAAK1I,KAAKyI,GACHC,CACX,KAAC,EAlDsB,CAAQ0sF,IA0D7BU,GAAqB,0CAIvB,WAAYlwF,EAAiBgwF,GAA4B,MAGA,OAHA,eACrD,cAAM,IAAK,CAAEhwF,QAASA,IACtB0pE,IAAe,UAAM,UAAW1pE,GAChC0pE,IAAe,UAAM,YAAasmB,GAAmB,CACzD,CAkBC,OAlBA,oCAED,SAAantF,GAAY,YACrB,2DAAmBA,GAEnB,IACI,IAAM0rF,EAAS5vF,KAAKkvF,UAAUW,SAAS3rF,GACvCA,EAAMA,MAAQ0rF,EAAOziF,KACrBjJ,EAAM4rF,eAAiBF,EAAOplF,UAE9BtG,EAAMlH,OAAS,SAACM,EAAiB29E,GAC7B,OAAO,EAAKiU,UAAUrT,eAAe+T,EAAOtV,cAAeh9E,EAAM29E,EACrE,EAEA/2E,EAAMC,KAAOyrF,EAAOzrF,IAEpB,CADF,MAAO2V,GACL,CAER,KAAC,EA1BsB,CAAQ+2E,IAkCtBW,GAAY,WA8BrB,WAAYC,EAAuBJ,EAAsChB,GAAoC,2BAGzGtlB,GAAe/qE,KAAM,YAAagrE,GAAS,0CAA4B,eAArCA,CAAqDqmB,IAE/D,MAApBhB,GACAtlB,GAAe/qE,KAAM,WAAY,MACjC+qE,GAAe/qE,KAAM,SAAU,OACxB68E,GAAO6U,SAASrB,IACvBtlB,GAAe/qE,KAAM,WAAYqwF,EAAiBp2C,UAAY,MAC9D8wB,GAAe/qE,KAAM,SAAUqwF,IACxBlU,GAASwV,WAAWtB,IAC3BtlB,GAAe/qE,KAAM,WAAYqwF,GACjCtlB,GAAe/qE,KAAM,SAAU,OAE/BkoE,GAAOjC,mBAAmB,6BAA8B,mBAAoBoqB,GAGhFtlB,GAAe/qE,KAAM,aAAc,CAAC,GACpC+qE,GAAe/qE,KAAM,cAAe,CAAC,GACrC+qE,GAAe/qE,KAAM,YAAa,CAAC,GACnC+qE,GAAe/qE,KAAM,sBAAuB,CAAC,GAE7C+qE,GAAe/qE,KAAM,UAAW,CAAC,GAG7B,IAAM4xF,EAAqD,CAAC,EA+BhE,GA9BIvqF,OAAOuQ,KAAK5X,KAAKkvF,UAAUtV,QAAQ5iE,SAAQ,SAAC84E,GACxC,IAAM5rF,EAAQ,EAAKgrF,UAAUtV,OAAOkW,GACpC/kB,GAAe,EAAK8mB,QAAS/B,GAAgB,WAAwB,2BAApB3rF,EAAgB,yBAAhBA,EAAgB,gBAC7D,MAAO,CACH9C,QAAS,EAAKA,QACd45E,OAAQ,EAAKiU,UAAU4C,mBAAmB5tF,EAAOC,GAEzD,IACKytF,EAAc1tF,EAAMiJ,QAASykF,EAAc1tF,EAAMiJ,MAAQ,IAC9DykF,EAAc1tF,EAAMiJ,MAAM1R,KAAKq0F,EACnC,IAEAzoF,OAAOuQ,KAAKg6E,GAAe56E,SAAQ,SAAC7J,GAChC,IAAM0kF,EAAUD,EAAczkF,GACP,IAAnB0kF,EAAQr2F,OACRuvE,GAAe,EAAK8mB,QAAS1kF,EAAM,EAAK0kF,QAAQA,EAAQ,KAExD3pB,GAAOr+D,KAAK,2BAAD,OAA6BsD,EAAK,aAAM0kF,EAAQ5jF,KAAK,MAAK,KAE7E,IAGJ88D,GAAe/qE,KAAM,iBAAkB,CAAC,GACxC+qE,GAAe/qE,KAAM,gBAAiB,CAAC,GAElB,MAAjByxF,GACAvpB,GAAOjC,mBAAmB,uCAAwC,gBAAiBwrB,GAGvF1mB,GAAe/qE,KAAM,UAAWyxF,GAC5BzxF,KAAKi6C,SACL8wB,GAAe/qE,KAAM,kBAAmBu9E,GAAYv9E,KAAKi6C,SAAUw3C,SAEnE,IACI1mB,GAAe/qE,KAAM,kBAAmByJ,QAAQC,QAAQglE,GAAW+iB,KACrE,MAAO33E,GAELouD,GAAOd,WAAW,2DAA4DvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/GC,UAAW,iBAMvBznE,KAAKgvF,gBAAgBzS,OAAM,SAACt7E,GAAQ,IAEpC,IAAMsxE,EAAmD,CAAC,EACpDwf,EAAuD,CAAC,EAC9D1qF,OAAOuQ,KAAK5X,KAAKkvF,UAAUvV,WAAW3iE,SAAQ,SAACxM,GAC3C,IAAM0tE,EAAW,EAAKgX,UAAUvV,UAAUnvE,GAI1C,GAAIunF,EAAiBvnF,GACjB09D,GAAOr+D,KAAK,2BAAD,OAA6B8K,KAAKC,UAAUpK,SAD3D,CAIAunF,EAAiBvnF,IAAa,EAK1B,IAAM2C,EAAO+qE,EAAS/qE,KACjBolE,EAAY,IAAD,OAAMplE,MAAYolE,EAAY,IAAD,OAAMplE,IAAW,IAC9DolE,EAAY,IAAD,OAAMplE,IAAS1R,KAAK+O,GAGA,MAApB,EAAMA,IACjBugE,GAAyB,EAAMvgE,EAAWimF,GAAa,EAAMvY,GAAU,IAM1C,MAA7B,EAAKyB,UAAUnvE,IACfugE,GAAe,EAAK4O,UAAWnvE,EAAWimF,GAAa,EAAMvY,GAAU,IAGzC,MAA9B,EAAK8Z,WAAWxnF,IAChBugE,GAAe,EAAKinB,WAAYxnF,EAAW2lF,GAAU,EAAMjY,GAAU,IAG9B,MAAvC,EAAKkF,oBAAoB5yE,IACzBugE,GAAe,EAAKqS,oBAAqB5yE,EAvczD,SAAuBmkF,EAAoBzW,GACvC,OAAO,WAA4B,2BAAhB/zE,EAAgB,yBAAhBA,EAAgB,gBAC/B,OAAOi5E,GAAoBuR,EAAUzW,EAAU/zE,EACnD,CACJ,CAmcoE8tF,CAAc,EAAM/Z,IAGzC,MAA/B,EAAKiF,YAAY3yE,IACjBugE,GAAe,EAAKoS,YAAa3yE,EArcjD,SAAuBmkF,EAAoBzW,GACvC,IAAMmY,EAAoB1B,EAASE,QAAUF,EAAS10C,SACtD,OAAO,WAAkC,2BAAhB91C,EAAgB,yBAAhBA,EAAgB,sJAO1B,OANNksF,GACDnoB,GAAOd,WAAW,wCAAyCvB,EAAOnnB,OAAO8oB,sBAAuB,CAC5FC,UAAW,gBAElB,SAEgB2V,GAAoBuR,EAAUzW,EAAU/zE,GAAK,OACvD,OADD45B,EAAK,EAAH,cACKsyD,EAAiBlT,YAAYp/C,GAAG,mFAErD,CAyb4Dm0D,CAAc,EAAMha,IAExE,IAEA7wE,OAAOuQ,KAAK26D,GAAav7D,SAAQ,SAAC7J,GAE9B,IAAMglF,EAAa5f,EAAYplE,GAC/B,KAAIglF,EAAW32F,OAAS,GAAxB,CAGA2R,EAAOA,EAAKxE,UAAU,GAEtB,IAAM6B,EAAY2nF,EAAW,GAG7B,IACkC,MAAf,EAAMhlF,IACjB49D,GAAyB,EAAM59D,EAAiB,EAAM3C,GAEjD,CAAX,MAAOvJ,GAAI,CAEe,MAAxB,EAAK04E,UAAUxsE,IACf49D,GAAe,EAAK4O,UAAWxsE,EAAM,EAAKwsE,UAAUnvE,IAG3B,MAAzB,EAAKwnF,WAAW7kF,IAChB49D,GAAe,EAAKinB,WAAY7kF,EAAM,EAAK6kF,WAAWxnF,IAGpB,MAAlC,EAAK4yE,oBAAoBjwE,IACzB49D,GAAe,EAAKqS,oBAAqBjwE,EAAM,EAAKiwE,oBAAoB5yE,IAG9C,MAA1B,EAAK2yE,YAAYhwE,IACjB49D,GAAe,EAAKoS,YAAahwE,EAAM,EAAKgwE,YAAY3yE,IAEhE,GACJ,CA4FC,OA5FA,gCAcD,WACI,OAAOxK,KAAKuwF,WAChB,GAAC,uBAED,SAAUzT,GAAmB,WA0BzB,OAzBK98E,KAAKoyF,mBAGFpyF,KAAKswF,kBACLtwF,KAAKoyF,iBAAmBpyF,KAAKswF,kBAAkBd,OAAOrkB,MAAK,WACvD,OAAO,CACX,IAOAnrE,KAAKoyF,iBAAmBpyF,KAAKi6C,SAASo4C,QAAQryF,KAAKqB,QAASy7E,GAAU3R,MAAK,SAACviE,GAOxE,MANa,OAATA,GACAs/D,GAAOd,WAAW,wBAAyBvB,EAAOnnB,OAAO8oB,sBAAuB,CAC5E8qB,gBAAiB,EAAKjxF,QACtBomE,UAAW,gBAGZ,CACX,KAIDznE,KAAKoyF,gBAChB,GAMA,sBAEA,SAASxD,GAA8B,WAC9B5uF,KAAK6uF,QACN3mB,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAO8oB,sBAAuB,CAAEC,UAAW,8BAGnH,IAAM1pC,EAAqCutC,GAAYsjB,GAAa,CAAC,GAQrE,MANA,CAAC,OAAQ,MAAM53E,SAAQ,SAAS7N,GACN,MAAZ40B,EAAI50B,IACd++D,GAAOd,WAAW,mBAAqBj+D,EAAK08D,EAAOnnB,OAAO8oB,sBAAuB,CAAEC,UAAWt+D,GAClG,IAEA40B,EAAGwmB,GAAKvkD,KAAKgvF,gBACNhvF,KAAKuyF,WAAWpnB,MAAK,WACxB,OAAO,EAAK0jB,OAAO/3C,gBAAgB/Y,EACvC,GACJ,GAEA,qBACA,SAAQsyD,GAC6B,kBAAtBA,IACPA,EAAmB,IAAIxS,GAAWwS,EAAkBrwF,KAAKi6C,WAG7D,IAAM00C,EAAW,IAAyC3uF,KAAKgc,YAAchc,KAAKqB,QAASrB,KAAKkvF,UAAWmB,GAK3G,OAJIrwF,KAAKswF,mBACLvlB,GAAe4jB,EAAU,oBAAqB3uF,KAAKswF,mBAGhD3B,CACX,GAEA,oBACA,SAAO8C,GACH,OAAO,IAAyCzxF,KAAKgc,YAAcy1E,EAAezxF,KAAKkvF,UAAWlvF,KAAK6uF,QAAU7uF,KAAKi6C,SAC1H,GAAC,oCAMO,SAAuBu4C,GAE3B,OAAIxyF,KAAKyyF,eAAeD,EAAajhD,KAC1BvxC,KAAKyyF,eAAeD,EAAajhD,KAEpCihD,CACZ,GAAC,8BAEO,SAAiB/V,GACrB,GAA0B,kBAAfA,EAAyB,CAIhC,GAAkB,UAAdA,EACA,OAAOz8E,KAAK0yF,uBAAuB,IAAIvB,IAI3C,GAAkB,UAAd1U,EACA,OAAOz8E,KAAK0yF,uBAAuB,IAAI7B,GAAa,QAAS,OAIjE,GAAkB,MAAdpU,EACA,OAAOz8E,KAAK0yF,uBAAuB,IAAInB,GAAqBvxF,KAAKqB,QAASrB,KAAKkvF,YAInF,IAAMhX,EAAWl4E,KAAKkvF,UAAU3U,SAASkC,GACzC,OAAOz8E,KAAK0yF,uBAAuB,IAAItB,GAAqBpxF,KAAKqB,QAASrB,KAAKkvF,UAAWhX,IAI9F,GAAIuE,EAAUxB,QAAUwB,EAAUxB,OAAOz/E,OAAS,EAAG,CAGjD,IACI,IAAM0tD,EAAQuzB,EAAUxB,OAAO,GAC/B,GAAsB,kBAAX/xB,EACP,MAAM,IAAIhtD,MAAM,iBAEpB,IAAMg8E,EAAWl4E,KAAKkvF,UAAU3U,SAASrxB,GACzC,OAAOlpD,KAAK0yF,uBAAuB,IAAItB,GAAqBpxF,KAAKqB,QAASrB,KAAKkvF,UAAWhX,EAAUuE,EAAUxB,QACjG,CAAf,MAAOnhE,GAAQ,CAGjB,IAAMquC,EAAsB,CACxB9mD,QAASrB,KAAKqB,QACd45E,OAAQwB,EAAUxB,QAGtB,OAAOj7E,KAAK0yF,uBAAuB,IAAI7B,GAAaD,GAAYzoC,GAASA,IAG7E,OAAOnoD,KAAK0yF,uBAAuB,IAAInB,GAAqBvxF,KAAKqB,QAASrB,KAAKkvF,WACnF,GAAC,iCAED,SAAoBsD,GAChB,GAAqC,IAAjCA,EAAa3tF,gBAAuB,QAC7B7E,KAAKyyF,eAAeD,EAAajhD,KAGxC,IAAM6I,EAAOp6C,KAAK2yF,cAAcH,EAAajhD,KACzC6I,GAAQo4C,EAAarqC,SACrBnoD,KAAKi6C,SAASr8B,IAAI40E,EAAarqC,OAAQ/N,UAChCp6C,KAAK2yF,cAAcH,EAAajhD,MAGnD,GAGA,wBACA,SAAWihD,EAA4B94C,EAAU50C,GAAkB,WACzDZ,EAAe0nE,GAASlyB,GAe9B,OAbAx1C,EAAMc,eAAiB,WACdF,IACL0tF,EAAaxtF,eAAeF,GAC5B,EAAK8tF,oBAAoBJ,GAC7B,EAEAtuF,EAAMm4E,SAAW,WAAQ,OAAO,EAAKpiC,SAASoiC,SAAS3iC,EAAIq2C,UAAY,EACvE7rF,EAAM8rF,eAAiB,WAAQ,OAAO,EAAK/1C,SAAS+1C,eAAet2C,EAAIu2C,gBAAkB,EACzF/rF,EAAMgsF,sBAAwB,WAAQ,OAAO,EAAKj2C,SAASi2C,sBAAsBx2C,EAAIu2C,gBAAkB,EAGvGuC,EAAaK,aAAa3uF,GAEnBA,CACX,GAAC,+BAEO,SAAkBsuF,EAA4B1tF,EAAoBisF,GAAa,WAWnF,GAVK/wF,KAAKi6C,UACNiuB,GAAOd,WAAW,wDAAyDvB,EAAOnnB,OAAO8oB,sBAAuB,CAAEC,UAAW,SAGjI+qB,EAAaM,YAAYhuF,EAAUisF,GAGnC/wF,KAAKyyF,eAAeD,EAAajhD,KAAOihD,GAGnCxyF,KAAK2yF,cAAcH,EAAajhD,KAAM,CACvC,IAAMwhD,EAAc,SAACr5C,GACjB,IAAIx1C,EAAQ,EAAK8uF,WAAWR,EAAc94C,EAAK50C,GAG/C,GAAyB,MAArBZ,EAAMotF,YACN,IACI,IAAMntF,EAAOquF,EAAaS,QAAQ/uF,GAClC,EAAKk2C,KAAI,MAAT,EAAI,CAAMo4C,EAAarqC,QAAM,eAAKhkD,KACpC,MAAO2V,GACL5V,EAAMotF,YAAcx3E,EAAMA,MAKP,MAAvB04E,EAAarqC,QACb,EAAK/N,KAAK,QAASl2C,GAIE,MAArBA,EAAMotF,aACN,EAAKl3C,KAAK,QAASl2C,EAAMotF,YAAaptF,EAE9C,EACAlE,KAAK2yF,cAAcH,EAAajhD,KAAOwhD,EAGZ,MAAvBP,EAAarqC,QACbnoD,KAAKi6C,SAASh1C,GAAGutF,EAAarqC,OAAQ4qC,GAGlD,GAAC,yBAED,SAAY7uF,EAA6BgvF,EAA0CC,GAAkB,WAC3FX,EAAexyF,KAAKozF,iBAAiBlvF,GACrCikD,EAASmjB,GAAYknB,EAAarqC,QAYxC,MAVqC,kBAA1B+qC,GAAsC3sF,EAAY2sF,EAAsB,KAChE,MAAXC,GACAjrB,GAAOjC,mBAAmB,wCAAyC,UAAWktB,GAE9DhrC,EAAQ4nC,UAAYmD,IAE9B/qC,EAAQkrC,UAAsC,MAAxBH,EAAgCA,EAAsB,EAC5E/qC,EAAQgrC,QAAuB,MAAXA,EAAmBA,EAAS,UAGvDnzF,KAAKi6C,SAASq5C,QAAQnrC,GAAQgjB,MAAK,SAACwkB,GACvC,OAAOA,EAAKnoF,KAAI,SAACkyC,GAAG,OAAK,EAAKs5C,WAAWR,EAAc94C,EAAK,KAAK,GACrE,GACJ,GAAC,gBAED,SAAGx1C,EAA6BY,GAE5B,OADA9E,KAAKuzF,kBAAkBvzF,KAAKozF,iBAAiBlvF,GAAQY,GAAU,GACxD9E,IACX,GAAC,kBAED,SAAKkE,EAA6BY,GAE9B,OADA9E,KAAKuzF,kBAAkBvzF,KAAKozF,iBAAiBlvF,GAAQY,GAAU,GACxD9E,IACX,GAAC,kBAED,SAAKy8E,GACD,IAAKz8E,KAAKi6C,SAAY,OAAO,EAEyB,IAAtD,IAAMu4C,EAAexyF,KAAKozF,iBAAiB3W,GAAW,mBAHjBt4E,EAAgB,iCAAhBA,EAAgB,kBAIrD,IAAMrF,EAAU0zF,EAAagB,IAAIrvF,GAAQ,EAKzC,OAFAnE,KAAK4yF,oBAAoBJ,GAElB1zF,CACX,GAAC,2BAED,SAAc29E,GAAgC,WAC1C,OAAKz8E,KAAKi6C,SACO,MAAbwiC,EACOp1E,OAAOuQ,KAAK5X,KAAKyyF,gBAAgB9zF,QAAO,SAACoqE,EAAO5/D,GACnD,OAAO4/D,EAAQ,EAAK0pB,eAAetpF,GAAKtE,eAC5C,GAAG,GAEA7E,KAAKozF,iBAAiB3W,GAAW53E,gBANX,CAOjC,GAAC,uBAED,SAAU43E,GAAgC,WACtC,IAAKz8E,KAAKi6C,SAAY,MAAO,GAE7B,GAAiB,MAAbwiC,EAAmB,kBACnB,IAAM39E,EAA0B,GAChC,IAAK,IAAIyyC,KAAO,EAAKkhD,eACjB,EAAKA,eAAelhD,GAAKjtC,YAAY0S,SAAQ,SAAClS,GAC1ChG,EAAOrD,KAAKqJ,EAChB,IAEJ,MAAO,CAAP,EAAOhG,EAAO,CAPK,GAOL,kCAGlB,OAAOkB,KAAKozF,iBAAiB3W,GAAWn4E,WAC5C,GAAC,gCAED,SAAmBm4E,GACf,IAAKz8E,KAAKi6C,SAAY,OAAOj6C,KAE7B,GAAiB,MAAby8E,EAAmB,CACnB,IAAK,IAAMlrC,KAAOvxC,KAAKyyF,eAAgB,CACnC,IAAMD,EAAexyF,KAAKyyF,eAAelhD,GACzCihD,EAAalnC,qBACbtrD,KAAK4yF,oBAAoBJ,GAE7B,OAAOxyF,KAIX,IAAMwyF,EAAexyF,KAAKozF,iBAAiB3W,GAI3C,OAHA+V,EAAalnC,qBACbtrD,KAAK4yF,oBAAoBJ,GAElBxyF,IACX,GAAC,iBAED,SAAIy8E,EAAiC33E,GACjC,IAAK9E,KAAKi6C,SAAY,OAAOj6C,KAC7B,IAAMwyF,EAAexyF,KAAKozF,iBAAiB3W,GAG3C,OAFA+V,EAAaxtF,eAAeF,GAC5B9E,KAAK4yF,oBAAoBJ,GAClBxyF,IACX,GAAC,4BAED,SAAey8E,EAAiC33E,GAC5C,OAAO9E,KAAK4d,IAAI6+D,EAAW33E,EAC/B,IAAC,iCApUD,SAA0BiqE,GACtB,OAAOD,GAAmBC,EAC9B,GAAC,0BAED,SAAoBsiB,GAChB,OAAI9X,GAAUka,YAAYpC,GACfA,EAEJ,IAAI9X,GAAU8X,EACzB,GAAC,uBA+ED,SAAiB5pF,GACb,OAAOwxE,GAAQya,UAAUjsF,EAC7B,KAAC,EAjRoB,GA+fZksF,GAAS,uHAAQnC,IAKjBoC,GAAe,WAMxB,WAAYvC,EAAsCwC,EAA0ChF,IAAe,eAEvG,IAAIiF,EAAsB,KAeU,QAZhCA,EADqB,kBAAdD,EACOA,EACPtrB,EAAQsrB,GACD1qB,EAAQ0qB,GACfA,GAAwC,kBAArBA,EAAS7qB,OAEf6qB,EAAU7qB,OAGhB,KAIFrgE,UAAU,EAAG,KAAemrF,EAAc,KAAOA,KAG5DvtF,EAAYutF,IAAiBA,EAAYt4F,OAAS,IACnD0sE,GAAOjC,mBAAmB,mBAAoB,WAAY4tB,GAI1DhF,IAAWhS,GAAO6U,SAAS7C,IAC3B3mB,GAAOjC,mBAAmB,iBAAkB,SAAU4oB,GAG1D9jB,GAAe/qE,KAAM,WAAY8zF,GACjC/oB,GAAe/qE,KAAM,YAAagrE,GAAS,0CAA4B,eAArCA,CAAqDqmB,IACvFtmB,GAAe/qE,KAAM,SAAU6uF,GAAU,KAC7C,CAmHC,OAjHD,4CACA,WAGI,IAFA,IAAI9wD,EAAyB,CAAC,EAE9B,mBAHoB55B,EAAgB,yBAAhBA,EAAgB,gBAIpC,GAAIA,EAAK3I,SAAWwE,KAAKkvF,UAAUxV,OAAO1C,OAAOx7E,OAAS,GAAuC,kBAA3B2I,EAAKA,EAAK3I,OAAS,GAErF,IAAK,IAAM2N,KADX40B,EAAKutC,GAAYnnE,EAAKg3E,OAElB,IAAKwB,GAAuBxzE,GACxB,MAAM,IAAIjN,MAAM,gCAAkCiN,GAW9D,GALA,CAAC,OAAQ,OAAQ,MAAM6N,SAAQ,SAAC7N,GACN,MAAZ40B,EAAI50B,IACd++D,GAAOd,WAAW,mBAAqBj+D,EAAK08D,EAAOnnB,OAAO8oB,sBAAuB,CAAEC,UAAWt+D,GAClG,IAEI40B,EAAGt2B,MAAO,CACV,IAAMA,EAAQ6zC,GAAU3+C,KAAKohC,EAAGt2B,OAC3BA,EAAM4X,UAAarf,KAAKkvF,UAAUxV,OAAOjC,SAC1CvP,GAAOd,WAAW,gDAAiDvB,EAAOnnB,OAAO8oB,sBAAuB,CACpGC,UAAW,kBACXhgE,MAAOs2B,EAAGt2B,QActB,OARAygE,GAAOwK,mBAAmBvuE,EAAK3I,OAAQwE,KAAKkvF,UAAUxV,OAAO1C,OAAOx7E,OAAQ,4BAG5EuiC,EAAGzgC,KAAO6rE,EAAQjnE,EAAO,CACrBlC,KAAK6zF,SACL7zF,KAAKkvF,UAAU6E,aAAa5vF,MAGzB45B,CACX,GAAC,oBAEK,WAA0B,2BAAhB55B,EAAgB,yBAAhBA,EAAgB,gKAab,OAXXyqF,EAAiB,CAAC,EAGlBzqF,EAAK3I,SAAWwE,KAAKkvF,UAAUxV,OAAO1C,OAAOx7E,OAAS,IACtDozF,EAAYzqF,EAAKg3E,OAIrBjT,GAAOwK,mBAAmBvuE,EAAK3I,OAAQwE,KAAKkvF,UAAUxV,OAAO1C,OAAOx7E,OAAQ,4BAE5E,SACqBgzF,GAAiBxuF,KAAK6uF,OAAQ1qF,EAAMnE,KAAKkvF,UAAUxV,OAAO1C,QAAO,OAO3E,OAPL9tE,EAAS,EAAH,MACLzN,KAAKmzF,GAGNoF,EAAah0F,KAAKi0F,qBAAoB,MAAzBj0F,MAAI,OAAyBkJ,IAEhD,UACiBlJ,KAAK6uF,OAAO/3C,gBAAgBk9C,GAAW,QAQN,OAR5Cj2D,EAAK,EAAH,KAEF18B,EAAU2pE,GAA+ChrE,KAAKgc,YAAa,qBAAjEgvD,CAAuFjtC,GAIvGwxD,GAHMZ,EAAW3jB,GAAgGhrE,KAAKgc,YAAa,cAAlHgvD,CAAiI3pE,EAASrB,KAAKkvF,UAAWlvF,KAAK6uF,QAGtJ9wD,GAE1BgtC,GAAe4jB,EAAU,oBAAqB5wD,GAAI,kBAC3C4wD,GAAQ,mDAClB,oBAED,SAAOttF,GACH,OAAcrB,KAAKgc,YAAck4E,YAAY7yF,EAASrB,KAAKkvF,UAAWlvF,KAAK6uF,OAC/E,GAAC,qBAED,SAAQA,GACJ,OAAO,IAAgD7uF,KAAKgc,YAAchc,KAAKkvF,UAAWlvF,KAAK6zF,SAAUhF,EAC7G,IAAC,2BAED,SAAoBsF,EAAqBtF,GACf,MAAlBsF,GACAjsB,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOkpB,iBAAkB,CAAEN,SAAU,mBAG9D,kBAApB6sB,IACPA,EAAiBx/E,KAAKI,MAAMo/E,IAGhC,IAAMta,EAAMsa,EAAeta,IAEvBga,EAAgB,KAOpB,OANIM,EAAeN,SACfA,EAAWM,EAAeN,SACnBM,EAAeC,KAAOD,EAAeC,IAAIP,WAChDA,EAAWM,EAAeC,IAAIP,UAG3B,IAAI7zF,KAAK65E,EAAKga,EAAUhF,EACnC,GAAC,0BAED,SAAoBwC,GAChB,OAAOsC,GAASU,aAAahD,EACjC,GAAC,gCAED,SAA0BtzD,GACtB,OAAO+wC,GAAmB/wC,EAC9B,GAAC,yBAED,SAAmB18B,EAAiBgwF,EAAsCxC,GACtE,OAAO,IAAI8E,GAAStyF,EAASgwF,EAAmBxC,EACpD,KAAC,EAzJuB,GClnCtB3mB,GAAS,IAAIrC,EAAOhzD,GAIpBw3D,GAAoB,CAAC,EAErB6I,GAAO53B,GAAU3+C,KAAK,GACtBs2E,GAAc33B,GAAU3+C,MAAM,GAEpC,SAASiuE,GAAWx/D,EAAiBw7D,EAAea,EAAmBhgE,GACnE,IAAMyB,EAAc,CAAE09D,MAAOA,EAAOa,UAAWA,GAE/C,YADcloE,IAAVkI,IAAuByB,EAAOzB,MAAQA,GACnCygE,GAAOd,WAAWh8D,EAASy6D,EAAOnnB,OAAOioB,cAAez9D,EACnE,CAIA,IADA,IAAInG,GAAQ,IACLA,GAAMvH,OAAS,KAAOuH,IAASA,GAGtC,SAASuxF,GAAc76C,GAEnB,GAAyB,kBAAdA,EACP,IACIA,EAAW6B,GAAU3+C,KAAK88C,GAAUj6B,UAC3B,CAAX,MAAOve,GAAI,CAGjB,MAAyB,kBAAdw4C,GAA0BA,GAAY,GAAKA,GAAY,OAASA,EAAW,GAC1E,IAAM12C,GAAM4F,UAAU,EAAG8wC,GAG9ByuB,GAAOjC,mBAAmB,uBAAwB,WAAYxsB,EACzE,CAEM,SAAU86C,GAAY9sF,EAAqBgyC,GAC7B,MAAZA,IAAoBA,EAAW,GACnC,IAAMwK,EAAaqwC,GAAc76C,GAK3Bn9B,GAFN7U,EAAQ6zC,GAAU3+C,KAAK8K,IAEAinB,GAAGwkD,IACtB52D,IAAY7U,EAAQA,EAAMkP,IAAIs8D,KAGlC,IADA,IAAIuhB,EAAW/sF,EAAMuW,IAAIimC,GAAYnmD,WAC9B02F,EAASh5F,OAASyoD,EAAWzoD,OAAS,GAAKg5F,EAAW,IAAMA,EAGnEA,EAAWA,EAASnrF,MAAM,wBAAwB,GAElD,IAAMorF,EAAQhtF,EAAM8kB,IAAI03B,GAAYnmD,WASpC,OAPI2J,EADsB,IAAtBw8C,EAAWzoD,OACHi5F,EAEAA,EAAQ,IAAMD,EAGtBl4E,IAAY7U,EAAQ,IAAMA,GAEvBA,CACX,CAEM,SAAUitF,GAAWjtF,EAAegyC,GAEtB,MAAZA,IAAoBA,EAAW,GACnC,IAAMwK,EAAaqwC,GAAc76C,GAEX,kBAAXhyC,GAAwBA,EAAM4B,MAAM,gBAC3C6+D,GAAOjC,mBAAmB,wBAAyB,QAASx+D,GAIhE,IAAM6U,EAAsC,MAA1B7U,EAAMkB,UAAU,EAAG,GACjC2T,IAAY7U,EAAQA,EAAMkB,UAAU,IAE1B,MAAVlB,GACAygE,GAAOjC,mBAAmB,gBAAiB,QAASx+D,GAIxD,IAAM6vE,EAAQ7vE,EAAMkqB,MAAM,KACtB2lD,EAAM97E,OAAS,GACf0sE,GAAOjC,mBAAmB,0BAA2B,QAASx+D,GAGlE,IAAIgtF,EAAQnd,EAAM,GAAIkd,EAAWld,EAAM,GAKvC,IAJKmd,IAASA,EAAQ,KACjBD,IAAYA,EAAW,KAGa,MAAlCA,EAASA,EAASh5F,OAAS,IAC9Bg5F,EAAWA,EAAS7rF,UAAU,EAAG6rF,EAASh5F,OAAS,GAYvD,IARIg5F,EAASh5F,OAASyoD,EAAWzoD,OAAS,GACtCovE,GAAW,wCAAyC,YAAa,cAIpD,KAAb4pB,IAAmBA,EAAW,KAG3BA,EAASh5F,OAASyoD,EAAWzoD,OAAS,GAAKg5F,GAAY,IAE9D,IAAMG,EAAar5C,GAAU3+C,KAAK83F,GAC5BG,EAAgBt5C,GAAU3+C,KAAK63F,GAEjCK,EAAOF,EAAWh+E,IAAIstC,GAAa3+C,IAAIsvF,GAI3C,OAFIt4E,IAAYu4E,EAAMA,EAAIl+E,IAAIs8D,KAEvB4hB,CACX,CAGO,IAAMC,GAAW,WAOpB,WAAYtqB,EAAuBkJ,EAAiBrzD,EAAeo5B,IAAgB,eAC3E+wB,IAAqBH,IACrBnC,GAAOd,WAAW,2DAA4DvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/GC,UAAW,oBAInBznE,KAAK0zE,OAASA,EACd1zE,KAAKqgB,MAAQA,EACbrgB,KAAKy5C,SAAWA,EAEhBz5C,KAAKmN,MAAQumE,EAAS,GAAI,KAAO,QAAU5qE,OAAOuX,GAAS,IAAMvX,OAAO2wC,GAExEz5C,KAAK+0F,YAAcT,GAAc76C,GAEjCpyC,OAAOotD,OAAOz0D,KAClB,CA+CC,OA/CA,iCAED,SAAYyH,GACR,GAAIA,aAAiBqtF,EAAe,OAAOrtF,EAErB,kBAAXA,IACPA,EAAQ,YAAH,OAAeA,IAGxB,IAAIisE,GAAS,EACTrzD,EAAQ,IACRo5B,EAAW,GAEf,GAAsB,kBAAXhyC,EACP,GAAc,UAAVA,QAEG,GAAc,WAAVA,EACPisE,GAAS,MACN,CACH,IAAMrqE,EAAQ5B,EAAM4B,MAAM,gCACrBA,GAAS6+D,GAAOjC,mBAAmB,uBAAwB,SAAUx+D,GAC1EisE,EAAuB,MAAbrqE,EAAM,GAChBgX,EAAQhiB,SAASgL,EAAM,IACvBowC,EAAWp7C,SAASgL,EAAM,SAE3B,GAAI5B,EAAO,CACd,IAAMsnF,EAAQ,SAAC5lF,EAAa+L,EAAco8D,GACtC,OAAkB,MAAd7pE,EAAM0B,GAAuBmoE,UACtB7pE,EAAM0B,KAAU+L,GACvBgzD,GAAOjC,mBAAmB,yBAA2B98D,EAAM,QAAU+L,EAAM,IAAK,UAAY/L,EAAK1B,EAAM0B,IAEpG1B,EAAM0B,GACjB,EACAuqE,EAASqb,EAAM,SAAU,UAAWrb,GACpCrzD,EAAQ0uE,EAAM,QAAS,SAAU1uE,GACjCo5B,EAAWs1C,EAAM,WAAY,SAAUt1C,GAW3C,OARIp5B,EAAQ,GACR6nD,GAAOjC,mBAAmB,gDAAiD,eAAgB5lD,GAG3Fo5B,EAAW,IACXyuB,GAAOjC,mBAAmB,4CAA6C,kBAAmBxsB,GAGvF,IAAIq7C,EAAYzqB,GAAmBqJ,EAAQrzD,EAAOo5B,EAC7D,KAAC,EAtEmB,GAyEXu7C,GAAW,WAOpB,WAAYxqB,EAAuBvsE,EAAawJ,EAAeytE,IAAoB,eAC3E1K,IAAqBH,IACrBnC,GAAOd,WAAW,2DAA4DvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/GC,UAAW,oBAInBznE,KAAKk1E,OAASA,EACdl1E,KAAKyqE,KAAOxsE,EACZ+B,KAAKi1F,OAASxtF,EAEdzH,KAAKk1F,gBAAiB,EAEtB7tF,OAAOotD,OAAOz0D,KAClB,CA2LC,OA3LA,oCAED,SAAayjC,GACLzjC,KAAKk1E,OAAO/nE,OAASs2B,EAAMyxC,OAAO/nE,MAClC+6D,GAAOjC,mBAAmB,gDAAiD,QAASxiC,EAE5F,GAAC,uBAED,SAAUA,GACNzjC,KAAKm1F,aAAa1xD,GAClB,IAAM7kC,EAAI81F,GAAW10F,KAAKi1F,OAAQj1F,KAAKk1E,OAAOz7B,UACxC56B,EAAI61E,GAAWjxD,EAAMwxD,OAAQxxD,EAAMyxC,OAAOz7B,UAChD,OAAOu7C,EAAYI,UAAUx2F,EAAE0G,IAAIuZ,GAAI7e,KAAKk1E,OAAOz7B,SAAUz5C,KAAKk1E,OACtE,GAAC,uBAED,SAAUzxC,GACNzjC,KAAKm1F,aAAa1xD,GAClB,IAAM7kC,EAAI81F,GAAW10F,KAAKi1F,OAAQj1F,KAAKk1E,OAAOz7B,UACxC56B,EAAI61E,GAAWjxD,EAAMwxD,OAAQxxD,EAAMyxC,OAAOz7B,UAChD,OAAOu7C,EAAYI,UAAUx2F,EAAEsjB,IAAIrD,GAAI7e,KAAKk1E,OAAOz7B,SAAUz5C,KAAKk1E,OACtE,GAAC,uBAED,SAAUzxC,GACNzjC,KAAKm1F,aAAa1xD,GAClB,IAAM7kC,EAAI81F,GAAW10F,KAAKi1F,OAAQj1F,KAAKk1E,OAAOz7B,UACxC56B,EAAI61E,GAAWjxD,EAAMwxD,OAAQxxD,EAAMyxC,OAAOz7B,UAChD,OAAOu7C,EAAYI,UAAUx2F,EAAE+X,IAAIkI,GAAG0N,IAAIvsB,KAAKk1E,OAAO6f,aAAc/0F,KAAKk1E,OAAOz7B,SAAUz5C,KAAKk1E,OACnG,GAAC,uBAED,SAAUzxC,GACNzjC,KAAKm1F,aAAa1xD,GAClB,IAAM7kC,EAAI81F,GAAW10F,KAAKi1F,OAAQj1F,KAAKk1E,OAAOz7B,UACxC56B,EAAI61E,GAAWjxD,EAAMwxD,OAAQxxD,EAAMyxC,OAAOz7B,UAChD,OAAOu7C,EAAYI,UAAUx2F,EAAE+X,IAAI3W,KAAKk1E,OAAO6f,aAAaxoE,IAAI1N,GAAI7e,KAAKk1E,OAAOz7B,SAAUz5C,KAAKk1E,OACnG,GAAC,mBAED,WACI,IAAMoC,EAAQt3E,KAAKlC,WAAW6zB,MAAM,KACf,IAAjB2lD,EAAM97E,QAAgB87E,EAAM77E,KAAK,KAErC,IAAIqD,EAASk2F,EAAYr4F,KAAK26E,EAAM,GAAIt3E,KAAKk1E,QAEvCmgB,GAAe/d,EAAM,GAAGjuE,MAAM,UAKpC,OAJIrJ,KAAK6qE,cAAgBwqB,IACrBv2F,EAASA,EAAOw2F,UAAUC,GAAIC,SAAS12F,EAAOo2E,UAG3Cp2E,CACX,GAAC,qBAED,WACI,IAAMw4E,EAAQt3E,KAAKlC,WAAW6zB,MAAM,KACf,IAAjB2lD,EAAM97E,QAAgB87E,EAAM77E,KAAK,KAErC,IAAIqD,EAASk2F,EAAYr4F,KAAK26E,EAAM,GAAIt3E,KAAKk1E,QAEvCmgB,GAAe/d,EAAM,GAAGjuE,MAAM,UAKpC,OAJKrJ,KAAK6qE,cAAgBwqB,IACtBv2F,EAASA,EAAO22F,UAAUF,GAAIC,SAAS12F,EAAOo2E,UAG3Cp2E,CACX,GAEA,mBACA,SAAM26C,GACc,MAAZA,IAAoBA,EAAW,GAGnC,IAAM69B,EAAQt3E,KAAKlC,WAAW6zB,MAAM,KAOpC,GANqB,IAAjB2lD,EAAM97E,QAAgB87E,EAAM77E,KAAK,MAEjCg+C,EAAW,GAAKA,EAAW,IAAOA,EAAW,IAC7CyuB,GAAOjC,mBAAmB,wBAAyB,WAAYxsB,GAG/D69B,EAAM,GAAG97E,QAAUi+C,EAAY,OAAOz5C,KAE1C,IAAM01F,EAASV,EAAYr4F,KAAK,IAAMoG,GAAM4F,UAAU,EAAG8wC,GAAWz5C,KAAKk1E,QACnEygB,EAAOC,GAAKJ,SAASx1F,KAAKk1E,QAEhC,OAAOl1E,KAAK61F,UAAUH,GAAQD,UAAUE,GAAM59D,QAAQ+9D,UAAUJ,EACpE,GAAC,oBAED,WACI,MAAwB,QAAhB11F,KAAKi1F,QAAoC,MAAhBj1F,KAAKi1F,MAC1C,GAAC,wBAED,WACI,MAA2B,MAAnBj1F,KAAKi1F,OAAO,EACxB,GAAC,sBAED,WAAqB,OAAOj1F,KAAKi1F,MAAQ,GAAC,yBAE1C,SAAY50E,GACR,OAAa,MAATA,EAAwBrgB,KAAKyqE,MAC7BpqD,EAAQ,GAAK6nD,GAAOjC,mBAAmB,qBAAsB,QAAS5lD,GAEnEspD,EADKruB,GAAU3+C,KAAKqD,KAAKyqE,MAAMhqD,SAASzgB,KAAKk1E,OAAO70D,OAAO/J,OAAO+J,GAAO+nD,cACzD/nD,EAAQ,GACnC,GAAC,2BAED,WAA0B,OAAO01E,WAAW/1F,KAAKlC,WAAa,GAAC,sBAE/D,SAASo3E,GACL,OAAO8f,EAAY1f,WAAWt1E,KAAKi1F,OAAQ/f,EAC/C,IAAC,wBAGD,SAAiBztE,EAAkBgyC,EAAyBy7B,GAUxD,OARc,MAAVA,GAA8B,MAAZz7B,GnD7SxB,SAAyBhyC,GAC3B,OAAiB,MAATA,IACJ6zC,GAAU06C,YAAYvuF,IACH,kBAAXA,GAAwBA,EAAQ,IAAO,GAC5B,kBAAXA,KAAyBA,EAAM4B,MAAM,eAC7C9C,EAAYkB,IACO,kBAAXA,GACR8gE,EAAQ9gE,GAEhB,CmDoSmDwuF,CAAex8C,KACtDy7B,EAASz7B,EACTA,EAAW,MAGC,MAAZA,IAAoBA,EAAW,GACrB,MAAVy7B,IAAkBA,EAAS,SAExB8f,EAAY1f,WAAWif,GAAY9sF,EAAOgyC,GAAWq7C,GAAYn4F,KAAKu4E,GACjF,GAAC,wBAGD,SAAkBztE,EAAeytE,GACf,MAAVA,IAAkBA,EAAS,SAE/B,IAAMghB,EAAcpB,GAAYn4F,KAAKu4E,GAE/B6X,EAAU2H,GAAWjtF,EAAOyuF,EAAYz8C,WAEzCy8C,EAAYxiB,QAAUqZ,EAAQr+D,GAAGwkD,KAClCtI,GAAW,oCAAqC,WAAY,QAASnjE,GAGzE,IAAIxJ,EAAc,KAEdA,EADAi4F,EAAYxiB,OACNqZ,EAAQz2E,OAAO4/E,EAAY71E,OAAO+nD,cAGlCuB,EADN1rE,EAAM8uF,EAAQ3kB,cACQ8tB,EAAY71E,MAAQ,GAG9C,IAAM81E,EAAU5B,GAAYxH,EAASmJ,EAAYz8C,UAEjD,OAAO,IAAIu7C,EAAY3qB,GAAmBpsE,EAAKk4F,EAASD,EAC5D,GAAC,uBAED,SAAiBzuF,EAAkBytE,GACjB,MAAVA,IAAkBA,EAAS,SAE/B,IAAMghB,EAAcpB,GAAYn4F,KAAKu4E,GAErC,GAAIzM,EAAShhE,GAAOjM,OAAS06F,EAAY71E,MAAQ,EAC7C,MAAM,IAAInkB,MAAM,YAGpB,IAAI6wF,EAAUzxC,GAAU3+C,KAAK8K,GACzByuF,EAAYxiB,SAAUqZ,EAAUA,EAAQtsE,SAASy1E,EAAY71E,QAEjE,IAAMpiB,EAAM8uF,EAAQz2E,QAAQ4/E,EAAYxiB,OAAS,EAAG,GAAKwiB,EAAY71E,OAAO+nD,cACtE+tB,EAAU5B,GAAYxH,EAASmJ,EAAYz8C,UAEjD,OAAO,IAAIu7C,EAAY3qB,GAAmBpsE,EAAKk4F,EAASD,EAC5D,GAAC,kBAED,SAAYzuF,EAAYytE,GACpB,GAAsB,kBAAXztE,EACP,OAAOutF,EAAY1f,WAAW7tE,EAAOytE,GAGzC,GAAI3M,EAAQ9gE,GACR,OAAOutF,EAAYhnF,UAAUvG,EAAOytE,GAGxC,IACI,OAAO8f,EAAYI,UAAU3tF,EAAO,EAAGytE,GACzC,MAAOp7D,GAEL,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAO2oB,iBAC7B,MAAMvtD,EAId,OAAOouD,GAAOjC,mBAAmB,4BAA6B,QAASx+D,EAC3E,GAAC,2BAED,SAAqBA,GACjB,SAAUA,IAASA,EAAMytF,eAC7B,KAAC,EAhNmB,GAmNlBK,GAAMP,GAAYr4F,KAAK,GACvBi5F,GAAOZ,GAAYr4F,KAAK,OClZxB,SAAUq4D,GAAY5pD,GAExB,MADwB,kBAAbA,IAAyBA,EAAUglE,GAAYhlE,IACnD1J,GAAUQ,EAAO,CACpBkuE,GALqB,kCAMrBA,GAAYtnE,OAAOsC,EAAQ5P,SAC3B4P,IAER,CCbO,IAAMyH,GAAU,oTCSjBq1D,GAAS,IAAIrC,EAAOhzD,IAIpBN,GAAU,IAAI7V,WAAW,IAC/B6V,GAAQxM,KAAK,GAEb,IAAMktE,GAAyB33B,GAAU3+C,MAAM,GACzCu2E,GAAkB53B,GAAU3+C,KAAK,GACjCw2E,GAAiB73B,GAAU3+C,KAAK,GAChC22E,GAAwBh4B,GAAU3+C,KAAK,sEAW7C,IAAMy5F,GAAUzsB,EAAWwJ,GAAI/K,cAAe,IACxCiuB,GAAW1sB,EAAWuJ,GAAK9K,cAAe,IAE1CkuB,GAA2C,CAC7CnpF,KAAM,SACN0F,QAAS,SACT5I,QAAS,UACTssF,kBAAmB,UACnBv0F,KAAM,WAGJw0F,GAAkC,CACpC,OAAQ,UAAW,UAAW,oBAAqB,QAGvD,SAASC,GAAYttF,GACjB,OAAO,SAAU1B,GAIb,MAHsB,kBAAXA,GACPygE,GAAOjC,mBAAmB,4BAAD,OAA8BtxD,KAAKC,UAAUzL,IAAK,iBAAeA,GAAQ1B,GAE/FA,CACX,CACJ,CAEA,IAAMivF,GAAoD,CACtDvpF,KAAMspF,GAAY,QAClB5jF,QAAS4jF,GAAY,WACrBxsF,QAAS,SAASxC,GACd,IACI,OAAO6zC,GAAU3+C,KAAK8K,GAAO3J,UAChB,CAAf,MAAOgc,GAAQ,CACjB,OAAOouD,GAAOjC,mBAAmB,qCAAsC,iBAAkBx+D,EAC7F,EACA8uF,kBAAmB,SAAS9uF,GACxB,IACI,OAAOinE,GAAWjnE,GAAOlG,aACZ,CAAf,MAAOuY,GAAQ,CACjB,OAAOouD,GAAOjC,mBAAmB,2CAA4C,2BAA4Bx+D,EAC7G,EACAzF,KAAM,SAASyF,GACX,IACI,IAAM5B,EAAQ4iE,EAAShhE,GACvB,GAAqB,KAAjB5B,EAAMrK,OAAiB,MAAM,IAAIU,MAAM,cAC3C,OAAOitE,EAAQtjE,EACF,CAAf,MAAOiU,GAAQ,CACjB,OAAOouD,GAAOjC,mBAAmB,8BAA+B,cAAex+D,EACnF,GAGJ,SAASkvF,GAAezhF,GAGhB,IAAM7L,EAAQ6L,EAAK7L,MAAM,kBACzB,GAAIA,EAAO,CACP,IAAMqqE,EAAuB,KAAbrqE,EAAM,GAEhBgX,EAAQhiB,SAASgL,EAAM,IAAM,QAC/BgX,EAAQ,IAAM,GAAKA,EAAQ,KAAQhX,EAAM,IAAMA,EAAM,KAAOP,OAAOuX,KACnE6nD,GAAOjC,mBAAmB,wBAAyB,OAAQ/wD,GAG/D,IAAM0hF,EAActjB,GAAWloD,KAAKsoD,EAAUrzD,EAAQ,EAAIA,GACpDw2E,EAAcnjB,EAASkjB,EAAYtxF,IAAI6tE,IAAKx8D,IAAIs8D,IAAcC,GAEpE,OAAO,SAASzrE,GACZ,IAAMpL,EAAIi/C,GAAU3+C,KAAK8K,GAMzB,OAJIpL,EAAEqyB,GAAGmoE,IAAgBx6F,EAAEiyB,GAAGsoE,KAC1B1uB,GAAOjC,mBAAmB,2BAAD,OAA6B/wD,GAAS,QAASzN,GAGrEkiE,EAAWttE,EAAEia,OAAO,KAAK8xD,cAAe,GACnD,EAMJ,IAAM/+D,EAAQ6L,EAAK7L,MAAM,gBACzB,GAAIA,EAAO,CACP,IAAMgX,EAAQhiB,SAASgL,EAAM,IAK7B,OAJc,IAAVgX,GAAeA,EAAQ,IAAMhX,EAAM,KAAOP,OAAOuX,KACjD6nD,GAAOjC,mBAAmB,sBAAuB,OAAQ/wD,GAGtD,SAASzN,GAKZ,OAJcghE,EAAShhE,GACbjM,SAAW6kB,GACjB6nD,GAAOjC,mBAAmB,sBAAD,OAAwB/wD,GAAS,QAASzN,GAjGvF,SAAqBA,GACjB,IAAM5B,EAAQ4iE,EAAShhE,GACjBs0D,EAAYl2D,EAAMrK,OAAS,GACjC,OAAIugE,EACOwN,EAAU,CAAE1jE,EAAO0M,GAAQpW,MAAM4/D,KAErCoN,EAAQtjE,EACnB,CA4FuBixF,CAAYrvF,EACvB,EAIR,OAAQyN,GACJ,IAAK,UAAW,OAAO,SAASzN,GAC5B,OAAOkiE,EAAW+E,GAAWjnE,GAAQ,GACzC,EACA,IAAK,OAAQ,OAAO,SAASA,GACzB,OAAUA,EAAmB2uF,GAAVC,EACvB,EACA,IAAK,QAAS,OAAO,SAAS5uF,GAC1B,OAAO/F,GAAU+F,EACrB,EACA,IAAK,SAAU,OAAO,SAASA,GAC3B,OAAOqpE,GAAGrpE,EACd,EAGJ,OAAO,IACX,CAEA,SAASoR,GAAW1L,EAAcsgF,GAC9B,MAAO,GAAP,OAAWtgF,EAAK,YAAKsgF,EAAOjmF,KAAI,gBAAG2F,EAAI,EAAJA,KAAU,SAAJ+H,KAAmB,IAAM/H,CAAI,IAAGc,KAAK,KAAK,IACvF,CAEO,ICnJK8oF,GDmJCC,GAAgB,WAOzB,WAAYlgF,IAA4C,eACpDi0D,GAAe/qE,KAAM,QAASqH,OAAOotD,OAAOmX,GAAS90D,KAErDi0D,GAAe/qE,KAAM,gBAAiB,CAAC,GACvC+qE,GAAe/qE,KAAM,SAAU,CAAC,GAGhC,IAAMi3F,EAAiD,CAAC,EAGlDC,EAAyC,CAAC,EAG1CC,EAAoD,CAAC,EAE3D9vF,OAAOuQ,KAAKd,GAAOE,SAAQ,SAAC9B,GACxB+hF,EAAM/hF,GAAQ,CAAC,EACfgiF,EAAQhiF,GAAQ,GAChBiiF,EAASjiF,GAAQ,CAAC,CACtB,IAAG,eAEQ/H,GAEP,IAAMolE,EAAuC,CAAC,EAE9Cz7D,EAAM3J,GAAM6J,SAAQ,SAAC4B,GAGb25D,EAAY35D,EAAMzL,OAClB+6D,GAAOjC,mBAAmB,2BAAD,OAA6BtxD,KAAKC,UAAUgE,EAAMzL,MAAM,eAAQwH,KAAKC,UAAUzH,IAAU,QAAS2J,GAE/Hy7D,EAAY35D,EAAMzL,OAAQ,EAG1B,IAAMmlE,EAAW15D,EAAM1D,KAAK7L,MAAM,uBAAuB,GACrDipE,IAAanlE,GACb+6D,GAAOjC,mBAAmB,8BAAD,OAAgCtxD,KAAKC,UAAU09D,IAAc,QAASx7D,GAInF6/E,GAAerkB,KAG1B4kB,EAAQ5kB,IACTpK,GAAOjC,mBAAmB,gBAAD,OAAkBtxD,KAAKC,UAAU09D,IAAc,QAASx7D,GAIrFogF,EAAQ5kB,GAAU72E,KAAK0R,GACvB8pF,EAAM9pF,GAAMmlE,IAAY,EAC5B,GAAG,EA7BP,IAAK,IAAMnlE,KAAQ2J,EAAO,EAAf3J,GAiCX,IAAMiqF,EAAe/vF,OAAOuQ,KAAKs/E,GAAS/uC,QAAO,SAAC1hD,GAAC,OAA4B,IAAtBywF,EAAQzwF,GAAGjL,MAAY,IAmChF,IAAK,IAAM2R,KAjCiB,IAAxBiqF,EAAa57F,OACb0sE,GAAOjC,mBAAmB,uBAAwB,QAASnvD,GACpDsgF,EAAa57F,OAAS,GAC7B0sE,GAAOjC,mBAAmB,4CAAD,OAA8CmxB,EAAa5vF,KAAI,SAACwI,GAAC,OAAM2E,KAAKC,UAAU5E,EAAE,IAAG/B,KAAK,OAAU,QAAS6I,GAGhJi0D,GAAe/qE,KAAM,cAAeo3F,EAAa,IAGjD,SAASC,EAAcniF,EAAcoiF,GAC7BA,EAAMpiF,IACNgzD,GAAOjC,mBAAmB,8BAAD,OAAgCtxD,KAAKC,UAAUM,IAAU,QAAS4B,GAG/FwgF,EAAMpiF,IAAQ,EAEd7N,OAAOuQ,KAAKq/E,EAAM/hF,IAAO8B,SAAQ,SAAC42D,GACzBspB,EAAQtpB,KAGbypB,EAAczpB,EAAO0pB,GAGrBjwF,OAAOuQ,KAAK0/E,GAAOtgF,SAAQ,SAACugF,GACxBJ,EAASI,GAAS3pB,IAAS,CAC/B,IACJ,WAEO0pB,EAAMpiF,EACjB,CACAmiF,CAAcr3F,KAAKwY,YAAa,CAAC,GAGd2+E,EAAU,CACzB,IAAMK,EAAKnwF,OAAOuQ,KAAKu/E,EAAShqF,IAChCqqF,EAAGt+E,OACHlZ,KAAKy3F,OAAOtqF,GAAQ0L,GAAW1L,EAAM2J,EAAM3J,IAASqqF,EAAGhwF,KAAI,SAACwI,GAAC,OAAK6I,GAAW7I,EAAG8G,EAAM9G,GAAG,IAAE/B,KAAK,IAExG,CAgQC,OAhQA,kCAED,SAAWiH,GACP,IAAIwiF,EAAU13F,KAAK23F,cAAcziF,GAIjC,OAHKwiF,IACDA,EAAU13F,KAAK23F,cAAcziF,GAAQlV,KAAK43F,YAAY1iF,IAEnDwiF,CACX,GAAC,yBAED,SAAYxiF,GAAY,WAIVwiF,EAAUf,GAAezhF,GAC/B,GAAIwiF,EAAW,OAAOA,EAI1B,IAAMruF,EAAQ6L,EAAK7L,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMkuF,EAAUluF,EAAM,GAChBwuF,EAAa73F,KAAK83F,WAAWP,GAC7B/7F,EAAS6C,SAASgL,EAAM,IAC9B,OAAO,SAAC5B,GACAjM,GAAU,GAAKiM,EAAMjM,SAAWA,GAChC0sE,GAAOjC,mBAAmB,0DAA2D,QAASx+D,GAGlG,IAAI3I,EAAS2I,EAAMD,IAAIqwF,GAKvB,OAJI,EAAKJ,OAAOF,KACZz4F,EAASA,EAAO0I,IAAI9F,KAGjBA,GAAU6nE,EAAUzqE,GAC/B,EAIJ,IAAM2uF,EAASztF,KAAK8W,MAAM5B,GAC1B,GAAIu4E,EAAQ,CACR,IAAMsK,EAAcjnB,GAAG9wE,KAAKy3F,OAAOviF,IACnC,OAAO,SAACzN,GACJ,IAAM7G,EAAS6sF,EAAOjmF,KAAI,YAAmB,IAAhB2F,EAAI,EAAJA,KAAM+H,EAAI,EAAJA,KACzBpW,EAAS,EAAKg5F,WAAW5iF,EAAhB,CAAsBzN,EAAM0F,IAC3C,OAAI,EAAKsqF,OAAOviF,GAAgBxT,GAAU5C,GACnCA,CACX,IAEA,OADA8B,EAAOsE,QAAQ6yF,GACRxuB,EAAU3oE,EACrB,EAGJ,OAAOsnE,GAAOjC,mBAAmB,iBAAD,OAAmB/wD,GAAS,OAAQA,EACxE,GAAC,wBAED,SAAW/H,GACP,IAAMrO,EAASkB,KAAKy3F,OAAOtqF,GAI3B,OAHKrO,GACDopE,GAAOjC,mBAAmB,iBAAD,OAAmBtxD,KAAKC,UAAUzH,IAAU,OAAQA,GAE1ErO,CACX,GAAC,wBAED,SAAWoW,EAAczN,GACrB,OAAOzH,KAAK83F,WAAW5iF,EAAhBlV,CAAsByH,EACjC,GAAC,wBAED,SAAW0F,EAAc1F,GACrB,OAAO/F,GAAU1B,KAAKiY,WAAW9K,EAAM1F,GAC3C,GAAC,oBAED,SAAOA,GACH,OAAOzH,KAAKiY,WAAWjY,KAAKwY,YAAa/Q,EAC7C,GAAC,kBAED,SAAKA,GACD,OAAOzH,KAAKsZ,WAAWtZ,KAAKwY,YAAa/Q,EAC7C,GAAC,oBAED,SAAOyN,EAAczN,EAAYrD,GAA0C,WAInE,GADgBuyF,GAAezhF,GAChB,OAAO9Q,EAAS8Q,EAAMzN,GAIzC,IAAM4B,EAAQ6L,EAAK7L,MAAM,yBACzB,GAAIA,EAAO,CACP,IAAMkuF,EAAUluF,EAAM,GAChB7N,EAAS6C,SAASgL,EAAM,IAI9B,OAHI7N,GAAU,GAAKiM,EAAMjM,SAAWA,GAChC0sE,GAAOjC,mBAAmB,0DAA2D,QAASx+D,GAE3FA,EAAMD,KAAI,SAACnL,GAAM,OAAK,EAAK27F,OAAOT,EAASl7F,EAAG+H,EAAS,IAIlE,IAAMqpF,EAASztF,KAAK8W,MAAM5B,GAC1B,OAAIu4E,EACOA,EAAO9uF,QAAO,SAACoqE,EAAO,GAAkB,IAAhB57D,EAAI,EAAJA,KAAM+H,EAAI,EAAJA,KAEjC,OADA6zD,EAAM57D,GAAQ,EAAK6qF,OAAO9iF,EAAMzN,EAAM0F,GAAO/I,GACtC2kE,CACX,GAAwB,CAAC,GAGtBb,GAAOjC,mBAAmB,iBAAD,OAAmB/wD,GAAS,OAAQA,EACxE,GAAC,mBAED,SAAMzN,EAA4BrD,GAC9B,OAAOpE,KAAKg4F,OAAOh4F,KAAKwY,YAAa/Q,EAAOrD,EAChD,IAAC,mBAED,SAAY0S,GACR,OAAO,IAAIkgF,EAAiBlgF,EAChC,GAAC,4BAED,SAAsBA,GAClB,OAAOkgF,EAAiBr6F,KAAKma,GAAO0B,WACxC,GAAC,wBAED,SAAkBrL,EAAc2J,EAA8CrP,GAC1E,OAAOuvF,EAAiBr6F,KAAKma,GAAOwC,WAAWnM,EAAM1F,EACzD,GAAC,wBAED,SAAkB2S,GACd,IAAM69E,EAAsC,GAC5C,IAAK,IAAM9qF,KAAQiN,EAAQ,CACvB,IAAMlF,EAAOohF,GAAiBnpF,GACzB+H,GACDgzD,GAAOjC,mBAAmB,kCAAD,OAAoCtxD,KAAKC,UAAUzH,IAAU,SAAUiN,GAEpG69E,EAAax8F,KAAK,CAAE0R,KAAAA,EAAM+H,KAAAA,IAO9B,OAJA+iF,EAAa/+E,MAAK,SAACta,EAAGigB,GAClB,OAAO23E,GAAiB/tF,QAAQ7J,EAAEuO,MAAQqpF,GAAiB/tF,QAAQoW,EAAE1R,KACzE,IAEO6pF,EAAiB19E,WAAW,eAAgB,CAAEK,aAAcs+E,GAAgB79E,EACvF,GAAC,oBAED,SAAcA,EAAyBtD,EAA8CrP,GACjF,OAAO8hE,EAAU,CACb,SACAytB,EAAiBkB,WAAW99E,GAC5B48E,EAAiBr6F,KAAKma,GAAOrV,KAAKgG,IAE1C,GAAC,kBAED,SAAY2S,EAAyBtD,EAA8CrP,GAC/E,OAAO/F,GAAUs1F,EAAiB97F,OAAOkf,EAAQtD,EAAOrP,GAC5D,GAEA,0BACA,SAA0B2S,EAAyBtD,EAA8CrP,EAA4B81E,6IAEzHnjE,EAASkxD,GAAYlxD,GAGf+9E,EAAmC,CAAC,EAGtC/9E,EAAOm8E,oBAAsBhwF,EAAY6T,EAAOm8E,kBAAmB,MACnE4B,EAAS/9E,EAAOm8E,mBAAqB,OAInCmB,EAAUV,EAAiBr6F,KAAKma,IAG9BshF,MAAM3wF,GAAO,SAACyN,EAAczN,GAIhC,MAHa,YAATyN,GAAuB3O,EAAYkB,EAAO,MAC1C0wF,EAAS1wF,GAAS,MAEfA,CACX,IAEA,oBACmB0wF,GAAQ,8CACN,OADVhrF,EAAI,qBACYowE,EAAYpwE,GAAK,QAAxCgrF,EAAShrF,GAAQ,EAAH,4BAYf,OARCiN,EAAOm8E,mBAAqB4B,EAAS/9E,EAAOm8E,qBAC5Cn8E,EAAOm8E,kBAAoB4B,EAAS/9E,EAAOm8E,oBAI/C9uF,EAAQiwF,EAAQU,MAAM3wF,GAAO,SAACyN,EAAczN,GACxC,MAAa,YAATyN,GAAsBijF,EAAS1wF,GAAiB0wF,EAAS1wF,GACtDA,CACX,IAAG,kBAEI,CAAE2S,OAAAA,EAAQ3S,MAAAA,IAAO,8CAC3B,wBAED,SAAkB2S,EAAyBtD,EAA8CrP,GAErFuvF,EAAiBkB,WAAW99E,GAG5B,IAAMi+E,EAAoC,CAAC,EACrCC,EAAoD,GAE1D9B,GAAiBx/E,SAAQ,SAAC7J,GACtB,IAAM1F,EAAc2S,EAAQjN,GACf,MAAT1F,IACJ4wF,EAAalrF,GAAQupF,GAAavpF,GAAM1F,GACxC6wF,EAAY78F,KAAK,CAAE0R,KAAAA,EAAM+H,KAAMohF,GAAiBnpF,KACpD,IAEA,IAAMuqF,EAAUV,EAAiBr6F,KAAKma,GAEhCyhF,EAAkBjtB,GAAYx0D,GAUpC,OATIyhF,EAAgB5+E,aAChBuuD,GAAOjC,mBAAmB,2CAA4C,qBAAsBnvD,GAE5FyhF,EAAgB5+E,aAAe2+E,EAInCZ,EAAQx8F,OAAOuM,GAER,CACHqP,MAAOyhF,EACPn+E,OAAQi+E,EACR7/E,YAAak/E,EAAQl/E,YACrBpN,QAASssF,EAAQU,MAAM3wF,GAAO,SAACyN,EAAczN,GAGzC,GAAIyN,EAAK7L,MAAM,eACX,OAAO8/D,EAAQV,EAAShhE,IAI5B,GAAIyN,EAAK7L,MAAM,UACX,OAAOiyC,GAAU3+C,KAAK8K,GAAO3J,WAGjC,OAAQoX,GACJ,IAAK,UACD,OAAOzN,EAAMlG,cACjB,IAAK,OACD,QAASkG,EACb,IAAK,SAID,MAHsB,kBAAXA,GACPygE,GAAOjC,mBAAmB,iBAAkB,QAASx+D,GAElDA,EAGf,OAAOygE,GAAOjC,mBAAmB,mBAAoB,OAAQ/wD,EACjE,IAER,KAAC,EArWwB,GExGhBsjF,GAAK,WAOd,WAAYC,IAAgB,eACxB1tB,GAAe/qE,KAAM,WAAYy4F,GACjC1tB,GAAe/qE,KAAM,OAAQy4F,EAASj9F,QAEtCuvE,GAAe/qE,KAAM,eAAgB,CAAC,GACtC+qE,GAAe/qE,KAAM,UAAWy4F,EAASpgC,OAAO,IAGhD,IAAK,IAAI98D,EAAI,EAAGA,EAAIk9F,EAASj9F,OAAQD,IACjCyE,KAAK04F,aAAaD,EAASpgC,OAAO98D,IAAMA,CAEhD,CAwEC,OAxEA,8BAED,SAAOkM,GACH,IAAIkxF,EAASlwB,EAAShhE,GAEtB,GAAsB,IAAlBkxF,EAAOn9F,OAAgB,MAAO,GAGlC,IADA,IAAIo9F,EAAS,CAAE,GACNr9F,EAAI,EAAGA,EAAIo9F,EAAOn9F,SAAUD,EAAG,CAEpC,IADA,IAAIwjB,EAAQ45E,EAAOp9F,GACVkD,EAAI,EAAGA,EAAIm6F,EAAOp9F,SAAUiD,EACjCsgB,GAAS65E,EAAOn6F,IAAM,EACtBm6F,EAAOn6F,GAAKsgB,EAAQ/e,KAAKmc,KACzB4C,EAASA,EAAQ/e,KAAKmc,KAAQ,EAGlC,KAAO4C,EAAQ,GACX65E,EAAOn9F,KAAKsjB,EAAQ/e,KAAKmc,MACzB4C,EAASA,EAAQ/e,KAAKmc,KAAQ,EAOtC,IAHA,IAAIW,EAAS,GAGJvV,EAAI,EAAiB,IAAdoxF,EAAOpxF,IAAYA,EAAIoxF,EAAOn9F,OAAS,IAAK+L,EACxDuV,GAAU9c,KAAK64F,QAInB,IAAK,IAAIh5E,EAAI+4E,EAAOp9F,OAAS,EAAGqkB,GAAK,IAAKA,EACtC/C,GAAU9c,KAAKy4F,SAASG,EAAO/4E,IAGnC,OAAO/C,CACX,GAAC,oBAED,SAAOrV,GACH,GAAsB,kBAAXA,EACP,MAAM,IAAIlJ,UAAU,mBAGxB,IAAIsH,EAAuB,GAC3B,GAAqB,IAAjB4B,EAAMjM,OAAgB,OAAO,IAAIkB,WAAWmJ,GAEhDA,EAAMpK,KAAK,GACX,IAAK,IAAIF,EAAI,EAAGA,EAAIkM,EAAMjM,OAAQD,IAAK,CACnC,IAAI4C,EAAO6B,KAAK04F,aAAajxF,EAAMlM,IAEnC,QAAagE,IAATpB,EACA,MAAM,IAAIjC,MAAM,WAAa8D,KAAKmc,KAAO,cAI7C,IADA,IAAI4C,EAAQ5gB,EACHM,EAAI,EAAGA,EAAIoH,EAAMrK,SAAUiD,EAChCsgB,GAASlZ,EAAMpH,GAAKuB,KAAKmc,KACzBtW,EAAMpH,GAAa,IAARsgB,EACXA,IAAU,EAGd,KAAOA,EAAQ,GACXlZ,EAAMpK,KAAa,IAARsjB,GACXA,IAAU,EAKlB,IAAK,IAAIxX,EAAI,EAAGE,EAAMF,KAAOvH,KAAK64F,SAAWtxF,EAAIE,EAAMjM,OAAS,IAAK+L,EACjE1B,EAAMpK,KAAK,GAGf,OAAOgtE,EAAS,IAAI/rE,WAAWmJ,EAAM2iD,WACzC,KAAC,EA1Fa,GA8FZswC,IADS,IAAIN,GAAM,oCACV,IAAIA,GAAM,gEDzIzB,SAAYzB,GAAqBA,EAAAA,OAAAA,SAAmBA,EAAAA,OAAAA,QAAmB,CAAvE,CAAYA,KAAAA,GAAkB,KEAvB,ICWD7uB,GAAS,IAAIrC,EDXI,cCajB,SAAUkzB,GAAUz7F,GACtB,MAAO,KAAQmE,KAAAA,YAAiB81B,OAAOkxC,EAASnrE,IAAO2zC,OAAO,MAClE,CAEM,SAAUH,GAAOxzC,GACnB,MAAO,KAAQmE,KAAAA,SAAc81B,OAAOkxC,EAASnrE,IAAO2zC,OAAO,MAC/D,CAEM,SAAU+nD,GAAO17F,GACnB,MAAO,KAAQmE,KAAAA,SAAc81B,OAAOkxC,EAASnrE,IAAO2zC,OAAO,MAC/D,CAEM,SAAUgoD,GAAY/pC,EAA+B/lD,EAAgB7L,GAQvE,OAPKy5F,GAAmB7nC,IACpBgZ,GAAOd,WAAW,yBAA2BlY,EAAW2W,EAAOnnB,OAAO8oB,sBAAuB,CACzFC,UAAW,OACXvY,UAAWA,IAIZ,KAAOztD,KAAAA,KAAgBA,KAAMytD,GAAYuZ,EAASt/D,IAAMouB,OAAOkxC,EAASnrE,IAAO2zC,OAAO,MACjG,CC7BM,SAAUioD,GAAOC,EAAqBn3F,EAAiBo3F,EAAoBC,EAAgBC,GAG7F,IAAIC,EAFJJ,EAAW1wB,EAAS0wB,GACpBn3F,EAAOymE,EAASzmE,GAEhB,IAMIyI,EACAqvD,EAPApxD,EAAI,EACF8wF,EAAK,IAAI98F,WAAW28F,GACpBI,EAAS,IAAI/8F,WAAWsF,EAAKxG,OAAS,GAC5Ci+F,EAAOz6F,IAAIgD,GAMX,IAAK,IAAIzG,EAAI,EAAGA,GAAKmN,EAAGnN,IAAK,CAEzBk+F,EAAOz3F,EAAKxG,QAAWD,GAAK,GAAM,IAClCk+F,EAAOz3F,EAAKxG,OAAS,GAAMD,GAAK,GAAM,IACtCk+F,EAAOz3F,EAAKxG,OAAS,GAAMD,GAAK,EAAK,IACrCk+F,EAAOz3F,EAAKxG,OAAS,GAAS,IAAJD,EAG1B,IAAIm+F,EAAIjxB,EAASwwB,GAAgCK,EAAeH,EAAUM,IAErEF,IACDA,EAAOG,EAAEl+F,OACTs+D,EAAI,IAAIp9D,WAAW68F,GAEnB9uF,EAAI4uF,IADJ3wF,EAAIuU,KAAKS,KAAK27E,EAASE,IACL,GAAKA,GAI3Bz/B,EAAE96D,IAAI06F,GAGN,IAAK,IAAIj7F,EAAI,EAAGA,EAAI26F,EAAY36F,IAAK,CAEjCi7F,EAAIjxB,EAASwwB,GAAgCK,EAAeH,EAAUO,IACtE,IAAK,IAAInyF,EAAI,EAAGA,EAAIgyF,EAAMhyF,IAAKuyD,EAAEvyD,IAAMmyF,EAAEnyF,GAI7C,IAAMoyF,GAAWp+F,EAAI,GAAKg+F,EACpB/8F,EAAOjB,IAAMmN,EAAI+B,EAAI8uF,EAE3BC,EAAGx6F,IAAIypE,EAAS3O,GAAG39D,MAAM,EAAGK,GAAMm9F,GAGtC,OAAOxwB,EAAQqwB,EACnB,CCrDO,ICUMtxB,GAAS,IAAIrC,EDVH,mBCYD+zB,GAAQ,WAG1B,WAAYC,IAAc,eACtB3xB,GAAOkU,cAAc,gBAAD,0BAAawd,GACjC7uB,GAAe/qE,KAAM,SAAU65F,EACnC,CAwCC,OAnCD,6BACA,SAAMC,GACF,OAAOA,EAASv4F,cAAcowB,MAAM,MACxC,GAEA,kBACA,SAAKpV,GACD,OAAOA,EAAMtO,KAAK,IACtB,IAAC,oBAED,SAAa8rF,GAET,IADA,IAAMx9E,EAAQ,GACLhhB,EAAI,EAAGA,EAAI,KAAMA,IAAK,CAC3B,IAAM0iB,EAAO87E,EAASC,QAAQz+F,GAE9B,GAAIA,IAAMw+F,EAASE,aAAah8E,GAAS,MAAO,KAChD1B,EAAM9gB,KAAKwiB,GAEf,OAAO6yD,GAAGv0D,EAAMtO,KAAK,MAAQ,KACjC,GAAC,sBAED,SAAgBisF,EAAgB/sF,GACvBA,IAAQA,EAAO+sF,EAAKL,OAa7B,KAAC,EA9CyB,GCL1BE,GAA0B,KAG9B,SAASI,GAAUD,GACf,GAAgB,MAAZH,KACJA,GAPU,+zVAOO7yF,QAAQ,WAAY,OAAO3F,cAAcoH,UAAU,GAAGgpB,MAAM,KAIhD,uEAAzBioE,GAAS7K,MAAMmL,IAEf,MADAH,GAAW,KACL,IAAI79F,MAAM,yCAExB,CAAC,IAkBKk+F,GAAS,IAhBF,0CACT,+CACU,KACV,CAUC,OAVA,+BAED,SAAQ/0F,GAEJ,OADA80F,GAAUn6F,MACH+5F,GAAS10F,EACpB,GAAC,0BAED,SAAa4Y,GAET,OADAk8E,GAAUn6F,MACH+5F,GAAStxF,QAAQwV,EAC5B,KAAC,EAbQ,CAAQ27E,KAiBrBA,GAASS,SAASD,IC5BX,IAAME,GAA8C,CACzDC,GAAIA,ICQAryB,GAAS,IAAIrC,ECpBI,gBDsBjB99C,GAAIuzB,GAAU3+C,KAAK,sEAInB69F,GAAepqB,GAAY,gBAE3BqqB,GAAc,WAGpB,SAASC,GAAa7vE,GACnB,OAAS,GAAKA,GAAQ,GAAO,EAAIA,CACpC,CAOA,SAAS8vE,GAAQlzF,GACb,OAAOkiE,EAAWR,EAAQ1hE,GAAQ,GACtC,CAEA,SAASmzF,GAAYt9F,GACjB,OAAOw7F,GAAO59F,OAAOgH,EAAO,CAAE5E,EAAM+rE,EAAav4B,GAAOA,GAAOxzC,IAAQ,EAAG,KAC9E,CAEA,SAASu9F,GAAYd,GACjB,GAAgB,MAAZA,EACA,OAAOO,GAAAA,GAGX,GAAyB,kBAAdP,EAAwB,CAC/B,IAAMx9E,EAAQ+9E,GAAUP,GAIxB,OAHa,MAATx9E,GACA2rD,GAAOjC,mBAAmB,iBAAkB,WAAY8zB,GAErDx9E,EAGX,OAAOw9E,CACX,CAEA,IAAM1vB,GAAyB,CAAC,EAEnBywB,GAAc,mBAQdC,GAAM,WAwBf,WAAYvwB,EAAuBroE,EAAoBG,EAAmB04F,EAA2BC,EAAmB51F,EAAeixE,EAAe4kB,GAElJ,IAFmL,eAE/K1wB,IAAqBH,GACrB,MAAM,IAAInuE,MAAM,gDAGpB,GAAIiG,EAAY,CACZ,IAAMuqF,EAAa,IAAIT,GAAW9pF,GAClC4oE,GAAe/qE,KAAM,aAAc0sF,EAAWvqF,YAC9C4oE,GAAe/qE,KAAM,YAAa0sF,EAAWyO,0BAE7CpwB,GAAe/qE,KAAM,aAAc,MACnC+qE,GAAe/qE,KAAM,YAAampE,EAAQ7mE,IAG9CyoE,GAAe/qE,KAAM,oBAAqBg7F,GAC1CjwB,GAAe/qE,KAAM,cAAeqpE,EAAa0vB,GAAUjoD,GAAO9wC,KAAKsC,YAAa,EAAG,IAEvFyoE,GAAe/qE,KAAM,UAAWgtF,GAAehtF,KAAKsC,YAEpDyoE,GAAe/qE,KAAM,YAAai7F,GAElClwB,GAAe/qE,KAAM,QAASqF,GAC9B0lE,GAAe/qE,KAAM,QAASs2E,GAER,MAAlB4kB,GAEAnwB,GAAe/qE,KAAM,WAAY,MACjC+qE,GAAe/qE,KAAM,OAAQ,OAEK,kBAApBk7F,GAEdnwB,GAAe/qE,KAAM,WAAY,MACjC+qE,GAAe/qE,KAAM,OAAQk7F,KAI7BnwB,GAAe/qE,KAAM,WAAYk7F,GACjCnwB,GAAe/qE,KAAM,OAAQk7F,EAAelvB,MAEpD,CAsKC,OAtKA,iCAED,WAOI,GAAIhsE,KAAKs2E,OAAS,IAAO,MAAM,IAAIp6E,MAAM,oBAEzC,OAAO0+F,GAAY14F,EAAO,CACD,MAAnBlC,KAAKmC,WAAsB,aAAc,aAC3CgnE,EAAQnpE,KAAKs2E,OACbt2E,KAAKg7F,kBACLrxB,EAAWR,EAAQnpE,KAAKqF,OAAQ,GAChCrF,KAAKi7F,UACgB,MAAnBj7F,KAAKmC,WAAsBD,EAAO,CAAE,OAAQlC,KAAKmC,aAAenC,KAAKsC,YAE/E,GAAC,oBAED,WACI,OAAO,IAAIy4F,EAAO1wB,GAAmB,KAAMrqE,KAAKsC,UAAWtC,KAAKg7F,kBAAmBh7F,KAAKi7F,UAAWj7F,KAAKqF,MAAOrF,KAAKs2E,MAAOt2E,KAAKgsE,KACpI,GAAC,qBAEO,SAAQ3mE,GACZ,GAAIA,EAAQ,WAAc,MAAM,IAAInJ,MAAM,mBAAqB4M,OAAOzD,IAGtE,IAAI2mE,EAAOhsE,KAAKgsE,KACZA,IAAQA,GAAQ,KAAe,WAAR3mE,IAE3B,IAAM/H,EAAO,IAAIZ,WAAW,IAE5B,GAAI2I,EAAQo1F,GAAa,CACrB,IAAKz6F,KAAKmC,WACN,MAAM,IAAIjG,MAAM,wCAIpBoB,EAAK0B,IAAIypE,EAASzoE,KAAKmC,YAAa,GAGhC6pE,IAAQA,GAAQ,UAIpB1uE,EAAK0B,IAAIypE,EAASzoE,KAAKsC,YAI3B,IAAK,IAAI/G,EAAI,GAAIA,GAAK,EAAGA,GAAK,EAAK+B,EAAK,IAAM/B,GAAK,IAAQ8J,GAAU,GAAK9J,EAAM,IAEhF,IAAMg4B,EAAIk1C,EAASwwB,GAAYlC,GAAmBiC,OAAQh5F,KAAKi7F,UAAW39F,IACpE89F,EAAK7nE,EAAEp3B,MAAM,EAAG,IAChBk/F,EAAK9nE,EAAEp3B,MAAM,IAGfm/F,EAAa,KAGbC,EAAa,KAEbv7F,KAAKmC,WACLm5F,EAAKX,GAAQr/C,GAAU3+C,KAAKy+F,GAAI91F,IAAItF,KAAKmC,YAAY6b,IAAI+J,KAGzDwzE,EADW,IAAItP,GAAW9iB,EAAQiyB,IAC1BI,UAAUx7F,KAAKsC,WAG3B,IAAI44F,EAAoClvB,EAElCyvB,EAAez7F,KAAK85F,SAS1B,OARI2B,IACAP,EAAiB7zF,OAAOotD,OAAO,CAC3BinC,OAAQD,EAAYC,OACpB1vB,KAAMA,EACN6tB,OAAS4B,EAAY5B,QAAU,QAIhC,IAAIkB,EAAO1wB,GAAmBixB,EAAIC,EAAIv7F,KAAK27F,YAAahB,GAAQU,GAAKh2F,EAAOrF,KAAKs2E,MAAQ,EAAG4kB,EACvG,GAAC,wBAED,SAAWlvB,GACP,IAAMgJ,EAAahJ,EAAKr6C,MAAM,KAE9B,GAA0B,IAAtBqjD,EAAWx5E,QAAmC,MAAlBw5E,EAAW,IAA6B,IAAfh1E,KAAKs2E,MAC1D,MAAM,IAAIp6E,MAAM,kBAAoB8vE,GAGlB,MAAlBgJ,EAAW,IAAcA,EAAWjrE,QAGxC,IADA,IAAIjL,EAAiBkB,KACZzE,EAAI,EAAGA,EAAIy5E,EAAWx5E,OAAQD,IAAK,CACxC,IAAMk9E,EAAYzD,EAAWz5E,GAC7B,GAAIk9E,EAAUpvE,MAAM,aAAc,CAC9B,IAAMhE,EAAQhH,SAASo6E,EAAU9vE,UAAU,EAAG8vE,EAAUj9E,OAAS,IACjE,GAAI6J,GAASo1F,GAAe,MAAM,IAAIv+F,MAAM,wBAA0Bu8E,GACtE35E,EAASA,EAAO88F,QAAQnB,GAAcp1F,OACnC,KAAIozE,EAAUpvE,MAAM,YAKvB,MAAM,IAAInN,MAAM,4BAA8Bu8E,GAJ9C,IAAMpzE,EAAQhH,SAASo6E,GACvB,GAAIpzE,GAASo1F,GAAe,MAAM,IAAIv+F,MAAM,wBAA0Bu8E,GACtE35E,EAASA,EAAO88F,QAAQv2F,IAMhC,OAAOvG,CACX,IAAC,wBAGD,SAAiBgjC,EAAiBg4D,GAC9B,IAAM+B,EAAwBpzB,EAAS3mC,GACvC,GAAI+5D,EAAUrgG,OAAS,IAAMqgG,EAAUrgG,OAAS,GAAM,MAAM,IAAIU,MAAM,gBAEtE,IAAMq3B,EAAgBk1C,EAASwwB,GAAYlC,GAAmBiC,OAAQwB,GAAcqB,IAEpF,OAAO,IAAId,EAAO1wB,GAAmBswB,GAAQpnE,EAAEp3B,MAAM,EAAG,KAAM,KAAM,aAAcw+F,GAAQpnE,EAAEp3B,MAAM,KAAM,EAAG,EAAG29F,EAClH,GAAC,0BAED,SAAoBA,EAAkBX,EAAmBY,GAQrD,OAFAD,EAAWgC,GAAkBC,GAAkBjC,EAH/CC,EAAWc,GAAYd,IAG6CA,GAE7DgB,EAAOiB,UAAUC,GAAenC,EAAUX,GAAW,CACxDuC,OAAQ5B,EACR9tB,KAAM,IACN6tB,OAAQE,EAASF,QAEzB,GAAC,sBAED,SAAgB/3D,GACZ,OAAOi5D,EAAOiB,UAAUl6D,EAAM,KAClC,GAAC,6BAED,SAAuBo6D,GACnB,IAAMr2F,EAAQizF,GAAO97F,OAAOk/F,GAEP,KAAjBr2F,EAAMrK,QAAiBo/F,GAAY/0F,EAAM1J,MAAM,EAAG,OAAS+/F,GAC3Dh0B,GAAOjC,mBAAmB,uBAAwB,cAAe,cAGrE,IAAMqQ,EAAQzwE,EAAM,GACdm1F,EAAoB7xB,EAAQtjE,EAAM1J,MAAM,EAAG,IAC3CkJ,EAAQhH,SAAS8qE,EAAQtjE,EAAM1J,MAAM,EAAG,KAAKwM,UAAU,GAAI,IAC3DsyF,EAAY9xB,EAAQtjE,EAAM1J,MAAM,GAAI,KACpCgN,EAAMtD,EAAM1J,MAAM,GAAI,IAE5B,OAAQgtE,EAAQtjE,EAAM1J,MAAM,EAAG,KAE3B,IAAK,aAAc,IAAK,aACpB,OAAO,IAAI4+F,EAAO1wB,GAAmB,KAAMlB,EAAQhgE,GAAM6xF,EAAmBC,EAAW51F,EAAOixE,EAAO,MAGzG,IAAK,aAAc,IAAK,cACpB,GAAe,IAAXntE,EAAI,GAAY,MACpB,OAAO,IAAI4xF,EAAO1wB,GAAmBlB,EAAQhgE,EAAIhN,MAAM,IAAK,KAAM6+F,EAAmBC,EAAW51F,EAAOixE,EAAO,MAGtH,OAAOpO,GAAOjC,mBAAmB,uBAAwB,cAAe,aAC5E,KAAC,EAtOc,GAyOb,SAAUg2B,GAAenC,EAAkBX,GACxCA,IAAYA,EAAW,IAE5B,IAAMn3F,EAAOouE,GAAY,WAAa+oB,EAAUjqB,GAAyBitB,MAEzE,OAAOjD,GAAO9oB,GAAY0pB,EAAU5qB,GAAyBitB,MAAOn6F,EAAM,KAAM,GAAI,SACxF,CAEM,SAAU+5F,GAAkBjC,EAAkBC,GAChDA,EAAWc,GAAYd,GAEvB7xB,GAAOmI,iBAEP,IAAM9zD,EAAQw9E,EAASpoE,MAAMmoE,GAC7B,GAAKv9E,EAAM/gB,OAAS,IAAO,EAAK,MAAM,IAAIU,MAAM,oBAKhD,IAHA,IAAMmsF,EAAU5f,EAAS,IAAI/rE,WAAWugB,KAAKS,KAAK,GAAKnB,EAAM/gB,OAAS,KAElEiB,EAAS,EACJlB,EAAI,EAAGA,EAAIghB,EAAM/gB,OAAQD,IAAK,CACnC,IAAI8J,EAAQ00F,EAASE,aAAa19E,EAAMhhB,GAAG2a,UAAU,SACrD,IAAe,IAAX7Q,EAAgB,MAAM,IAAInJ,MAAM,oBAEpC,IAAK,IAAI4lB,EAAM,EAAGA,EAAM,GAAIA,IACpBzc,EAAS,GAAM,GAAKyc,IACpBumE,EAAQ5rF,GAAU,IAAO,GAAM,EAAKA,EAAS,GAEjDA,IAIR,IAAM2/F,EAAc,GAAK7/E,EAAM/gB,OAAS,EAGlC6gG,EAAe3B,GADAn+E,EAAM/gB,OAAS,GAKpC,IAFiBitE,EAAS33B,GAAOu3C,EAAQlsF,MAAM,EAAGigG,EAAc,KAAK,GAAKC,MAExDhU,EAAQA,EAAQ7sF,OAAS,GAAK6gG,GAC5C,MAAM,IAAIngG,MAAM,oBAGpB,OAAOitE,EAAQkf,EAAQlsF,MAAM,EAAGigG,EAAc,GAClD,CAEM,SAAUN,GAAkBzT,EAAoB0R,GAKlD,GAJAA,EAAWc,GAAYd,IAEvB1R,EAAU5f,EAAS4f,IAEN7sF,OAAS,IAAO,GAAK6sF,EAAQ7sF,OAAS,IAAM6sF,EAAQ7sF,OAAS,GACtE,MAAM,IAAIU,MAAM,mBAMpB,IAHA,IAAMogG,EAAyB,CAAE,GAE7BC,EAAgB,GACXhhG,EAAI,EAAGA,EAAI8sF,EAAQ7sF,OAAQD,IAG5BghG,EAAgB,GAChBD,EAAQA,EAAQ9gG,OAAS,KAAO,EAChC8gG,EAAQA,EAAQ9gG,OAAS,IAAM6sF,EAAQ9sF,GAEvCghG,GAAiB,IAIjBD,EAAQA,EAAQ9gG,OAAS,KAAO+gG,EAChCD,EAAQA,EAAQ9gG,OAAS,IAAM6sF,EAAQ9sF,IAAO,EAAIghG,EAGlDD,EAAQ7gG,KAAK4sF,EAAQ9sF,IAtVtB,GAsVwC,EAAIghG,GAtV/B,GAwVZA,GAAiB,GAKzB,IAAMC,EAAenU,EAAQ7sF,OAAS,EAChCizE,EAAWhG,EAAS33B,GAAOu3C,IAAU,GAAKqS,GAAa8B,GAM7D,OAHAF,EAAQA,EAAQ9gG,OAAS,KAAOghG,EAChCF,EAAQA,EAAQ9gG,OAAS,IAAOizE,GAAa,EAAI+tB,EAE1CzC,EAAS9rF,KAAKquF,EAAQ90F,KAAI,SAACnC,GAAK,OAAgB00F,EAAUC,QAAQ30F,EAAM,IACnF,CAEM,SAAUo3F,GAAgB3C,EAAkBC,GAC9C,IAEI,OADAgC,GAAkBjC,EAAUC,IACrB,CACM,CAAf,MAAOjgF,GAAQ,CACjB,OAAO,CACX,CAEM,SAAU4iF,GAAer3F,GAI3B,OAHsB,kBAAXA,GAAuBA,EAAQ,GAAKA,GAASo1F,IAAep1F,EAAQ,IAC3E6iE,GAAOjC,mBAAmB,wBAAyB,QAAS5gE,GAEzD,aAAP,OAAqBA,EAAM,QAC/B,CEzZO,ICMD6iE,GAAS,IAAIrC,EDNI,gBCmBvB,IAAM82B,GAPN,WACE,GAAoB,qBAATt4F,KAAwB,OAAOA,KAC1C,GAAsB,qBAAXsY,OAA0B,OAAOA,OAC5C,GAAsB,qBAAXigF,EAAAA,EAA0B,OAAOA,EAAAA,EAC5C,MAAM,IAAI1gG,MAAM,iCAClB,CAEkB2gG,GAEd16D,GAAcw6D,GAAUx6D,QAAUw6D,GAAUv6D,SAc1C,SAAU5uB,GAAYhY,IACpBA,GAAU,GAAKA,EAAS,MAASA,EAAS,GAAMA,GAAUA,IAC1D0sE,GAAOjC,mBAAmB,iBAAkB,SAAUzqE,GAG1D,IAAMsD,EAAS,IAAIpC,WAAWlB,GAE9B,OADA2mC,GAAOE,gBAAgBvjC,GAChB2pE,EAAS3pE,EACpB,CArBKqjC,IAAWA,GAAOE,kBAEnB6lC,GAAOr+D,KAAK,gDAEZs4B,GAAS,CACLE,gBAAiB,SAASt7B,GACtB,OAAOmhE,GAAOd,WAAW,oCAAqCvB,EAAOnnB,OAAO8oB,sBAAuB,CAC/FC,UAAW,0BAEnB,qDC1BF,SAAUq1B,GAAcpiF,GAI1B,MAH0B,kBAAfA,GAAyD,OAA9BA,EAAU/R,UAAU,EAAG,KACzD+R,EAAY,KAAOA,GAEhB+tD,EAAS/tD,EACpB,CAEM,SAAUqiF,GAAKt1F,EAAwBjM,GAEzC,IADAiM,EAAQqB,OAAOrB,GACRA,EAAMjM,OAASA,GAAUiM,EAAQ,IAAMA,EAC9C,OAAOA,CACX,CAEM,SAAUu1F,GAAY7D,GACxB,MAAyB,kBAAdA,EACA/oB,GAAY+oB,EAAUjqB,GAAyB+tB,MAEnDx0B,EAAS0wB,EACpB,CAEM,SAAU+D,GAAWl0B,EAAagD,GAIpC,IAHA,IAAImxB,EAAen0B,EAEbsO,EAAQtL,EAAKzqE,cAAcowB,MAAM,KAC9Bp2B,EAAI,EAAGA,EAAI+7E,EAAM97E,OAAQD,IAAK,CAGnC,IAAI6hG,EAAgB,KACpB,IAAK,IAAMj0F,KAAOg0F,EACb,GAAIh0F,EAAI5H,gBAAkB+1E,EAAM/7E,GAAI,CAChC6hG,EAAgBD,EAAah0F,GAC7B,MAKT,GAAsB,OAAlBi0F,EACA,OAAO,KAIXD,EAAeC,EAGnB,OAAOD,CACX,CAGM,SAAUE,GAAO7pF,GACnB,IAAM3N,EAAQ4iE,EAASj1D,GAIvB3N,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAK/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IAE/B,IAAM4B,EAAQ0hE,EAAQtjE,GAEtB,MAAO,CACJ4B,EAAMkB,UAAU,EAAG,IACnBlB,EAAMkB,UAAU,GAAI,IACpBlB,EAAMkB,UAAU,GAAI,IACpBlB,EAAMkB,UAAU,GAAI,IACpBlB,EAAMkB,UAAU,GAAI,KACrBsF,KAAK,IACX,CC1EO,IAAM4E,GAAU,4TCmBjBq1D,GAAS,IAAIrC,EAAOhzD,IAI1B,SAASyqF,GAAY71F,GACjB,OAAiB,MAATA,GAAiBA,EAAMqyF,UAAYryF,EAAMqyF,SAAS4B,MAC9D,CAUO,IAAM6B,GAAgB,qGASxB,OATwB,yCAOzB,SAAkB91F,GACd,SAAUA,IAASA,EAAM+1F,mBAC7B,KAAC,EATwB,CAAQ3xB,IAyCrC,SAAS4xB,GAAYngG,EAAW6L,GAC5B,IAAMiH,EAAa0sF,GAAcI,GAAW5/F,EAAM,sBAGlD,GADoB6rE,EAAQznE,GAAUQ,EAAO,CAAEiH,EAAIhN,MAAM,GAAI,IAAKiU,MAAgBzH,UAAU,KACxEu0F,GAAW5/F,EAAM,cAAciE,cAC/C,MAAM,IAAIrF,MAAM,oBAGpB,IAAMiG,EAtBV,SAAkB7E,EAAW6L,EAAiBiH,GAE1C,GAAe,gBADA8sF,GAAW5/F,EAAM,iBACF,CAC1B,IAAMoT,EAAKosF,GAAcI,GAAW5/F,EAAM,2BACpCqU,EAAU,IAAI+rF,KAAAA,SAAYhtF,GAIhC,OAAO+3D,EAFQ,IAAIi1B,KAAAA,gBAAAA,KAAwBv0F,EAAKwI,GAEzBxB,QAAQC,IAGnC,OAAO,IACX,CAUuButF,CAASrgG,EAAM6L,EAAIhN,MAAM,EAAG,IAAKiU,GAE/CjO,GACD+lE,GAAOd,WAAW,qBAAsBvB,EAAOnnB,OAAO8oB,sBAAuB,CACzEC,UAAW,YAInB,IAAMm2B,EAAcz0F,EAAIhN,MAAM,GAAI,IAE5BkF,EAAU2rF,GAAe7qF,GAC/B,GAAI7E,EAAK+D,QAAS,CACd,IAAI0tF,EAAQzxF,EAAK+D,QAAQE,cAGzB,GAF8B,OAA1BwtF,EAAMpmF,UAAU,EAAG,KAAeomF,EAAQ,KAAOA,GAEjDrgB,GAAWqgB,KAAW1tF,EACtB,MAAM,IAAInF,MAAM,oBAIxB,IAAM2hG,EAA4B,CAC9BL,oBAAoB,EACpBn8F,QAASA,EACTc,WAAYgnE,EAAQhnE,IAIxB,GAA6C,QAAzC+6F,GAAW5/F,EAAM,oBAA+B,CAChD,IAAMwgG,EAAqBhB,GAAcI,GAAW5/F,EAAM,gCACpDygG,EAAajB,GAAcI,GAAW5/F,EAAM,6BAE5C0gG,EAAkB,IAAIN,KAAAA,SAAYK,GAClCE,EAAiB,IAAIP,KAAAA,gBAAAA,KAAwBE,EAAaI,GAE1DhyB,EAAOkxB,GAAW5/F,EAAM,kBAAoBw9F,GAC5CjB,EAASqD,GAAW5/F,EAAM,oBAAsB,KAEhD+qF,EAAU5f,EAASw1B,EAAe9tF,QAAQ2tF,IAEhD,IACI,IAAMhE,EAAWgC,GAAkBzT,EAASwR,GACtC1pD,EAAO4qD,GAAOmD,aAAapE,EAAU,KAAMD,GAAQsE,WAAWnyB,GAEpE,GAAI77B,EAAKhuC,YAAc07F,EAAQ17F,WAC3B,MAAM,IAAIjG,MAAM,qBAGpB2hG,EAAQ/D,SAAW3pD,EAAK2pD,SAE1B,MAAOhgF,GAIL,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAO2oB,kBAAuC,aAAnBvtD,EAAMwtD,SACvD,MAAMxtD,GAKlB,OAAO,IAAIyjF,GAAgBM,EAC/B,CAKA,SAASO,GAAWC,EAA2Br8F,EAAkB0lE,EAAe5E,EAAew7B,GAC3F,OAAO71B,EAAS81B,GAAQF,EAAer8F,EAAM0lE,EAAO5E,EAAOw7B,GAC/D,CAEA,SAASpF,GAAOmF,EAA2Br8F,EAAkB0lE,EAAe5E,EAAew7B,GACvF,OAAO70F,QAAQC,QAAQ00F,GAAWC,EAAer8F,EAAM0lE,EAAO5E,EAAOw7B,GACzE,CAEA,SAASE,GAAkBlhG,EAAW67F,EAA0BsF,EAA2BC,EAA2BC,GAClH,IAAMN,EAAgBrB,GAAY7D,GAE5ByF,EAAM1B,GAAW5/F,EAAM,cAE7B,GAAIshG,GAAuB,kBAATA,EAAmB,CACjC,IAAMx3B,EAAa,SAASj6D,EAAc1F,GACtC,OAAOygE,GAAOjC,mBAAmB,6CAA8C94D,EAAM1F,EACzF,EAEA,GAA0B,WAAtBm3F,EAAIr9F,cAA4B,CAChC,IAAMS,EAAO86F,GAAcI,GAAW5/F,EAAM,0BACtCyqB,EAAI1pB,SAAS6+F,GAAW5/F,EAAM,uBAC9BmN,EAAIpM,SAAS6+F,GAAW5/F,EAAM,uBAC9BwrB,EAAIzqB,SAAS6+F,GAAW5/F,EAAM,uBAG/ByqB,GAAMtd,GAAMqe,GAAKs+C,EAAW,MAAOw3B,GAGlB,KAAjB72E,EAAKA,EAAI,IAAaq/C,EAAW,IAAKr/C,GAE3C,IAAM+6C,EAAQzkE,SAAS6+F,GAAW5/F,EAAM,2BAGxC,OAFc,KAAVwlE,GAAgBsE,EAAW,QAAStE,GAEjC47B,EAAWL,EAAer8F,EAAM+lB,EAAGtd,EAAGqe,EAAG,GAAI61E,GAEjD,GAA0B,WAAtBC,EAAIr9F,cAA4B,CAEvC,IAAMS,EAAO86F,GAAcI,GAAW5/F,EAAM,0BAExCghG,EAAkB,KAChBO,EAAM3B,GAAW5/F,EAAM,wBACjB,gBAARuhG,EACAP,EAAU,SACK,gBAARO,EACPP,EAAU,SAEVl3B,EAAW,MAAOy3B,GAGtB,IAAMn3B,EAAQrpE,SAAS6+F,GAAW5/F,EAAM,uBAElCwlE,EAAQzkE,SAAS6+F,GAAW5/F,EAAM,2BAGxC,OAFc,KAAVwlE,GAAgBsE,EAAW,QAAStE,GAEjC27B,EAAWJ,EAAer8F,EAAM0lE,EAAO5E,EAAOw7B,IAI7D,OAAOp2B,GAAOjC,mBAAmB,sCAAuC,MAAO24B,EACnF,CClMA,IAAM12B,GAAS,IAAIrC,EAAOhzD,IAWbisF,GAAiB,qGAUzB,OAVyB,0CAQ1B,SAAmBr3F,GACf,SAAUA,IAASA,EAAMs3F,oBAC7B,KAAC,EAVyB,CAAQlzB,IAchC,SAAU17D,GAAQq+C,EAAc2qC,GAClC,IAAM77F,EAAOqX,KAAKI,MAAMy5C,GAExB2qC,EAAW6D,GAAY7D,GAGvB,IAAM6F,EAAUtwB,GAAWwuB,GAAW5/F,EAAM,YAGtC2hG,EAAUnC,GAAcI,GAAW5/F,EAAM,YAC1C2hG,GAAYA,EAAQzjG,OAAS,KAAQ,GACtC0sE,GAAOjC,mBAAmB,kBAAmB,OAAQzX,GAczD,IAXA,IAAMrlD,EAAMs/D,EAASywB,GAAOC,EAAUA,EAAU,IAAM,GAAI,WAAWh9F,MAAM,EAAG,IAExEuU,EAAKuuF,EAAQ9iG,MAAM,EAAG,IACtB+iG,EAAgBD,EAAQ9iG,MAAM,IAG9BgjG,EAAS,IAAIzB,KAAAA,gBAAAA,KAAwBv0F,EAAKuH,GAC1CoxB,EAAO47D,KAAAA,QAAAA,MAAAA,MAAwBj1B,EAAS02B,EAAOhvF,QAAQ+uF,KAGzDE,EAAU,GACL7jG,EAAI,EAAGA,EAAIumC,EAAKtmC,OAAQD,IAC7B6jG,GAAWt2F,OAAOC,aAAa+4B,EAAKvmC,IAGxC,IAEM4G,EAAaT,GAFE0uE,GAAYgvB,IAIjC,OAAO,IAAIN,GAAkB,CACzBC,qBAAqB,EACrB19F,QAAS29F,EACT78F,WAAYA,GAEpB,CCxEM,SAAUk9F,GAAkB7wC,GAC9B,IAAIlxD,EAAY,KAChB,IACIA,EAAOqX,KAAKI,MAAMy5C,GACpB,MAAO10C,GAAS,OAAO,EAEzB,OAAQxc,EAAK2hG,SAAW3hG,EAAK0hG,OACjC,CAEM,SAAUM,GAAiB9wC,GAC7B,IAAIlxD,EAAY,KAChB,IACIA,EAAOqX,KAAKI,MAAMy5C,GACpB,MAAO10C,GAAS,OAAO,EAEzB,SAAKxc,EAAKuV,SAAWxU,SAASf,EAAKuV,WAAavV,EAAKuV,SAAsC,IAA3BxU,SAASf,EAAKuV,SAMlF,CAMM,SAAU0sF,GAAqB/wC,GACjC,GAAI6wC,GAAkB7wC,GAClB,IACI,OAAOkgB,GAAW/5D,KAAKI,MAAMy5C,GAAMwwC,SACrC,MAAOllF,GAAS,OAAO,KAG7B,GAAIwlF,GAAiB9wC,GACjB,IACI,OAAOkgB,GAAW/5D,KAAKI,MAAMy5C,GAAMntD,SACrC,MAAOyY,GAAS,OAAO,KAG7B,OAAO,IACX,CCrCA,SAAS0lF,GAAkBhxC,EAAc2qC,EAA0BwF,GAC/D,GAAIU,GAAkB7wC,GAAO,CACrBmwC,GAAoBA,EAAiB,GACzC,IAAMd,EAAU4B,GAAiBjxC,EAAM2qC,GAEvC,OADIwF,GAAoBA,EAAiB,GAClCl1F,QAAQC,QAAQm0F,GAG3B,OAAIyB,GAAiB9wC,GHyMnB,SAAwBA,EAAc2qC,EAA0BwF,2IAGtD,OAFNrhG,EAAOqX,KAAKI,MAAMy5C,GAAK,SAEXgwC,GAAelhG,EAAM67F,EAAUD,GAAQwG,KAAAA,OAAef,GAAiB,OAAhF,OAAHx1F,EAAM,EAAH,uBACFs0F,GAAYngG,EAAM6L,IAAI,2CG5MlBw2F,CAAgBnxC,EAAM2qC,EAAUwF,GAGpCl1F,QAAQilF,OAAO,IAAIxyF,MAAM,uBACpC,CAEA,SAAS0jG,GAAsBpxC,EAAc2qC,GACzC,GAAIkG,GAAkB7wC,GAClB,OAAOixC,GAAiBjxC,EAAM2qC,GAGlC,GAAImG,GAAiB9wC,GACjB,OHqLF,SAAsBA,EAAc2qC,GACtC,IAAM77F,EAAOqX,KAAKI,MAAMy5C,GAGxB,OAAOivC,GAAYngG,EADPkhG,GAAelhG,EAAM67F,EAAUiF,GAAYsB,KAAAA,YAE3D,CG1LeG,CAAoBrxC,EAAM2qC,GAGrC,MAAM,IAAIj9F,MAAM,sBACpB,CClCO,2SCkBDgsE,GAAS,IAAIrC,EDlBI,gBC6BhB,IAAMi6B,GAAO,0CAUhB,WAAY39F,EAA6D83C,GAAmB,MAnB7ExyC,EAsBX,IAHwF,eACxF,eAnBa,OADFA,EAsBGtF,IArBOoE,EAAYkB,EAAMtF,WAAY,KAAwB,MAAjBsF,EAAMpG,QAqBrC,CACvB,IAAMqrF,EAAa,IAAIT,GAAW9pF,EAAWA,YAQ7C,GAPA4oE,IAAe,UAAM,eAAe,kBAAM2hB,CAAU,IACpD3hB,IAAe,UAAM,UAAWiiB,GAAe,EAAK1qF,YAEhD,EAAKjB,UAAYqtE,GAAWvsE,EAAWd,UACvC6mE,GAAOjC,mBAAmB,8BAA+B,aAAc,cAxBvF,SAAqBx+D,GACjB,IAAMqyF,EAAWryF,EAAMqyF,SACvB,OAAQA,GAAYA,EAAS4B,MACjC,CAwBgB4B,CAAYn7F,GAAa,CACzB,IAAMs5F,EAAct5F,EAAW23F,SAC/B/uB,IAAe,UAAM,aAAa,iBAC9B,CACI2wB,OAAQD,EAAYC,OACpB1vB,KAAMyvB,EAAYzvB,MAAQ8uB,GAC1BjB,OAAQ4B,EAAY5B,QAAU,KACjC,IAEL,IAAMC,EAAW,EAAKA,SAElB9M,GADS+N,GAAOmD,aAAapE,EAAS4B,OAAQ,KAAM5B,EAASD,QAAQsE,WAAWrE,EAAS9tB,MACrE7pE,cAAgB,EAAKd,SACzC6mE,GAAOjC,mBAAmB,4BAA6B,aAAc,mBAGzE8E,IAAe,UAAM,aAAa,kBAAgB,IAAI,QAIvD,CACH,GAAIkhB,GAAW8T,aAAa59F,GAEC,cAArBA,EAAW09E,OACX3X,GAAOjC,mBAAmB,uCAAwC,aAAc,cAEpF8E,IAAe,UAAM,eAAe,kBAAmB5oE,CAAW,QAE/D,CAEwB,kBAAhBA,GACHA,EAAWkH,MAAM,iBAAyC,KAAtBlH,EAAW3G,SAC/C2G,EAAa,KAAOA,GAI5B,IAAMuqF,EAAa,IAAIT,GAAW9pF,GAClC4oE,IAAe,UAAM,eAAe,kBAAM2hB,CAAU,IAGxD3hB,IAAe,UAAM,aAAa,kBAAgB,IAAI,IACtDA,IAAe,UAAM,UAAWiiB,GAAe,EAAK1qF,YAQL,OAJ/C23C,IAAakiC,GAASwV,WAAW13C,IACjCiuB,GAAOjC,mBAAmB,mBAAoB,WAAYhsB,GAG9D8wB,IAAe,UAAM,WAAY9wB,GAAY,MAAM,CACvD,CA4FC,OA5FA,8BAED,WAA2B,OAAOj6C,KAAKggG,WAAa,GAAC,sBACrD,WAA2B,OAAOhgG,KAAKigG,cAAc99F,UAAY,GAAC,qBAClE,WAA0B,OAAOnC,KAAKigG,cAAc39F,SAAW,GAAC,wBAEhE,WACI,OAAOmH,QAAQC,QAAQ1J,KAAKqB,QAChC,GAAC,qBAED,SAAQ44C,GACJ,OAAO,IAAI6lD,EAAO9/F,KAAMi6C,EAC5B,GAAC,6BAED,SAAgB80B,GAA+B,WAC3C,OAAO9D,GAAkB8D,GAAa5D,MAAK,SAACptC,GACzB,MAAXA,EAAGphC,OACC+xE,GAAW3wC,EAAGphC,QAAU,EAAK0E,SAC7B6mE,GAAOjC,mBAAmB,oCAAqC,mBAAoB8I,EAAYpyE,aAE5FohC,EAAGphC,MAGd,IAAM6N,EAAY,EAAKy1F,cAAcC,WAAWx+F,GAAU49C,GAA+BvhB,KACzF,OAAOuhB,GAA+BvhB,EAAIvzB,EAC9C,GACJ,GAAC,yBAEK,SAAYY,4JACP++D,EAAcnqE,KAAKigG,cAAcC,WAAWlrC,GAAY5pD,MAAU,kDAC5E,4BAEK,SAAegP,EAAyBtD,EAA8CrP,gJAEtE,gBAAM04F,GAAAA,aAA+B/lF,EAAQtD,EAAOrP,GAAO,SAAC0F,GAO1E,OANqB,MAAjB,EAAK8sC,UACLiuB,GAAOd,WAAW,8CAA+CvB,EAAOnnB,OAAO8oB,sBAAuB,CAClGC,UAAW,cACXhgE,MAAO0F,IAGR,EAAK8sC,SAASsjC,YAAYpwE,EACrC,IAAE,OARa,OAATizF,EAAY,EAAH,uBAURj2B,EAAcnqE,KAAKigG,cAAcC,WAAWC,GAAAA,KAAuBC,EAAUhmF,OAAQtD,EAAOspF,EAAU34F,UAAQ,kDACxH,qBAED,SAAQ0xF,EAA0BzwB,EAAei2B,GAM7C,GALwB,oBAAbj2B,GAA4Bi2B,IACnCA,EAAmBj2B,EACnBA,EAAU,CAAC,GAGXi2B,GAAiD,oBAAtBA,EAC3B,MAAM,IAAIziG,MAAM,oBAKpB,OAFKwsE,IAAWA,EAAU,CAAC,GLqE7B,SAAkBm1B,EAAiC1E,EAA0BzwB,EAA0Bi2B,GAEzG,IAEI,GAAIjwB,GAAWmvB,EAAQx8F,WAAa2rF,GAAe6Q,EAAQ17F,YACvD,MAAM,IAAIjG,MAAM,+BAIpB,GAAIohG,GAAYO,GAAU,CACtB,IAAM/D,EAAW+D,EAAQ/D,SAGzB,GAFaiB,GAAOmD,aAAapE,EAAS4B,OAAQ,KAAM5B,EAASD,QAAQsE,WAAWrE,EAAS9tB,MAAQ8uB,IAE5F34F,YAAc07F,EAAQ17F,WAC3B,MAAM,IAAIjG,MAAM,sBAI1B,MAAO+E,GACL,OAAOwI,QAAQilF,OAAOztF,GAIF,oBAAbynE,GAA4Bi2B,IACnCA,EAAmBj2B,EACnBA,EAAU,CAAC,GAEVA,IAAWA,EAAU,CAAC,GAE3B,IAAMvmE,EAAyBsmE,EAASo1B,EAAQ17F,YAC1Ck8F,EAAgBrB,GAAY7D,GAE9B9Q,EAAsB,KACtBrc,EAAe,KACf6tB,EAAiB,KACrB,GAAIyD,GAAYO,GAAU,CACtB,IAAMpC,EAAcoC,EAAQ/D,SAC5BzR,EAAU5f,EAASszB,GAAkBN,EAAYC,OAAQD,EAAY5B,QAAU,OAC/E7tB,EAAOyvB,EAAYzvB,MAAQ8uB,GAC3BjB,EAAS4B,EAAY5B,QAAU,KAGnC,IAAIwG,EAAS33B,EAAQ23B,OAChBA,IAAUA,EAAS,aAGxB,IAAIr+F,EAAmB,KAEnBA,EADA0mE,EAAQ1mE,KACDymE,EAASC,EAAQ1mE,MAEjBwR,GAAY,IAIvB,IAAI9C,EAAiB,KACrB,GAAIg4D,EAAQh4D,IAER,GAAkB,MADlBA,EAAK+3D,EAASC,EAAQh4D,KACflV,OAAiB,MAAM,IAAIU,MAAM,mBAEzCwU,EAAK8C,GAAY,IAIpB,IAAI8sF,EAAyB,KAC7B,GAAI53B,EAAQ63B,MAER,GAA0B,MAD1BD,EAAa73B,EAASC,EAAQ63B,OACf/kG,OAAiB,MAAM,IAAIU,MAAM,qBAEhDokG,EAAa9sF,GAAY,IAI7B,IAAIuU,EAAK,GAAK,GAAKtd,EAAI,EAAGqe,EAAI,EAU9B,OATI4/C,EAAQg3B,SACJh3B,EAAQg3B,OAAO33E,IAAKA,EAAI2gD,EAAQg3B,OAAO33E,GACvC2gD,EAAQg3B,OAAOj1F,IAAKA,EAAIi+D,EAAQg3B,OAAOj1F,GACvCi+D,EAAQg3B,OAAO52E,IAAKA,EAAI4/C,EAAQg3B,OAAO52E,IAMxC42E,KAAAA,OAAcrB,EAAer8F,EAAM+lB,EAAGtd,EAAGqe,EAAG,GAAI61E,GAAkBxzB,MAAK,SAAChiE,GAI3E,IAAMq3F,GAHNr3F,EAAMs/D,EAASt/D,IAGQhN,MAAM,EAAG,IAC1BskG,EAAYt3F,EAAIhN,MAAM,GAAI,IAG1ByhG,EAAcz0F,EAAIhN,MAAM,GAAI,IAG5BwV,EAAU,IAAI+rF,KAAAA,SAAYhtF,GAE1BN,EAAaq4D,EADJ,IAAIi1B,KAAAA,gBAAAA,KAAwB8C,EAAY7uF,GACpB1B,QAAQ9N,IAGrC06B,EAAMn7B,GAAUQ,EAAO,CAACu+F,EAAWrwF,KAGnC9S,EAA+B,CACjC+D,QAASw8F,EAAQx8F,QAAQsH,UAAU,GAAGpH,cACtCuvE,GAAIusB,GAAOiD,GACXztF,QAAS,EACTsvB,OAAQ,CACJu+D,OAAQ,cACRC,aAAc,CACVjwF,GAAIy4D,EAAQz4D,GAAI/H,UAAU,IAE9ByH,WAAY+4D,EAAQ/4D,GAAYzH,UAAU,GAC1Ci2F,IAAK,SACLgC,UAAW,CACP5+F,KAAMmnE,EAAQnnE,GAAM2G,UAAU,GAC9BlC,EAAGshB,EACH84E,MAAO,GACP/3E,EAAGA,EACHre,EAAGA,GAEPoyB,IAAKA,EAAIl0B,UAAU,KAK3B,GAAI0/E,EAAS,CACT,IAAM0V,EAAavqF,GAAY,IACzBwqF,EAAkB,IAAIN,KAAAA,SAAYK,GAElCD,EAAqBr1B,EADJ,IAAIi1B,KAAAA,gBAAAA,KAAwBE,EAAaI,GACb/tF,QAAQo4E,IACrD3kB,EAAM,IAAID,KACVzb,EAAa0b,EAAIo9B,iBAAmB,IACvB/D,GAAKr5B,EAAIq9B,cAAgB,EAAG,GAAK,IACjChE,GAAKr5B,EAAIs9B,aAAc,GAAK,IAC5BjE,GAAKr5B,EAAIu9B,cAAe,GAAK,IAC7BlE,GAAKr5B,EAAIw9B,gBAAiB,GAAK,IAC/BnE,GAAKr5B,EAAIy9B,gBAAiB,GAAK,MAElD7jG,EAAK,YAAc,CACf+iG,OAAQA,EACRe,aAAe,QAAUp5C,EAAY,KAAO1qD,EAAK+D,QACjD28F,gBAAiB70B,EAAQ40B,GAAYp1F,UAAU,GAC/Cm1F,mBAAoB30B,EAAQ20B,GAAoBn1F,UAAU,GAC1DqjE,KAAMA,EACN6tB,OAAQA,EACRhnF,QAAS,OAIjB,OAAO8B,KAAKC,UAAUtX,EAC1B,GACJ,CKzNe+jG,CAAgBrhG,KAAMm5F,EAAUzwB,EAASi2B,EACpD,IAGA,2BAGA,SAAoBj2B,GAChB,IAAI2f,EAAsB70E,GAAY,IAEjCk1D,IAAWA,EAAU,CAAC,GAEvBA,EAAQx7B,eACRm7C,EAAU5f,EAASY,EAAa3nE,GAAUQ,EAAO,CAAEmmF,EAAS3f,EAAQx7B,gBAAkB,EAAG,MAG7F,IAAM4sD,EAAWgC,GAAkBzT,EAAS3f,EAAQmxB,QACpD,OAAOiG,EAAO5B,aAAapE,EAAUpxB,EAAQsD,KAAMtD,EAAQmxB,OAC/D,GAAC,+BAED,SAAyBrrC,EAAc2qC,EAA0BwF,GAC7D,OAAOa,GAAkBhxC,EAAM2qC,EAAUwF,GAAkBxzB,MAAK,SAAC0yB,GAC7D,OAAO,IAAIiC,EAAOjC,EACtB,GACJ,GAAC,mCAED,SAA6BrvC,EAAc2qC,GACvC,OAAO,IAAI2G,EAAOF,GAAsBpxC,EAAM2qC,GAClD,GAAC,0BAED,SAAoBW,EAAkB9tB,EAAe+tB,GAEjD,OADK/tB,IAAQA,EAAO8uB,IACb,IAAIgF,EAAO/E,GAAOmD,aAAapE,EAAU,KAAMC,GAAUoE,WAAWnyB,GAC/E,KAAC,EAnKe,CAAQ6Q,IAsKtB,SAAUykB,GAAcl2F,EAAyBZ,GACnD,OAAOyiF,GAAej4B,GAAY5pD,GAAUZ,EAChD,CAEM,SAAU+2F,GAAgBnnF,EAAyBtD,EAA8CrP,EAA4B+C,GAC/H,OAAOyiF,GAAekT,GAAAA,KAAuB/lF,EAAQtD,EAAOrP,GAAQ+C,EACxE,CCzMO,IAAMg3F,GAAc,6CCAdC,GAAW,qECCXC,GAAc,SCGrBx5B,GAAS,IAAIrC,ECJI,kBDuBvB,SAAS87B,GAAmBr8C,GACxB,IAAM0sB,EAAO,SAAStb,EAAgBgS,GACnB,MAAXA,IAAmBA,EAAU,CAAC,GAClC,IAAMk5B,EAA2B,GAEjC,GAAIlrC,EAAUmrC,gBAAqC,MAAnBn5B,EAAQo5B,OACpC,IACIF,EAAanmG,KAAK,IAAIi7D,EAAUmrC,eAAev8C,EAASojB,EAAQo5B,QACpD,CAAd,MAAMhoF,GAAQ,CAGpB,GAAI48C,EAAUqrC,mBAA2C,MAAtBr5B,EAAQs5B,UACvC,IACIJ,EAAanmG,KAAK,IAAIi7D,EAAUqrC,kBAAkBz8C,EAASojB,EAAQs5B,WACvD,CAAd,MAAMloF,GAAQ,CAGpB,GAAI48C,EAAUurC,iBAAuC,MAApBv5B,EAAQw5B,QACrC,IACIN,EAAanmG,KAAK,IAAIi7D,EAAUurC,gBAAgB38C,EAASojB,EAAQw5B,SACrD,CAAd,MAAMpoF,GAAQ,CAGpB,GAAI48C,EAAUyrC,gBAAqC,MAAnBz5B,EAAQ05B,OAAgB,CAMpD,IACI,IAAMnoD,EAAW,IAAIyc,EAAUyrC,eAAe78C,EAASojB,EAAQ05B,QAC3DnoD,EAASqL,UAAoD,IAHxD,CAAE,SAAU,UAAW,UAAW,WAGd78C,QAAQwxC,EAASqL,QAAQn4C,OAClDy0F,EAAanmG,KAAKw+C,EAEV,CAAd,MAAMngC,GAAQ,EAGpB,GAAI48C,EAAU2rC,oBAA6C,MAAvB35B,EAAQ45B,WACxC,IACIV,EAAanmG,KAAK,IAAIi7D,EAAU2rC,mBAAmB/8C,GACvC,CAAd,MAAMxrC,GAAQ,CAGpB,GAAI48C,EAAU6rC,cAAiC,MAAjB75B,EAAQ85B,KAClC,IACI,IACMvoD,EAAW,IAAIyc,EAAU6rC,aAAaj9C,EAASojB,EAAQ85B,MACzDvoD,EAASqL,UAAoD,IAFpD,CAAE,WAEc78C,QAAQwxC,EAASqL,QAAQn4C,OAClDy0F,EAAanmG,KAAKw+C,EAEV,CAAd,MAAMngC,GAAQ,CAGpB,GAA4B,IAAxB8nF,EAAapmG,OAAgB,OAAO,KAExC,GAAIk7D,EAAU+rC,iBAAkB,CAC5B,IAAIC,EAAS,EAMb,OALsB,MAAlBh6B,EAAQg6B,OACRA,EAASh6B,EAAQg6B,OACE,cAAZp9C,IACPo9C,EAAS,GAEN,IAAIhsC,EAAU+rC,iBAAiBb,EAAcc,GAGxD,OAAOd,EAAa,EACxB,EAMA,OAJA5vB,EAAK2wB,UAAY,SAASr9C,GACtB,OAAOq8C,GAAmBr8C,EAC9B,EAEO0sB,CACX,CAEA,SAAS4wB,GAAmB1lD,EAAaoI,GACrC,IAAM0sB,EAAO,SAAStb,EAAgBgS,GAClC,OAAIhS,EAAUC,gBACH,IAAID,EAAUC,gBAAgBzZ,EAAKoI,GAGvC,IACX,EAMA,OAJA0sB,EAAK2wB,UAAY,SAASr9C,GACtB,OAAOs9C,GAAmB1lD,EAAKoI,EACnC,EAEO0sB,CACX,CAEA,IAAMzkB,GAAqB,CACvBtjD,QAAS,EACT44F,WAAY,6CACZ11F,KAAM,YACN21F,iBAAkBnB,GAAmB,cAGnC70C,GAAmB,CACrB7iD,QAAS,EACT44F,WAAY,6CACZ11F,KAAM,UACN21F,iBAAkBnB,GAAmB,YAGnCoB,GAAyB,CAC3B94F,QAAS,GACTkD,KAAM,gBACN21F,iBAAkBF,GAAmB,sCAAuC,kBAI1EI,GAAwC,CAC1CC,YAAa,CAAEh5F,QAAS,EAAGkD,KAAM,eAEjCogD,UAAWA,GACXV,QAASU,GAET21C,OAAQ,CAAEj5F,QAAS,EAAGkD,KAAM,UAE5B2/C,QAASA,GACTq2C,QAASr2C,GAETC,QAAS,CACL9iD,QAAS,EACT44F,WAAY,6CACZ11F,KAAM,UACN21F,iBAAkBnB,GAAmB,YAGzCyB,MAAO,CACHn5F,QAAS,GACTkD,KAAM,QACN21F,iBAAkBnB,GAAmB,UAGzC30C,OAAQ,CACJ/iD,QAAS,EACT44F,WAAY,6CACZ11F,KAAM,SACN21F,iBAAkBnB,GAAmB,WAGzC0B,SAAU,CAAEp5F,QAAS,QAASkD,KAAM,YAEpC8/C,QAAS,CACLhjD,QAAS,SACTkD,KAAM,UACN21F,iBAAkBnB,GAAmB,YAKzC2B,QAAS,CACLr5F,QAAS,GACTkD,KAAM,UACN21F,iBAAkBF,GAAmB,mCAAqC,YAG9EW,cAAe,CAAEt5F,QAAS,GAAIkD,KAAM,iBAEpC41F,cAAeA,GACfS,eAAgBT,GAEhBU,aAAc,CACVx5F,QAAS,EACTkD,KAAM,eACN21F,iBAAkBF,GAAmB,qCAAuC,iBAGhFc,KAAM,CAAEz5F,QAAS,IAAKkD,KAAM,QAE5Bw2F,MAAO,CACH15F,QAAS,IACTkD,KAAM,QACN21F,iBAAkBnB,GAAmB,UAEzCiC,SAAU,CAAE35F,QAAS,MAAOkD,KAAM,YAElC02F,SAAU,CACN55F,QAAS,GACTkD,KAAM,WACN21F,iBAAkBnB,GAAmB,aAEzC,iBAAkB,CAAE13F,QAAS,GAAIkD,KAAM,kBACvC,kBAAmB,CAAElD,QAAS,IAAKkD,KAAM,mBAEzC22F,SAAU,CAAE75F,QAAS,MAAOkD,KAAM,YAClC,mBAAoB,CAAElD,QAAS,OAAQkD,KAAM,oBAC7C,kBAAmB,CAAElD,QAAS,OAAQkD,KAAM,mBAE5C42F,IAAK,CAAE95F,QAAS,GAAIkD,KAAM,OAC1B62F,KAAM,CAAE/5F,QAAS,GAAIkD,KAAM,SASzB,SAAUkwE,GAAW/3B,GAEvB,GAAe,MAAXA,EAAmB,OAAO,KAE9B,GAAwB,kBAAbA,EAAuB,CAC9B,IAAK,IAAMn4C,KAAQ61F,GAAU,CACzB,IAAMiB,EAAWjB,GAAS71F,GAC1B,GAAI82F,EAASh6F,UAAYq7C,EACrB,MAAO,CACHn4C,KAAM82F,EAAS92F,KACflD,QAASg6F,EAASh6F,QAClB44F,WAAaoB,EAASpB,YAAc,KACpCC,iBAAmBmB,EAASnB,kBAAoB,MAK5D,MAAO,CACH74F,QAASq7C,EACTn4C,KAAM,WAId,GAAwB,kBAAbm4C,EAAuB,CAC9B,IAAM2+C,EAAWjB,GAAS19C,GAC1B,OAAgB,MAAZ2+C,EAA2B,KACxB,CACH92F,KAAM82F,EAAS92F,KACflD,QAASg6F,EAASh6F,QAClB44F,WAAYoB,EAASpB,WACrBC,iBAAmBmB,EAASnB,kBAAoB,MAIxD,IAAMmB,EAAYjB,GAAS19C,EAAQn4C,MAGnC,IAAK82F,EAID,MAHgC,kBAArB3+C,EAAQr7C,SACfi+D,GAAOjC,mBAAmB,0BAA2B,UAAW3gB,GAE7DA,EAIa,IAApBA,EAAQr7C,SAAiBq7C,EAAQr7C,UAAYg6F,EAASh6F,SACtDi+D,GAAOjC,mBAAmB,2BAA4B,UAAW3gB,GAKrE,IAhQqB79C,EAgQjBy8F,EAAuC5+C,EAAQw9C,kBAAoB,KAUvE,OATuB,MAAnBoB,GAA2BD,EAASnB,mBAEhCoB,GAnQaz8F,EAkQGw8F,EAASnB,mBAjQY,oBAArBr7F,EAAMk7F,UAkQJsB,EAASnB,iBAAiBH,UAAUr9C,GAEpC2+C,EAASnB,kBAK5B,CACH31F,KAAMm4C,EAAQn4C,KACdlD,QAASg6F,EAASh6F,QAClB44F,WAAav9C,EAAQu9C,YAAcoB,EAASpB,YAAc,KAC1DC,iBAAkBoB,EAE1B,CE/RM,SAAUlnG,GAAOmnG,GACnBA,EAAWC,KAAKD,GAEhB,IADA,IAAM7mG,EAAO,GACJ/B,EAAI,EAAGA,EAAI4oG,EAAS3oG,OAAQD,IACjC+B,EAAK7B,KAAK0oG,EAASl7F,WAAW1N,IAElC,OAAOktE,EAASnrE,EACpB,CAEM,SAAUpC,GAAOoC,GACnBA,EAAOmrE,EAASnrE,GAEhB,IADA,IAAI6mG,EAAW,GACN5oG,EAAI,EAAGA,EAAI+B,EAAK9B,OAAQD,IAC7B4oG,GAAYr7F,OAAOC,aAAazL,EAAK/B,IAEzC,OAAO8oG,KAAKF,EAChB,iBCaA,SAASG,GAAK9lG,EAAmB83E,GAChB,MAATA,IAAiBA,EAAQ,GAC7B,IAAMx3E,EAAqB,GAErBkY,EAAUlY,EAAOkY,QAavB,OAXiB,SAAXutF,EAAqB1lG,EAAiBy3E,GACxCt/D,EAAQpS,KAAK/F,GAAK,SAAU6c,GACpB46D,EAAQ,GAAKl7E,MAAMC,QAAQqgB,GAC3B6oF,EAAS7oF,EAAK46D,EAAQ,GAEvBx3E,EAAOrD,KAAKigB,EAEnB,GACJ,CAEA6oF,CAAS/lG,EAAO83E,GACTx3E,CACX,CAmGM,SAAU0lG,GAAwB3+F,GACvC,OALK,SAAuBxJ,GAC5B,IAAIshC,EAAM,EACV,OAAO,kBAAMthC,EAAEshC,IAAM,CACtB,CAEQ8mE,CAzFF,SAA4B5+F,GACjC,IAAI83B,EAAM,EACV,SAAS+mE,IAAQ,OAAQ7+F,EAAM83B,MAAU,EAAK93B,EAAM83B,IAAQ,CAM5D,IAHA,IAAIgnE,EAAeD,IACf3mF,EAAQ,EACRiP,EAAM,CAAC,EAAG,GACLzxB,EAAI,EAAGA,EAAIopG,EAAcppG,IACjCyxB,EAAIvxB,KAAKsiB,GAAS2mF,KAInB,IAAIE,EAAOF,IACPG,EAAclnE,EAClBA,GAAOinE,EAEP,IAAIE,EAAa,EACbC,EAAc,EAClB,SAASC,IAOR,OANkB,GAAdF,IAGHC,EAAeA,GAAe,EAAKl/F,EAAM83B,KACzCmnE,EAAa,GAENC,KAAiBD,EAAc,CACxC,CAUA,IARA,IACMG,EAAOhoF,KAAAA,IAAAA,EADH,IAEJwtB,EAAOw6D,IAAS,EAChBC,EAAOz6D,GAAQ,EACf06D,EAAOF,EAAO,EAGhB5K,EAAW,EACN9+F,EAAI,EAAGA,EARN,GAQaA,IAAK8+F,EAAYA,GAAY,EAAK2K,IAKzD,IAHA,IAAII,EAAU,GACV9nD,EAAM,EACN+nD,EAAQJ,IACC,CAIZ,IAHA,IAAIx9F,EAAQwV,KAAK8a,QAASsiE,EAAW/8C,EAAM,GAAKv/B,EAAS,GAAKsnF,GAC1DrpG,EAAQ,EACRC,EAAM0oG,EACH1oG,EAAMD,EAAQ,GAAG,CACvB,IAAIomB,EAAOpmB,EAAQC,IAAS,EACxBwL,EAAQulB,EAAI5K,GACfnmB,EAAMmmB,EAENpmB,EAAQomB,EAGV,GAAa,GAATpmB,EAAY,MAChBopG,EAAQ3pG,KAAKO,GAGb,IAFA,IAAI4C,EAAI0+C,EAAMrgC,KAAK8a,MAAMstE,EAAQr4E,EAAIhxB,GAAW+hB,GAC5Cc,EAAIy+B,EAAMrgC,KAAK8a,MAAMstE,EAAQr4E,EAAIhxB,EAAM,GAAK+hB,GAAS,EAC9B,KAAlBnf,EAAIigB,GAAK4rB,IACjB4vD,EAAYA,GAAY,EAAK8K,EAAOH,IACpCpmG,EAAKA,GAAK,EAAKumG,EACftmF,EAAKA,GAAK,EAAKsmF,EAAO,EAEvB,KAAOvmG,GAAKigB,EAAIqmF,GACf7K,EAAYA,EAAW5vD,EAAU4vD,GAAY,EAAM8K,IAAS,EAAMH,IAClEpmG,EAAKA,GAAK,EAAK6rC,EACf5rB,GAAMA,EAAI4rB,IAAS,EAAKA,EAAO,EAEhC6S,EAAM1+C,EACNymG,EAAQ,EAAIxmF,EAAIjgB,EAEjB,IAAInC,EAASkoG,EAAe,EAC5B,OAAOS,EAAQ59F,KAAI,SAAAigB,GAClB,OAAQA,EAAIhrB,GACX,KAAK,EAAG,OAAOA,EAAS,OAAYoJ,EAAMg/F,MAAkB,GAAOh/F,EAAMg/F,MAAkB,EAAKh/F,EAAMg/F,MACtG,KAAK,EAAG,OAAOpoG,EAAS,KAAUoJ,EAAMg/F,MAAkB,EAAKh/F,EAAMg/F,MACrE,KAAK,EAAG,OAAOpoG,EAASoJ,EAAMg/F,KAC9B,QAAS,OAAOp9E,EAAI,EAEtB,GACD,CASqB69E,CAAkBz/F,GACvC,CAGM,SAAU6tE,GAAOn4E,GACtB,OAAY,EAAJA,GAAWA,GAAK,EAAMA,GAAK,CACpC,CAQA,SAASgqG,GAAe9+F,EAAW/B,GAElC,IADA,IAAIrI,EAAIjB,MAAMqL,GACLlL,EAAI,EAAGksB,GAAK,EAAGlsB,EAAIkL,EAAGlL,IAAKc,EAAEd,GAAKksB,GAAK,EAAI/iB,IACpD,OAAOrI,CACR,CAEA,SAASmpG,GAAY/+F,EAAW/B,GAE/B,IADA,IAAIrI,EAAIjB,MAAMqL,GACLlL,EAAI,EAAGksB,EAAI,EAAGlsB,EAAIkL,EAAGlL,IAAKc,EAAEd,GAAKksB,GAAKisD,GAAOhvE,KACtD,OAAOrI,CACR,CAEM,SAAUopG,GAAkB/gG,EAAgBk0C,GAK9C,IAJA,IAAIv8C,EAAIkpG,GAAe7gG,IAAQA,GAC3B+B,EAAI/B,IACJghG,EAAKH,GAAe9+F,EAAG/B,GACvBihG,EAtBR,SAAqBl/F,EAAW/B,GAE/B,IADA,IAAIrI,EAAIjB,MAAMqL,GACLlL,EAAI,EAAGA,EAAIkL,EAAGlL,IAAKc,EAAEd,GAAK,EAAImJ,IACvC,OAAOrI,CACR,CAkBaupG,CAAYn/F,EAAG/B,GACfnJ,EAAI,EAAGA,EAAIkL,EAAGlL,IACnB,IAAK,IAAIkD,EAAI,EAAGA,EAAIknG,EAAGpqG,GAAIkD,IACvBpC,EAAEZ,KAAKiqG,EAAGnqG,GAAKkD,GAGvB,OAAOm6C,EAASv8C,EAAEmL,KAAI,SAAAigB,GAAC,OAAImxB,EAAOnxB,EAAE,IAAIprB,CAC5C,CA8BA,SAASwpG,GAAgBp/F,EAAWkX,EAAWjZ,GAE3C,IADA,IAAI6kB,EAAInuB,MAAMqL,GAAGV,UAAKxG,GAAWiI,KAAI,iBAAM,EAAE,IACpCjM,EAAI,EAAGA,EAAIoiB,EAAGpiB,IACnBiqG,GAAY/+F,EAAG/B,GAAMsS,SAAQ,SAACyQ,EAAGhpB,GAAC,OAAK8qB,EAAE9qB,GAAGhD,KAAKgsB,EAAE,IAEvD,OAAO8B,CACX,CAGA,SAASu8E,GAAkBnoF,EAAWjZ,GACrC,IAAIqhG,EAAK,EAAIrhG,IACTshG,EAAKthG,IACLihG,EAtBC,SAAqCjhG,GAE1C,IADA,IAAIrI,EAAI,KACK,CACZ,IAAId,EAAImJ,IACR,GAAS,GAALnJ,EAAQ,MACZc,EAAEZ,KAAKF,GAER,OAAOc,CACR,CAcU4pG,CAA2BvhG,GAEpC,OAAO4/F,GADCuB,GAAgBF,EAAGnqG,OAAQ,EAAEmiB,EAAGjZ,GAC1B8C,KAAI,SAACnL,EAAGd,GACpB,IAAMksB,EAAIprB,EAAE,GAAI6pG,EAAK7pG,EAAEF,MAAM,GAG9B,OAAOf,MAAMuqG,EAAGpqG,IAAIwK,UAAKxG,GAAWiI,KAAI,SAACwiB,EAAGvrB,GAC3C,IAAI0nG,EAAO1nG,EAAIunG,EACf,MAAO,CAACv+E,EAAIhpB,EAAIsnG,EAAIG,EAAG1+F,KAAI,SAAAkgB,GAAC,OAAIA,EAAIy+E,CAAI,IACzC,GACD,IACD,CAEA,SAASC,GAAuBzoF,EAAWjZ,GAG1C,OADQmhG,GADA,EAAInhG,IACe,EAAEiZ,EAAGjZ,GACvB8C,KAAI,SAAAnL,GAAC,MAAI,CAACA,EAAE,GAAIA,EAAEF,MAAM,GAAG,GACrC,CCvNA,IAAMsO,GCEK+5F,GAAwBxnG,GAAO,q6cDIpCqpG,GAAQ,IAAIjtF,IAAIqsF,GAAkBh7F,KAClC67F,GAAU,IAAIltF,IAAIqsF,GAAkBh7F,KACpC87F,GDyJA,SAA0B7hG,GAE/B,IADA,IAAI/C,EAAM,KACG,CACZ,IAAIgc,EAAIjZ,IACR,GAAS,GAALiZ,EAAQ,MACZhc,EAAIlG,KAAKqqG,GAAkBnoF,EAAGjZ,IAE/B,OAAa,CACZ,IAAIiZ,EAAIjZ,IAAS,EACjB,GAAIiZ,EAAI,EAAG,MACXhc,EAAIlG,KAAK2qG,GAAuBzoF,EAAGjZ,IAEpC,OAxJD,SAA6FlG,GAEzF,IADA,IAAMM,EAAqC,CAAC,EACnCvD,EAAI,EAAGA,EAAIiD,EAAMhD,OAAQD,IAAK,CACnC,IAAMkM,EAAQjJ,EAAMjD,GACpBuD,EAAO2I,EAAM,IAAMA,EAAM,GAE7B,OAAO3I,CACX,CAiJQ0nG,CAAmClC,GAAK3iG,GAChD,CCtKe8kG,CAAgBh8F,IACzBi8F,GD6NA,SAA0BhiG,GAC/B,IAAIiiG,EAASlB,GAAkB/gG,GAAMwU,MAAK,SAACta,EAAGigB,GAAC,OAAKjgB,EAAIigB,CAAC,IACzD,OACA,SAAS+nF,IACR,IAAIC,EAAW,GACf,OAAa,CACZ,IAAIjvF,EAAO6tF,GAAkB/gG,EAAMiiG,GACnC,GAAmB,GAAf/uF,EAAKpc,OAAa,MACtBqrG,EAASprG,KAAK,CAACuD,IAAK,IAAIoa,IAAIxB,GAAOu4B,KAAMy2D,MAExCC,EAAS3tF,MAAK,SAACta,EAAGigB,GAAC,OAAKA,EAAE7f,IAAI4W,KAAOhX,EAAEI,IAAI4W,IAAI,IAChD,IAAIkzE,EAAOpkF,IAOX,MAAO,CAACmiG,SAAAA,EAAUC,MANNhe,EAAO,EAMMie,QAJJ,GADrBje,EAAQA,EAAO,EAAG,IAKake,KAFZ,IADnBle,IAAS,GAG4BiG,MADjB,GAARjG,EAEd,CAjBO8d,EAkBR,CCjPmBK,CAAgBx8F,IAOnC,SAASy8F,GAAW/5F,GAChB,OAAO0jE,GAAiB1jE,EAC5B,CAEA,SAASg6F,GAAYC,GACjB,OAAOA,EAAIj/C,QAAO,SAAAk/C,GAAE,OAAU,OAANA,CAAY,GACxC,CAEM,SAAUC,GAAyBn6F,GAAY,IACnB,EADmB,WAClCA,EAAKwkB,MAAM,MAAI,IAAjC,IAAK,EAAL,qBAAmC,KAA1B41E,EAAK,QACTH,EAAMF,GAAWK,GACrB,IACC,IAAK,IAAIhsG,EAAI6rG,EAAIjyF,YAdD,IAc2B,EAAG5Z,GAAK,EAAGA,IACrD,GAfe,KAeX6rG,EAAI7rG,GACP,MAAM,IAAIW,MAAM,oCAGlB,GAAIkrG,EAAI5rG,QAAU,GAAK4rG,EAAI57D,OAAM,SAAA67D,GAAE,OAAIA,EAAK,GAAI,KApBpC,KAoByCD,EAAI,IApB7C,KAoB8DA,EAAI,GAC7E,MAAM,IAAIlrG,MAAM,2BAEhB,MAAOyI,GACR,MAAM,IAAIzI,MAAM,kBAAD,OAAmBqrG,EAAK,cAAM5iG,EAAIyG,WAElD,+BACD,OAAO+B,CACR,CAEM,SAAUq6F,GAAcr6F,GAC7B,OAAOm6F,GAGR,SAAmBn6F,EAAcs6F,GAChC,IAAItsG,EAAQ+rG,GAAW/5F,GAAMq7C,UACzBltD,EAAS,GACb,KAAOH,EAAMK,QAAQ,CACpB,IAAIksG,EAAQC,GAAuBxsG,GACnC,GAAIusG,EACHpsG,EAAOG,KAAI,MAAXH,GAAM,OAASmsG,EAAaC,SAD7B,CAIA,IAAIL,EAAKlsG,EAAMggF,MACf,GAAIkrB,GAAMhtF,IAAIguF,GACb/rG,EAAOG,KAAK4rG,QAGb,IAAIf,GAAQjtF,IAAIguF,GAAhB,CAGA,IAAID,EAAMb,GAAOc,GACjB,IAAID,EAIJ,MAAM,IAAIlrG,MAAM,2BAAD,OAA4BmrG,EAAGvpG,SAAS,IAAI8D,gBAH1DtG,EAAOG,KAAI,MAAXH,GAAM,OAAS8rG,MAKjB,OAAOE,IAGK58F,EAHwB5B,OAAO8+F,cAAa,MAApB9+F,OAAwBxN,GAIlDoP,EAAEwL,UAAU,SADvB,IAAaxL,CAFb,CA5BiCwL,CAAU/I,EAAMg6F,IACjD,CAiCA,SAASQ,GAAuBP,EAAoBS,SAE/CH,EACAI,EAFA33D,EAAOu2D,GAGPqB,EAAQ,GACRpqE,EAAMypE,EAAI5rG,OACVqsG,IAAOA,EAAMrsG,OAAS,GAC1B,IAD6B,iBAE5B,IAAI6rG,EAAKD,IAAMzpE,GAEf,GADAwS,EAA6C,QAAtC,EAAAA,EAAK02D,SAASz8C,MAAK,SAAA3iC,GAAC,OAAIA,EAAEzoB,IAAIqa,IAAIguF,EAAG,WAAC,eAAEl3D,MAC1CA,EAAM,cACX,GAAIA,EAAK62D,KACRc,EAAQT,OACF,GAAIl3D,EAAK4+C,OACXsY,IAAOS,EAAO,cAEnBC,EAAMtsG,KAAK4rG,GACPl3D,EAAK42D,OACRgB,EAAMtsG,KAAK,OACPkiC,EAAM,GAAqB,OAAhBypE,EAAIzpE,EAAM,IAAcA,KAEpCwS,EAAK22D,QACRY,EAAQK,EAAM5rG,QACI,GAAdg0C,EAAK22D,OAAYY,EAAMniG,OAAO,EAAG,GACjCsiG,GAAOA,EAAMpsG,KAAI,MAAVosG,GAAK,OAAST,EAAIjrG,MAAMwhC,GAAK6qB,YACxC4+C,EAAI5rG,OAASmiC,EACb,EAnBKA,GAAK,kBAOQ,MAcpB,OAAO+pE,CACR,CErIA,IAAMx/B,GAAS,IAAIrC,EAAOhzD,IAIpBm1F,GAAQ,IAAItrG,WAAW,IAG7B,SAASurG,GAAe7yB,GACpB,GAAoB,IAAhBA,EAAK55E,OAAgB,MAAM,IAAIU,MAAM,qCACzC,OAAOk5E,CACX,CAEA,SAAS8yB,GAAa/6F,GAClB,IAAMtH,EAAQuqE,GAAYo3B,GAAcr6F,IAClCmqE,EAA2B,GAEjC,GAAoB,IAAhBnqE,EAAK3R,OAAgB,OAAO87E,EAGhC,IADA,IAAI6wB,EAAO,EACF5sG,EAAI,EAAGA,EAAIsK,EAAMrK,OAAQD,IAAK,CAIzB,KAHAsK,EAAMtK,KAIZ+7E,EAAM77E,KAAKwsG,GAAepiG,EAAM1J,MAAMgsG,EAAM5sG,KAC5C4sG,EAAO5sG,EAAI,GAKnB,GAAI4sG,GAAQtiG,EAAMrK,OAAU,MAAM,IAAIU,MAAM,qCAG5C,OADAo7E,EAAM77E,KAAKwsG,GAAepiG,EAAM1J,MAAMgsG,KAC/B7wB,CACX,CAMM,SAAU8wB,GAAYj7F,GACxB,IACI,OAAsC,IAA9B+6F,GAAa/6F,GAAM3R,MACd,CAAf,MAAOse,GAAQ,CACjB,OAAO,CACX,CAEM,SAAUuuF,GAASl7F,GAEA,kBAAVA,GACP+6D,GAAOjC,mBAAmB,iCAAkC,OAAQ94D,GAMxE,IAHA,IAAIrO,EAA8BkpG,GAE5B1wB,EAAQ4wB,GAAa/6F,GACpBmqE,EAAM97E,QACTsD,EAAS4C,GAAUQ,EAAO,CAACpD,EAAQ4C,GAAU41E,EAAM6D,UAGvD,OAAOhS,EAAQrqE,EACnB,CAEM,SAAUwpG,GAAUn7F,GACtB,OAAOg8D,EAAQjnE,EAAOgmG,GAAa/6F,GAAM3F,KAAI,SAAC4tE,GAE1C,GAAIA,EAAK55E,OAAS,GACd,MAAM,IAAIU,MAAM,sDAGpB,IAAM2J,EAAQ,IAAInJ,WAAW04E,EAAK55E,OAAS,GAG3C,OAFAqK,EAAM7G,IAAIo2E,EAAM,GAChBvvE,EAAM,GAAKA,EAAMrK,OAAS,EACnBqK,CAEX,MAAO,IACX,CAvEAmiG,GAAMjiG,KAAK,GCXJ,2SCQD,SAAgBwiG,GAAOC,EAAc9/B,iJA0BtB,OAzBF,MAAXA,IAAmBA,EAAU,CAAC,GAE5BpwB,EAAuB,CACzBnC,OAASuyB,EAAQvyB,QAAU,MAC3BsyD,QAAU//B,EAAQ+/B,SAAW,CAAC,EAC9BvlG,KAAOwlE,EAAQxlE,WAAQ3D,IAGI,IAA3BmpE,EAAQggC,iBACRpwD,EAAQnsB,KAAoB,OAC5BmsB,EAAQ8Y,MAAsB,WAC9B9Y,EAAQqwD,YAAkC,cAC1CrwD,EAAQswD,SAA4B,SACpCtwD,EAAQuF,SAAW,UAGK,MAAxB6qB,EAAQmgC,gBACFv7D,EAAOo7B,EAAQmgC,cACZ18E,OAAQmsB,EAAQnsB,KAAqBmhB,EAAKnhB,MAC/CmhB,EAAK8jB,QAAS9Y,EAAQ8Y,MAAuB9jB,EAAK8jB,OAClD9jB,EAAKq7D,cAAerwD,EAAQqwD,YAAmCr7D,EAAKq7D,aACpEr7D,EAAKs7D,WAAYtwD,EAAQswD,SAA6Bt7D,EAAKs7D,UAC3Dt7D,EAAKuQ,WAAYvF,EAAQuF,SAAWvQ,EAAKuQ,WAChD,SAEsBirD,MAAMN,EAAMlwD,GAAQ,OAC9B,OADPywD,EAAW,EAAH,eACKA,EAASC,cAAa,QAWxC,OAXK9lG,EAAO,EAAH,KAEJulG,EAAwC,CAAC,EAC3CM,EAASN,QAAQzxF,QACjB+xF,EAASN,QAAQzxF,SAAQ,SAACvP,EAAO0B,GAC7Bs/F,EAAQt/F,EAAI5H,eAAiBkG,CACjC,IAE8BshG,EAASN,QAAU7wF,OAASZ,SAAQ,SAAC7N,GAC/Ds/F,EAAQt/F,EAAI5H,eAAiBwnG,EAASN,QAAQ3gG,IAAIqB,EACtD,IACH,kBAEM,CACHs/F,QAASA,EACTQ,WAAYF,EAASG,OACrBC,cAAeJ,EAASK,WACxBlmG,KAAMulE,EAAS,IAAI/rE,WAAWwG,MACjC,uVC5CCglE,GAAS,IAAIrC,EFTI,aEavB,SAASwjC,GAAQC,GACb,OAAO,IAAI7/F,SAAQ,SAACC,GAChBwnF,WAAWxnF,EAAS4/F,EACxB,GACJ,CAEA,SAASC,GAAQ9hG,EAAYyN,GACzB,GAAa,MAATzN,EAAiB,OAAO,KAE5B,GAAsB,kBAAXA,EAAuB,OAAOA,EAEzC,GAAI6gE,EAAY7gE,GAAQ,CACpB,GAAIyN,IAAgC,SAAvBA,EAAKyc,MAAM,KAAK,IAA+C,qBAA9Bzc,EAAKyc,MAAM,KAAK,GAAG0kD,QAC7D,IACI,OAAOzF,GAAanpE,EACP,CAAf,MAAOqS,GAAQ,CAErB,OAAOqvD,EAAQ1hE,GAGnB,OAAOA,CACX,CA8DM,SAAU+hG,GAA2BC,EAAqCvmG,EAAmBwmG,GAG/F,IAAMC,EAAuC,kBAAhBF,GAAwD,MAA5BA,EAAWG,cAAyBH,EAAWG,cAAe,GACvH1hC,GAAO2hC,eAAgBF,EAAe,GAAMA,EAAe,IAAO,EAC9D,oCAAqC,2BAA4BA,GAErE,IAAMG,EAA4C,kBAAhBL,EAA4BA,EAAWK,iBAAkB,KACrFC,EAAgD,kBAAhBN,GAAwE,kBAArCA,EAAWM,qBAAsCN,EAAWM,qBAAsB,IAC3J7hC,GAAO2hC,eAAgBE,EAAuB,GAAMA,EAAuB,IAAO,EAC9E,4CAA6C,kCAAmCA,GAEpF,IAAMC,EAA4C,kBAAhBP,KAA+BA,EAAWO,iBAEtEvB,EAAqC,CAAC,EAExCvrD,EAAc,KAGZwrB,EAAmB,CACrBvyB,OAAQ,OAGR8zD,GAAW,EAEXC,EAAU,KAEd,GAA2B,kBAAhBT,EACPvsD,EAAMusD,OAEH,GAA2B,kBAAhBA,EAA0B,CAWxC,GAVkB,MAAdA,GAAwC,MAAlBA,EAAWvsD,KACjCgrB,GAAOjC,mBAAmB,cAAe,iBAAkBwjC,GAG/DvsD,EAAMusD,EAAWvsD,IAEkB,kBAAxBusD,EAAWS,SAAyBT,EAAWS,QAAU,IAChEA,EAAUT,EAAWS,SAGrBT,EAAWhB,QACX,IAAK,IAAMt/F,KAAOsgG,EAAWhB,QACzBA,EAAQt/F,EAAI5H,eAAiB,CAAE4H,IAAKA,EAAK1B,MAAOqB,OAAO2gG,EAAWhB,QAAQt/F,KACtE,CAAC,gBAAiB,qBAAqBV,QAAQU,EAAI5H,gBAAkB,IACrE0oG,GAAW,GAOvB,GAFAvhC,EAAQyhC,YAAcV,EAAWU,UAEV,MAAnBV,EAAWW,MAAuC,MAAvBX,EAAWtQ,SAAkB,CAC5B,WAAxBj8C,EAAIv0C,UAAU,EAAG,KAA8D,IAA3C8gG,EAAWY,6BAC/CniC,GAAOd,WACH,mDACAvB,EAAOnnB,OAAO2oB,iBACd,CAAEC,SAAU,MAAOpqB,IAAKA,EAAKktD,KAAMX,EAAWW,KAAMjR,SAAU,eAItE,IAAMmR,EAAgBb,EAAWW,KAAO,IAAMX,EAAWtQ,SACzDsP,EAAuB,cAAI,CACvBt/F,IAAK,gBACL1B,MAAO,SAAW8iG,GAAan6B,GAAYk6B,KAIlB,MAA7Bb,EAAWf,iBACXhgC,EAAQggC,iBAAmBe,EAAWf,gBAGX,MAA3Be,EAAWZ,eACXngC,EAAQmgC,aAAev9B,GAAYm+B,EAAWZ,eAItD,IAzFephG,EAyFT+iG,EAAS,IAAI71B,OAAO,kCAAmC,KACvD81B,EAAcvtD,EAAOA,EAAI7zC,MAAMmhG,GAAS,KAC9C,GAAIC,EACA,IACI,IAAM1B,EAAW,CACbE,WAAY,IACZE,cAAe,KACfV,QAAS,CAAE,eAAiBgC,EAAU,IAAM,cAC5CvnG,KAAOunG,EAAU,GAAKC,GAAaD,EAAU,KAjG1ChjG,EAiGyDgjG,EAAU,GAhG3Er6B,GAAY3oE,EAAMP,QAAQ,yBAAyB,SAACkkE,EAAKxiE,GAC5D,OAAOE,OAAOC,aAAa1K,SAASuK,EAAM,IAC9C,OAiGY9J,EAAwBiqG,EAAS7lG,KAIrC,OAHIwmG,IACA5qG,EAAS4qG,EAAYX,EAAS7lG,KAAM6lG,IAEjCt/F,QAAQC,QAAoB5K,GAErC,MAAOgb,GACLouD,GAAOd,WAAW,4BAA6BvB,EAAOnnB,OAAOisD,aAAc,CACvEznG,KAAMqmG,GAAQkB,EAAU,GAAIA,EAAU,IACtC3wF,MAAOA,EACP8wF,YAAa,KACbC,cAAe,MACf3tD,IAAKA,IAKbh6C,IACAwlE,EAAQvyB,OAAS,OACjBuyB,EAAQxlE,KAAOA,EACgB,MAA3BulG,EAAQ,kBACRA,EAAQ,gBAAkB,CAAEt/F,IAAK,eAAgB1B,MAAO,6BAE3B,MAA7BghG,EAAQ,oBACRA,EAAQ,kBAAoB,CAAEt/F,IAAK,iBAAkB1B,MAAOqB,OAAO5F,EAAK1H,WAIhF,IAAMsvG,EAA2C,CAAC,EAClDzjG,OAAOuQ,KAAK6wF,GAASzxF,SAAQ,SAAC7N,GAC1B,IAAMygC,EAAS6+D,EAAQt/F,GACvB2hG,EAAYlhE,EAAOzgC,KAAOygC,EAAOniC,KACrC,IACAihE,EAAQ+/B,QAAUqC,EAElB,IAAMC,EAAkB,WACpB,IAAIC,EAAsB,KAuB1B,MAAO,CAAEC,QAtBuB,IAAIxhG,SAAQ,SAASC,EAASglF,GACtDwb,IACAc,EAAQ9Z,YAAW,WACF,MAAT8Z,IACJA,EAAQ,KAERtc,EAAOxmB,GAAO3B,UAAU,UAAWV,EAAOnnB,OAAOwsD,QAAS,CACtDN,YAAarB,GAAQ7gC,EAAQxlE,KAAM4nG,EAAY,iBAC/CD,cAAeniC,EAAQvyB,OACvB+zD,QAASA,EACThtD,IAAKA,KAEb,GAAGgtD,GAEX,IAQkBiB,OANH,WACE,MAATH,IACJI,aAAaJ,GACbA,EAAQ,KACZ,EAGJ,CAzBwB,GA2BlBK,EAAgB,mKAETC,EAAU,EAAC,YAAEA,EAAU3B,GAAY,iBAIzB,OAHXZ,EAA2B,KAAI,kBAGdR,GAAOrrD,EAAKwrB,GAAQ,OAA7B,GAARqgC,EAAW,EAAH,OAEJuC,EAAU3B,GAAY,oBACM,MAAxBZ,EAASE,YAA8C,MAAxBF,EAASE,WAAkB,iBAEV,GAA1CsC,EAAWxC,EAASN,QAAQ8C,UAAY,GACvB,QAAnB7iC,EAAQvyB,SAAoBo1D,EAASliG,MAAM,WAAU,iBACrB,OAAhC6zC,EAAM6rD,EAASN,QAAQ8C,SAAS,2DAIL,MAAxBxC,EAASE,WAAkB,iBAEf,GAAfuC,GAAW,GACX1B,EAAkB,CAAF,gBACL,OADK,UACCA,EAAiBwB,EAASpuD,GAAI,QAA/CsuD,EAAW,EAAH,iBAGRA,EAAU,CAAF,gBAWR,OAVIC,EAAQ,EAENC,EAAa3C,EAASN,QAAQ,eAEhCgD,EADuB,kBAAhBC,GAA4BA,EAAWriG,MAAM,iBACrB,IAAvBhL,SAASqtG,GAET3B,EAAuB1rG,SAASyK,OAAOmU,KAAK0uF,SAAW1uF,KAAKrG,IAAI,EAAG00F,KAG/E,UACMjC,GAAQoC,GAAM,iGAQhB,OADhB1C,EAAiB,KAAOA,YAEpBgC,EAAeI,SACfjjC,GAAOd,WAAW,mBAAoBvB,EAAOnnB,OAAOisD,aAAc,CAC9DC,YAAarB,GAAQ7gC,EAAQxlE,KAAM4nG,EAAY,iBAC/CD,cAAeniC,EAAQvyB,OACvBy1D,YAAa,EAAF,GACX1uD,IAAKA,KAEZ,QAkBJ,GAdGh6C,EAAO6lG,EAAS7lG,KAEhB+mG,GAAoC,MAAxBlB,EAASE,WACrB/lG,EAAO,MACC8mG,IAAqBjB,EAASE,WAAa,KAAOF,EAASE,YAAc,OACjF8B,EAAeI,SACfjjC,GAAOd,WAAW,eAAgBvB,EAAOnnB,OAAOisD,aAAc,CAC1DzB,OAAQH,EAASE,WACjBR,QAASM,EAASN,QAClBvlG,KAAMqmG,GAAQrmG,EAAQ6lG,EAASN,QAAWM,EAASN,QAAQ,gBAAiB,MAC5EmC,YAAarB,GAAQ7gC,EAAQxlE,KAAM4nG,EAAY,iBAC/CD,cAAeniC,EAAQvyB,OACvB+G,IAAKA,MAITwsD,EAAa,CAAF,gBAEQ,OAFR,oBAEcA,EAAYxmG,EAAM6lG,GAAS,QACxB,OADlBjqG,EAAS,EAAH,KACZisG,EAAeI,SAAS,kBACjBrsG,GAAM,wCAIT,KAAM+sG,eAAiBP,EAAU3B,GAAY,iBAC1B,GAAf6B,GAAW,GACX1B,EAAkB,CAAF,gBACL,OADK,UACCA,EAAiBwB,EAASpuD,GAAI,QAA/CsuD,EAAW,EAAH,iBAGRA,EAAU,CAAF,gBAGR,OAFMtB,EAAUH,EAAuB1rG,SAASyK,OAAOmU,KAAK0uF,SAAW1uF,KAAKrG,IAAI,EAAG00F,KACnF,UACMjC,GAAQa,GAAQ,+CAK9Ba,EAAeI,SACfjjC,GAAOd,WAAW,4BAA6BvB,EAAOnnB,OAAOisD,aAAc,CACvEznG,KAAMqmG,GAAQrmG,EAAQ6lG,EAASN,QAAWM,EAASN,QAAQ,gBAAiB,MAC5E3uF,MAAO,EAAF,GACL8wF,YAAarB,GAAQ7gC,EAAQxlE,KAAM4nG,EAAY,iBAC/CD,cAAeniC,EAAQvyB,OACvB+G,IAAKA,IACN,QAOX,OAHA6tD,EAAeI,SAGf,kBACoBjoG,GAAK,QA1GiBooG,IAAS,gDA6GhDpjC,GAAOd,WAAW,kBAAmBvB,EAAOnnB,OAAOisD,aAAc,CACpEC,YAAarB,GAAQ7gC,EAAQxlE,KAAM4nG,EAAY,iBAC/CD,cAAeniC,EAAQvyB,OACvB+G,IAAKA,KACP,kEAnHgB,GAsHtB,OAAOzzC,QAAQqiG,KAAK,CAAEf,EAAeE,QAASI,GAClD,CAEM,SAAUU,GAAUtC,EAAqCj7C,EAAek7C,GAC1E,IAuBIxmG,EAAmB,KACvB,GAAY,MAARsrD,EAAc,CACdtrD,EAAOktE,GAAY5hB,GAGnB,IAAMw9C,EAAkD,kBAAhBvC,EAA6B,CAAEvsD,IAAKusD,GAAen+B,GAAYm+B,GACvG,GAAIuC,EAAQvD,QAC6G,IAA7FphG,OAAOuQ,KAAKo0F,EAAQvD,SAAStgD,QAAO,SAAC5gD,GAAC,MAA0B,iBAApBA,EAAEhG,aAAgC,IAAG/F,SAErGwwG,EAAQvD,QAAUn9B,GAAY0gC,EAAQvD,SACtCuD,EAAQvD,QAAQ,gBAAkB,yBAGtCuD,EAAQvD,QAAU,CAAE,eAAgB,oBAExCgB,EAAauC,EAGjB,OAAOxC,GAAgBC,EAAYvmG,GAzCb,SAACuE,EAAmBshG,GACtC,IAAIjqG,EAAc,KAClB,GAAa,MAAT2I,EACA,IACI3I,EAAS6V,KAAKI,MAAM67D,GAAanpE,IACnC,MAAOqS,GACLouD,GAAOd,WAAW,eAAgBvB,EAAOnnB,OAAOisD,aAAc,CAC1DznG,KAAMuE,EACNqS,MAAOA,IASnB,OAJI4vF,IACA5qG,EAAS4qG,EAAY5qG,EAAQiqG,IAG1BjqG,CACX,GAwBJ,CAEM,SAAUmtG,GAAQj6B,EAAwBtJ,GAO5C,OANKA,IAAWA,EAAU,CAAC,GAEN,OADrBA,EAAU4C,GAAY5C,IACV3wC,QAAiB2wC,EAAQ3wC,MAAQ,GACtB,MAAnB2wC,EAAQwjC,UAAmBxjC,EAAQwjC,QAAU,KACzB,MAApBxjC,EAAQyjC,WAAoBzjC,EAAQyjC,SAAW,KAE5C,IAAI1iG,SAAQ,SAASC,EAASglF,GAEjC,IAAIsc,EAAsB,KACtBha,GAAgB,EAGdma,EAAS,WACX,OAAIna,IACJA,GAAO,EACHga,GAASI,aAAaJ,IACnB,EACX,EAEItiC,EAAQwhC,UACRc,EAAQ9Z,YAAW,WACXia,KAAYzc,EAAO,IAAIxyF,MAAM,WACrC,GAAGwsE,EAAQwhC,UAGf,IAAMkC,EAAa1jC,EAAQ0jC,WAEvBd,EAAU,GACd,SAASvc,IACL,OAAO/c,IAAO7G,MAAK,SAASrsE,GAGxB,QAAeS,IAAXT,EACIqsG,KAAYzhG,EAAQ5K,QAErB,GAAI4pE,EAAQ2jC,SACf3jC,EAAQ2jC,SAAStb,KAAK,OAAQhC,QAE3B,GAAIrmB,EAAQ4jC,UACf5jC,EAAQ4jC,UAAUvb,KAAK,QAAShC,QAG7B,IAAKiC,EAAM,CAEd,KADAsa,EACcc,EAEV,YADIjB,KAAYzc,EAAO,IAAIxyF,MAAM,yBAIrC,IAAIguG,EAAUxhC,EAAQyjC,SAAW9tG,SAASyK,OAAOmU,KAAK0uF,SAAW1uF,KAAKrG,IAAI,EAAG00F,KACzEpB,EAAUxhC,EAAQ3wC,QAASmyE,EAAUxhC,EAAQ3wC,OAC7CmyE,EAAUxhC,EAAQwjC,UAAWhC,EAAUxhC,EAAQwjC,SAEnDhb,WAAWnC,EAAOmb,GAGtB,OAAO,IACX,IAAG,SAASpwF,GACJqxF,KAAYzc,EAAO50E,EAC3B,GACJ,CACAi1E,EACJ,GACJ,4BC5dal8E,GAAU,kBCYjBq1D,GAAS,IAAIrC,EAAOhzD,IAiBb05F,GAAS,WAGlB,6BACIvsG,KAAKwsG,QAAUxsG,KAAKysG,mBACxB,CAucC,OAvcA,yCAED,WAAiB,WACPD,EAA6B,CAAC,EAE9BnrG,EAAUrB,KAAKqB,QAAQ4jD,KAAKjlD,MAC5B67C,EAAY77C,KAAK67C,UAAUoJ,KAAKjlD,MAChC88E,EAAW98E,KAAK88E,SAAS73B,KAAKjlD,MAC9B1C,EAAO0C,KAAK1C,KAAK2nD,KAAKjlD,MACtByB,EAAOzB,KAAKyB,KAAKwjD,KAAKjlD,MACtB/B,EAAM+B,KAAK/B,IAAIgnD,KAAKjlD,MACpBkc,EAASlc,KAAKkc,OAAO+oC,KAAKjlD,MAC1BkV,EAAOlV,KAAKkV,KAAK+vC,KAAKjlD,MAmI5B,OA/HAwsG,EAAQz9B,YAAc,CAClBttE,KAAMA,EAENyT,KAAMA,EACN2+C,WAAY04C,EAAUG,UAAU1sG,KAAK6zD,WAAW5O,KAAKjlD,MAAO,MAE5D+vF,UAAWwc,EAAUG,UAAUjrG,EAAM,MACrCqmD,YAAaykD,EAAUG,UAAUxwF,EAAQ,MACzCywF,iBAAkBJ,EAAUG,UAAUxwF,EAAQ,MAE9CuzE,cAAe8c,EAAUG,UAAUxwF,EAAQ,MAE3Cvf,KAAM0E,EAINygD,SAAUyqD,EAAUG,UAAU7wD,GAC9BmG,qBAAsBuqD,EAAUG,UAAU7wD,GAC1CkG,aAAcwqD,EAAUG,UAAU7wD,GAElCuG,SAAUvG,EACV0I,GAAIgoD,EAAUG,UAAUrrG,EAAS,MACjCoG,MAAOo0C,EACPl8C,MAAOuc,EACP5e,KAAMA,EAENmN,EAAG8hG,EAAUG,UAAU1sG,KAAK4sG,SAC5BliG,EAAG6hG,EAAUG,UAAU1sG,KAAK4sG,SAC5BvwG,EAAGkwG,EAAUG,UAAUxwF,GAEvB2wF,QAASN,EAAUG,UAAUrrG,EAAS,MAEtCf,IAAKisG,EAAUG,UAAUpvG,IAG7BkvG,EAAQM,mBAAqB,CACzBnwG,KAAM4vG,EAAUG,UAAUrrG,GAC1B1B,MAAO4sG,EAAUG,UAAUxwF,GAC3BkmC,SAAUmqD,EAAUG,UAAU7wD,GAC9BiG,SAAUyqD,EAAUG,UAAU7wD,GAC9BmG,qBAAsBuqD,EAAUG,UAAU7wD,GAC1CkG,aAAcwqD,EAAUG,UAAU7wD,GAClC0I,GAAIgoD,EAAUG,UAAUrrG,GACxBoG,MAAO8kG,EAAUG,UAAU7wD,GAC3Bv+C,KAAMivG,EAAUG,WA9CD,SAACrwG,GAAa,OAAO,EAAKiB,KAAKjB,GAAG,EAAO,IA+CxD6Y,KAAMq3F,EAAUG,UAAUxwF,GAC1B23C,WAAY04C,EAAUG,UAAU1sG,KAAK6zD,WAAW5O,KAAKjlD,MAAO,OAGhEwsG,EAAQO,WAAa,CACjBJ,iBAAkBzwF,EAClB4rC,YAAa5rC,EACb+zE,gBAAiBxuF,EACjBJ,QAASA,EACT45E,OAAQsxB,EAAUS,QAAQvrG,GAC1BnE,KAAMA,EACN2vG,SAAU/wF,EACV6zE,UAAWtuF,GAGf+qG,EAAQ9c,QAAU,CACdnrC,GAAIgoD,EAAUG,UAAU1sG,KAAKqB,QAAS,MACtC1E,KAAM4vG,EAAUG,UAAU1sG,KAAKqB,QAAS,MACxCixF,gBAAiBia,EAAUG,UAAUrrG,EAAS,MAC9CsrG,iBAAkBzwF,EAElBvP,KAAM4/F,EAAUG,UAAUzuG,GAC1BivG,QAASrxD,EACTsxD,UAAWZ,EAAUG,UAAUpvG,GAC/ByyF,UAAWtuF,EACXwuF,gBAAiBxuF,EACjBkuF,KAAM4c,EAAUS,QAAQhtG,KAAK+sG,WAAW9nD,KAAKjlD,OAC7C8nD,YAAa5rC,EACbuzE,cAAe8c,EAAUG,UAAUxwF,EAAQ,MAC3CkxF,kBAAmBvxD,EACnBwxD,kBAAmBd,EAAUG,UAAU7wD,GACvCqtD,OAAQqD,EAAUG,UAAUxwF,GAC5BhH,KAAMA,GAGVs3F,EAAQh8F,MAAQ,CACZ/O,KAAM8qG,EAAUG,UAAUjrG,GAC1B6rG,WAAY7rG,EACZya,OAAQA,EAER8rC,UAAW9rC,EACXvc,MAAO4sG,EAAUG,UAAUzuG,GAC3BwwD,WAAYzuD,KAAKyuD,WAAWxJ,KAAKjlD,MAEjCoiD,SAAUvG,EACVqxD,QAASrxD,EAET0xD,MAAOhB,EAAUG,UAAUrrG,GAC3ButD,UAAWtxD,EAEXkwG,aAAcjB,EAAUG,UAAUH,EAAUS,QAAQvrG,IAEpDqhD,cAAeypD,EAAUG,UAAU7wD,IAGvC2wD,EAAQiB,sBAAwBniC,GAAYkhC,EAAQh8F,OACpDg8F,EAAQiB,sBAAsBD,aAAejB,EAAUG,UAAUH,EAAUS,QAAQhtG,KAAK0tG,oBAAoBzoD,KAAKjlD,QAEjHwsG,EAAQrkD,OAAS,CACbkrC,UAAWkZ,EAAUG,UAAU5vB,OAAUv9E,GACzC4zF,QAASoZ,EAAUG,UAAU5vB,OAAUv9E,GACvCwwF,UAAWwc,EAAUG,UAAUjrG,OAAMlC,GACrC8B,QAASkrG,EAAUG,UAAUrrG,OAAS9B,GACtC07E,OAAQsxB,EAAUG,UAAU1sG,KAAKi7E,OAAOh2B,KAAKjlD,WAAOT,IAGxDitG,EAAQmB,UAAY,CAChB7lD,YAAaykD,EAAUG,UAAUxwF,GACjC6zE,UAAWwc,EAAUG,UAAUjrG,GAC/BkrG,iBAAkBzwF,EAElB0xF,QAASrB,EAAUG,UAAU1sG,KAAKyrE,QAAQxmB,KAAKjlD,OAE/CqB,QAASA,EACT/D,KAAMivG,EAAUsB,aAAavwG,EAAM,MAEnC29E,OAAQsxB,EAAUS,QAAQvrG,GAE1BwuF,gBAAiBxuF,EACjBwrG,SAAU/wF,GAGPswF,CACX,GAAC,wBAED,SAAW34C,GACP,OAAOw5B,GAAcx5B,GAAc,GACvC,GAGA,oBACA,SAAO33C,GACH,MAAe,OAAXA,EAA0B,EACvBo/B,GAAU3+C,KAAKuf,GAAQsD,UAClC,GAAC,kBAED,SAAKtD,GACD,MAAe,OAAXA,GAA6B,MAAVA,EAAyB,EACzCo/B,GAAU3+C,KAAKuf,GAAQsD,UAClC,GAEA,uBACA,SAAU/X,GACN,OAAO6zC,GAAU3+C,KAAK8K,EAC1B,GAEA,qBACA,SAAQA,GACJ,GAAsB,mBAAXA,EAAwB,OAAOA,EAC1C,GAAsB,kBAAXA,EAAqB,CAE5B,GAAc,UADdA,EAAQA,EAAMlG,eACU,OAAO,EAC/B,GAAc,UAAVkG,EAAqB,OAAO,EAEpC,MAAM,IAAIvL,MAAM,qBAAuBuL,EAC3C,GAAC,iBAED,SAAIA,EAAY6mC,GACZ,MAAsB,kBAAX7mC,IACF6mC,GAAoC,OAA1B7mC,EAAMkB,UAAU,EAAG,KAAelB,EAAQ,KAAOA,GAC5DlB,EAAYkB,IACNA,EAAMlG,cAGb2mE,GAAOjC,mBAAmB,eAAgB,QAASx+D,EAC9D,GAAC,kBAED,SAAKA,EAAY6mC,GACb,IAAMxvC,EAASkB,KAAK/B,IAAIwJ,EAAO6mC,GAC/B,GAAKxvC,EAAOtD,OAAS,IAAO,EACxB,MAAM,IAAIU,MAAM,8BAAgCuL,GAEpD,OAAO3I,CACX,GAGA,qBACA,SAAQ2I,GACJ,OAAOinE,GAAWjnE,EACtB,GAAC,yBAED,SAAYA,GACR,IAAKlB,EAAYkB,EAAO,IAAO,OAAO,KACtC,IAAMpG,EAAUqtE,GAAWrF,EAAa5hE,EAAO,KAC/C,OAAQpG,IAAYmgG,GAAe,KAAMngG,CAC7C,GAAC,6BAED,SAAgBoG,GACZ,OAAOqnE,GAAmBrnE,EAC9B,GAEA,sBACA,SAASq1E,GACL,GAAgB,MAAZA,EAAoB,MAAO,SAE/B,GAAiB,aAAbA,EAA2B,MAAO,MAEtC,OAAQA,GACJ,IAAK,WAAY,MAAO,MACxB,IAAK,SAAU,IAAK,UAAW,IAAK,OAAQ,IAAK,YAC7C,OAAOA,EAGf,GAAyB,kBAAdA,GAA0Bv2E,EAAYu2E,GAC7C,OAAOtT,EAA0BsT,GAGrC,MAAM,IAAI5gF,MAAM,mBACpB,GAEA,kBACA,SAAKuL,EAAY6mC,GACb,IAAMxvC,EAASkB,KAAK/B,IAAIwJ,EAAO6mC,GAC/B,OAA8B,KAA1B86B,EAActqE,GACPopE,GAAOjC,mBAAmB,eAAgB,QAASx+D,GAEvD3I,CACX,GAEA,wBACA,SAAW2I,GACP,GAAa,MAATA,EAAiB,OAAO,KAE5B,IAAMpL,EAAIi/C,GAAU3+C,KAAK8K,GAEzB,IACI,OAAOpL,EAAEmjB,UACI,CAAf,MAAO1F,GAAQ,CAElB,OAAO,IACV,GAAC,qBAED,SAAQrS,GACJ,IAAKlB,EAAYkB,GACb,MAAM,IAAIvL,MAAM,mBAEpB,OAAOytE,EAAWliE,EAAO,GAC7B,GAAC,oBAED,SAAOA,EAAYytE,GACK,MAAhBztE,EAAMqmG,QAAiC,MAAfrmG,EAAM8lG,QAC9B9lG,EAAM8lG,MAAQ9lG,EAAMqmG,QAGxB,IAAMr/C,EAAmC,MAArBhnD,EAAMsmG,YAAuBtmG,EAAMsmG,YAAatmG,EAAMgnD,WACpE3vD,EAASytG,EAAUxd,MAAM7Z,EAAQztE,GAEvC,OADA3I,EAAOivG,YAA8B,MAAdt/C,EAAsB,KAAMnT,GAAU3+C,KAAK8xD,GAC3D3vD,CACX,GAAC,mBAED,SAAM2I,GACF,OAAOzH,KAAKguG,OAAOvmG,EAAOzH,KAAKwsG,QAAQh8F,MAC3C,GAAC,mCAED,SAAsB/I,GAClB,OAAOzH,KAAKguG,OAAOvmG,EAAOzH,KAAKwsG,QAAQiB,sBAC3C,GAEA,gCACA,SAAmBhmG,GACf,OAAO8kG,EAAUxd,MAAM/uF,KAAKwsG,QAAQM,mBAAoBrlG,EAC5D,GAAC,iCAED,SAAoBsnE,GAGO,MAAnBA,EAAY9sB,KAAuC,MAAxB8sB,EAAY3sB,WACvC2sB,EAAY3sB,SAAW2sB,EAAY9sB,KAKnC8sB,EAAYxqB,IAAMjJ,GAAU3+C,KAAKoyE,EAAYxqB,IAAIllC,WACjD0vD,EAAYxqB,GAAK,8CAII,MAArBwqB,EAAY5zE,OAAqC,MAApB4zE,EAAYzxE,OACzCyxE,EAAYzxE,KAAOyxE,EAAY5zE,OAIb,MAAlB4zE,EAAYxqB,IAAqC,MAAvBwqB,EAAY89B,UACtC99B,EAAY89B,QAAU7sG,KAAKsyF,gBAAgBvjB,IAGrB,IAArBA,EAAY75D,MAAmC,IAArB65D,EAAY75D,MAAwC,MAA1B65D,EAAYlb,aACjEkb,EAAYlb,WAAa,IAG7B,IAAM/0D,EAA8BytG,EAAUxd,MAAM/uF,KAAKwsG,QAAQz9B,YAAaA,GAE9E,GAA2B,MAAvBA,EAAY9kE,QAAiB,CAC7B,IAAIA,EAAU8kE,EAAY9kE,QAEtB1D,EAAY0D,KACZA,EAAUqxC,GAAU3+C,KAAKsN,GAASuV,YAGtC1gB,EAAOmL,QAAUA,MAEd,CACH,IAAIA,EAAU8kE,EAAYrtB,UAGX,MAAXz3C,GAA+B,MAAZnL,EAAOzC,IAC1B4N,EAAU8kE,EAAY9kE,SAGtB1D,EAAY0D,KACZA,EAAUqxC,GAAU3+C,KAAKsN,GAASuV,YAGd,kBAAbvV,GAAqC,MAAZnL,EAAOzC,KACvC4N,GAAWnL,EAAOzC,EAAI,IAAM,GACd,IAAK4N,EAAU,GAC7BA,EAAU5L,SAAS4L,IAGC,kBAAbA,IAAyBA,EAAU,GAE9CnL,EAAOmL,QAAUA,EAQrB,OAJInL,EAAOixF,WAAoD,MAAvCjxF,EAAOixF,UAAU7oF,QAAQ,KAAM,MACnDpI,EAAOixF,UAAY,MAGhBjxF,CACX,GAAC,yBAED,SAAY2I,GACR,OAAOwmG,GAAiBxmG,EAC5B,GAAC,wBAED,SAAWA,GACP,OAAO8kG,EAAUxd,MAAM/uF,KAAKwsG,QAAQO,WAAYtlG,EACpD,GAAC,qBAED,SAAQA,GACJ,IAAM3I,EAA6BytG,EAAUxd,MAAM/uF,KAAKwsG,QAAQ9c,QAASjoF,GAGzE,GAAmB,MAAf3I,EAAO6N,KACP,GAAI7N,EAAO6N,KAAKnR,QAAU,EAAG,CAEzB,IAAMiM,EAAQ6zC,GAAU3+C,KAAKmC,EAAO6N,MAAM6S,WAC5B,IAAV/X,GAAyB,IAAVA,GAEM,MAAjB3I,EAAOoqG,QAAmBpqG,EAAOoqG,SAAWzhG,GAC5CygE,GAAOjC,mBAAmB,kCAAmC,QAAS,CAAEt5D,KAAM7N,EAAO6N,KAAMu8F,OAAQpqG,EAAOoqG,SAE9GpqG,EAAOoqG,OAASzhG,SACT3I,EAAO6N,MAEdu7D,GAAOjC,mBAAmB,0BAA2B,aAAcnnE,EAAO6N,WAEhD,KAAvB7N,EAAO6N,KAAKnR,QAEnB0sE,GAAOjC,mBAAmB,oBAAqB,aAAcnnE,EAAO6N,MAQ5E,OAJqB,MAAjB7N,EAAOoqG,SACPpqG,EAAO6uD,WAAY,GAGhB7uD,CACX,GAAC,oBAED,SAAO2I,GAAU,WACb,OAAIrM,MAAMC,QAAQoM,GACPA,EAAMD,KAAI,SAACnL,GAAC,OAAK,EAAK4+E,OAAO5+E,EAAE,IAEtB,MAAToL,EACAzH,KAAKyB,KAAKgG,GAAO,GAGrB,IACX,GAAC,oBAED,SAAOA,GACH,OAAO8kG,EAAUxd,MAAM/uF,KAAKwsG,QAAQrkD,OAAQ1gD,EAChD,GAAC,uBAED,SAAUA,GACN,OAAO8kG,EAAUxd,MAAM/uF,KAAKwsG,QAAQmB,UAAWlmG,EACnD,IAAC,oBAED,SAAaytE,EAA0ClM,GACnD,IAAMlqE,EAAc,CAAC,EACrB,IAAK,IAAMqK,KAAO+rE,EACd,IACI,IAAMztE,EAAQytE,EAAO/rE,GAAK6/D,EAAO7/D,SACnB5J,IAAVkI,IAAuB3I,EAAOqK,GAAO1B,GAC3C,MAAOqS,GAGL,MAFAA,EAAMo0F,SAAW/kG,EACjB2Q,EAAMq0F,WAAanlC,EAAO7/D,GACpB2Q,EAGd,OAAOhb,CACX,GAEA,uBACA,SAAiBo2E,EAAoBk5B,GACjC,OAAQ,SAAS3mG,GACb,OAAa,MAATA,EAAwB2mG,EACrBl5B,EAAOztE,EAClB,CACJ,GAEA,0BACA,SAAoBytE,EAAoBm5B,GACpC,OAAQ,SAAS5mG,GACb,OAAKA,EACEytE,EAAOztE,GADO4mG,CAEzB,CACJ,GAEA,qBACA,SAAen5B,GACX,OAAQ,SAAS12E,GACb,IAAKpD,MAAMC,QAAQmD,GAAU,MAAM,IAAItC,MAAM,gBAE7C,IAAM4C,EAAc,GAMpB,OAJAN,EAAMwY,SAAQ,SAASvP,GACnB3I,EAAOrD,KAAKy5E,EAAOztE,GACvB,IAEO3I,CACX,CACJ,KAAC,EA5ciB,GAmdhB,SAAUwvG,GAAuB7mG,GACnC,OAAQA,GAA+C,oBAA/BA,EAAM8mG,mBAClC,CAEM,SAAUA,GAAoB9mG,GAChC,OAAQ6mG,GAAuB7mG,IAAUA,EAAM8mG,qBACnD,CAGA,IAAIC,IAAkB,EAChB,SAAUC,KACRD,KACJA,IAAkB,EAElB5kG,QAAQ8vC,IAAI,8BACZ9vC,QAAQ8vC,IAAI,8DACZ9vC,QAAQ8vC,IAAI,IACZ9vC,QAAQ8vC,IAAI,6EACZ9vC,QAAQ8vC,IAAI,sEACZ9vC,QAAQ8vC,IAAI,IACZ9vC,QAAQ8vC,IAAI,2EACZ9vC,QAAQ8vC,IAAI,0EACZ9vC,QAAQ8vC,IAAI,iFACZ9vC,QAAQ8vC,IAAI,IACZ9vC,QAAQ8vC,IAAI,sDACZ9vC,QAAQ8vC,IAAI,8BAChB,4SCnfMwuB,GAAS,IAAIrC,EAAOhzD,IAS1B,SAAS67F,GAAWxlD,GACf,OAAa,MAATA,EAAwB,QACC,KAAzBkgB,EAAclgB,IACdgf,GAAOjC,mBAAmB,gBAAiB,QAAS/c,GAEjDA,EAAM3nD,cAClB,CAEA,SAASotG,GAAgB1zB,GAGrB,IADAA,EAASA,EAAO9+E,QACT8+E,EAAOz/E,OAAS,GAAkC,MAA7By/E,EAAOA,EAAOz/E,OAAS,IAAcy/E,EAAOE,MAExE,OAAOF,EAAOzzE,KAAI,SAAC0hD,GACf,GAAI9tD,MAAMC,QAAQ6tD,GAAQ,CAGtB,IAAMsoB,EAAyC,CAAC,EAChDtoB,EAAMlyC,SAAQ,SAACkyC,GACXsoB,EAAOk9B,GAAWxlD,KAAU,CAChC,IAGA,IAAMy9C,EAASt/F,OAAOuQ,KAAK45D,GAG3B,OAFAm1B,EAAOztF,OAEAytF,EAAO14F,KAAK,KAGnB,OAAOygG,GAAWxlD,EAE1B,IAAGj7C,KAAK,IACZ,CAgBA,SAAS2iF,GAAYnU,GACjB,GAA0B,kBAAfA,EAAyB,CAGhC,GAAiC,KAA7BrT,EAFJqT,EAAYA,EAAUl7E,eAGlB,MAAO,MAAQk7E,EAGnB,IAAgC,IAA5BA,EAAUh0E,QAAQ,KAClB,OAAOg0E,MAGR,IAAIrhF,MAAMC,QAAQohF,GACrB,MAAO,YAAckyB,GAAgBlyB,GAElC,GAAIR,GAAU2yB,YAAYnyB,GAE7B,MADAvU,GAAOr+D,KAAK,mBACN,IAAI3N,MAAM,mBAEb,GAAIugF,GAAmC,kBAAfA,EAC3B,MAAO,WAAaA,EAAUp7E,SAAW,KAAO,IAAMstG,GAAgBlyB,EAAUxB,QAAU,IAG9F,MAAM,IAAI/+E,MAAM,mBAAqBugF,EACzC,CAKA,SAASoyB,KACL,OAAQ,IAAIprC,MAAQorC,SACxB,CAEA,SAASpD,GAAMnC,GACX,OAAO,IAAI7/F,SAAQ,SAACC,GAChBwnF,WAAWxnF,EAAS4/F,EACxB,GACJ,CAmBA,IAAMwF,GAAiB,CAAE,QAAS,UAAW,UAAW,QAE3CC,GAAK,WAQd,WAAYx9D,EAAazsC,EAAoBisF,IAAa,eACtDhmB,GAAe/qE,KAAM,MAAOuxC,GAC5Bw5B,GAAe/qE,KAAM,WAAY8E,GACjCimE,GAAe/qE,KAAM,OAAQ+wF,GAE7B/wF,KAAKgvG,kBAAoB,EACzBhvG,KAAKivG,WAAY,CACrB,CAsCC,OAtCA,2BAED,WACI,OAAQjvG,KAAKkV,MACT,IAAK,KACF,OAAOlV,KAAKyB,KACf,IAAK,SACF,OAAOzB,KAAKmoD,OAEnB,OAAOnoD,KAAKuxC,GAChB,GAAC,gBAED,WACI,OAAOvxC,KAAKuxC,IAAI5f,MAAM,KAAK,EAC/B,GAAC,gBAED,WACI,IAAM2lD,EAAQt3E,KAAKuxC,IAAI5f,MAAM,KAC7B,MAAiB,OAAb2lD,EAAM,GAAsB,KACzBA,EAAM,EACjB,GAAC,kBAED,WACI,IAAMA,EAAQt3E,KAAKuxC,IAAI5f,MAAM,KAC7B,GAAiB,WAAb2lD,EAAM,GAAmB,OAAO,KACpC,IAhHmBh6E,EAgHb+D,EAAUi2E,EAAM,GAEhB2D,EAjHG,MADU39E,EAkHcg6E,EAAM,IAjHjB,GAEnBh6E,EAAKq0B,MAAM,MAAMnqB,KAAI,SAAC0hD,GACzB,GAAc,KAAVA,EAAgB,MAAO,GAE3B,IAAMouB,EAAQpuB,EAAMv3B,MAAM,KAAKnqB,KAAI,SAAC0hD,GAChC,MAAmB,SAAVA,EAAoB,KAAMA,CACvC,IAEA,OAA0B,IAAjBouB,EAAM97E,OAAgB87E,EAAM,GAAIA,CAC7C,IAwGUnvB,EAAiB,CAAC,EAKxB,OAHI8yB,EAAOz/E,OAAS,IAAK2sD,EAAO8yB,OAASA,GACrC55E,GAAuB,MAAZA,IAAmB8mD,EAAO9mD,QAAUA,GAE5C8mD,CACX,GAAC,sBAED,WACI,OAAQnoD,KAAKuxC,IAAI9oC,QAAQ,MAAQ,GAAKqmG,GAAermG,QAAQzI,KAAKuxC,MAAQ,CAC9E,KAAC,EArDa,GA4FZ29D,GAAgD,CAClD,EAAO,CAAE31D,OAAQ,MAAQ41D,MAAO,EAAMC,KAAM,EAAM5tG,OAAQ,MAC1D,EAAO,CAAE+3C,OAAQ,MAAQ41D,MAAO,GAAMC,KAAM,GAAM5tG,OAAQ,OAC1D,EAAO,CAAE+3C,OAAQ,OAAQ41D,MAAO,GAAMC,KAAM,IAC5C,GAAO,CAAE71D,OAAQ,MAAQ81D,IAAK,OAC9B,GAAO,CAAE91D,OAAQ,MAAQ81D,IAAK,OAC9B,IAAO,CAAE91D,OAAQ,OAAQ81D,IAAK,QAGlC,SAASC,GAAW7nG,GAChB,OAAOkiE,EAAWruB,GAAU3+C,KAAK8K,GAAO2gE,cAAe,GAC3D,CAGA,SAASmnC,GAAajyG,GAClB,OAAOw7F,GAAO59F,OAAOgH,EAAO,CAAE5E,EAAM+rE,EAAav4B,GAAOA,GAAOxzC,IAAQ,EAAG,KAC9E,CAOA,IAAMkyG,GAAc,IAAI76B,OAAO,kBAAoB,KAC7C86B,GAAW,CACb,IAAI96B,OAAO,mBAAqB,KAChC,IAAIA,OAAO,gBAAiB,KAC5B66B,GACA,IAAI76B,OAAO,mCAAoC,MAGnD,SAAS+6B,GAAa5wG,EAAgB9C,GAClC,IACI,OAAO40E,GAAa++B,GAAY7wG,EAAQ9C,GAC5B,CAAd,MAAM8d,GAAQ,CAChB,OAAO,IACX,CAEA,SAAS61F,GAAY7wG,EAAgB9C,GACjC,GAAe,OAAX8C,EAAmB,OAAO,KAE9B,IAAMrC,EAAS6+C,GAAU3+C,KAAK0sE,EAAavqE,EAAQ9C,EAAOA,EAAQ,KAAKwjB,WACjEhkB,EAAS8/C,GAAU3+C,KAAK0sE,EAAavqE,EAAQrC,EAAQA,EAAS,KAAK+iB,WAEzE,OAAO6pD,EAAavqE,EAAQrC,EAAS,GAAIA,EAAS,GAAKjB,EAC3D,CAGA,SAASo0G,GAAYC,GASjB,OARIA,EAAKxmG,MAAM,qBACXwmG,EAAOA,EAAKlnG,UAAU,IACfknG,EAAKxmG,MAAM,eAClBwmG,EAAOA,EAAKlnG,UAAU,GAEtBu/D,GAAOjC,mBAAmB,0BAA2B,OAAQ4pC,GAG1D,gCAAP,OAAyCA,EAC7C,CAEA,SAASC,GAAOroG,GACZ,IAAM3I,EAAS2pE,EAAShhE,GACxB,GAAI3I,EAAOtD,OAAS,GAAM,MAAM,IAAIU,MAAM,+BAE1C,IAAM6zG,EAAS,IAAIrzG,WAAW,IAE9B,OADAqzG,EAAO/wG,IAAIF,EAAQ,GAAKA,EAAOtD,QACxBu0G,CACX,CAEA,SAASC,GAASvoG,GACd,GAAKA,EAAMjM,OAAS,KAAQ,EAAK,OAAOiM,EAExC,IAAM3I,EAAS,IAAIpC,WAA0C,GAA/BugB,KAAKS,KAAKjW,EAAMjM,OAAS,KAEvD,OADAsD,EAAOE,IAAIyI,GACJ3I,CACX,CAGA,SAASmxG,GAAYC,GAMjB,IALA,IAAMpxG,EAA4B,GAE9BqxG,EAAY,EAGP50G,EAAI,EAAGA,EAAI20G,EAAM10G,OAAQD,IAC9BuD,EAAOrD,KAAK,MACZ00G,GAAa,GAGjB,IAAK,IAAI50G,EAAI,EAAGA,EAAI20G,EAAM10G,OAAQD,IAAK,CACnC,IAAM+B,EAAOmrE,EAASynC,EAAM30G,IAG5BuD,EAAOvD,GAAKu0G,GAAOK,GAGnBrxG,EAAOrD,KAAKq0G,GAAOxyG,EAAK9B,SACxBsD,EAAOrD,KAAKu0G,GAAS1yG,IACrB6yG,GAAa,GAAmC,GAA9BlzF,KAAKS,KAAKpgB,EAAK9B,OAAS,IAG9C,OAAO+tE,EAAUzqE,EACrB,CAEO,IAAMsxG,GAAQ,WAYjB,WAAYn2D,EAAwB54C,EAAiB8L,EAAc6hF,IAAwB,eACvFjkB,GAAe/qE,KAAM,WAAYi6C,GACjC8wB,GAAe/qE,KAAM,OAAQmN,GAC7B49D,GAAe/qE,KAAM,UAAWi6C,EAASo2D,UAAUhvG,QAAQA,IAC3D0pE,GAAe/qE,KAAM,mBAAoBgvF,EAC7C,CAuVC,OAvVA,wCAED,WAAgB,WAgBZ,OAfKhvF,KAAKswG,mBAENtwG,KAAKswG,iBAAmBtwG,KAAKi6C,SAASr1C,KAAK,CACvC2/C,GAAIvkD,KAAKqB,QACT/D,KAAM,+EACP6tE,MAAK,SAACrsE,GACL,OAAOw8C,GAAU3+C,KAAKmC,GAAQgwB,GAAG,EACrC,IAAGytD,OAAM,SAACziE,GACN,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAOmoB,eAAkB,OAAO,EAG1D,MADA,EAAKypC,iBAAmB,KAClBx2F,CACV,KAGG9Z,KAAKswG,gBAChB,GAAC,oBAEK,SAAOv1B,EAAkB58B,6IAWvB,OAREpgB,EAAK,CACPwmB,GAAIvkD,KAAKqB,QACTitF,iBAAiB,EACjBhxF,KAAMisE,EAAU,CAAEwR,EAAUstB,GAASroG,KAAKmN,MAAQgxC,GAAc,QAIhE0gC,GAAa,EAAK,SACZ7+E,KAAKuwG,mBAAkB,kCAC7B1xB,GAAa,EAGb9gD,EAAGzgC,KAAOisE,EAAU,CAAE,aAAc0mC,GAAY,CAAE3H,GAAUtoG,KAAKmN,MAAO4wB,EAAGzgC,SAAW,OAIzE,OAJyE,mBAInE0C,KAAKi6C,SAASr1C,KAAKm5B,GAAG,QAMW,OAL/C0qC,EADD3pE,EAAS,EAAH,MACYtD,OAAS,KAAQ,GACnC0sE,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAOmoB,eAAgB,CACpEkI,YAAahxC,EAAIzgC,KAAMwB,IAG3B+/E,IAAc//E,EAAS6wG,GAAY7wG,EAAQ,IAAK,kBAC7CA,GAAM,qCAET,KAAM8J,OAASi9D,EAAOnnB,OAAOmoB,eAAc,0CAAW,MAAI,+EAGrE,yBAEK,SAAYkU,EAAkB58B,yIACjB,gBAAMn+C,KAAKwwG,OAAOz1B,EAAU58B,GAAW,OAA1C,GACE,OADRr/C,EAAS,EAAH,MACM,yCAAW6wG,GAAY7wG,EAAQ,IAAE,gCAC5C,MAAI,kDACd,yBAED,SAAY2xG,EAAkBC,GAC1B,IAAMC,EAAWzB,GAAUpmG,OAAO2nG,IAQlC,GANgB,MAAZE,GACAzoC,GAAOd,WAAW,0BAAD,OAA4BqpC,GAAa5qC,EAAOnnB,OAAO8oB,sBAAuB,CAC3FC,UAAW,cAAF,OAAiBgpC,EAAS,OAItB,QAAjBE,EAAStB,IACT,OAAOrvG,KAAKi6C,SAASo2D,UAAUhvG,QAAQqvG,GAG3C,IAAM7qG,EAAQ4iE,EAASioC,GAGvB,GAAsB,MAAlBC,EAASxB,MAAe,CACxB,IAAMA,EAAQuB,EAASrnG,MAAM,6CAC7B,GAAI8lG,EAAO,CACP,IAAM3zG,EAAS6C,SAAS8wG,EAAM,GAAI,IAClC,GAAIA,EAAM,GAAG3zG,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC3D,OAAO+zG,GAAartG,EAAO,CAAE,CAAEyuG,EAASxB,OAAU,KAAOA,EAAM,OAM3E,GAAqB,MAAjBwB,EAASvB,KAAc,CACvB,IAAMA,EAAOsB,EAASrnG,MAAM,yCAC5B,GAAI+lG,EAAM,CACN,IAAM5zG,EAAS6C,SAAS+wG,EAAK,GAAI,IACjC,GAAIA,EAAK,GAAG5zG,SAAoB,EAATA,GAAcA,GAAU,GAAKA,GAAU,GAC1D,OAAO+zG,GAAartG,EAAO,CAAE,CAAEyuG,EAASvB,MAAS,KAAOA,EAAK,OAMzE,GAAuB,MAAnBuB,EAASnvG,OAAgB,CACzB,IAAMhG,EAASqK,EAAM,GAGjBgN,EAAUhN,EAAM,GASpB,GARgB,IAAZgN,EACe,KAAXrX,GAA4B,KAAXA,IACjBqX,GAAW,GAGfA,GAAW,EAGXA,GAAW,GAAKhN,EAAMrK,SAAW,EAAIA,GAAUA,GAAU,GAAKA,GAAU,GAAI,CAC5E,IAAM+gB,EAAQq0F,KAAAA,QAAe/qG,EAAM1J,MAAM,IAEzC,OADAogB,EAAMrX,QAAQ2N,GACP+9F,KAAAA,OAAcD,EAASnvG,OAAQ+a,IAI9C,OAAO,IACX,GAAC,wBAGK,SAAWk0F,6IAGb,GAFgB,MAAZA,IAAoBA,EAAW,IAGlB,KAAbA,EAAe,iBAGI,OAHJ,kBAGUzwG,KAAKwwG,OAAO,cAAa,OAAlC,GAGG,QAHT1xG,EAAS,EAAH,OAGWA,IAAW2iG,GAAQ,yCAAW,MAAI,gCAElDzhG,KAAKi6C,SAASo2D,UAAUQ,YAAY/xG,IAAO,qCAE9C,KAAM8J,OAASi9D,EAAOnnB,OAAOmoB,eAAc,0CAAW,MAAI,2BAMrD,OANqD,UAM/C7mE,KAAK8wG,YAAY,aAAcxB,GAAWmB,IAAU,QAA7D,GAGE,OAHVC,EAAW,EAAH,OAGuB,OAAbA,EAAiB,0CAAW,MAAI,QAWvD,OANc,OAFTrvG,EAAUrB,KAAK+wG,YAAYN,EAAUC,KAGvCxoC,GAAOd,WAAW,mCAAoCvB,EAAOnnB,OAAO8oB,sBAAuB,CACvFC,UAAW,cAAF,OAAiBgpC,EAAS,KACnCA,SAAUA,EACVnzG,KAAMozG,IAEb,kBAEMrvG,GAAO,4DACjB,uBAEK,+KAKiB,OAJb2vG,EAAoD,CAAE,CAAE97F,KAAM,OAAQ+7F,QAASjxG,KAAKmN,OAAQ,kBAIzEnN,KAAKkxG,QAAQ,UAAS,OAA/B,GACE,OADRC,EAAS,EAAH,MACM,yCAAW,MAAI,OAExB51G,EAAI,EAAC,YAAEA,EAAIk0G,GAASj0G,QAAM,iBACQ,GAC1B,OADP6N,EAAQ8nG,EAAO9nG,MAAMomG,GAASl0G,KACnB,wDAEX61G,EAAS/nG,EAAM,GAAG9H,cAAa,KAE7B6vG,EAAM,OACL,UADK,KACE,GAIP,SAJO,KAID,GAIN,SAJM,KAIA,GAIN,WAJM,MAKN,YADQ,QACC,iBAZqC,OAA/CJ,EAAQv1G,KAAK,CAAEyZ,KAAM,MAAO+7F,QAASE,IAAU,kBACxC,CAAEH,QAAAA,EAAS9zD,IAAKi0D,IAAQ,QAGiB,OAAhDH,EAAQv1G,KAAK,CAAEyZ,KAAM,OAAQ+7F,QAASE,IAAU,kBACzC,CAAEH,QAAAA,EAAS9zD,IAAKi0D,IAAQ,QAGiB,OAAhDH,EAAQv1G,KAAK,CAAEyZ,KAAM,OAAQ+7F,QAASE,IAAU,kBACzC,CAAEH,QAAAA,EAAS9zD,IAAK0yD,GAAYuB,KAAS,QASR,GAJ9Bp2B,EAAuB,WAAXq2B,EAAuB,aAAc,aACvDJ,EAAQv1G,KAAK,CAAEyZ,KAAMk8F,EAAQH,QAASE,IAEtC,KACenxG,KAAKqxG,iBAAgB,sBAAI,OAAJ,UAAUrxG,KAAK0uE,aAAY,4BAEtB,GAFnC4iC,EAAQ,EAAH,GAGU,KADfh6B,GAASjuE,EAAM,IAAM,IAAIsoB,MAAM,MAC3Bn2B,OAAY,0CAAW,MAAI,QAExB,OAFwB,UAElBwE,KAAKi6C,SAASo2D,UAAUhvG,QAAQi2E,EAAM,IAAG,QAG5D,GAHMx0E,EAAO,EAAH,KACJyuG,EAAU5nC,EAAWruB,GAAU3+C,KAAK26E,EAAM,IAAIlP,cAAe,IAGpD,WAAXgpC,EAAmB,iBAEoC,OAFpC,KAEApxG,KAAKi6C,SAASo2D,UAAS,UAAmBrwG,KAAKi6C,SAASr1C,KAAK,CAC5E2/C,GAAIzhD,EAAMxF,KAAMisE,EAAU,CAAE,aAAcgoC,MAC5C,QAFoD,GAEpD,YAFIC,EAAa,EAAH,GAA2BX,YAAW,gBAGlDS,IAAUE,EAAU,0CAAW,MAAI,QACvCR,EAAQv1G,KAAK,CAAEyZ,KAAM,QAAS+7F,QAASO,IAAc,2BAEnC,YAAXJ,EAAoB,iBAEI,OAFJ,KAEX91D,GAAS,UAAYt7C,KAAKi6C,SAASr1C,KAAK,CACpD2/C,GAAIzhD,EAAMxF,KAAMisE,EAAU,CAAE,aAAcI,EAAW2nC,EAAO,IAAKC,MACnE,QAF4B,GAE5B,cAFI3xG,EAAU,EAAH,GAAajD,KAAI,iBAGlB0iB,SAAU,CAAF,yCAAW,MAAI,QACnC2xF,EAAQv1G,KAAK,CAAEyZ,KAAM,UAAW+7F,QAASrxG,EAAQ9B,aAAc,QASpC,OALzBigC,EAAK,CACPwmB,GAAIvkD,KAAKi6C,SAASo2D,UAAUhvG,QAAQi2E,EAAM,IAC1Ch6E,KAAMisE,EAAU,CAAEwR,EAAUw2B,KAC/B,KAEiB7B,GAAY,UAAO1vG,KAAKi6C,SAASr1C,KAAKm5B,GAAG,QAAG,GAAH,YACxC,OADf0zE,GAAc,EAAH,WAA8C,IACtC,0CAAW,MAAI,QAiBrB,OAhBjBT,EAAQv1G,KAAK,CAAEyZ,KAAM,oBAAqB+7F,QAASQ,IAGpC,YAAXL,IACAK,EAAcA,EAAYvqG,QAAQ,OAAQqqG,EAAQ5oG,UAAU,IAC5DqoG,EAAQv1G,KAAK,CAAEyZ,KAAM,wBAAyB+7F,QAASQ,KAIvDA,EAAYpoG,MAAM,aAClBooG,EAAc7B,GAAY6B,IAG9BT,EAAQv1G,KAAK,CAAEyZ,KAAM,eAAgB+7F,QAASQ,IAE9C,UACuB1F,GAAU0F,GAAY,QAA/B,GAARC,EAAW,EAAH,KACC,CAAF,yCAAW,MAAI,QAIC,GAH7BV,EAAQv1G,KAAK,CAAEyZ,KAAM,WAAY+7F,QAASt8F,KAAKC,UAAU88F,KAIhC,kBADrBC,EAAWD,EAASE,OACS,0CAAW,MAAI,YAE5CD,EAAStoG,MAAM,wBAAyB,CAAF,wCAIE,GAC5B,MADCsoG,EAAStoG,MAAMmmG,IACZ,0CAAW,MAAI,QAE/BwB,EAAQv1G,KAAK,CAAEyZ,KAAM,WAAY+7F,QAASU,IAC1CA,EAAW/B,GAAY+B,GAAU,QAGY,OAAjDX,EAAQv1G,KAAK,CAAEyZ,KAAM,MAAO+7F,QAASU,IAAY,kBAE1C,CAAEX,QAAAA,EAAS9zD,IAAKy0D,IAAU,QAjGRp2G,IAAG,0GAuGrC,MAAI,4DACd,4BAEK,iKAGe,gBAAMyE,KAAK8wG,YAAY,cAAa,OAAvC,GAGE,OAHVJ,EAAW,EAAH,OAGuB,OAAbA,EAAiB,yCAAW,MAAI,OAGoC,KAAtFmB,EAAOnB,EAASrnG,MAAM,kEAClB,CAAF,gBACgC,GAA9B7N,EAAS6C,SAASwzG,EAAK,GAAI,IAC7BA,EAAK,GAAGr2G,SAAoB,EAATA,EAAU,0CACtB,UAAas9F,GAAO59F,OAAO,KAAO22G,EAAK,KAAG,QAKmC,KAAtFC,EAAOpB,EAASrnG,MAAM,kEAClB,CAAF,gBACgC,GAA9B7N,EAAS6C,SAASyzG,EAAK,GAAI,IAC7BA,EAAK,GAAGt2G,SAAoB,EAATA,EAAU,0CACtB,UAAas9F,GAAO59F,OAAO,KAAO42G,EAAK,KAAG,QAKI,KAAvDC,EAAQrB,EAASrnG,MAAM,kCAClB,CAAF,mBACoB,KAArB0oG,EAAM,GAAGv2G,OAAmB,0CACrB,SAAYu2G,EAAM,IAAE,QAIqB,KAAlDC,EAAStB,EAASrnG,MAAM,4BAClB,CAAF,mBACoB,KAAtB2oG,EAAO,GAAGx2G,OAAmB,iBAGsD,OAD7Ey2G,EAAkC,CAAE,IAAK,GAAI,IAAK,IAAK,IAAK,KAC5DxwG,EAAO8oG,GAAa,KAAOyH,EAAO,IAAI9qG,QAAQ,WAAW,SAACtI,GAAC,OAAMqzG,EAAQrzG,EAAE,IAAE,kBAC5E,SAAY6C,GAAI,iCAIxBymE,GAAOd,WAAW,2CAA4CvB,EAAOnnB,OAAO8oB,sBAAuB,CACtGC,UAAW,mBACXnqE,KAAMozG,KACR,mDACL,qBAEK,SAAQvnG,2IAcO,OAXb+oG,EAAW9hC,GAAYjnE,IAI3B+oG,EAAWhwG,EAAO,CAAEotG,GAAW,IAAKA,GAAW4C,EAAS12G,QAAS02G,KAGnD12G,OAAS,KAAQ,IAC3B02G,EAAWhwG,EAAO,CAAEgwG,EAAUvoC,EAAW,KAAM,GAAMxgE,EAAI3N,OAAS,OACrE,SAEsBwE,KAAK8wG,YAAY,aAAc3nC,EAAQ+oC,IAAU,OAA1D,GACE,OADVxB,EAAW,EAAH,OACuB,OAAbA,EAAiB,yCAAW,MAAI,gCAEjD9/B,GAAa8/B,IAAS,oDAChC,EAxWgB,GA2WjByB,GAA8B,KAE9BC,GAAa,EAEJj3D,GAAa,0CAiDtB,WAAYmK,GAAsC,MAkB9C,IAlB8C,gBAC9C,gBAGK/gD,QAAU,GAEf,EAAK8tG,SAAW,CAAE7hG,OAAQ,GAE1B,EAAK8hG,iBAAkB,EAEvB,EAAKjC,WAAY,2CAAWkC,eAK5BxnC,IAAe,UAAM,aAA2B,QAAZzlB,GAChC,EAAKktD,aAAcltD,EAAU,EAAKmtD,iBAElCntD,aAAmB77C,QACnB,EAAKipG,gBAAkBptD,EAGvBA,EAAQi3B,OAAM,SAACziE,GAAY,IAG3B,EAAK64F,SAASp2B,OAAM,SAACziE,GAAY,QAE9B,CACH,IAAM84F,EAAe5nC,GAAS,0CAA+C,aAAxDA,CAAsE1lB,GACvFstD,GACA7nC,IAAe,UAAM,WAAY6nC,GACjC,EAAKx4D,KAAK,UAAWw4D,EAAc,OAGnC1qC,GAAOjC,mBAAmB,kBAAmB,UAAW3gB,GAWxC,OAPxB,EAAKutD,yBAA2B,KAEhC,EAAK7D,kBAAoB,EACzB,EAAK8D,qBAAuB,GAE5B,EAAKC,iBAAmB,IAExB,EAAKC,eAAiB,EAAE,CAC5B,CAgEC,OAhEA,8BAEK,oJACmB,MAAjBhzG,KAAKizG,SAAgB,iBACM,GAAvB3tD,EAAmB,MACnBtlD,KAAK0yG,gBAAiB,CAAF,gBAEN,OAFM,kBAEA1yG,KAAK0yG,gBAAe,OAApCptD,EAAU,EAAH,gEAKA,MAAXA,EAAe,iBACL,OADK,UACCtlD,KAAKyyG,gBAAe,QAApCntD,EAAU,EAAH,aAKNA,GACD4iB,GAAOd,WAAW,sBAAuBvB,EAAOnnB,OAAO8nB,cAAe,CAAC,GAItD,MAAjBxmE,KAAKizG,WACDjzG,KAAKwyG,WACLxyG,KAAKizG,SAAW3tD,EAEhBylB,GAAe/qE,KAAM,WAAYslD,GAErCtlD,KAAKo6C,KAAK,UAAWkL,EAAS,OACjC,iCAGEtlD,KAAKizG,UAAQ,2DAKxB,iBACA,WAAS,WACL,OAAOhH,IAAK,WACR,OAAO,EAAK0G,SAASxnC,MAAK,SAAC7lB,GACvB,OAAOA,CACX,IAAG,SAACxrC,GAEA,GAAIA,EAAMlR,OAASi9D,EAAOnnB,OAAOw0D,eAAiC,cAAhBp5F,EAAM5V,MAGxD,MAAM4V,CACV,GACJ,GACJ,GAEA,2BAaM,SAAcikB,EAAiBi2C,EAAkBm/B,6JAC/CnzG,KAAKsyG,iBAAmC,IAAhBa,EAAK33G,OAAY,yCAAW,MAAI,OAEtDgc,EAASumB,EAAGwmB,GAAGhjD,cACfjE,EAAO02E,EAASzyE,cAEhB6xG,EAA+B,GAE5B73G,EAAI,EAAC,YAAEA,EAAI43G,EAAK33G,QAAM,iBASZ,OART0hD,EAAMi2D,EAAK53G,GAGXitG,EAAOtrD,EAAIh2C,QAAQ,WAAYsQ,GAAQtQ,QAAQ,SAAU5J,GAGzDkxD,EAAuBtR,EAAIz0C,QAAQ,WAAa,EAAK,KAAMkM,KAAKC,UAAU,CAAEtX,KAAAA,EAAMka,OAAAA,IAAS,UAE5Eu0F,GAAU,CAAE7uD,IAAKsrD,EAAMwB,kBAAkB,GAAQx7C,GAAM,SAAC/mD,EAAOshG,GAEhF,OADAthG,EAAMyhG,OAASH,EAASE,WACjBxhG,CACX,IAAE,QAHU,KAAN3I,EAAS,EAAH,MAKDxB,KAAM,CAAF,yCAAWwB,EAAOxB,MAAI,QAIrC,GAFM+1G,EAAgBv0G,EAAOsM,SAAW,kBAGpCtM,EAAOoqG,QAAU,KAAOpqG,EAAOoqG,OAAS,KAAG,0CACpChhC,GAAOd,WAAW,yCAAD,OAA2CisC,GAAiBxtC,EAAOnnB,OAAOisD,aAAc,CAAEztD,IAAAA,EAAKm2D,aAAAA,KAAe,QAI1ID,EAAc33G,KAAK43G,GAAc,QAxBJ93G,IAAG,gDA2B7B2sE,GAAOd,WAAW,wCAAD,OAA0CgsC,EAAc5rG,KAAI,SAAC+hB,GAAC,OAAK5U,KAAKC,UAAU2U,EAAE,IAAEtb,KAAK,OAAU43D,EAAOnnB,OAAOisD,aAAc,CACrJwI,KAAAA,EAAMC,cAAAA,KACR,mDAIN,qCACM,SAAwBE,sJAC1B,gBAAMtzG,KAAK2yG,SAAQ,YAGfW,EAAS,GAAC,4BAGHtzG,KAAKuzG,qBAAsB,CAAF,gBAOT,OAJbC,EAAsBxzG,KAAKuzG,qBAAoB,kBAI5BC,EAAmB,OAA5B,GAAN10G,EAAS,EAAH,OACP+vG,KAAY/vG,EAAO20G,UAAaH,GAAM,0CAChCx0G,EAAOgpD,aAAW,yEAYzB9nD,KAAKuzG,uBAAyBC,EAAmB,4EAyCzD,OAlCFE,EAAU7E,KAEV8E,EAA2B1oC,GAAkB,CAC/CnjB,YAAa9nD,KAAK4zG,QAAQ,iBAAkB,CAAC,GAC7CC,aAAc7zG,KAAKq9E,aAAalS,MAAK,SAAC7lB,GAAO,OAAM,IAAI,IAAG,SAACxrC,GAAK,OAAMA,CAAK,MAC5EqxD,MAAK,YAAkC,IAA/BrjB,EAAW,EAAXA,YAAa+rD,EAAY,EAAZA,aACpB,GAAIA,EAKA,MAHI,EAAKN,uBAAyBI,IAC9B,EAAKJ,qBAAuB,MAE1BM,EAGV,IAAMJ,EAAW5E,KAOjB,OALA/mD,EAAcxM,GAAU3+C,KAAKmrD,GAAatoC,YACxB,EAAKqzF,0BAA2B/qD,EAAc,EAAK+qD,yBAErE,EAAKA,wBAA0B/qD,EAC/B,EAAKgsD,oBAAoBhsD,GAClB,CAAEA,YAAAA,EAAa4rD,QAAAA,EAASD,SAAAA,EACnC,IAEAzzG,KAAKuzG,qBAAuBI,EAG5BA,EAAyBp3B,OAAM,SAACziE,GAExB,EAAKy5F,uBAAyBI,IAC9B,EAAKJ,qBAAuB,KAEpC,IAAG,UAEWI,EAAwB,wCAAE7rD,aAAW,4DACtD,kBAEK,8JAQgB,OAPZisD,EAAS3B,KAGT4B,EAAgC,GAElClsD,EAAsB,KAAI,kBAEN9nD,KAAKi0G,wBAAwB,IAAMj0G,KAAKk0G,gBAAkB,GAAE,OAAhFpsD,EAAc,EAAH,4BAEe,OAFf,yBAEX9nD,KAAKo6C,KAAK,QAAS,EAAF,IAAS,2BAQ9B,GALAp6C,KAAK8zG,oBAAoBhsD,GAGzB9nD,KAAKo6C,KAAK,OAAQ25D,EAAQjsD,GAGtBA,IAAgB9nD,KAAKgvG,iBAAgB,iBACR,OAA7BhvG,KAAKo6C,KAAK,UAAW25D,GAAQ,2BASjC,IAJ6B,IAAzB/zG,KAAKqyG,SAAS7hG,QACdxQ,KAAKqyG,SAAS7hG,MAAQs3C,EAAc,GAGpC7qC,KAAKqD,IAActgB,KAAKqyG,SAAS7hG,MAAUs3C,GAAe,IAC1DogB,GAAOr+D,KAAK,+DAAD,OAAiE7J,KAAKqyG,SAAS7hG,MAAM,uBAAgBs3C,EAAY,MAC5H9nD,KAAKo6C,KAAK,QAAS8tB,GAAO3B,UAAU,8BAA+BV,EAAOnnB,OAAOw0D,cAAe,CAC5FprD,YAAaA,EACb5jD,MAAO,YACPiwG,oBAAqBn0G,KAAKqyG,SAAS7hG,SAEvCxQ,KAAKo6C,KAAK,QAAS0N,QAInB,IAASvsD,EAAayE,KAAKqyG,SAAS7hG,MAAS,EAAGjV,GAAKusD,EAAavsD,IAC9DyE,KAAKo6C,KAAK,QAAS7+C,GAiHyB,OA5GvCyE,KAAKqyG,SAAS7hG,QAAWs3C,IAClC9nD,KAAKqyG,SAAS7hG,MAAQs3C,EAEtBzgD,OAAOuQ,KAAK5X,KAAKqyG,UAAUr7F,SAAQ,SAAC7N,GAEhC,GAAY,UAARA,EAAJ,CAGA,IAAMirG,EAAmB,EAAK/B,SAASlpG,GAKd,YAArBirG,GAIAtsD,EAAcssD,EAAmB,WAC1B,EAAK/B,SAASlpG,GAE7B,MAI2B,IAA3BnJ,KAAKgvG,mBACLhvG,KAAKgvG,iBAAmBlnD,EAAc,GAG1C9nD,KAAKuE,QAAQyS,SAAQ,SAAC9S,GAClB,OAAQA,EAAMgR,MACV,IAAK,KACD,IAAMzT,EAAOyC,EAAMzC,KACf4yG,EAAS,EAAKnkB,sBAAsBzuF,GAAM0pE,MAAK,SAACukB,GAChD,OAAKA,GAAkC,MAAvBA,EAAQ5nC,aACxB,EAAKuqD,SAAS,KAAO5wG,GAAQiuF,EAAQ5nC,YACrC,EAAK1N,KAAK34C,EAAMiuF,GACT,MAH+C,IAI1D,IAAGnT,OAAM,SAACziE,GAAmB,EAAKsgC,KAAK,QAAStgC,EAAQ,IAExDk6F,EAAQv4G,KAAK44G,GAEb,MAGJ,IAAK,SAED,IAAKnwG,EAAM+qG,UAAW,CAClB/qG,EAAM+qG,WAAY,GAIc,IAA5B/qG,EAAM8qG,mBACN9qG,EAAM8qG,iBAAmBlnD,EAAc,GAO3C,IAAMK,EAASjkD,EAAMikD,OACrBA,EAAOkrC,UAAYnvF,EAAM8qG,iBAAmB,EAC5C7mD,EAAOgrC,QAAUrrC,EAIjB,IAAMwsD,EAAensD,EAAOgrC,QAAU,EAAK2f,qBACvCwB,EAAensD,EAAOkrC,YAAalrC,EAAOkrC,UAAYihB,GAEtDnsD,EAAOkrC,UAAY,IAAKlrC,EAAOkrC,UAAY,GAE/C,IAAMghB,EAAS,EAAK/gB,QAAQnrC,GAAQgjB,MAAK,SAACwkB,GAEtCzrF,EAAM+qG,WAAY,EAEE,IAAhBtf,EAAKn0F,QAETm0F,EAAK34E,SAAQ,SAAC0iC,GAGNA,EAAIoO,YAAc5jD,EAAM8qG,mBACxB9qG,EAAM8qG,iBAAmBt1D,EAAIoO,aAIjC,EAAKuqD,SAAS,KAAO34D,EAAIq2C,WAAar2C,EAAIoO,YAC1C,EAAKuqD,SAAS,KAAO34D,EAAIu2C,iBAAmBv2C,EAAIoO,YAEhD,EAAK1N,KAAK+N,EAAQzO,EACtB,GACJ,IAAG6iC,OAAM,SAACziE,GACN,EAAKsgC,KAAK,QAAStgC,GAGnB5V,EAAM+qG,WAAY,CACtB,IACA+E,EAAQv4G,KAAK44G,IAM7B,IAEAr0G,KAAKgvG,iBAAmBlnD,EAGxBr+C,QAAQ2hE,IAAI4oC,GAAS7oC,MAAK,WACtB,EAAK/wB,KAAK,UAAW25D,EACzB,IAAGx3B,OAAM,SAACziE,GAAY,EAAKsgC,KAAK,QAAStgC,EAAQ,IAAG,8EAKxD,8BACA,SAAiBguC,GACb9nD,KAAKgvG,iBAAmBlnD,EAAc,EAClC9nD,KAAKu0G,SAAWv0G,KAAKisG,MAC7B,GAAC,mBAED,WACI,OAAOjsG,KAAKizG,QAChB,GAGA,2BACM,oKACK/qC,GAAOd,WAAW,8CAA+CvB,EAAOnnB,OAAO8oB,sBAAuB,CACzGC,UAAW,4BACb,6CACL,wBAEK,qJACc,gBAAMznE,KAAK2yG,SAAQ,OAKZ,OALjBrtD,EAAU,EAAH,cAKgBtlD,KAAKyyG,gBAAe,OAA7B,GAAd+B,EAAiB,EAAH,KAChBlvD,EAAQr7C,UAAYuqG,EAAevqG,QAAO,qBAItCjK,KAAKwyG,WAAY,CAAF,gBAgBf,OAfAxyG,KAAKizG,SAAWuB,EAGhBx0G,KAAKgvG,kBAAoB,EACzBhvG,KAAKy0G,iBAAmB,KACxBz0G,KAAK00G,wBAA0B,KAC/B10G,KAAKgzG,eAAiB,EACtBhzG,KAAKqyG,SAAS7hG,OAAS,EACvBxQ,KAAK6yG,yBAA2B,KAChC7yG,KAAKuzG,qBAAuB,KAK5BvzG,KAAKo6C,KAAK,UAAWo6D,EAAgBlvD,GAAS,UACxCmmD,GAAM,GAAE,iCAEPzrG,KAAKizG,UAAQ,QASE,MANpBn5F,EAAQouD,GAAO3B,UAAU,6BAA8BV,EAAOnnB,OAAOw0D,cAAe,CACtFhvG,MAAO,UACPohD,QAASA,EACTqvD,gBAAiBH,IAGrBx0G,KAAKo6C,KAAK,QAAStgC,GACbA,EAAK,iCAGRwrC,GAAO,mDACjB,uBAED,WAAe,WAKX,OAJAtlD,KAAKi0G,wBAAwB,IAAMj0G,KAAKk0G,gBAAkB,GAAG/oC,MAAK,SAACrjB,GAC/D,EAAKgsD,oBAAoBhsD,EAC7B,IAAG,SAAChuC,GAAY,IAEiB,MAAzB9Z,KAAKy0G,iBAA4Bz0G,KAAKy0G,kBAAmB,CACrE,GAAC,mBAED,WACI,OAAwB,MAAhBz0G,KAAK40G,OACjB,EAAC,IAED,SAAYntG,GAAc,WAClBA,IAAUzH,KAAK40G,SACf50G,KAAK40G,QAAUC,aAAY,WAAQ,EAAK5I,MAAQ,GAAGjsG,KAAKk0G,iBAEnDl0G,KAAK80G,iBACN90G,KAAK80G,eAAiB5jB,YAAW,WAC7B,EAAK+a,OAIL,EAAK6I,eAAiB5jB,YAAW,WAGxB,EAAK0jB,SAAW,EAAK3I,OAG1B,EAAK6I,eAAiB,IAC1B,GAAG,EAAKZ,gBACZ,GAAG,MAGCzsG,GAASzH,KAAK40G,UACtBG,cAAc/0G,KAAK40G,SACnB50G,KAAK40G,QAAU,KAEvB,GAAC,2BAED,WACI,OAAO50G,KAAK+yG,gBAChB,EAAC,IAED,SAAoBtrG,GAAa,WAC7B,GAAsB,kBAAXA,GAAuBA,GAAS,GAAKpJ,SAASyK,OAAOrB,KAAWA,EACvE,MAAM,IAAIvL,MAAM,4BAGpB8D,KAAK+yG,iBAAmBtrG,EAEpBzH,KAAK40G,UACLG,cAAc/0G,KAAK40G,SACnB50G,KAAK40G,QAAUC,aAAY,WAAQ,EAAK5I,MAAQ,GAAGjsG,KAAK+yG,kBAEhE,GAAC,iCAED,WAAmB,WACTrvC,EAAMmrC,KAaZ,OAVKnrC,EAAM1jE,KAAKgzG,eAAkB,EAAIhzG,KAAK+yG,mBACvC/yG,KAAKgzG,eAAiBtvC,EACtB1jE,KAAK00G,wBAA0B10G,KAAKg1G,iBAAiB7pC,MAAK,SAACrjB,GAIvD,OAH6B,MAAzB,EAAK2sD,kBAA4B3sD,EAAc,EAAK2sD,oBACpD,EAAKA,iBAAmB3sD,GAErB,EAAK2sD,gBAChB,KAGGz0G,KAAK00G,uBAChB,GAAC,iCAED,SAAoB5sD,GAEa,MAAzB9nD,KAAKy0G,kBAA4B3sD,EAAc9nD,KAAKy0G,mBAGxDz0G,KAAKgzG,eAAiBnE,MAGO,MAAzB7uG,KAAKy0G,kBAA4B3sD,EAAc9nD,KAAKy0G,oBACpDz0G,KAAKy0G,iBAAmB3sD,EACxB9nD,KAAK00G,wBAA0BjrG,QAAQC,QAAQo+C,IAEvD,GAAC,gCAEK,SAAmBmoC,EAAyBR,EAAwBya,4JAC/DlqG,KAAKi1G,oBAAoBhlB,EAAmC,MAAjBR,EAAyB,EAAGA,EAAeya,GAAW,EAAG,OAAK,kDACnH,iCAEK,SAAoBja,EAAyBR,EAAuBya,EAAiBgL,gJACvE,gBAAMl1G,KAAKkwF,sBAAsBD,GAAgB,OAApD,OAAPP,EAAU,EAAH,MAGEA,EAAQD,cAAe,IAAMA,GAAa,yCAAWC,GAAO,gCAGpE,IAAIjmF,SAAQ,SAACC,EAASglF,GACzB,IAAMymB,EAAiC,GAEnCnkB,GAAO,EACLokB,EAAc,WAChB,QAAIpkB,IACJA,GAAO,EACPmkB,EAAYn+F,SAAQ,SAACg7D,GAAWA,GAAQ,KACjC,EACX,EAEMqjC,EAAe,SAAC3lB,GACdA,EAAQD,cAAgBA,GACxB2lB,KACJ1rG,EAAQgmF,EACZ,EAIA,GAHA,EAAKzqF,GAAGgrF,EAAiBolB,GACzBF,EAAY15G,MAAK,WAAQ,EAAKuJ,eAAeirF,EAAiBolB,EAAe,IAEzEH,EAAa,CACb,IAAII,EAAkBJ,EAAYK,WAC9BC,EAAuB,KACrBC,EAAiB,SAAjBA,EAAwB3tD,GAAmB,OAAI01B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,qFAC7CwT,EAAM,CAAF,gDAKR,OALQ,SAKFya,GAAM,KAAK,OAEjBzrG,KAAKi9E,oBAAoBi4B,EAAYv4G,MAAMwuE,MAAK,SAAOxrE,GAAK,OAAI69E,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,0FACxDwT,EAAM,CAAF,qDAEJrxF,GAASu1G,EAAYv1G,OAAK,gBAC1B21G,EAAkBxtD,EAAY,uBAKZ,OALY,SAKN9nD,KAAKgwF,eAAeC,GAAgB,OAA7C,KAALylB,EAAQ,EAAH,OACuB,MAArBA,EAAM5tD,YAAmB,mDAOtB,MAAhB0tD,IACAA,EAAeF,EAAkB,GACdJ,EAAYK,aAC3BC,EAAeN,EAAYK,YAElC,aAEMC,GAAgB1tD,GAAW,qBAC1BkpC,EAAM,CAAF,kDAEM,OAFN,UAEYhxF,KAAK21G,yBAAyBH,GAAa,QAAzDhlG,EAAQ,EAAH,KACFolG,EAAK,EAAC,aAAEA,EAAKplG,EAAMg9F,aAAahyG,QAAM,iBAG3C,IAFMuiC,EAAKvtB,EAAMg9F,aAAaoI,IAGvBn0G,OAASwuF,EAAe,sDAG3BlyD,EAAGphC,OAASu4G,EAAYv4G,MAAQohC,EAAGp+B,QAAUu1G,EAAYv1G,MAAK,qBAC1DqxF,EAAM,CAAF,kDAGQ,OAHR,UAGchxF,KAAK61G,mBAAmB93E,EAAGt8B,KAAMguF,GAAc,QAAxD,GAAPC,EAAU,EAAH,MAGT0lB,IAAe,CAAF,kDAiBb,OAdA1uC,EAAS,WACT3oC,EAAGzgC,OAAS43G,EAAY53G,MAAQygC,EAAGwmB,KAAO2wD,EAAY3wD,IAAMxmB,EAAGt2B,MAAMqnB,GAAGomF,EAAYztG,OACpFi/D,EAAS,WACW,OAAZ3oC,EAAGzgC,MAAiBygC,EAAGphC,OAASohC,EAAGwmB,IAAMxmB,EAAGt2B,MAAM4X,WAC1DqnD,EAAS,aAIbgoB,EAAOxmB,GAAO3B,UAAU,2BAA4BV,EAAOnnB,OAAOwoB,qBAAsB,CACpF4uC,UAAuB,aAAXpvC,GAAoC,cAAXA,EACrCA,OAAAA,EACAqvC,YAAa/1G,KAAKg2G,iBAAiBj4E,GACnCt8B,KAAMwuF,EACNP,QAAAA,KACA,2BA/BqCkmB,IAAI,wBAoCrDJ,IAAe,4BAInBxkB,EAAM,CAAF,kDACRhxF,KAAK+wF,KAAK,QAAS0kB,GAAgB,gDAEtC,IAAE,SAAC37F,GACIk3E,GACJ,EAAKD,KAAK,QAAS0kB,EACvB,IAAG,+CACN,EAED,GAAIzkB,EAAQ,OACZ,EAAKD,KAAK,QAAS0kB,GAEnBN,EAAY15G,MAAK,WACb,EAAKuJ,eAAe,QAASywG,EACjC,IAGJ,GAAwB,kBAAbvL,GAAyBA,EAAU,EAAG,CAC7C,IAAMc,EAAQ9Z,YAAW,WACjBkkB,KACJ1mB,EAAOxmB,GAAO3B,UAAU,mBAAoBV,EAAOnnB,OAAOwsD,QAAS,CAAEhB,QAASA,IAClF,GAAGA,GACCc,EAAMiL,OAASjL,EAAMiL,QAEzBd,EAAY15G,MAAK,WAAQ2vG,aAAaJ,EAAQ,IAEtD,KAAE,kDACL,4BAEK,oKACKhrG,KAAKi0G,wBAAwB,IAAE,kDACzC,yBAEK,iJACF,gBAAMj0G,KAAKq9E,aAAY,OAER,OAFQ,SAEFr9E,KAAK4zG,QAAQ,cAAe,CAAC,GAAG,OAAzC,OAAN90G,EAAS,EAAH,gCAEDw8C,GAAU3+C,KAAKmC,IAAO,yDAEtBopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,cACRr3C,OAAAA,EAAQgb,MAAK,QACf,2DAET,wBAEK,SAAW23E,EAAyC3U,2IACtD,gBAAM98E,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CACnC5pE,QAASrB,KAAK+wG,YAAYtf,GAC1B3U,SAAU98E,KAAKk2G,aAAap5B,KAC9B,OAEa,OALT5zE,EAAS,EAAH,cAKSlJ,KAAK4zG,QAAQ,aAAc1qG,GAAO,OAA3C,OAANpK,EAAS,EAAH,gCAEDw8C,GAAU3+C,KAAKmC,IAAO,2DAEtBopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,aACRjtC,OAAAA,EAAQpK,OAAAA,EAAQgb,MAAK,QACvB,4DAET,iCAEK,SAAoB23E,EAAyC3U,2IAC/D,gBAAM98E,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CACnC5pE,QAASrB,KAAK+wG,YAAYtf,GAC1B3U,SAAU98E,KAAKk2G,aAAap5B,KAC9B,OAEa,OALT5zE,EAAS,EAAH,cAKSlJ,KAAK4zG,QAAQ,sBAAuB1qG,GAAO,OAApD,OAANpK,EAAS,EAAH,gCAEDw8C,GAAU3+C,KAAKmC,GAAQ0gB,YAAU,2DAEjC0oD,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,sBACRjtC,OAAAA,EAAQpK,OAAAA,EAAQgb,MAAK,QACvB,4DAET,qBAEK,SAAQ23E,EAAyC3U,2IACnD,gBAAM98E,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CACnC5pE,QAASrB,KAAK+wG,YAAYtf,GAC1B3U,SAAU98E,KAAKk2G,aAAap5B,KAC9B,OAEa,OALT5zE,EAAS,EAAH,cAKSlJ,KAAK4zG,QAAQ,UAAW1qG,GAAO,OAAxC,OAANpK,EAAS,EAAH,gCAEDqqE,EAAQrqE,IAAO,2DAEfopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,UACRjtC,OAAAA,EAAQpK,OAAAA,EAAQgb,MAAK,QACvB,4DAET,0BAEK,SAAa23E,EAAyC0kB,EAAgDr5B,2IACxG,gBAAM98E,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CACnC5pE,QAASrB,KAAK+wG,YAAYtf,GAC1B3U,SAAU98E,KAAKk2G,aAAap5B,GAC5Bq5B,SAAU1sG,QAAQC,QAAQysG,GAAUhrC,MAAK,SAACriD,GAAC,OAAK0gD,EAAS1gD,EAAE,MAC7D,OACa,OALT5f,EAAS,EAAH,cAKSlJ,KAAK4zG,QAAQ,eAAgB1qG,GAAO,OAA7C,OAANpK,EAAS,EAAH,gCAEDqqE,EAAQrqE,IAAO,2DAEfopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,eACRjtC,OAAAA,EAAQpK,OAAAA,EAAQgb,MAAK,QACvB,4DAIV,8BACA,SAAiBikB,EAAiBt8B,EAAe8zG,GAAmB,WAChE,GAAY,MAAR9zG,GAAwC,KAAxB2nE,EAAc3nE,GAAgB,MAAM,IAAIvF,MAAM,sCAElE,IAAM4C,EAA8Bi/B,EAwCpC,OArCY,MAARt8B,GAAgBs8B,EAAGt8B,OAASA,GAC5BymE,GAAOd,WAAW,2DAA4DvB,EAAOnnB,OAAO8nB,cAAe,CAAE4vC,aAAcr4E,EAAGt8B,KAAM40G,aAAc50G,IAGtJ3C,EAAO0wF,KAAO,SAAO8mB,EAAmBpM,GAAgB,OAAI1sB,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,8EAiBxC,OAhBA,MAAZ84B,IAAoBA,EAAW,GACpB,MAAXpM,IAAmBA,EAAU,GAG7B6L,OAAcx2G,EACD,IAAb+2G,GAAgC,MAAdf,IAClBQ,EAAc,CACVz4G,KAAMygC,EAAGzgC,KACTX,KAAMohC,EAAGphC,KACTgD,MAAOo+B,EAAGp+B,MACV4kD,GAAIxmB,EAAGwmB,GACP98C,MAAOs2B,EAAGt2B,MACV8tG,WAAAA,IAEP,SAEqBv1G,KAAKi1G,oBAAoBl3E,EAAGt8B,KAAM60G,EAAUpM,EAAS6L,GAAY,OAA1E,GACE,OADTrmB,EAAU,EAAH,OACuB,IAAb4mB,EAAc,yCAAW,MAAI,OAWnD,OARDt2G,KAAKqyG,SAAS,KAAOt0E,EAAGt8B,MAAQiuF,EAAQ5nC,YAEjB,IAAnB4nC,EAAQwZ,QACRhhC,GAAOd,WAAW,qBAAsBvB,EAAOnnB,OAAOmoB,eAAgB,CAClEopB,gBAAiBlyD,EAAGt8B,KACpBstE,YAAahxC,EACb2xD,QAASA,IAEhB,kBACMA,GAAO,gDACjB,EAEM5wF,CACX,GAAC,6BAEK,SAAgBy3G,+IAClB,gBAAMv2G,KAAKq9E,aAAY,OACT,OADS,SACH5zE,QAAQC,QAAQ6sG,GAAmBprC,MAAK,SAAAn7D,GAAC,OAAIm5D,EAAQn5D,EAAE,IAAC,OAGxD,OAHdwmG,EAAQ,EAAH,KAEa,OADlBz4E,EAAK/9B,KAAKqwG,UAAUthC,YAAYwnC,IAC/B9mB,gBAAyB1xD,EAAG0xD,cAAgB,GAAI,SAC7BzvF,KAAKi0G,wBAAwB,IAAM,EAAIj0G,KAAKk0G,iBAAgB,OAErE,OAFXpsD,EAAc,EAAH,yBAEM9nD,KAAK4zG,QAAQ,kBAAmB,CAAE2C,kBAAmBC,IAAQ,QAAtE,OAAJ/0G,EAAO,EAAH,uBACHzB,KAAKg2G,iBAAiBj4E,EAAIt8B,EAAMqmD,IAAY,QAGZ,MAHY,2BAE7C,KAAOinB,YAAchxC,EACrB,KAAOkyD,gBAAkBlyD,EAAGt8B,KAAK,kEAG9C,oCAEK,SAAuBstE,kJACL,gBAAMA,EAAW,OA4BI,OA5BnCnuE,EAAM,OAENm9B,EAAU,CAAC,EAEjB,CAAC,OAAQ,MAAM/mB,SAAQ,SAAC7N,GACD,MAAfvI,EAAOuI,KACX40B,EAAG50B,GAAOM,QAAQC,QAAQ9I,EAAOuI,IAAMgiE,MAAK,SAAC9uE,GAAC,OAAMA,EAAI,EAAK00G,YAAY10G,GAAI,IAAI,IACrF,IAEA,CAAC,WAAY,WAAY,eAAgB,uBAAwB,SAAS2a,SAAQ,SAAC7N,GAC5D,MAAfvI,EAAOuI,KACX40B,EAAG50B,GAAOM,QAAQC,QAAQ9I,EAAOuI,IAAMgiE,MAAK,SAAC9uE,GAAC,OAAMA,EAAIi/C,GAAU3+C,KAAKN,GAAI,IAAI,IACnF,IAEA,CAAC,QAAQ2a,SAAQ,SAAC7N,GACK,MAAfvI,EAAOuI,KACX40B,EAAG50B,GAAOM,QAAQC,QAAQ9I,EAAOuI,IAAMgiE,MAAK,SAAC9uE,GAAC,OAAY,MAALA,EAAaA,EAAG,IAAI,IAC7E,IAEIuE,EAAOizD,aACP91B,EAAG81B,WAAa7zD,KAAKqwG,UAAUx8C,WAAWjzD,EAAOizD,aAGrD,CAAC,QAAQ78C,SAAQ,SAAC7N,GACK,MAAfvI,EAAOuI,KACX40B,EAAG50B,GAAOM,QAAQC,QAAQ9I,EAAOuI,IAAMgiE,MAAK,SAAC9uE,GAAC,OAAMA,EAAI8sE,EAAQ9sE,GAAI,IAAI,IAC5E,IAAG,KAEI2D,KAAKqwG,UAAS,UAA0BplC,GAAkBltC,GAAG,kDAA9C+uE,mBAAkB,oEAC3C,wBAEK,SAAW3kD,gJACJ,gBAAMA,EAAM,OAkBQ,OAlB7BA,EAAS,EAAH,KAEArpD,EAAc,CAAC,EAEC,MAAlBqpD,EAAO9mD,UACPvC,EAAOuC,QAAUrB,KAAK+wG,YAAY5oD,EAAO9mD,UAG7C,CAAC,YAAa,UAAU2V,SAAQ,SAAC7N,GACH,MAAhBg/C,EAAQh/C,KAClBrK,EAAOqK,GAAag/C,EAAQh/C,GAChC,IAEA,CAAC,YAAa,WAAW6N,SAAQ,SAAC7N,GACJ,MAAhBg/C,EAAQh/C,KAClBrK,EAAOqK,GAAO,EAAK+sG,aAAmB/tD,EAAQh/C,IAClD,IAAG,KAEInJ,KAAKqwG,UAAS,UAAcplC,GAAkBnsE,GAAO,kDAAtCqpD,OAAM,oEAC/B,mBAEK,SAAM4mB,EAAiC+N,EAAoBwuB,qKAS9C,OARXA,GApkDe,IAqkDfpjC,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAOisD,aAAc,CACrF8L,UAAWnL,EAASv8B,YAAAA,IAItB2nC,EAAW3nC,EAAYxqB,GAAE,SAEVvkD,KAAK4zG,QAAQ,OAAQ,CAAE7kC,YAAAA,EAAa+N,SAAAA,IAAW,OAAxD,GAANh+E,EAAS,EAAH,OAGRwsG,GAAW,GAAkB,WAAbxuB,GAAqC,MAAZ45B,GAAgD,eAA5B53G,EAAO6J,UAAU,EAAG,KAAyBygE,EAActqE,GAAU,KAAO,GAAE,iBAmBvI,IAnBuI,SAEjIxB,EAAO+rE,EAAavqE,EAAQ,GAG5B0Y,EAAS6xD,EAAa/rE,EAAM,EAAG,IAChCg+C,GAAU3+C,KAAK6a,GAAQsX,GAAG4nF,IAC3BxuC,GAAOd,WAAW,iCAAkCvB,EAAOnnB,OAAOmoB,eAAgB,CAC9E15D,KAAM,iBACN3C,UAAW,sDACXukE,YAAAA,EAAazxE,KAAMwB,IAKrBq0G,EAAsB,GACtBwD,EAAar7D,GAAU3+C,KAAK0sE,EAAa/rE,EAAM,GAAI,KAAKkiB,WACxDo3F,EAAat7D,GAAU3+C,KAAK0sE,EAAa/rE,EAAMq5G,EAAYA,EAAa,KAAKn3F,WAC7Eq3F,EAAWxtC,EAAa/rE,EAAMq5G,EAAa,IACxCjkF,EAAI,EAAGA,EAAIkkF,EAAYlkF,IAEjB,OADLwqB,EAAMwyD,GAAamH,EAAc,GAAJnkF,KAE/Bw1C,GAAOd,WAAW,yCAA0CvB,EAAOnnB,OAAOmoB,eAAgB,CACtF15D,KAAM,iBACN3C,UAAW,sDACXukE,YAAAA,EAAazxE,KAAMwB,IAG3Bq0G,EAAK13G,KAAKyhD,GAmBK,OAfb82B,EAAW27B,GAAYryG,EAAM,IAG9Bg+C,GAAU3+C,KAAK0sE,EAAa/rE,EAAM,IAAK,MAAM+hB,UAC9C6oD,GAAOd,WAAW,4CAA6CvB,EAAOnnB,OAAOmoB,eAAgB,CACzF15D,KAAM,iBACN3C,UAAW,sDACXukE,YAAAA,EAAazxE,KAAMwB,IAGrBg4G,EAAmBztC,EAAa/rE,EAAM,GAAI,KAG1CsxD,EAAY+gD,GAAYryG,EAAM,KAAI,UAEf0C,KAAK+2G,cAA2BhoC,EAAaiF,EAAUm/B,GAAK,QAYpF,OAXiB,OADZ6D,EAAa,EAAH,OAEZ9uC,GAAOd,WAAW,yCAA0CvB,EAAOnnB,OAAOmoB,eAAgB,CACtF15D,KAAM,iBACN3C,UAAW,sDACXukE,YAAAA,EAAazxE,KAAMwB,IAIrBi/B,EAAK,CACPwmB,GAAImyD,EACJp5G,KAAMisE,EAAU,CAAEutC,EAAkB7G,GAAY,CAAE+G,EAAYpoD,OACjE,kBAEM5uD,KAAKi3G,MAAMl5E,EAAI++C,EAAUwuB,EAAU,IAAE,qCAGxC,KAAM1iG,OAASi9D,EAAOnnB,OAAOisD,aAAY,uEAK1CxhC,EAAQrqE,IAAO,4DAEfopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,OACRjtC,OAAQ,CAAE6lE,YAAAA,EAAa+N,SAAAA,GAAYh+E,OAAAA,EAAQgb,MAAK,QAClD,oEAGT,kBAEK,SAAKi1D,EAA6C+N,yIACpD,gBAAM98E,KAAKq9E,aAAY,OACN,OADM,SACApS,GAAkB,CACrC8D,YAAa/uE,KAAKk3G,uBAAuBnoC,GACzC+N,SAAU98E,KAAKk2G,aAAap5B,GAC5BwR,gBAAiB7kF,QAAQC,QAAQqlE,EAAYuf,mBAC/C,OAJY,OAARW,EAAW,EAAH,uBAKPjvF,KAAKi3G,MAAMhoB,EAASlgB,YAAakgB,EAASnS,SAAUmS,EAASX,gBAAkB,GAAI,IAAE,kDAC/F,yBAEK,SAAYvf,2IACd,gBAAM/uE,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CACnC8D,YAAa/uE,KAAKk3G,uBAAuBnoC,KAC3C,OAEa,OAJT7lE,EAAS,EAAH,cAISlJ,KAAK4zG,QAAQ,cAAe1qG,GAAO,OAA5C,OAANpK,EAAS,EAAH,gCAEDw8C,GAAU3+C,KAAKmC,IAAO,2DAEtBopE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOisD,aAAc,CAC5Ex0D,OAAQ,cACRjtC,OAAAA,EAAQpK,OAAAA,EAAQgb,MAAK,QACvB,4DAET,yBAEK,SAAY23E,yIACE,gBAAMA,EAAa,OAKnB,MAJc,kBAD9BA,EAAgB,EAAH,OAETvpB,GAAOjC,mBAAmB,8BAA+B,OAAQwrB,GACpE,SAEqBzxF,KAAKu9E,YAAYkU,GAAc,OAKpD,OAJc,OADTpwF,EAAU,EAAH,OAET6mE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAO8oB,sBAAuB,CAC9EC,UAAW,eAAF,OAAkB9yD,KAAKC,UAAU68E,GAAe,OAEhE,kBACMpwF,GAAO,kDACjB,uBAEK,SAAU81G,EAAqEC,kJACjF,gBAAMp3G,KAAKq9E,aAAY,OAED,OAFC,SAEK85B,EAAmB,OAO9C,GAPDA,EAAsB,EAAH,KAGfrvD,GAAe,IAEb5+C,EAAiC,CACnCkuG,sBAAuBA,IAGvB7wG,EAAY4wG,EAAqB,IAAK,CAAF,gBACpCjuG,EAAO6mF,UAAYonB,EAAoB,wBAGjB,OAHiB,oBAGXn3G,KAAKk2G,aAAaiB,GAAoB,QAA9DjuG,EAAO4zE,SAAW,EAAH,KACXv2E,EAAY2C,EAAO4zE,YACnBh1B,EAAczpD,SAAS6K,EAAO4zE,SAASn0E,UAAU,GAAI,KACxD,mDAEDu/D,GAAOjC,mBAAmB,kCAAmC,sBAAuBkxC,GAAqB,iCAI1GlL,IAAK,kBAAWzuB,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,6FACL,OADK,SACCx9E,KAAK4zG,QAAQ,WAAY1qG,GAAO,OAAzC,GAGE,OAHPsH,EAAQ,EAAH,MAGM,oBAKW,MAApBtH,EAAO6mF,UAAiB,mBACsB,MAA1C/vF,KAAKqyG,SAAS,KAAOnpG,EAAO6mF,WAAkB,yCAAW,MAAI,UAI9C,MAAnB7mF,EAAO4zE,SAAgB,sBACnBh1B,EAAc9nD,KAAKqyG,SAAS7hG,OAAK,0CAAW,MAAI,sCAIjDjR,GAAS,YAIhB63G,EAAqB,CAAF,gBACftvD,EAAsB,KACjBvsD,EAAI,EAAC,aAAEA,EAAIiV,EAAMg9F,aAAahyG,QAAM,iBACT,GACV,OADhBuiC,EAAKvtB,EAAMg9F,aAAajyG,IACvBusD,YAAmB,iBACtB/pB,EAAG0xD,cAAgB,EAAE,2BAEM,MAApB1xD,EAAG0xD,cAAqB,oBACZ,MAAf3nC,EAAmB,iBACL,OADK,UACC9nD,KAAKi0G,wBAAwB,IAAM,EAAIj0G,KAAKk0G,iBAAgB,QAAhFpsD,EAAc,EAAH,cAIX2nC,EAAiB3nC,EAAc/pB,EAAG+pB,YAAe,IAChC,IAAK2nC,EAAgB,GAC1C1xD,EAAG0xD,cAAgBA,EAAc,QAbMl0F,IAAG,wBAkBgE,OAD5G87G,EAAoBr3G,KAAKqwG,UAAU5C,sBAAsBj9F,IAClDg9F,aAAe6J,EAAa7J,aAAahmG,KAAI,SAACu2B,GAAuB,OAAK,EAAKi4E,iBAAiBj4E,EAAG,IAAE,kBAC3Gs5E,GAAY,iCAGhBr3G,KAAKqwG,UAAU7/F,MAAMA,IAAM,gDAErC,GAAE,CAAE67F,SAAUrsG,QAAO,6DACzB,sBAED,SAASm3G,GACL,OAAwBn3G,KAAKs3G,UAAUH,GAAqB,EAChE,GAAC,sCAED,SAAyBA,GACrB,OAAwCn3G,KAAKs3G,UAAUH,GAAqB,EAChF,GAAC,4BAEK,SAAelnB,gJACjB,gBAAMjwF,KAAKq9E,aAAY,OACL,OADK,SACC4S,EAAe,OAEuC,OAF9EA,EAAkB,EAAH,KAET/mF,EAAS,CAAE+mF,gBAAiBjwF,KAAKqwG,UAAU5uG,KAAKwuF,GAAiB,IAAO,kBAEvEgc,IAAK,kBAAWzuB,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,kFACJ,OADI,SACEx9E,KAAK4zG,QAAQ,iBAAkB1qG,GAAO,OAA/C,GAEE,OAFRpK,EAAS,EAAH,MAEM,mBAC+B,MAAzCkB,KAAKqyG,SAAS,KAAOpiB,GAAwB,yCACtC,MAAI,qCAER1wF,GAAS,OAGiC,GAE/B,OAFhBw+B,EAAK/9B,KAAKqwG,UAAU3C,oBAAoB5uG,IAEvCgpD,YAAmB,iBACtB/pB,EAAG0xD,cAAgB,EAAE,2BAEM,MAApB1xD,EAAG0xD,cAAqB,iBACX,OADW,UACLzvF,KAAKi0G,wBAAwB,IAAM,EAAIj0G,KAAKk0G,iBAAgB,QAAhFpsD,EAAc,EAAH,MAGb2nC,EAAiB3nC,EAAc/pB,EAAG+pB,YAAe,IAChC,IAAK2nC,EAAgB,GAC1C1xD,EAAG0xD,cAAgBA,EAAc,iCAG9BzvF,KAAKg2G,iBAAiBj4E,IAAG,gDACnC,GAAE,CAAEsuE,SAAUrsG,QAAO,kDACzB,mCAEK,SAAsBiwF,gJACxB,gBAAMjwF,KAAKq9E,aAAY,OAEL,OAFK,SAEC4S,EAAe,OAEuC,OAF9EA,EAAkB,EAAH,KAET/mF,EAAS,CAAE+mF,gBAAiBjwF,KAAKqwG,UAAU5uG,KAAKwuF,GAAiB,IAAO,kBAEvEgc,IAAK,kBAAWzuB,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,kFACJ,OADI,SACEx9E,KAAK4zG,QAAQ,wBAAyB1qG,GAAO,OAAtD,GAEE,OAFRpK,EAAS,EAAH,MAEM,mBAC+B,MAAzCkB,KAAKqyG,SAAS,KAAOpiB,GAAwB,yCACtC,MAAI,qCAER1wF,GAAS,UAII,MAApBT,EAAOixF,UAAiB,8CAAWxwF,GAAS,OAEF,GAEnB,OAFrBmwF,EAAU1vF,KAAKqwG,UAAU3gB,QAAQ5wF,IAE3BgpD,YAAmB,iBAC3B4nC,EAAQD,cAAgB,EAAE,2BAEM,MAAzBC,EAAQD,cAAqB,iBAChB,OADgB,UACVzvF,KAAKi0G,wBAAwB,IAAM,EAAIj0G,KAAKk0G,iBAAgB,QAAhFpsD,EAAc,EAAH,MAGb2nC,EAAiB3nC,EAAc4nC,EAAQ5nC,YAAe,IACrC,IAAK2nC,EAAgB,GAC1CC,EAAQD,cAAgBA,EAAc,iCAGnCC,GAAO,gDACjB,GAAE,CAAE2c,SAAUrsG,QAAO,kDACzB,qBAEK,SAAQmoD,2IACV,gBAAMnoD,KAAKq9E,aAAY,OACR,OADQ,SACFpS,GAAkB,CAAE9iB,OAAQnoD,KAAKu3G,WAAWpvD,KAAU,OAClD,OADnBj/C,EAAS,EAAH,cACmBlJ,KAAK4zG,QAAQ,UAAW1qG,GAAO,OAG3D,OAHGymF,EAAI,QACL34E,SAAQ,SAAC0iC,GACS,MAAfA,EAAIk0D,UAAmBl0D,EAAIk0D,SAAU,EAC7C,IAAG,kBACIrB,GAAUS,QAAQhtG,KAAKqwG,UAAU1C,UAAU1oD,KAAKjlD,KAAKqwG,WAArD9D,CAAiE5c,IAAK,mDAChF,2BAEK,2IACF,gBAAM3vF,KAAKq9E,aAAY,gCAChBr9E,KAAK4zG,QAAQ,gBAAiB,CAAC,IAAG,kDAC5C,0BAEK,SAAa92B,yIACJ,gBAAMA,EAAQ,OAAjB,KAEiB,kBAFzBA,EAAW,EAAH,OAE6BA,EAAW,GAAC,iBAK3B,OAJdA,EAAW,GACX5U,GAAOjC,mBAAmB,mBAAoB,WAAY6W,GAC7D,SAEuB98E,KAAKi0G,wBAAwB,IAAM,EAAIj0G,KAAKk0G,iBAAgB,OAE3C,OAFrCpsD,EAAc,EAAH,MACfA,GAAeg1B,GACG,IAAKh1B,EAAc,GAAI,kBAClC9nD,KAAKqwG,UAAUvzB,SAASh1B,IAAY,iCAGxC9nD,KAAKqwG,UAAUvzB,SAASA,IAAS,mDAC3C,yBAGK,SAAY3vE,6IACVqqG,EAAcrqG,EAAI,OACX,GACa,KAAhBqqG,GAAsC,MAAhBA,EAAmB,yCAAW,MAAI,UAI/C,QAATrqG,GAAkC,QAAhBqqG,EAAqB,yCAAW,MAAI,OAG7C,OAH6C,SAGvCx3G,KAAKy3G,aAAaD,EAAa,eAAc,OAAtD,GAGE,OAHN10G,EAAO,EAAH,MAGM,iBAIY,GAHlB6G,EAAW,IAAIymG,GAASpwG,KAAM8C,EAAMqK,GAE1C,KACIqqG,IAAgBrqG,GAAI,sBAAM,OAAN,UAAYxD,EAAS4mG,mBAAkB,gFAAY,MAAI,iCAExE5mG,GAAQ,QAInB6tG,EAAcA,EAAY7lF,MAAM,KAAKx1B,MAAM,GAAG8R,KAAK,KAAK,kEAG/D,0BAEK,SAAad,EAAcs6D,2IAGb,OAFC,MAAbA,IAAqBA,EAAY,OAAQ,SAEvBznE,KAAKq9E,aAAY,OAalB,OAbf/3B,EAAU,EAAH,MAGAu9C,YACT36B,GAAOd,WACH,+BACAvB,EAAOnnB,OAAO8oB,sBACd,CAAEC,UAAAA,EAAWniB,QAASA,EAAQn4C,OAErC,kBAI0BnN,KAAK4E,KAAK,CAC7B2/C,GAAIe,EAAQu9C,WACZvlG,KAAO,aAAe+qG,GAASl7F,GAAMxE,UAAU,KACjD,OAHY,OAAR+uG,EAAW,EAAH,uBAIP13G,KAAKqwG,UAAUQ,YAAY6G,IAAS,mEAKxC,MAAI,4DACd,yBAEK,SAAYvqG,yIACP,gBAAMA,EAAI,OAAb,OAAJA,EAAO,EAAH,gCAIO1D,QAAQC,QAAQ1J,KAAKqwG,UAAUhvG,QAAQ8L,KAAM,oCAGhD5G,EAAY4G,GAAO,CAAF,mCAQR,MALI,kBAAVA,GACP+6D,GAAOjC,mBAAmB,mBAAoB,OAAQ94D,GAG1D,UACuBnN,KAAK23G,YAAYxqG,GAAK,QAA/B,GAARxD,EAAW,EAAH,KACC,CAAF,yCAAW,MAAI,QAErB,OAFqB,UAEfA,EAAS+kE,aAAY,oGACrC,2BAEK,SAAcrtE,6IACN,gBAAMA,EAAO,OAKF,OALrBA,EAAU,EAAH,KACPA,EAAUrB,KAAKqwG,UAAUhvG,QAAQA,GAE3B8uC,EAAO9uC,EAAQsH,UAAU,GAAGpH,cAAgB,gBAAe,SAEtCvB,KAAKy3G,aAAatnE,EAAM,iBAAgB,OAAjD,GACE,OADdynE,EAAe,EAAH,MACM,0CAAW,MAAI,QAGb,OAHa,KAG1BlI,GAAY,UAAO1vG,KAAK4E,KAAK,CACtC2/C,GAAIqzD,EACJt6G,KAAO,aAAe+qG,GAASl4D,GAAMxnC,UAAU,KACjD,QAEW,OAFX,YAHIwE,GAAO,EAAH,WAGN,GAAC,UAEcnN,KAAKu9E,YAAYpwE,GAAK,QAA/B,GAAG,EAAH,MACE9L,EAAO,0CAAW,MAAI,iCAE3B8L,GAAI,mDACd,uBAEK,SAAU0qG,qJACiB,GAAzBluG,EAAqB,MACrBpD,EAAYsxG,GAAgB,CAAF,gBAMF,OAJlBx2G,EAAUrB,KAAKqwG,UAAUhvG,QAAQw2G,GAEjC1nE,EAAO9uC,EAAQsH,UAAU,GAAGpH,cAAgB,gBAAe,SAEnCvB,KAAKy3G,aAAatnE,EAAM,aAAY,OAA7C,GAAf2nE,EAAkB,EAAH,KACC,CAAF,wCAAW,MAAI,OAKhB,OAFnBnuG,EAAW,IAAIymG,GAASpwG,KAAM83G,EAAiB3nE,GAAM,oBAE5BxmC,EAASouG,YAAW,QAA7B,KAAN5G,EAAS,EAAH,MACA,CAAF,yCAAWA,EAAOj0D,KAAG,8DAE3B,KAAMt0C,OAASi9D,EAAOnnB,OAAOmoB,eAAc,oCAMrB,OANqB,eAMlC6oC,GAAY,UAAO1vG,KAAK4E,KAAK,CACtC2/C,GAAIuzD,EACJx6G,KAAO,aAAe+qG,GAASl4D,GAAMxnC,UAAU,KACjD,QACS,OADT,YAHIwE,GAAO,EAAH,WAGN,GAAC,UACYnN,KAAK23G,YAAYxqG,GAAK,QAAvCxD,EAAW,EAAH,2DAEJ,KAAMf,OAASi9D,EAAOnnB,OAAOmoB,eAAc,6DACxC,MAAI,gCAKJ,OALI,UAKE7mE,KAAK23G,YAAYE,GAAc,QAAxC,GAARluG,EAAW,EAAH,KACO,CAAF,yCAAW,MAAI,QAGjB,OAHiB,UAGXA,EAASouG,YAAW,QAA7B,GACE,OADR5G,EAAS,EAAH,MACM,0CAAW,MAAI,iCAE1BA,EAAOj0D,KAAG,qEACpB,qBAED,SAAQ/G,EAAgBjtC,GACpB,OAAOg/D,GAAOd,WAAWjxB,EAAS,mBAAoB0vB,EAAOnnB,OAAOs5D,gBAAiB,CAAEvwC,UAAWtxB,GACtG,GAAC,yBAED,SAAYjyC,GACRlE,KAAKu0G,QAAWv0G,KAAKuE,QAAQ4jD,QAAO,SAAClnD,GAAC,OAAKA,EAAEg3G,UAAU,IAAEz8G,OAAS,CACtE,GAAC,wBAED,SAAW0I,GACPlE,KAAKu0G,QAAWv0G,KAAKuE,QAAQ4jD,QAAO,SAAClnD,GAAC,OAAKA,EAAEg3G,UAAU,IAAEz8G,OAAS,CACtE,GAAC,+BAED,SAAkBihF,EAAsB33E,EAAoBisF,GACxD,IAAM7sF,EAAQ,IAAI6qG,GAAMne,GAAYnU,GAAY33E,EAAUisF,GAI1D,OAHA/wF,KAAKuE,QAAQ9I,KAAKyI,GAClBlE,KAAKk4G,YAAYh0G,GAEVlE,IACX,GAAC,gBAED,SAAGy8E,EAAsB33E,GACrB,OAAO9E,KAAKuzF,kBAAkB9W,EAAW33E,GAAU,EACvD,GAAC,kBAED,SAAK23E,EAAsB33E,GACvB,OAAO9E,KAAKuzF,kBAAkB9W,EAAW33E,GAAU,EACvD,GAAC,kBAGD,SAAK23E,GAAyC,kCAAhBt4E,EAAgB,iCAAhBA,EAAgB,kBAC1C,IAAIrF,GAAS,EAETq5G,EAAwB,GAExBC,EAAWxnB,GAAYnU,GAoB3B,OAnBAz8E,KAAKuE,QAAUvE,KAAKuE,QAAQ4jD,QAAO,SAACjkD,GAChC,OAAIA,EAAMqtC,MAAQ6mE,IAElBlnB,YAAW,WACPhtF,EAAMY,SAASq0D,MAAM,EAAMh1D,EAC/B,GAAG,GAEHrF,GAAS,GAELoF,EAAM6sF,OACNonB,EAAQ18G,KAAKyI,IACN,GAIf,IAEAi0G,EAAQnhG,SAAQ,SAAC9S,GAAY,EAAKm0G,WAAWn0G,EAAQ,IAE9CpF,CACX,GAAC,2BAED,SAAc29E,GACV,IAAKA,EAAa,OAAOz8E,KAAKuE,QAAQ/I,OAEtC,IAAI48G,EAAWxnB,GAAYnU,GAC3B,OAAOz8E,KAAKuE,QAAQ4jD,QAAO,SAACjkD,GACxB,OAAQA,EAAMqtC,MAAQ6mE,CAC1B,IAAG58G,MACP,GAAC,uBAED,SAAUihF,GACN,GAAiB,MAAbA,EACA,OAAOz8E,KAAKuE,QAAQiD,KAAI,SAACtD,GAAK,OAAKA,EAAMY,QAAQ,IAGrD,IAAIszG,EAAWxnB,GAAYnU,GAC3B,OAAOz8E,KAAKuE,QACP4jD,QAAO,SAACjkD,GAAK,OAAMA,EAAMqtC,MAAQ6mE,CAAQ,IACzC5wG,KAAI,SAACtD,GAAK,OAAKA,EAAMY,QAAQ,GACtC,GAAC,iBAED,SAAI23E,EAAsB33E,GAAmB,WACzC,GAAgB,MAAZA,EACA,OAAO9E,KAAKsrD,mBAAmBmxB,GAGnC,IAAM07B,EAAwB,GAE1B7gB,GAAQ,EAER8gB,EAAWxnB,GAAYnU,GAW3B,OAVAz8E,KAAKuE,QAAUvE,KAAKuE,QAAQ4jD,QAAO,SAACjkD,GAChC,OAAIA,EAAMqtC,MAAQ6mE,GAAYl0G,EAAMY,UAAYA,MAC5CwyF,IACJA,GAAQ,EACR6gB,EAAQ18G,KAAKyI,IACN,GACX,IAEAi0G,EAAQnhG,SAAQ,SAAC9S,GAAY,EAAKm0G,WAAWn0G,EAAQ,IAE9ClE,IACX,GAAC,gCAED,SAAmBy8E,GAAqB,WAChC07B,EAAwB,GAC5B,GAAiB,MAAb17B,EACA07B,EAAUn4G,KAAKuE,QAEfvE,KAAKuE,QAAU,OACZ,CACH,IAAM6zG,EAAWxnB,GAAYnU,GAC7Bz8E,KAAKuE,QAAUvE,KAAKuE,QAAQ4jD,QAAO,SAACjkD,GAChC,OAAIA,EAAMqtC,MAAQ6mE,IAClBD,EAAQ18G,KAAKyI,IACN,EACX,IAKJ,OAFAi0G,EAAQnhG,SAAQ,SAAC9S,GAAY,EAAKm0G,WAAWn0G,EAAQ,IAE9ClE,IACX,IAAC,2BAr1CD,WAII,OAHwB,MAApBmyG,KACAA,GAAmB,IAAI5F,IAEpB4F,EACX,GAEA,wBACA,SAAkB7sD,GACd,OAAO+3B,GAAuB,MAAX/3B,EAAmB,YAAaA,EACvD,KAAC,EA/JqB,CAAQ62B,uTC5qB5BjU,GAAS,IAAIrC,EAAOhzD,IAKpBylG,GAAW,CAAE,OAAQ,eAE3B,SAASC,GAAQ9wG,EAAY+wG,GACzB,GAAa,MAAT/wG,EAAiB,OAAO,KAG5B,GAA8B,kBAAnBA,EAAM2D,SAAyB3D,EAAM2D,QAAQ/B,MAAM,YAAa,CACvE,IAAM/L,EAAOiJ,EAAYkB,EAAMnK,MAAQmK,EAAMnK,KAAM,KACnD,IAAKk7G,GAAel7G,EAChB,MAAO,CAAE8N,QAAS3D,EAAM2D,QAAS9N,KAAAA,GAKzC,GAAsB,kBAAXmK,EAAqB,CAC5B,IAAK,IAAM0B,KAAO1B,EAAO,CACrB,IAAM3I,EAASy5G,GAAQ9wG,EAAM0B,GAAMqvG,GACnC,GAAI15G,EAAU,OAAOA,EAEzB,OAAO,KAIX,GAAsB,kBAAX2I,EACP,IACI,OAAO8wG,GAAQ5jG,KAAKI,MAAMtN,GAAQ+wG,EACrB,CAAf,MAAO1+F,GAAQ,CAGrB,OAAO,IACX,CAEA,SAAS2+F,GAAWtiE,EAAgBr8B,EAAY5Q,GAE5C,IAAM6lE,EAAc7lE,EAAO6lE,aAAe7lE,EAAOqtG,kBAIjD,GAAe,SAAXpgE,EAAmB,CACnB,IAAMr3C,EAASy5G,GAAQz+F,GAAO,GAC9B,GAAIhb,EAAU,OAAOA,EAAOxB,KAG5B4qE,GAAOd,WAAW,sFAAuFvB,EAAOnnB,OAAOmoB,eAAgB,CACnIvpE,KAAM,KAAMyxE,YAAAA,EAAaj1D,MAAAA,IAIjC,GAAe,gBAAXq8B,EAA0B,CAE1B,IAAIr3C,EAASy5G,GAAQz+F,EAAM5W,MAAM,GACnB,MAAVpE,IAAkBA,EAASy5G,GAAQz+F,GAAO,IAG1Chb,GACAopE,GAAOd,WAAW,4EAA6EvB,EAAOnnB,OAAOyoB,wBAAyB,CAClIT,OAAQ5nE,EAAOsM,QAAS+qC,OAAAA,EAAQ44B,YAAAA,EAAaj1D,MAAAA,IAOzD,IAAI1O,EAAU0O,EAAM1O,QA4CpB,MA3CI0O,EAAMlR,OAASi9D,EAAOnnB,OAAOisD,cAAgB7wF,EAAMA,OAAyC,kBAAzBA,EAAMA,MAAM1O,QAC/EA,EAAU0O,EAAMA,MAAM1O,QACQ,kBAAhB0O,EAAM5W,KACpBkI,EAAU0O,EAAM5W,KACsB,kBAAxB4W,EAAM4+F,eACpBttG,EAAU0O,EAAM4+F,eAEpBttG,GAAWA,GAAW,IAAI7J,eAGd8H,MAAM,qEACd6+D,GAAOd,WAAW,oDAAqDvB,EAAOnnB,OAAOooB,mBAAoB,CACrGhtD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAKnB3jE,EAAQ/B,MAAM,yBACd6+D,GAAOd,WAAW,8BAA+BvB,EAAOnnB,OAAOsoB,cAAe,CAC1EltD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAKnB3jE,EAAQ/B,MAAM,wEACd6+D,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOuoB,wBAAyB,CAChFntD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAKnB3jE,EAAQ/B,MAAM,2BACd6+D,GAAOd,WAAW,gDAAiDvB,EAAOnnB,OAAO8oB,sBAAuB,CACpG1tD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAInBupC,GAAS7vG,QAAQ0tC,IAAW,GAAK/qC,EAAQ/B,MAAM,wFAC/C6+D,GAAOd,WAAW,4EAA6EvB,EAAOnnB,OAAOyoB,wBAAyB,CAClIrtD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAIjBj1D,CACV,CAEA,SAASkxF,GAAMd,GACX,OAAO,IAAIzgG,SAAQ,SAASC,GACxBwnF,WAAWxnF,EAASwgG,EACxB,GACJ,CAEA,SAASyO,GAAU99D,GACf,GAAIA,EAAQ/gC,MAAO,CAEf,IAAMA,EAAa,IAAI5d,MAAM2+C,EAAQ/gC,MAAM1O,SAG3C,MAFA0O,EAAMlR,KAAOiyC,EAAQ/gC,MAAMlR,KAC3BkR,EAAMxc,KAAOu9C,EAAQ/gC,MAAMxc,KACrBwc,EAGV,OAAO+gC,EAAQ/7C,MACnB,CAEA,SAAS85G,GAAanxG,GAClB,OAAIA,EAAgBA,EAAMlG,cACnBkG,CACX,CAEA,IAAM4iE,GAAoB,CAAC,EAEdwuC,GAAc,0CAKvB,WAAYruC,EAAuBvwB,EAA2B6+D,GAAgC,MAG1F,IAH0F,eAC1F,eAEItuC,IAAqBH,GACrB,MAAM,IAAInuE,MAAM,8EAiBnB,OAdD6uE,IAAe,UAAM,WAAY9wB,GAEX,MAAlB6+D,IAA0BA,EAAiB,GAEhB,kBAApBA,GACP/tC,IAAe,UAAM,WAAY,EAAK9wB,SAASo2D,UAAUhvG,QAAQy3G,IACjE/tC,IAAe,UAAM,SAAU,OAEG,kBAApB+tC,GACd/tC,IAAe,UAAM,SAAU+tC,GAC/B/tC,IAAe,UAAM,WAAY,OAGjC7C,GAAOjC,mBAAmB,2BAA4B,iBAAkB6yC,GAC3E,CACL,CAoLC,OApLA,+BAED,SAAQ7+D,GACJ,OAAOiuB,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAO8oB,sBAAuB,CACrGC,UAAW,WAEnB,GAAC,8BAED,WACI,OAAO,IAAIsxC,GAAuB1uC,GAAmBrqE,KAAKi6C,SAAUj6C,KAAK+yC,UAAY/yC,KAAKg5G,OAC9F,GAAC,wBAED,WAAU,WACN,OAAIh5G,KAAK+yC,SACEtpC,QAAQC,QAAQ1J,KAAK+yC,UAGzB/yC,KAAKi6C,SAAS2c,KAAK,eAAgB,IAAIuU,MAAK,SAACt4B,GAMhD,OALIA,EAASr3C,QAAU,EAAKw9G,QACxB9wC,GAAOd,WAAW,oBAAsB,EAAK4xC,OAAQnzC,EAAOnnB,OAAO8oB,sBAAuB,CACtFC,UAAW,eAGZ,EAAKxtB,SAASo2D,UAAUhvG,QAAQwxC,EAAS,EAAKmmE,QACzD,GACJ,GAAC,sCAED,SAAyBjqC,GAA2C,WAChEA,EAAczD,GAAYyD,GAE1B,IAAMkqC,EAAcj5G,KAAK0uE,aAAavD,MAAK,SAAC9pE,GAExC,OADIA,IAAWA,EAAUA,EAAQE,eAC1BF,CACX,IAKA,GAA4B,MAAxB0tE,EAAY3sB,SAAkB,CAC9B,IAAM82D,EAAW5tC,GAAYyD,GAC7BmqC,EAASv8G,KAAOs8G,EAChBlqC,EAAY3sB,SAAWpiD,KAAKi6C,SAASkjC,YAAY+7B,GAcrD,OAXsB,MAAlBnqC,EAAYxqB,KACZwqB,EAAYxqB,GAAK96C,QAAQC,QAAQqlE,EAAYxqB,IAAI4mB,MAAK,SAAO5mB,GAAE,OAAIi5B,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,+EACrD,MAANj5B,EAAU,yCAAW,MAAI,OACb,OADa,SACPvkD,KAAKi6C,SAASsjC,YAAYh5B,GAAG,OAGlD,OAFc,OADTljD,EAAU,EAAH,OAET6mE,GAAOjC,mBAAmB,qCAAsC,QAAS1hB,GAC5E,kBACMljD,GAAO,+CACjB,KAGE4pE,GAAkB,CACrBltC,GAAIktC,GAAkB8D,GACtBv3D,OAAQyhG,IACT9tC,MAAK,YAAmB,IAAhBptC,EAAE,EAAFA,GAAIvmB,EAAM,EAANA,OAEI,MAAXumB,EAAGphC,KACCohC,EAAGphC,KAAK4E,gBAAkBiW,GAC1B0wD,GAAOjC,mBAAmB,wBAAyB,cAAe8I,GAGtEhxC,EAAGphC,KAAO6a,EAGd,IAAMg/F,EAAc,EAAKv8D,SAASj+B,YAAam9F,mBAAmBp7E,EAAI,CAAEphC,MAAM,IAE9E,OAAO,EAAKs9C,SAAS2c,KAAK,sBAAuB,CAAE4/C,IAASrrC,MAAK,SAAC1pE,GAC9D,OAAOA,CACX,IAAG,SAACqY,GAQA,MAP8B,kBAAnBA,EAAM1O,SAAyB0O,EAAM1O,QAAQ/B,MAAM,iBAC1D6+D,GAAOd,WAAW,4BAA6BvB,EAAOnnB,OAAO06D,gBAAiB,CAC1EC,OAAQ,kBACRtqC,YAAahxC,IAId06E,GAAW,kBAAmB3+F,EAAO08F,EAChD,GACJ,GACJ,GAAC,6BAED,SAAgBznC,GACZ,OAAO7G,GAAOd,WAAW,sCAAuCvB,EAAOnnB,OAAO8oB,sBAAuB,CACjGC,UAAW,mBAEnB,GAAC,6BAEK,SAAgBsH,kJAEE,gBAAM/uE,KAAKi6C,SAASg6D,wBAAwB,IAAM,EAAIj0G,KAAKi6C,SAASi6D,iBAAgB,OAG3F,OAHPpsD,EAAc,EAAH,cAGE9nD,KAAKs5G,yBAAyBvqC,GAAY,OAMlD,OANLttE,EAAO,EAAH,uBAMOwqG,IAAK,kBAAWzuB,GAAAA,OAAAA,OAAAA,GAAAA,EAAAA,EAAAA,KAAAA,MAAAA,SAAAA,IAAA,4EACd,OADc,SACRx9E,KAAKi6C,SAAS+1C,eAAevuF,GAAK,OAA3C,GACG,QADLs8B,EAAK,EAAH,MACO,8CAAWx+B,GAAS,gCAC5BS,KAAKi6C,SAAS+7D,iBAAiBj4E,EAAIt8B,EAAMqmD,IAAY,+CAC/D,GAAE,CAAEukD,SAAUrsG,KAAKi6C,WAAW,gDAEK,MAFL,0BAEzB,KAAOg2C,gBAAkBxuF,EAAK,iEAG3C,yBAEK,SAAY2J,2IAEE,OADV9N,EAA6B,kBAAb8N,EAAyBglE,GAAYhlE,GAAUA,EAAO,SACtDpL,KAAK0uE,aAAY,OAE5B,OAFLrtE,EAAU,EAAH,uBAEIrB,KAAKi6C,SAAS2c,KAAK,gBAAiB,CAAEuS,EAAQ7rE,GAAO+D,EAAQE,gBAAgB,gDAQzF,MARyF,0BAE5D,kBAAnB,KAAM6J,SAAyB,KAAMA,QAAQ/B,MAAM,iBAC1D6+D,GAAOd,WAAW,wBAAyBvB,EAAOnnB,OAAO06D,gBAAiB,CACtEC,OAAQ,cACR18G,KAAM0E,EACNk4G,YAAanuG,IAEpB,iEAGR,gCAEK,SAAmBA,2IAEL,OADV9N,EAA6B,kBAAb8N,EAAyBglE,GAAYhlE,GAAUA,EAAO,SACtDpL,KAAK0uE,aAAY,OAI5B,OAJLrtE,EAAU,EAAH,uBAIIrB,KAAKi6C,SAAS2c,KAAK,WAAY,CAAEv1D,EAAQE,cAAe4nE,EAAQ7rE,KAAQ,gDAQpF,MARoF,0BAEvD,kBAAnB,KAAM8N,SAAyB,KAAMA,QAAQ/B,MAAM,iBAC1D6+D,GAAOd,WAAW,wBAAyBvB,EAAOnnB,OAAO06D,gBAAiB,CACtEC,OAAQ,qBACR18G,KAAM0E,EACNk4G,YAAanuG,IAEpB,iEAGR,4BAEK,SAAegP,EAAyBtD,EAA8CrP,kJAEtE,gBAAM04F,GAAAA,aAA+B/lF,EAAQtD,EAAOrP,GAAO,SAAC0F,GAC1E,OAAO,EAAK8sC,SAASsjC,YAAYpwE,EACrC,IAAE,OAEc,OAJVizF,EAAY,EAAH,cAIOpgG,KAAK0uE,aAAY,OAG5B,OAHLrtE,EAAU,EAAH,uBAGIrB,KAAKi6C,SAAS2c,KAAK,uBAAwB,CACpDv1D,EAAQE,cACRoT,KAAKC,UAAUurF,GAAAA,WAA6BC,EAAUhmF,OAAQtD,EAAOspF,EAAU34F,UACjF,gDAQD,MARC,0BAE4B,kBAAnB,KAAM2D,SAAyB,KAAMA,QAAQ/B,MAAM,iBAC1D6+D,GAAOd,WAAW,wBAAyBvB,EAAOnnB,OAAO06D,gBAAiB,CACtEC,OAAQ,iBACR18G,KAAM0E,EACNk4G,YAAa,CAAEn/F,OAAQgmF,EAAUhmF,OAAQtD,MAAAA,EAAOrP,MAAO24F,EAAU34F,SAExE,iEAGR,oBAEK,SAAO0xF,2IAGO,OAFVl/C,EAAWj6C,KAAKi6C,SAAQ,SAERj6C,KAAK0uE,aAAY,OAA1B,OAAPrtE,EAAU,EAAH,uBAEN44C,EAAS2c,KAAK,yBAA0B,CAAEv1D,EAAQE,cAAe43F,EAAU,QAAO,oDAC5F,EA/MsB,CAAQtc,IAkN7Bk8B,GAAuB,qGAgBxB,OAhBwB,uCACzB,SAAgBhqC,GAA2C,WACvD,OAAO/uE,KAAKs5G,yBAAyBvqC,GAAa5D,MAAK,SAAC1pE,GACpD,MAA4B,CACxBA,KAAMA,EACN9B,MAAO,KACPyiD,SAAU,KACVN,SAAU,KACVxkD,KAAM,KACNmK,MAAO,KACPwC,QAAS,KACTwlF,cAAe,EACf9yF,KAAM,KACN6yF,KAAM,SAACC,GAA6B,OAAO,EAAKx1C,SAAS47D,mBAAmBp0G,EAAMguF,EAAgB,EAE1G,GACJ,KAAC,EAhBwB,CAAQopB,IAmB/Bl8B,GAAuD,CACzD1yE,SAAS,EAAM3M,MAAM,EAAM8kD,UAAU,EAAMN,UAAS,EAAMniD,OAAO,EAAM4kD,IAAI,EAAM98C,OAAO,EACxFyN,MAAM,EAAM2+C,YAAY,EACxB9R,cAAc,EAAMC,sBAAsB,GAGjC2U,GAAgB,0CAiBzB,WAAYzZ,EAA+BoI,GAAoB,sBAC3D,IAAIk0D,EAAgDl0D,EA4BlC,OAzBI,MAAlBk0D,IACAA,EAAiB,IAAI/vG,SAAQ,SAACC,EAASglF,GACnCwC,YAAW,WACP,EAAKuhB,gBAAgBtnC,MAAK,SAAC7lB,GACvB57C,EAAQ47C,EACZ,IAAG,SAACxrC,GACA40E,EAAO50E,EACX,GACJ,GAAG,EACP,KAGJ,cAAM0/F,GAGDt8D,IAAOA,EAAM8tB,GAAwB,EAAKhvD,YAAa,aAA1CgvD,IAGdD,IAAe,UAAM,aADL,kBAAT7tB,EAC2B71C,OAAOotD,OAAO,CAC5CvX,IAAKA,IAG0B71C,OAAOotD,OAAO6W,GAAYpuB,KAGjE,EAAKu8D,QAAU,GAAG,CACtB,CA6SC,OA7SA,4BArCD,WAII,OAH4B,MAAxBz5G,KAAK05G,kBACL15G,KAAK05G,gBAAkB,CAAC,GAErB15G,KAAK05G,eAChB,GAAC,2BAsCD,WAAa,WAST,OARK15G,KAAK25G,OAAsB,gBAC5B35G,KAAK25G,OAAsB,cAAI35G,KAAK45G,yBAGpC1oB,YAAW,WACP,EAAKyoB,OAAsB,cAAI,IACnC,GAAG,IAEA35G,KAAK25G,OAAsB,aACtC,GAAC,oCAEK,mJACF,gBAAM3O,GAAM,GAAE,OAIA,OAFV/gG,EAAU,KAAI,kBAEEjK,KAAK42D,KAAK,cAAe,IAAI,OAA7C3sD,EAAU,EAAH,4BAGO,OAHP,6CAGajK,KAAK42D,KAAK,cAAe,IAAI,QAA7C3sD,EAAU,EAAH,mEAIA,MAAXA,EAAe,iBAC+E,OAAxFozE,EAAarS,GAA4ChrE,KAAKgc,YAAa,cAAa,4BAEnFqhE,EAAW/hC,GAAU3+C,KAAKsN,GAASuV,aAAW,4DAE9C0oD,GAAOd,WAAW,2BAA4BvB,EAAOnnB,OAAOw0D,cAAe,CAC9EjpG,QAASA,EACT/F,MAAO,iBACP0nG,YAAa,EAAF,MACb,iCAIH1jC,GAAOd,WAAW,2BAA4BvB,EAAOnnB,OAAOw0D,cAAe,CAC9EhvG,MAAO,eACT,2EACL,uBAED,SAAU40G,GACN,OAAO,IAAID,GAAcxuC,GAAmBrqE,KAAM84G,EACtD,GAAC,gCAED,SAAmBA,GACf,OAAO94G,KAAK65G,UAAUf,GAAgBgB,kBAC1C,GAAC,0BAED,WAAY,WACR,OAAO95G,KAAK42D,KAAK,eAAgB,IAAIuU,MAAK,SAACt4B,GACvC,OAAOA,EAASrrC,KAAI,SAAC5I,GAAC,OAAK,EAAKyxG,UAAUhvG,QAAQzC,EAAE,GACxD,GACJ,GAAC,kBAED,SAAKu3C,EAAgBjtC,GAAkB,WAC7BovC,EAAU,CACZnC,OAAQA,EACRjtC,OAAQA,EACR4nE,GAAK9wE,KAAKy5G,UACVM,QAAS,OAGb/5G,KAAKo6C,KAAK,QAAS,CACfi/D,OAAQ,UACR/gE,QAASszB,GAAStzB,GAClB2B,SAAUj6C,OAKd,IAAMoxD,EAAS,CAAE,cAAe,mBAAoB3oD,QAAQ0tC,IAAW,EACvE,GAAIib,GAASpxD,KAAK25G,OAAOxjE,GACrB,OAAOn2C,KAAK25G,OAAOxjE,GAGvB,IAAMr3C,EAASitG,GAAU/rG,KAAKypG,WAAY90F,KAAKC,UAAU0jC,GAAUqgE,IAAWxtC,MAAK,SAACrsE,GAQhF,OAPA,EAAKs7C,KAAK,QAAS,CACfi/D,OAAQ,WACR/gE,QAASA,EACTywD,SAAUjqG,EACVm7C,SAAU,IAGPn7C,CAEX,IAAG,SAACgb,GAQA,MAPA,EAAKsgC,KAAK,QAAS,CACfi/D,OAAQ,WACRv/F,MAAOA,EACPw+B,QAASA,EACT2B,SAAU,IAGRngC,CACV,IAUA,OAPIs3C,IACApxD,KAAK25G,OAAOxjE,GAAUr3C,EACtBoyF,YAAW,WACP,EAAKyoB,OAAOxjE,GAAU,IAC1B,GAAG,IAGAr3C,CACX,GAAC,4BAED,SAAeq3C,EAAgBjtC,GAC3B,OAAQitC,GACJ,IAAK,iBACD,MAAO,CAAE,kBAAmB,IAEhC,IAAK,cACD,MAAO,CAAE,eAAgB,IAE7B,IAAK,aACD,MAAO,CAAE,iBAAkB,CAAEyiE,GAAa1vG,EAAO7H,SAAU6H,EAAO4zE,WAEtE,IAAK,sBACD,MAAO,CAAE,0BAA2B,CAAE87B,GAAa1vG,EAAO7H,SAAU6H,EAAO4zE,WAE/E,IAAK,UACD,MAAO,CAAE,cAAe,CAAE87B,GAAa1vG,EAAO7H,SAAU6H,EAAO4zE,WAEnE,IAAK,eACD,MAAO,CAAE,mBAAoB,CAAE87B,GAAa1vG,EAAO7H,SAAUsoE,EAAWzgE,EAAOitG,SAAU,IAAKjtG,EAAO4zE,WAEzG,IAAK,kBACD,MAAO,CAAE,yBAA0B,CAAE5zE,EAAOqtG,oBAEhD,IAAK,WACD,OAAIrtG,EAAO4zE,SACA,CAAE,uBAAwB,CAAE5zE,EAAO4zE,WAAY5zE,EAAOkuG,sBACtDluG,EAAO6mF,UACP,CAAE,qBAAsB,CAAE7mF,EAAO6mF,YAAa7mF,EAAOkuG,sBAEzD,KAEX,IAAK,iBACD,MAAO,CAAE,2BAA4B,CAAEluG,EAAO+mF,kBAElD,IAAK,wBACD,MAAO,CAAE,4BAA6B,CAAE/mF,EAAO+mF,kBAEnD,IAAK,OAED,MAAO,CAAE,WAAY,CADMjlB,GAAgGhrE,KAAKgc,YAAa,qBACtHm9F,CAAmBjwG,EAAO6lE,YAAa,CAAEpyE,MAAM,IAASuM,EAAO4zE,WAG1F,IAAK,cAED,MAAO,CAAE,kBAAmB,CADD9R,GAAgGhrE,KAAKgc,YAAa,qBAC/Gm9F,CAAmBjwG,EAAO6lE,YAAa,CAAEpyE,MAAM,MAGjF,IAAK,UAID,OAHIuM,EAAOi/C,QAAmC,MAAzBj/C,EAAOi/C,OAAO9mD,UAC/B6H,EAAOi/C,OAAO9mD,QAAUu3G,GAAa1vG,EAAOi/C,OAAO9mD,UAEhD,CAAE,cAAe,CAAE6H,EAAOi/C,SAMzC,OAAO,IACX,GAAC,qBAEK,SAAQhS,EAAgBjtC,gJAGX,SAAXitC,GAAgC,gBAAXA,EAAwB,gBAChB,KAAvBpY,EAAK70B,EAAO6lE,cACG,MAAXhxC,EAAG7oB,OAAgBomC,GAAU3+C,KAAKohC,EAAG7oB,MAAMmK,SAAQ,mBAElC,MAAnB0e,EAAGgkB,cAAmD,MAA3BhkB,EAAGikB,qBAA4B,gBAC1C,OAD0C,SACpChiD,KAAKs9E,aAAY,OACX,OADtBI,EAAU,EAAH,MACD37B,cAAwD,MAAhC27B,EAAQ17B,wBAExC94C,EAASoiE,GAAYpiE,IACd6lE,YAAczD,GAAYvtC,UAC1B70B,EAAO6lE,YAAY75D,MAC7B,OAWF,OAJC,OAFN/Q,EAAOnE,KAAKg6G,eAAe7jE,EAASjtC,KAGtCg/D,GAAOd,WAAWjxB,EAAS,mBAAoB0vB,EAAOnnB,OAAOs5D,gBAAiB,CAAEvwC,UAAWtxB,IAC9F,oBAEgBn2C,KAAK42D,KAAKzyD,EAAK,GAAIA,EAAK,IAAG,qGAEjCs0G,GAAWtiE,EAAQ,EAAF,GAASjtC,IAAO,6DAE/C,yBAED,SAAYhF,GACU,YAAdA,EAAMqtC,KAAqBvxC,KAAKi6G,iBACpC,0DAAkB/1G,EACtB,GAAC,2BAED,WACI,GAA2B,MAAvBlE,KAAKk6G,eAAT,CACA,IAAM71G,EAAOrE,KAEPm6G,EAAiCn6G,KAAK42D,KAAK,kCAAmC,IACpF52D,KAAKk6G,eAAiBC,EAEtBA,EAAchvC,MAAK,SAASivC,GAgCxB,OA/BA,SAASnO,IACL5nG,EAAKuyD,KAAK,uBAAwB,CAAEwjD,IAAYjvC,MAAK,SAASkvC,GAC1D,GAAIh2G,EAAK61G,gBAAkBC,EAAiB,OAAO,KAEnD,IAAIG,EAAM7wG,QAAQC,UAYlB,OAXA2wG,EAAOrjG,SAAQ,SAASvV,GAEpB4C,EAAKguG,SAAS,KAAO5wG,EAAKF,eAAiB,UAC3C+4G,EAAMA,EAAInvC,MAAK,WACX,OAAO9mE,EAAK2rF,eAAevuF,GAAM0pE,MAAK,SAASptC,GAE3C,OADA15B,EAAK+1C,KAAK,UAAWrc,GACd,IACX,GACJ,GACJ,IAEOu8E,EAAInvC,MAAK,WACZ,OAAO6/B,GAAM,IACjB,GACJ,IAAG7/B,MAAK,WACJ,GAAI9mE,EAAK61G,gBAAkBC,EAM3B,OAFAjpB,YAAW,WAAa+a,GAAQ,GAAG,GAE5B,KALH5nG,EAAKuyD,KAAK,sBAAuB,CAAEwjD,GAM3C,IAAG79B,OAAM,SAACziE,GAAmB,GACjC,CACAmyF,GAEOmO,CACX,IAAG79B,OAAM,SAACziE,GAAmB,IACjC,GAAC,wBAED,SAAW5V,GACW,YAAdA,EAAMqtC,KAAuD,IAAlCvxC,KAAK6E,cAAc,aAC9C7E,KAAKk6G,eAAiB,OAE1B,yDAAiBh2G,EACrB,IAUA,yBA3QA,WACI,MAAO,uBACX,GAAC,gCA0QD,SAA0B6qE,EAAiCwrC,GAEvD,IAAMC,EAAUlvC,GAAYqR,IAC5B,GAAI49B,EACA,IAAK,IAAMpxG,KAAOoxG,EACVA,EAAWpxG,KAAQqxG,EAAQrxG,IAAO,GAI9CkiE,GAAgB0D,EAAayrC,GAE7B,IAAM17G,EAAiD,CAAC,EAmBxD,MAhBA,CAAC,UAAW,WAAY,WAAY,OAAQ,eAAgB,uBAAwB,QAAS,SAASkY,SAAQ,SAAS7N,GACnH,GAA+B,MAArB4lE,EAAa5lE,GAAvB,CACA,IAAM1B,EAAQ+hE,EAASluB,GAAU3+C,KAAWoyE,EAAa5lE,KAC7C,aAARA,IAAsBA,EAAM,OAChCrK,EAAOqK,GAAO1B,EAClB,IAEA,CAAC,OAAQ,KAAM,QAAQuP,SAAQ,SAAS7N,GACL,MAArB4lE,EAAa5lE,KACvBrK,EAAOqK,GAAOggE,EAAc4F,EAAa5lE,IAC7C,IAEU4lE,EAAalb,aACnB/0D,EAAmB,WAAIuuF,GAAoBte,EAAalb,aAGrD/0D,CACX,KAAC,EA5VwB,CAAQq8C,ICnYjCs/D,GAAU,KAEd,IAEI,GAAU,OADVA,GAAMC,WACY,MAAM,IAAIx+G,MAAM,iBACpC,MAAO4d,IACL,IAAMouD,GAAS,IAAIrC,EAAOhzD,IAC1B4nG,GAAK,WACDvyC,GAAOd,WAAW,+CAAgDvB,EAAOnnB,OAAO8oB,sBAAuB,CACnGC,UAAW,mBAEnB,6SCJES,GAAS,IAAIrC,EAAOhzD,IAiBtB8nG,GAAS,EA0BAC,GAAkB,0CAa3B,WAAY19D,EAA6BoI,GAAoB,wBAGzC,QAAZA,GACA4iB,GAAOd,WAAW,uDAAwDvB,EAAOnnB,OAAO8oB,sBAAuB,CAC3GC,UAAW,iBAKf,EADgB,kBAATvqB,EACP,YAAMA,EAAKoI,GAEX,YAAM,aAAcA,IAGnBytD,kBAAoB,EAEzB,EAAK8H,UAAW,EAGZ9vC,IAAe,UAAM,aADL,kBAAT7tB,EAC4B,IAAIw9D,GAAU,EAAKjR,WAAWvsD,KAE9BA,GAGvC6tB,IAAe,UAAM,YAAa,CAAC,GACnCA,IAAe,UAAM,QAAS,CAAC,GAC/BA,IAAe,UAAM,UAAW,CAAC,GACjCA,IAAe,UAAM,kBAAkB,uEAGvC,EAAK+vC,UAAUC,OAAS,WACpB,EAAKF,UAAW,EAChBxzG,OAAOuQ,KAAK,EAAKojG,WAAWhkG,SAAQ,SAAC85D,GACjC,EAAKgqC,UAAUlkD,KAAK,EAAKokD,UAAUlqC,GAAIj2B,QAC3C,GACJ,EAEA,EAAKigE,UAAUG,UAAY,SAACC,GACxB,IAAM59G,EAAO49G,EAAa59G,KACpBwB,EAAS6V,KAAKI,MAAMzX,GAC1B,GAAiB,MAAbwB,EAAOgyE,GAAY,CACnB,IAAMA,EAAKhoE,OAAOhK,EAAOgyE,IACnBx4B,EAAU,EAAK0iE,UAAUlqC,GAG/B,UAFO,EAAKkqC,UAAUlqC,QAEAvxE,IAAlBT,EAAOA,OACPw5C,EAAQl0C,SAAS,KAAMtF,EAAOA,QAE9B,EAAKs7C,KAAK,QAAS,CACfi/D,OAAQ,WACR/gE,QAAS3jC,KAAKI,MAAMujC,EAAQuC,SAC5BkuD,SAAUjqG,EAAOA,OACjBm7C,UAAU,gBAGX,CACH,IAAIngC,EAAe,KACfhb,EAAOgb,OAEPixD,GADAjxD,EAAQ,IAAI5d,MAAM4C,EAAOgb,MAAM1O,SAAW,iBACf,OAAQtM,EAAOgb,MAAMlR,MAAQ,MACxDmiE,GAAoBjxD,EAAO,WAAYxc,IAEvCwc,EAAQ,IAAI5d,MAAM,iBAGtBo8C,EAAQl0C,SAAS0V,OAAOva,GAExB,EAAK66C,KAAK,QAAS,CACfi/D,OAAQ,WACRv/F,MAAOA,EACPw+B,QAAS3jC,KAAKI,MAAMujC,EAAQuC,SAC5BZ,UAAU,kBAKf,GAAsB,qBAAlBn7C,EAAOq3C,OAA+B,CAE7C,IAAMj0B,EAAM,EAAKi5F,MAAMr8G,EAAOoK,OAAOkyG,cACjCl5F,GAEAA,EAAIwnF,YAAY5qG,EAAOoK,OAAOpK,aAIlC8K,QAAQC,KAAK,yBAErB,EAKA,IAAMwxG,EAAWxG,aAAY,WACzB,EAAKz6D,KAAK,OACd,GAAG,KACsC,OAArCihE,EAASpF,OAASoF,EAASpF,SAAU,UAC7C,CAoEC,OAjED,+BACA,WAAiC,OAAOj2G,KAAKs7G,UAAY,GAAC,2BAE1D,WACI,OAAOt7G,KAAKu7G,cAChB,GAAC,2BAED,WACI,OAAO,CACX,EAAC,IAQD,SAAoB9zG,GAChBygE,GAAOd,WAAW,mDAAoDvB,EAAOnnB,OAAO8oB,sBAAuB,CACvGC,UAAW,sBAEnB,GAAC,8BAVD,SAAiB3f,GACbogB,GAAOd,WAAW,iDAAkDvB,EAAOnnB,OAAO8oB,sBAAuB,CACrGC,UAAW,mBAEnB,GAAC,kBAQK,oKACK,MAAI,6CACd,mBAED,SAAYhgE,GACHA,GAELygE,GAAOd,WAAW,0CAA2CvB,EAAOnnB,OAAO8oB,sBAAuB,CAC9FC,UAAW,cAEnB,GAAC,kBAED,SAAKtxB,EAAgBjtC,GAAmB,WAC9BsyG,EAAMb,KAEZ,OAAO,IAAIlxG,SAAQ,SAACC,EAASglF,GAMzB,IAAM7zC,EAAUlmC,KAAKC,UAAU,CAC3BuhC,OAAQA,EACRjtC,OAAQA,EACR4nE,GAAI0qC,EACJzB,QAAS,QAGb,EAAK3/D,KAAK,QAAS,CACfi/D,OAAQ,UACR/gE,QAAS3jC,KAAKI,MAAM8lC,GACpBZ,SAAU,IAGd,EAAK+gE,UAAUlyG,OAAO0yG,IAAQ,CAAEp3G,SAlBhC,SAAkB0V,EAAchb,GAC5B,OAAIgb,EAAgB40E,EAAO50E,GACpBpQ,EAAQ5K,EACnB,EAe0C+7C,QAAAA,GAEtC,EAAKggE,UAAY,EAAKC,UAAUlkD,KAAK/b,EAC7C,GACJ,GAAC,wBAMK,SAAWtJ,EAAaqW,EAAmB8hD,kJAQ/B,OANM,OADhB+R,EAAez7G,KAAK07G,QAAQnqE,MAE5BkqE,EAAehyG,QAAQ2hE,IAAIxjB,GAAOujB,MAAK,SAACvjB,GACpC,OAAO,EAAKgP,KAAK,gBAAiBhP,EACtC,IACA5nD,KAAK07G,QAAQnqE,GAAOkqE,GACvB,SACmBA,EAAY,OAA1BE,EAAQ,EAAH,KACX37G,KAAKm7G,MAAMQ,GAAS,CAAEpqE,IAAAA,EAAKm4D,YAAAA,GAAc,kDAC5C,yBAED,SAAYxlG,GAAY,WACpB,OAAQA,EAAMgR,MACV,IAAK,QACDlV,KAAK47G,WAAW,QAAS,CAAE,aAAc,SAAC98G,GACtC,IAAMgpD,EAAcxM,GAAU3+C,KAAKmC,EAAOod,QAAQsD,WAClD,EAAK6yF,SAAS7hG,MAAQs3C,EACtB,EAAK1N,KAAK,QAAS0N,EACvB,IACA,MAEJ,IAAK,UACD9nD,KAAK47G,WAAW,UAAW,CAAE,2BAA4B,SAAC98G,GACtD,EAAKs7C,KAAK,UAAWt7C,EACzB,IACA,MAEJ,IAAK,SACDkB,KAAK47G,WAAW13G,EAAMqtC,IAAK,CAAE,OAAQvxC,KAAKu3G,WAAWrzG,EAAMikD,UAAW,SAACrpD,GAC7C,MAAlBA,EAAO8uG,UAAmB9uG,EAAO8uG,SAAU,GAC/C,EAAKxzD,KAAKl2C,EAAMikD,OAAQ,EAAKkoD,UAAU1C,UAAU7uG,GACrD,IACA,MAEJ,IAAK,KACD,IAAM+8G,EAAc,SAAC33G,GACjB,IAAMzC,EAAOyC,EAAMzC,KACnB,EAAKyuF,sBAAsBzuF,GAAM0pE,MAAK,SAACukB,GAC9BA,GACL,EAAKt1C,KAAK34C,EAAMiuF,EACpB,GACJ,EAGAmsB,EAAY33G,GAMZlE,KAAK47G,WAAW,KAAM,CAAE,aAAc,SAAC98G,GACnC,EAAKyF,QAAQ4jD,QAAO,SAAClnD,GAAC,MAAiB,OAAXA,EAAEiU,IAAa,IAAG8B,QAAQ6kG,EAC1D,IACA,MAIJ,IAAK,QACL,IAAK,OACL,IAAK,WACL,IAAK,UACL,IAAK,QACD,MAEJ,QACIjyG,QAAQ8vC,IAAI,aAAcx1C,GAGtC,GAAC,wBAED,SAAWA,GAAY,WACfqtC,EAAMrtC,EAAMqtC,IAEhB,GAAmB,OAAfrtC,EAAMgR,KAAe,CAErB,GAAIlV,KAAKuE,QAAQ4jD,QAAO,SAAClnD,GAAC,MAAiB,OAAXA,EAAEiU,IAAa,IAAG1Z,OAC9C,OAEJ+1C,EAAM,UACH,GAAIvxC,KAAK6E,cAAcX,EAAMA,OAEhC,OAGJ,IAAMy3G,EAAQ37G,KAAK07G,QAAQnqE,GACtBoqE,WAEC37G,KAAK07G,QAAQnqE,GACpBoqE,EAAMxwC,MAAK,SAACwwC,GACF,EAAKR,MAAMQ,YACT,EAAKR,MAAMQ,GAClB,EAAK/kD,KAAK,kBAAmB,CAAE+kD,IACnC,IACJ,GAAC,qBAEK,yJAEE37G,KAAK86G,UAAUgB,aAAepB,GAAAA,WAAoB,gBAClD,OADkD,SAC3C,IAAIjxG,SAAQ,SAACC,GAChB,EAAKoxG,UAAUC,OAAS,WACpBrxG,GAAQ,EACZ,EAEA,EAAKoxG,UAAUiB,QAAU,WACrBryG,GAAQ,EACZ,CACJ,IAAG,OAKP1J,KAAK86G,UAAUkB,MAAM,KAAM,mDAC9B,yBArHD,WACI,MAAO,qBACX,KAAC,EAlL0B,CAAQrlD,2SC9CjCuR,GAAS,IAAIrC,EAAOhzD,IAkBbopG,GAAsB,qGAmB9B,OAnB8B,qCACzB,WAAa,+PACW,GACX,OADX32D,EAAUtlD,KAAKslD,SACA,gBACL,OADK,SACCN,EAAMytD,cAAa,WAAE,QAArCntD,EAAU,EAAH,OAGH4iB,GAAOd,WAAW,sBAAuBvB,EAAOnnB,OAAO8nB,cAAe,CAAC,GAItD,MAAjBxmE,KAAKizG,WAELloC,GAAe/qE,KAAM,WAAYslD,GAEjCtlD,KAAKo6C,KAAK,UAAWkL,EAAS,OACjC,gCAEEA,GAAO,oDACjB,EAnB8B,CAAQqR,IAsBrBulD,GAAmB,0CAGrC,WAAY52D,EAAsB62D,GAAY,sBAC1Cj0C,GAAOkU,cAAc,gBAAD,0BAAa8/B,GAGjC52D,EAAU0lB,GAAS,0CAA+C,aAAxDA,CAAsE1lB,GAChF62D,EAASnxC,GAAS,0CAAyC,YAAlDA,CAA+DmxC,GAExE,IAAM1S,EAAaz+B,GAAS,0CAAyB,SAAlCA,CAA4C1lB,EAAS62D,GAUvE,OARD,cAAM1S,EAAYnkD,GAEK,kBAAZ62D,EACPpxC,IAAe,UAAM,SAAUoxC,GACd,MAAVA,GACP90G,OAAOuQ,KAAKukG,GAAQnlG,SAAQ,SAAC7N,GACzB4hE,IAAc,UAAiB5hE,EAAKgzG,EAAOhzG,GAC/C,IACH,CACL,CAkCC,OAlCA,qCAED,WACI++D,GAAOr+D,KAAK,yDAChB,GAAC,iCAED,WACI,OAAO,CACX,GAAC,uBAED,SAAUxI,GACN,OAAO6mE,GAAOd,WACV,wCACAvB,EAAOnnB,OAAO8oB,sBACd,CAAEC,UAAW,aAErB,GAAC,0BAED,WACI,OAAOh+D,QAAQC,QAAQ,GAC3B,IAEA,wBACA,SAAiByyG,GACb,OAAOA,CACX,GAIA,oBACA,SAAc72D,EAAkB62D,GAC5B,OAAOj0C,GAAOd,WAAW,oDAAqDvB,EAAOnnB,OAAOs5D,gBAAiB,CACzGvwC,UAAW,UAEnB,KAAC,EAvDoC,CAAQw0C,ICtC3C/zC,GAAS,IAAIrC,EAAOhzD,IASpBupG,GAAgB,mCAETC,GAAyB,0CAGlC,WAAY/2D,EAAsB62D,GAAY,sBAC1C,IAAMliE,EAAW,IAAIgoD,GAAgB38C,EAAS62D,GAExCj/D,EAAMjD,EAASwvD,WAAWvsD,IAAIh2C,QAAQ,SAAU,MAClBA,QAAQ,eAAgB,mBAGZ,OADhD,cAAMg2C,EAAKjD,EAASqL,SACpBylB,IAAe,UAAM,SAAU9wB,EAASkiE,QAAQ,CACpD,CAIC,OAJA,2CAED,WACI,OAAQn8G,KAAKm8G,SAAWC,EAC5B,KAAC,EAfiC,CAAQxB,IAkBjC3Y,GAAgB,qGAuDxB,OAvDwB,2CAyDzB,WACI,OAAQjiG,KAAKm8G,SAAWC,EAC5B,IAAC,mCAzDD,SAA4B92D,EAAsB62D,GAC9C,OAAO,IAAIE,GAAyB/2D,EAAS62D,EACjD,GAAC,uBAED,SAAiBA,GACb,OAAc,MAAVA,EAAyBC,IACzBD,GAA6B,kBAAZA,GACjBj0C,GAAOjC,mBAAmB,iBAAkB,SAAUk2C,GAEnDA,EACX,GAAC,oBAED,SAAc72D,EAAkB62D,GAC5B,IAAIG,EAAO,KACX,OAAQh3D,EAAQn4C,MACZ,IAAK,YACDmvG,EAAO,gCACP,MACJ,IAAK,SACDA,EAAO,+BACP,MACJ,IAAK,QACDA,EAAO,oCACP,MACJ,IAAK,WACDA,EAAO,mCACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,kBACDA,EAAO,+BACP,MACJ,IAAK,WACDA,EAAO,gCACP,MACJ,IAAK,kBACDA,EAAO,+BACP,MACJ,QACGp0C,GAAOjC,mBAAmB,sBAAuB,UAAWvmC,UAAU,IAG7E,MAAO,CACHyqE,WAAW,EACXjtD,IAAM,WAAkBo/D,EAAOH,EAC/BrS,iBAAkB,SAACwB,EAAiBpuD,GAIhC,OAHIi/D,IAAWC,IACX3N,KAEGhlG,QAAQC,SAAQ,EAC3B,EAER,KAAC,EAvDwB,CAAQwyG,IC9B/Bh0C,GAAS,IAAIrC,EAAOhzD,IAGpBupG,GAAgB,mEAEtB,SAASG,GAAQpvG,GACb,OAAQA,GACJ,IAAK,YACD,MAAO,oBACX,IAAK,UACD,MAAO,4BACX,IAAK,UACD,MAAO,4BACX,IAAK,SACD,MAAO,2BAEX,IAAK,QACD,MAAO,wBAEX,IAAK,WACD,MAAO,yBAEf,OAAO+6D,GAAOjC,mBAAmB,sBAAuB,OAAQ94D,EACpE,CAEO,IAAMo1F,GAAa,qGA+BrB,OA/BqB,2CAGtB,WACI,OAAQviG,KAAKm8G,SAAWC,EAC5B,IAAC,wBAED,SAAiBD,GACb,OAAc,MAAVA,EAAyBC,GACtBD,CACX,GAAC,oBAED,SAAc72D,EAAkB62D,GACd,MAAVA,IAAkBA,EAASC,IAC/B,IAAM3S,EAA6B,CAC/BU,WAAW,EACXjtD,IAAM,WAAcq/D,GAAQj3D,EAAQn4C,MAAQgvG,EAC5CrS,iBAAkB,SAACwB,EAAiBpuD,GAIhC,OAHIi/D,EAAOA,SAAWC,IAClB3N,KAEGhlG,QAAQC,SAAQ,EAC3B,GAQJ,OAL4B,MAAxByyG,EAAOK,gBACP/S,EAAWW,KAAO,GAClBX,EAAWtQ,SAAWgjB,EAAOK,eAG1B/S,CACX,KAAC,EA/BqB,CAAQyS,2SC5B5Bh0C,GAAS,IAAIrC,EAAOhzD,IAEbwvF,GAAmB,qGAoB3B,OApB2B,+BAsBtB,SAAQlsD,EAAgBjtC,GAAW,sPAGtB,mBAAXitC,EAA2B,gBACb,OADa,SACP6O,EAAM4uD,QAAO,UAAC,WAAY,CAAE92B,SAAU,WAAW,OAA1D,OAALtsE,EAAQ,EAAH,uBACJA,EAAM0L,QAAM,gCAGhB8oC,EAAM4uD,QAAO,UAACz9D,EAAQjtC,IAAM,mDACtC,wBA7BD,SAAiBizG,GAIb,OAHc,MAAVA,GACAj0C,GAAOjC,mBAAmB,sCAAuC,SAAUk2C,GAExE,IACX,GAAC,oBAED,SAAc72D,EAAkB62D,GAC5B,IAAIG,EAAO,KACX,GACS,cADDh3D,EAAQn4C,KAERmvG,EAAO,mCAGRp0C,GAAOjC,mBAAmB,sBAAuB,UAAWvmC,UAAU,IAG7E,OAAO48E,CACX,KAAC,EApB2B,CAAQJ,2SCIlCh0C,GAAS,IAAIrC,EAAOhzD,IAM1B,SAAS4pG,GAAuB1tC,GAC5B,IAAMjwE,EAAiC,CAAC,EACxC,IAAK,IAAIqK,KAAO4lE,EACZ,GAA+B,MAArBA,EAAa5lE,GAAvB,CACA,IAAI1B,EAAcsnE,EAAa5lE,GACnB,SAARA,GAA4B,IAAV1B,IAMlBA,EAHM,CAAEyN,MAAM,EAAMktC,UAAU,EAAMN,UAAU,EAAM46D,aAAa,EAAM16D,sBAAsB,EAAMriD,OAAO,EAAM8H,OAAO,GAAQ0B,GACvHqgE,EAASL,EAAQ1hE,IACV,eAAR0B,EACC,IAAMkkF,GAAc5lF,GAAOD,KAAI,SAACxI,GACpC,MAAO,aAAP,OAAqBA,EAAIqC,QAAQ,2BAAoBrC,EAAIy4D,YAAYxpD,KAAK,OAAO,MACrF,IAAGA,KAAK,KAAO,IAEPk7D,EAAQ1hE,GAEpB3I,EAAOqK,GAAO1B,GAElB,OAAO3I,CACX,CAEA,SAAS65G,GAAU75G,GAEf,GAAqB,GAAjBA,EAAOoqG,SAAmC,qBAAnBpqG,EAAOsM,SAAqD,0BAAnBtM,EAAOsM,SACvE,OAAOtM,EAAOA,OAGlB,GAAqB,GAAjBA,EAAOoqG,QAA0C,kBAApBpqG,EAAOsM,UAA0BtM,EAAOsM,QAAQ/B,MAAM,OAAQ,CAC3F,IAAMyQ,EAAa,IAAI5d,MAAM,oBAK7B,MAJA4d,EAAMhb,OAAS6V,KAAKC,UAAU9V,IACzBA,EAAOA,QAAU,IAAIyC,cAAckH,QAAQ,eAAiB,IAC7DqR,EAAM+xF,eAAgB,GAEpB/xF,EAGV,OAAOhb,EAAOA,MAClB,CAEA,SAAS69G,GAAc79G,GAEnB,GAAIA,GAAkC,GAAlBA,EAAQoqG,QAAwC,SAAnBpqG,EAAQsM,UAAuBtM,EAAOA,QAAU,IAAIyC,cAAckH,QAAQ,eAAiB,EAAG,CAC3I,IAAMqR,EAAa,IAAI5d,MAAM,sBAG7B,MAFA4d,EAAMhb,OAAS6V,KAAKC,UAAU9V,GAC9Bgb,EAAM+xF,eAAgB,EAChB/xF,EAGV,GAAsB,OAAlBhb,EAAOi7G,QAAkB,CAEzB,IAAMjgG,EAAa,IAAI5d,MAAM,oBAE7B,MADA4d,EAAMhb,OAAS6V,KAAKC,UAAU9V,GACxBgb,EAGV,GAAIhb,EAAOgb,MAAO,CAEd,IAAMA,EAAa,IAAI5d,MAAM4C,EAAOgb,MAAM1O,SAAW,iBAGrD,MAFItM,EAAOgb,MAAMlR,OAAQkR,EAAMlR,KAAO9J,EAAOgb,MAAMlR,MAC/C9J,EAAOgb,MAAMxc,OAAQwc,EAAMxc,KAAOwB,EAAOgb,MAAMxc,MAC7Cwc,EAGV,OAAOhb,EAAOA,MAClB,CAGA,SAAS89G,GAAY9/B,GACjB,GAAiB,YAAbA,EAA0B,MAAM,IAAI5gF,MAAM,yBAC9C,MAAiB,WAAb4gF,EAAgCA,EAE7Bz+E,SAASy+E,EAASn0E,UAAU,GAAI,GAC3C,CAGA,SAAS8vG,GAAWtiE,EAAgBr8B,EAAYi1D,GAG5C,GAAe,SAAX54B,GAAqBr8B,EAAMlR,OAASi9D,EAAOnnB,OAAOisD,aAAc,CAChE,IAAM1pG,EAAI6Y,EAAMA,MAGhB,GAAI7Y,IAAMA,EAAEmK,QAAQ/B,MAAM,cAAgBpI,EAAEmK,QAAQ/B,MAAM,wBAAyB,CAE/E,IAAI/L,EAAO2D,EAAE3D,KAGb,GAFIA,IAAQA,EAAO,KAAOA,EAAK4J,QAAQ,SAAU,KAE7CX,EAAYjJ,GAAS,OAAOA,EAEhC4qE,GAAOd,WAAW,wCAAyCvB,EAAOnnB,OAAOmoB,eAAgB,CACrF/sD,MAAAA,EAAOxc,KAAM,QAMzB,IAAI8N,EAAU0O,EAAM1O,QAuCpB,MAtCI0O,EAAMlR,OAASi9D,EAAOnnB,OAAOisD,eACzB7wF,EAAMA,OAAyC,kBAAzBA,EAAMA,MAAM1O,QAClCA,EAAU0O,EAAMA,MAAM1O,QACQ,kBAAhB0O,EAAM5W,KACpBkI,EAAU0O,EAAM5W,KACsB,kBAAxB4W,EAAM4+F,eACpBttG,EAAU0O,EAAM4+F,gBAGxBttG,GAAWA,GAAW,IAAI7J,eAGd8H,MAAM,uBACd6+D,GAAOd,WAAW,oDAAqDvB,EAAOnnB,OAAOooB,mBAAoB,CACtGhtD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAKlB3jE,EAAQ/B,MAAM,8EACd6+D,GAAOd,WAAW,8BAA+BvB,EAAOnnB,OAAOsoB,cAAe,CAC3EltD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAKlB3jE,EAAQ/B,MAAM,wCACb6+D,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAOuoB,wBAAyB,CACjFntD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAInB3jE,EAAQ/B,MAAM,4DACd6+D,GAAOd,WAAW,4EAA6EvB,EAAOnnB,OAAOyoB,wBAAyB,CAClIrtD,MAAAA,EAAOq8B,OAAAA,EAAQ44B,YAAAA,IAIjBj1D,CACV,CAEO,IAAMioF,GAAkB,0CAI3B,WAAYz8C,EAAsB62D,GAAe,MAIE,OAJF,eAC7C,cAAM72D,GAENylB,IAAe,UAAM,UAAW,EAAK8xC,cACrC9xC,IAAe,UAAM,SAAUoxC,GAAU,MAAM,CACnD,CA6RC,OA7RA,kCAED,WACI,OAAOn8G,KAAKslD,QAAUtlD,KAAKslD,QAAQn4C,KAAM,WACrC,IAAK,YACD,MAAO,2BACX,IAAK,SACD,MAAO,kCACX,IAAK,UACD,MAAO,mCACX,IAAK,QACD,MAAO,8BACX,IAAK,WACD,MAAO,sCACX,IAAK,WACD,MAAO,0BACX,IAAK,kBACD,MAAO,iCACX,IAAK,WACD,MAAO,sCACX,IAAK,kBACD,MAAO,6CAIf,OAAO+6D,GAAOjC,mBAAmB,sBAAuB,UAAWjmE,KAAKslD,QAAQn4C,KACpF,GAAC,oBAED,SAAOyF,EAAgB1J,GACnB,IAAM4zG,EAAQz1G,OAAOuQ,KAAK1O,GAAQvK,QAAO,SAACoqE,EAAO5/D,GAC7C,IAAM1B,EAAQyB,EAAOC,GAIrB,OAHa,MAAT1B,IACAshE,GAAS,IAAJ,OAAS5/D,EAAI,YAAK1B,IAEpBshE,CACX,GAAG,IACGozC,EAAWn8G,KAAKm8G,OAAM,kBAAgBn8G,KAAKm8G,QAAW,GAC5D,MAAO,GAAP,OAAWn8G,KAAK+8G,QAAQ,uBAAgBnqG,GAAO,OAAIkqG,GAAM,OAAIX,EACjE,GAAC,wBAED,WACI,MAAO,GAAP,OAAWn8G,KAAK+8G,QAAQ,OAC5B,GAAC,yBAED,SAAYnqG,EAAgB1J,GAGxB,OAFAA,EAAO0J,OAASA,EAChB1J,EAAO8zG,OAASh9G,KAAKm8G,OACdjzG,CACX,GAAC,mBAEK,SAAM0J,EAAgB1J,EAA6B+zG,0JA8BtC,OA7BT//D,EAAO+/D,EAAOj9G,KAAKk9G,aAAcl9G,KAAKuoG,OAAO31F,EAAQ1J,GACrD2xC,EAAWoiE,EAAOj9G,KAAKm9G,YAAYvqG,EAAQ1J,GAAS,KACpDk0G,EAAuB,UAAXxqG,EAAsB+pG,GAAehE,GAEvD34G,KAAKo6C,KAAK,QAAS,CACfi/D,OAAQ,UACR/gE,QAAS4E,EACTjD,SAAUj6C,OAGRypG,EAA6B,CAC/BvsD,IAAKA,EACL6sD,qBAAsB,IACtBD,iBAAkB,SAACwB,EAAiBpuD,GAIhC,OAHI,EAAKqxD,uBACLE,KAEGhlG,QAAQC,SAAQ,EAC3B,GAGA2zG,EAAqB,KACrBxiE,IACA4uD,EAAWhB,QAAU,CAAE,eAAgB,oDACvC4U,EAAah2G,OAAOuQ,KAAKijC,GAASrzC,KAAI,SAAC2B,GACnC,MAAO,GAAP,OAAWA,EAAI,YAAK0xC,EAAQ1xC,GAChC,IAAG8E,KAAK,MACX,SAEoB89F,GAAUtC,EAAY4T,EAAYD,GAAYT,IAAc,OAO9E,OAPG79G,EAAS,EAAH,KAEZkB,KAAKo6C,KAAK,QAAS,CACfi/D,OAAQ,WACR/gE,QAAS4E,EACT6rD,SAAUn9B,GAAS9sE,GACnBm7C,SAAUj6C,OACX,kBAEIlB,GAAM,mDAChB,2BAEK,oKACKkB,KAAKslD,SAAO,kDACtB,qBAEK,SAAQnP,EAAgBjtC,GAAW,wQAE7BitC,EAAM,OACL,mBADK,KACW,EAGhB,gBAHgB,KAGH,EAGb,eAHa,KAGD,EAQZ,wBARY,KAQS,EAOrB,YAPqB,KAOZ,EAOT,iBAPS,KAOK,EAQd,oBARc,KAQG,EAQjB,aARiB,KAQP,GAUV,mBAVU,KAUM,GAMhB,0BANgB,KAMO,GAMvB,SANuB,KAMjB,GAgBN,gBAhBM,KAgBO,GAYb,YAZa,KAYJ,GAmDT,kBAnDS,KAmDM,4CAhJTn2C,KAAK8oG,MAAM,QAAS,CAAEuQ,OAAQ,qBAAoB,gCAGlDr5G,KAAK8oG,MAAM,QAAS,CAAEuQ,OAAQ,kBAAiB,gCAI/Cr5G,KAAK8oG,MAAM,UAAW,CACzBuQ,OAAQ,UACRh4G,QAAS6H,EAAO7H,QAChBkwC,IAAKroC,EAAO4zE,YACd,gCAGK98E,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,0BACRh4G,QAAS6H,EAAO7H,QAChBkwC,IAAKroC,EAAO4zE,YACd,gCAGK98E,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,cACRh4G,QAAS6H,EAAO7H,QAChBkwC,IAAKroC,EAAO4zE,YACd,gCAGK98E,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,mBACRh4G,QAAS6H,EAAO7H,QAChB80G,SAAUjtG,EAAOitG,SACjB5kE,IAAKroC,EAAO4zE,YACd,gCAGK98E,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,yBACRp7G,IAAKiL,EAAOqtG,oBACb,GAAMh6B,OAAM,SAACziE,GACZ,OAAO2+F,GAAW,kBAAmB3+F,EAAO5Q,EAAOqtG,kBACvD,KAAE,YAGErtG,EAAO4zE,SAAU,CAAF,yCACR98E,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,uBACR9nE,IAAKroC,EAAO4zE,SACZrR,QAAUviE,EAAOkuG,oBAAsB,OAAQ,WACjD,cAEA,IAAIl7G,MAAM,yCAAwC,iCAGjD8D,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,2BACRiE,OAAQp0G,EAAO+mF,mBACjB,iCAGKjwF,KAAK8oG,MAAM,QAAS,CACvBuQ,OAAQ,4BACRiE,OAAQp0G,EAAO+mF,mBACjB,WAGsB,WAApB/mF,EAAO4zE,SAAqB,uBACtB,IAAI5gF,MAAM,wDAAuD,QAQhE,OALLqhH,EAAWd,GAAuBvzG,EAAO6lE,cACtCn8D,OAAS,QAClB2qG,EAASlE,OAAS,WAAW,oBAGZr5G,KAAK8oG,MAAM,QAASyU,GAAU,GAAK,qGAEzC9E,GAAW,OAAQ,EAAF,GAASvvG,EAAO6lE,cAAY,QAU7C,OALLwuC,EAAWd,GAAuBvzG,EAAO6lE,cACtCn8D,OAAS,QAClB2qG,EAASlE,OAAS,kBAAkB,oBAGnBr5G,KAAK8oG,MAAM,QAASyU,GAAU,GAAK,qGAEzC9E,GAAW,cAAe,EAAF,GAASvvG,EAAO6lE,cAAY,QAkCtC,OA7BnB5qE,EAA4B,CAAEk1G,OAAQ,WAExCnwG,EAAOi/C,OAAOkrC,YACdlvF,EAAKkvF,UAAYupB,GAAY1zG,EAAOi/C,OAAOkrC,YAG3CnqF,EAAOi/C,OAAOgrC,UACdhvF,EAAKgvF,QAAUypB,GAAY1zG,EAAOi/C,OAAOgrC,UAGzCjqF,EAAOi/C,OAAO9mD,UACd8C,EAAK9C,QAAU6H,EAAOi/C,OAAO9mD,SAI7B6H,EAAOi/C,OAAO8yB,QAAU/xE,EAAOi/C,OAAO8yB,OAAOz/E,OAAS,IAClD0N,EAAOi/C,OAAO8yB,OAAOz/E,OAAS,GAC9B0sE,GAAOd,WAAW,0BAA2BvB,EAAOnnB,OAAO8oB,sBAAuB,CAAEyT,OAAQ/xE,EAAOi/C,OAAO8yB,SAG1E,IAAhC/xE,EAAOi/C,OAAO8yB,OAAOz/E,SAEE,kBADjBgiH,EAASt0G,EAAOi/C,OAAO8yB,OAAO,KACiB,KAAlBuiC,EAAOhiH,QACtC0sE,GAAOd,WAAW,2BAA4BvB,EAAOnnB,OAAO8oB,sBAAuB,CAAEg2C,OAAQA,IAEjGr5G,EAAKq5G,OAASA,IAErB,UAE8Bx9G,KAAK8oG,MAAM,OAAQ3kG,GAAK,QAAjDwrF,EAAI,OAGN70D,EAAoC,CAAC,EAGhCv/B,EAAI,EAAC,aAAEA,EAAIo0F,EAAKn0F,QAAM,iBACR,GACE,OADfk+C,EAAMi2C,EAAKp0F,IACTw0F,UAAiB,2DACM,MAA3Bj1D,EAAO4e,EAAIoO,aAAoB,iBACjB,OADiB,UACX9nD,KAAKq8E,SAAS3iC,EAAIoO,aAAY,SAA5Ct3C,EAAQ,EAAH,QAEPsqB,EAAO4e,EAAIoO,aAAet3C,EAAM/O,MACnC,QAELi4C,EAAIq2C,UAAYj1D,EAAO4e,EAAIoO,aAAa,QATXvsD,IAAG,iDAY7Bo0F,GAAI,WAIe,cAAtB3vF,KAAKslD,QAAQn4C,KAAoB,0CAAW,GAAG,QAChC,OADgC,KAC5C4oF,WAAU,UAAQ/1F,KAAK8oG,MAAM,QAAS,CAAEuQ,OAAQ,aAAa,QAAQ,OAAR,YAAEoE,OAAM,uGAM7Ez4D,EAAM4uD,QAAO,UAACz9D,EAAQjtC,IAAM,qEAMvC,wBACM,SAAWuoF,EAAyC8jB,EAAuBmI,kJAG/D,gBAAM19G,KAAKu9E,YAAYkU,GAAc,OAMpC,OANoC,iBACnB,MAAd8jB,EAAsB,EAAGA,EAAU,KACzB,MAAZmI,EAAoB,SAAUA,EAJxCx0G,EAAS,CACXmwG,OAAQ,SACRh4G,QAAS,EAAF,GACPs8G,WAAY,EAAF,GACVC,SAAU,EAAF,GACR1kG,KAAM,OAAK,SAGMlZ,KAAK8oG,MAAM,UAAW5/F,GAAO,OAAtC,OAANpK,EAAS,EAAH,uBAELA,EAAO0I,KAAI,SAACu2B,GACf,CAAC,kBAAmB,MAAM/mB,SAAQ,SAAS7N,GACxB,IAAX40B,EAAG50B,WAAqB40B,EAAG50B,EACnC,IACkB,MAAd40B,EAAG8uE,SAAyC,MAAtB9uE,EAAGu0D,kBACzBv0D,EAAG8uE,QAAU9uE,EAAGu0D,iBAEpB,IAAMh6E,EAAO,EAAK+3F,UAAU3C,oBAAoB3vE,GAEhD,OADIA,EAAG8/E,YAAavlG,EAAK0vC,UAAY3pD,SAAS0/B,EAAG8/E,YAC1CvlG,CACX,KAAE,mDACL,iCAED,WACI,OAAuB,MAAftY,KAAKm8G,MACjB,KAAC,EAtS0B,CAAQhhE,IC5JjC,SAAU2iE,GAASt/G,GAGrB,IAAK,IAAIjD,GAFTiD,EAAQA,EAAMrC,SAEKX,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAMkD,EAAIwe,KAAK8a,MAAM9a,KAAK0uF,UAAYpwG,EAAI,IACpC8Z,EAAM7W,EAAMjD,GAClBiD,EAAMjD,GAAKiD,EAAMC,GACjBD,EAAMC,GAAK4W,EAGf,OAAO7W,CACX,4SCEM0pE,GAAS,IAAIrC,EAAOhzD,IAE1B,SAAS6wD,KAAQ,OAAQ,IAAID,MAAQorC,SAAW,CAIhD,SAASkP,GAAc/a,GAGnB,IAFA,IAAIlkG,EAAS,KAEJvD,EAAI,EAAGA,EAAIynG,EAASxnG,OAAQD,IAAK,CACtC,IAAM+pD,EAAU09C,EAASznG,GAGzB,GAAe,MAAX+pD,EAAmB,OAAO,KAE1BxmD,EAEMA,EAAOqO,OAASm4C,EAAQn4C,MAAQrO,EAAOmL,UAAYq7C,EAAQr7C,UAC3DnL,EAAO+jG,aAAev9C,EAAQu9C,YAAqC,MAArB/jG,EAAO+jG,YAA4C,MAAtBv9C,EAAQu9C,aAErF36B,GAAOjC,mBAAmB,oBAAqB,WAAY+8B,GAG/DlkG,EAASwmD,EAIjB,OAAOxmD,CACX,CAEA,SAASk/G,GAAOp9G,EAAuBq9G,GACnCr9G,EAASA,EAAOzE,QAAQ+c,OACxB,IAAMglG,EAASjhG,KAAK8a,MAAMn3B,EAAOpF,OAAS,GAG1C,GAAIoF,EAAOpF,OAAS,EAChB,OAAOoF,EAAOs9G,GAIlB,IAAMt/G,EAAIgC,EAAOs9G,EAAS,GAAIr/F,EAAIje,EAAOs9G,GAEzC,OAAgB,MAAZD,GAAoBhhG,KAAKqD,IAAI1hB,EAAIigB,GAAKo/F,EAC/B,MAGHr/G,EAAIigB,GAAK,CACrB,CAEA,SAASygC,GAAU73C,GACf,GAAc,OAAVA,EACA,MAAO,OACJ,GAAsB,kBAAXA,GAAyC,mBAAXA,EAC5C,OAAOkN,KAAKC,UAAUnN,GACnB,GAAsB,kBAAXA,EACd,OAAOA,EACJ,GAAI6zC,GAAU06C,YAAYvuF,GAC7B,OAAOA,EAAM3J,WACV,GAAI1C,MAAMC,QAAQoM,GACrB,OAAOkN,KAAKC,UAAUnN,EAAMD,KAAI,SAACjM,GAAC,OAAK+jD,GAAU/jD,EAAE,KAChD,GAAsB,kBAAXkM,EAAqB,CACnC,IAAMmQ,EAAOvQ,OAAOuQ,KAAKnQ,GAEzB,OADAmQ,EAAKsB,OACE,IAAMtB,EAAKpQ,KAAI,SAAC2B,GACnB,IAAI9M,EAAIoL,EAAM0B,GAMd,OAJI9M,EADc,oBAAPA,EACH,aAEAijD,GAAUjjD,GAEXsY,KAAKC,UAAUzL,GAAO,IAAM9M,CACvC,IAAG4R,KAAK,KAAO,IAGnB,MAAM,IAAI/R,MAAM,8BAAgCuL,EACpD,CAGA,IAAI02G,GAAU,EA+Bd,SAAS1S,GAAMnC,GACX,IAAI6B,EAAqB,KAErBH,EAAsB,KACtBC,EAA0B,IAAIxhG,SAAQ,SAACC,GACvCyhG,EAAS,WACDH,IACAI,aAAaJ,GACbA,EAAQ,MAEZthG,GACJ,EACAshG,EAAQ9Z,WAAWia,EAAQ7B,EAC/B,IAWA,MAAO,CAAE6B,OAAAA,EAAQiT,WAJjB,WACI,OAAOnT,CACX,EAE6Bzb,KAThB,SAACxd,GAEV,OADAi5B,EAAUA,EAAQ9/B,KAAK6G,EAE3B,EAOJ,CAEA,IAAMqsC,GAAgB,CAClBx4C,EAAOnnB,OAAOmoB,eACdhB,EAAOnnB,OAAOooB,mBACdjB,EAAOnnB,OAAOsoB,cACdnB,EAAOnnB,OAAOuoB,wBACdpB,EAAOnnB,OAAOyoB,yBAGZm3C,GAAoB,CACtB,UACA,OACA,YACA,iBACA,SACA,eAeJ,SAASC,GAAkB9mE,EAAuBisB,GAC9C,IAAM5kE,EAAc,CAChB0/G,OAAQ/mE,EAAO+mE,QAYnB,OAVAn3G,OAAOiI,eAAexQ,EAAQ,WAAY,CAAEgJ,IAAK,kBAAM2vC,EAAOwC,QAAQ,IAClExC,EAAOz7C,QAAS8C,EAAO9C,MAAQy7C,EAAOz7C,OACtC0nE,IAAO5kE,EAAOwqG,SAAY5lC,EAAMjsB,EAAOz7C,OACvCy7C,EAAOu5C,OACHv5C,EAAO39B,MACPhb,EAAOgb,MAAQ29B,EAAO39B,MAEtBhb,EAAOA,OAAS24C,EAAO34C,QAAU,MAGlCA,CACX,CA0BA,SAAS2/G,GAAexkE,EAA4B9D,EAAgBjtC,GAEhE,IAAIgN,EAAYopC,GAEhB,OAAQnJ,GACJ,IAAK,iBAKD,OAAO,SAASuoE,GACZ,IAAM99G,EAAS89G,EAAQl3G,KAAI,SAACuG,GAAC,OAAKA,EAAEjP,MAAM,IAGtCgpD,EAAck2D,GAAOU,EAAQl3G,KAAI,SAACuG,GAAC,OAAKA,EAAEjP,MAAM,IAAG,GACvD,GAAmB,MAAfgpD,EAYJ,OAVAA,EAAc7qC,KAAKS,KAAKoqC,GAGpBlnD,EAAO6H,QAAQq/C,EAAc,IAAM,GAAKA,IAGxCA,GAAe7N,EAAS0kE,sBACxB1kE,EAAS0kE,oBAAsB72D,GAG5B7N,EAAS0kE,mBACpB,EAEJ,IAAK,cAID,OAAO,SAASD,GACZ,IAAM99G,EAAS89G,EAAQl3G,KAAI,SAACuG,GAAC,OAAKA,EAAEjP,MAAM,IAE1C,OADA8B,EAAOsY,OACAtY,EAAOqc,KAAK8a,MAAMn3B,EAAOpF,OAAS,GAC7C,EAEJ,IAAK,gBAGD,OAAO,SAASkjH,GACZ,OAAOV,GAAOU,EAAQl3G,KAAI,SAACuG,GAAC,OAAKA,EAAEjP,MAAM,IAC7C,EAGJ,IAAK,aACL,IAAK,sBACL,IAAK,UACL,IAAK,eACL,IAAK,OACL,IAAK,cACL,IAAK,UACD,MAGJ,IAAK,iBACL,IAAK,wBACDoX,EAAY,SAAS6nB,GACjB,OAAU,MAANA,EAAqB,OAEzBA,EAAKutC,GAAYvtC,IACd0xD,eAAiB,EACbnwC,GAAUvhB,GACrB,EACA,MAGJ,IAAK,WAGG7nB,EADAhN,EAAOkuG,oBACK,SAAS5mG,GACjB,OAAa,MAATA,EAAwB,OAE5BA,EAAQ86D,GAAY96D,IACdg9F,aAAeh9F,EAAMg9F,aAAahmG,KAAI,SAACu2B,GAGzC,OAFAA,EAAKutC,GAAYvtC,IACd0xD,eAAiB,EACb1xD,CACX,IACOuhB,GAAU9uC,GACrB,EAEY,SAASA,GACjB,OAAa,MAATA,EAAwB,KACrB8uC,GAAU9uC,EACrB,EAEJ,MAEJ,QACI,MAAM,IAAItU,MAAM,mBAAqBi6C,GAK7C,OA1HJ,SAAyBjgC,EAAmCwsF,GACxD,OAAO,SAASgc,GAGZ,IAAME,EAA4D,CAAC,EACnEF,EAAQ1nG,SAAQ,SAACjJ,GACb,IAAMtG,EAAQyO,EAAUnI,EAAEjP,QACrB8/G,EAAMn3G,KAAUm3G,EAAMn3G,GAAS,CAAEigE,MAAO,EAAG5oE,OAAQiP,EAAEjP,SAC1D8/G,EAAMn3G,GAAOigE,OACjB,IAIA,IADA,IAAM9vD,EAAOvQ,OAAOuQ,KAAKgnG,GAChBrjH,EAAI,EAAGA,EAAIqc,EAAKpc,OAAQD,IAAK,CAClC,IAAMwzF,EAAQ6vB,EAAMhnG,EAAKrc,IACzB,GAAIwzF,EAAMrnB,OAASg7B,EACf,OAAO3T,EAAMjwF,OAMzB,CACJ,CAmGW+/G,CAAgB3oG,EAAW+jC,EAASyoD,OAE/C,CAIA,SAAeoc,GAAYrnE,EAAuBqQ,yIACC,KAElB,OAFvB7N,EAA0BxC,EAAOwC,UAEzB6N,aAAuB7N,EAAS6N,aAAeA,IAAiC,IAAjBA,GAAkB,yCACpF7N,GAAQ,gCAGZgyD,IAAK,WACR,OAAO,IAAIxiG,SAAQ,SAACC,EAASglF,GACzBwC,YAAW,WAGP,OAAIj3C,EAAS6N,aAAeA,EAAsBp+C,EAAQuwC,GAGtDxC,EAAOq+D,UAAoBpsG,EAAQ,MAGhCA,OAAQnK,EACnB,GAAG,EACP,GACJ,GAAG,CAAE8sG,SAAUpyD,KAAW,2CAG9B,SAAe8kE,GAAUtnE,EAAuBunE,EAA4B7oE,EAAgBjtC,2IACpF+wC,EAAWxC,EAAOwC,SAAQ,KAEtB9D,EAAM,OACL,mBADK,MAEL,gBADgB,OAGhB,kBAFa,KAEE,EAKf,eALe,MAMf,wBADY,MAEZ,YADqB,KADT,EAOZ,iBALS,KAKK,GAKd,aALc,KAKJ,GAKV,SALU,MAMV,gBADM,QASN,mBARa,MASb,0BADgB,QAGhB,YAFuB,KAEd,4CAnCH8D,EAAS9D,MAAS,WAEf8D,EAAUglE,cAAe,CAAF,wCAChBhlE,EAAUglE,iBAAe,8CAMtC/1G,EAAO4zE,WAAYv2E,EAAY2C,EAAO4zE,UAAS,iBACpC,OADoC,UAC9BgiC,GAAYrnE,EAAQunE,GAAmB,QAAxD/kE,EAAW,EAAH,sCAELA,EAAS9D,GAAQjtC,EAAO7H,QAAS6H,EAAO4zE,UAAY,WAAS,YAEhE5zE,EAAO4zE,WAAYv2E,EAAY2C,EAAO4zE,UAAS,iBACpC,OADoC,UAC9BgiC,GAAYrnE,EAAQunE,GAAmB,QAAxD/kE,EAAW,EAAH,sCAELA,EAASilE,aAAah2G,EAAO7H,QAAS6H,EAAOitG,SAAUjtG,EAAO4zE,UAAY,WAAS,YAEtF5zE,EAAO4zE,WAAYv2E,EAAY2C,EAAO4zE,UAAS,iBACpC,OADoC,UAC9BgiC,GAAYrnE,EAAQunE,GAAmB,QAAxD/kE,EAAW,EAAH,sCAELA,EAAU/wC,EAAOkuG,oBAAsB,2BAA4B,YAAaluG,EAAO4zE,UAAY5zE,EAAO6mF,YAAU,YAGvH7mF,EAAO4zE,WAAYv2E,EAAY2C,EAAO4zE,UAAS,iBACpC,OADoC,UAC9BgiC,GAAYrnE,EAAQunE,GAAmB,QAAxD/kE,EAAW,EAAH,gBAEG,SAAX9D,IAAqBjtC,EAAO4zE,SAAQ,0CAC7B7iC,EAAS9D,GAAQjtC,EAAO6lE,YAAa7lE,EAAO4zE,WAAS,iCAEzD7iC,EAAS9D,GAAQjtC,EAAO6lE,cAAY,iCAGpC90B,EAAS9D,GAAQjtC,EAAO+mF,kBAAgB,QAErB,MAAtB9nC,EAASj/C,EAAOi/C,QACRkrC,WAAa9sF,EAAY4hD,EAAOkrC,YAAgBlrC,EAAOgrC,SAAW5sF,EAAY4hD,EAAOgrC,UAAS,iBAC3F,OAD2F,UACrF2rB,GAAYrnE,EAAQunE,GAAmB,QAAxD/kE,EAAW,EAAH,sCAELA,EAASq5C,QAAQnrC,IAAO,iCAIhC+f,GAAOd,WAAW,uBAAwBvB,EAAOnnB,OAAO8nB,cAAe,CAC1ErwB,OAAQA,EACRjtC,OAAQA,KACV,4CAGC,IAAMu5F,GAAiB,0CAS1B,WAAY/rC,EAAqDgsC,GAAe,sBACnD,IAArBhsC,EAAUl7D,QACV0sE,GAAOjC,mBAAmB,oBAAqB,YAAavP,GAGhE,IAAMyoD,EAAiDzoD,EAAUlvD,KAAI,SAAC43G,EAAkB/5G,GACpF,GAAI82E,GAASwV,WAAWytB,GAAmB,CACvC,IAAMC,EAAe9Q,GAAoB6Q,GAAoB,IAAM,IAEnE,OAAO/3G,OAAOotD,OAAO,CAAExa,SAAUmlE,EAAkBZ,OAAQ,EAAGa,aAAAA,EAAcC,SAD3D,IAIrB,IAAM7nE,EAAiC6zB,GAAY8zC,GAE5B,MAAnB3nE,EAAO6nE,WAAoB7nE,EAAO6nE,SAAW,GACtB,MAAvB7nE,EAAO4nE,eACP5nE,EAAO4nE,aAAe9Q,GAAoB6Q,GAAoB,IAAM,KAEnD,MAAjB3nE,EAAO+mE,SAAkB/mE,EAAO+mE,OAAS,GAE7C,IAAMA,EAAS/mE,EAAO+mE,OAKtB,OAJIA,EAAS,GAAKA,EAAS,KAAOA,EAAS,IACvCt2C,GAAOjC,mBAAmB,8CAA+C,aAAF,OAAgB5gE,EAAM,YAAYm5G,GAGtGn3G,OAAOotD,OAAOhd,EACzB,IAEM15B,EAAQohG,EAAgBxgH,QAAO,SAACoqE,EAAOh7D,GAAC,OAAMg7D,EAAQh7D,EAAEywG,MAAM,GAAG,GAEzD,MAAV9b,EACAA,EAAS3kF,EAAQ,EACV2kF,EAAS3kF,GAChBmqD,GAAOjC,mBAAmB,oDAAqD,SAAUy8B,GAI7F,IAAI8W,EAA6CuE,GAAcoB,EAAgB33G,KAAI,SAACuG,GAAC,OAAYA,EAAEksC,SAAWqL,OAAO,KAiBvF,OAdR,MAAlBk0D,IACAA,EAAiB,IAAI/vG,SAAQ,SAACC,EAASglF,GACnCwC,YAAW,WACP,EAAKuhB,gBAAgBtnC,KAAKzhE,EAASglF,EACvC,GAAG,EACP,KAGJ,cAAM8qB,GAGNzuC,IAAe,UAAM,kBAAmB1jE,OAAOotD,OAAO0qD,IACtDp0C,IAAe,UAAM,SAAU23B,GAE/B,EAAKic,qBAAuB,EAAE,CAClC,CAuLC,OAvLA,qCAEK,iJACe,gBAAMl1G,QAAQ2hE,IAAIprE,KAAKm/G,gBAAgB33G,KAAI,SAACuG,GAAC,OAAKA,EAAEksC,SAASojC,YAAY,KAAE,OAA9E,OAAR2lB,EAAW,EAAH,uBACP+a,GAAc/a,IAAS,kDACjC,qBAEK,SAAQ7sD,EAAgBjtC,qKAEX,oBAAXitC,EAA4B,iBACW,OADX,SACiB1sC,QAAQ2hE,IAAIprE,KAAKm/G,gBAAgB33G,KAAI,SAACuG,GAC/E,OAAOA,EAAEksC,SAASnD,gBAAgB5tC,EAAOqtG,mBAAmBprC,MAAK,SAACrsE,GAC9D,OAAOA,EAAO2C,IAClB,IAAG,SAACqY,GACA,OAAOA,CACX,GACJ,KAAG,OANGX,EAAO,OASJ5d,EAAI,EAAC,YAAEA,EAAI4d,EAAQ3d,QAAM,iBACL,GACF,kBADjBsD,EAASqa,EAAQ5d,IACQ,yCAAWuD,GAAM,OAFhBvD,IAAG,6BAMjC4d,EAAQ,GAAE,YAKc,IAA9BnZ,KAAK2+G,qBAAyC,mBAAXxoE,EAA2B,iBAC9D,OAD8D,UACxDn2C,KAAKg1G,iBAAgB,QAGzBtL,EAAc+U,GAAez+G,KAAMm2C,EAAQjtC,IAI3Cw1G,EAAgCZ,GAAS99G,KAAKm/G,gBAAgB33G,IAAI8jE,MAChEpyD,MAAK,SAACta,EAAGigB,GAAC,OAAMjgB,EAAE0gH,SAAWzgG,EAAEygG,QAAQ,IAEzCN,EAAqBh/G,KAAK2+G,oBAE5BpjH,EAAI,EACJ8K,GAAQ,EAAI,uHASZ,IAPMqwB,EAAKgtC,KAGP67C,EAAiBb,EAAQv2D,QAAO,SAACp6C,GAAC,OAAMA,EAAEsmG,QAAY39E,EAAK3oB,EAAE/R,MAAS+R,EAAEsxG,YAAa,IAC5D1gH,QAAO,SAACoqE,EAAOh7D,GAAC,OAAMg7D,EAAQh7D,EAAEywG,MAAM,GAAG,GAEtE,aAEI,IAAM/mE,EAASinE,EAAQnjH,KAEjBigH,EAAM2C,KAEZ1mE,EAAOz7C,MAAQ0nE,KACfjsB,EAAO4xD,QAAUoC,GAAMh0D,EAAO4nE,cAC9B5nE,EAAO4xD,QAAQ7Z,MAAK,WAAQ/3C,EAAO4xD,QAAU,IAAM,IAEnD5xD,EAAO48D,OAAS0K,GAAUtnE,EAAQunE,EAAoB7oE,EAAQjtC,GAAQiiE,MAAK,SAACrsE,GACxE24C,EAAOu5C,MAAO,EACdv5C,EAAO34C,OAASA,EAEZ,EAAK+F,cAAc,UACnB,EAAKu1C,KAAK,QAAS,CACfi/D,OAAQ,UACRmC,IAAKA,EACLgE,QAASjB,GAAkB9mE,EAAQisB,MACnCprB,QAAS,CAAEnC,OAAQA,EAAQjtC,OAAQ0iE,GAAS1iE,IAC5C+wC,SAAU,GAItB,IAAG,SAACngC,GACA29B,EAAOu5C,MAAO,EACdv5C,EAAO39B,MAAQA,EAEX,EAAKjV,cAAc,UACnB,EAAKu1C,KAAK,QAAS,CACfi/D,OAAQ,UACRmC,IAAKA,EACLgE,QAASjB,GAAkB9mE,EAAQisB,MACnCprB,QAAS,CAAEnC,OAAQA,EAAQjtC,OAAQ0iE,GAAS1iE,IAC5C+wC,SAAU,GAGtB,IAEI,EAAKp1C,cAAc,UACnB,EAAKu1C,KAAK,QAAS,CACfi/D,OAAQ,UACRmC,IAAKA,EACLgE,QAASjB,GAAkB9mE,EAAQ,MACnCa,QAAS,CAAEnC,OAAQA,EAAQjtC,OAAQ0iE,GAAS1iE,IAC5C+wC,SAAU,IAIlBslE,GAAkB9nE,EAAO+mE,MAAO,EAhD7Be,EAAiB,EAAK7c,QAAUnnG,EAAImjH,EAAQljH,QAAQ,IAyDxD,GALGikH,EAA+B,GACrCf,EAAQ1nG,SAAQ,SAACjJ,IACTA,EAAEijF,MAASjjF,EAAEsmG,SACjBoL,EAAQhkH,KAAKsS,EAAEsmG,QACXtmG,EAAEs7F,SAAWoW,EAAQhkH,KAAKsS,EAAEs7F,QAAQ+U,cAC5C,KAEIqB,EAAQjkH,OAAQ,CAAF,eAAI,OAAJ,SAAUiO,QAAQqiG,KAAK2T,GAAQ,OAIiB,MAA5DtmG,EAAUulG,EAAQv2D,QAAO,SAACp6C,GAAC,OAAMA,EAAEijF,MAAmB,MAAXjjF,EAAE+L,KAAa,KACpDte,QAAU,EAAKknG,QAAM,iBACM,QACpBnjG,KADTT,EAAS4qG,EAAYvwF,IACH,iBAKjB,OAHHulG,EAAQ1nG,SAAQ,SAAAjJ,GACRA,EAAEs7F,SAAWt7F,EAAEs7F,QAAQ8B,SAC3Bp9F,EAAE+nG,WAAY,CAClB,IAAG,qBACIh3G,IAAM,WAEZuH,EAAO,CAAF,gBAAI,OAAJ,UAAUolG,GAAM,KAAK2S,aAAY,QAC3C/3G,GAAQ,EAAM,QAqClB,GAjCMq4C,EAASggE,EAAQ//G,QAAO,SAACoqE,EAAOh7D,GAClC,IAAKA,EAAEijF,MAAmB,MAAXjjF,EAAE+L,MAAiB,OAAOivD,EAEzC,IAAMngE,EAAcmF,EAAE+L,MAAQlR,KAM9B,OALIy1G,GAAc51G,QAAQG,IAAS,IAC1BmgE,EAAMngE,KAASmgE,EAAMngE,GAAQ,CAAEkR,MAAO/L,EAAE+L,MAAO0kG,OAAQ,IAC5Dz1C,EAAMngE,GAAM41G,QAAUzwG,EAAEywG,QAGrBz1C,CACX,GAA4D,CAAC,GAE7D1hE,OAAOuQ,KAAK8mC,GAAQ1nC,SAAQ,SAAC0oG,GACzB,IAAMd,EAAQlgE,EAAOghE,GACrB,KAAId,EAAMJ,OAAS,EAAK9b,QAAxB,CAGAgc,EAAQ1nG,SAAQ,SAAAjJ,GACRA,EAAEs7F,SAAWt7F,EAAEs7F,QAAQ8B,SAC3Bp9F,EAAE+nG,WAAY,CAClB,IAEA,IAAM70G,EAAU29G,EAAM9kG,MAEhB6lG,EAAmC,CAAC,EAC1CrB,GAAkBtnG,SAAQ,SAAC7J,GACR,MAAXlM,EAAEkM,KACNwyG,EAAMxyG,GAAQlM,EAAEkM,GACpB,IAEA+6D,GAAOd,WAAWnmE,EAAEylE,QAAUzlE,EAAEmK,QAAcs0G,EAAWC,GAC7D,IAG8C,IAA1CjB,EAAQv2D,QAAO,SAACp6C,GAAC,OAAMA,EAAEijF,IAAI,IAAEx1F,OAAY,sGAzHxC,6NAgIR,OAHHkjH,EAAQ1nG,SAAQ,SAAAjJ,GACRA,EAAEs7F,SAAWt7F,EAAEs7F,QAAQ8B,SAC3Bp9F,EAAE+nG,WAAY,CAClB,IAAG,kBAEI5tC,GAAOd,WAAW,wBAAyBvB,EAAOnnB,OAAOisD,aAAc,CAC1Ex0D,OAAQA,EACRjtC,OAAQA,EAGRiQ,QAASulG,EAAQl3G,KAAI,SAACuG,GAAC,OAAKwwG,GAAkBxwG,EAAE,IAChDksC,SAAUj6C,QACZ,qDACL,EAvPyB,CAAQm7C,ICnZhCykE,GAAmB,KCSnB13C,GAAS,IAAIrC,EAAOhzD,IAKpBgtG,GAAmB,mCAEZC,GAAwB,0CAKjC,WAAYx6D,EAAsB62D,GAAY,sBAC1C,IAAMliE,EAAW,IAAI4nD,GAAev8C,EAAS62D,GACvC1S,EAAaxvD,EAASwvD,WACxBA,EAAWtQ,UACXjxB,GAAOd,WAAW,+CAAgDvB,EAAOnnB,OAAO8oB,sBAAuB,CACnGC,UAAW,0CAInB,IAAMvqB,EAAMusD,EAAWvsD,IAAIh2C,QAAQ,SAAU,MAAMA,QAAQ,OAAQ,WAKL,OAJ9D,cAAMg2C,EAAKoI,GAEXylB,IAAe,UAAM,SAAU9wB,EAAS8lE,WACxCh1C,IAAe,UAAM,YAAa9wB,EAAS8lE,WAC3Ch1C,IAAe,UAAM,gBAAiB9wB,EAASuiE,eAAe,CAClE,CAIC,OAJA,2CAED,WACI,OAAQx8G,KAAK+/G,YAAcF,EAC/B,KAAC,EAxBgC,CAAQjF,IA2BhC/Y,GAAe,qGA4FvB,OA5FuB,2CA8FxB,WACI,OAAQ7hG,KAAK+/G,YAAcF,EAC/B,IAAC,mCA5FD,SAA4Bv6D,EAAsB62D,GAC9C,OAAO,IAAI2D,GAAwBx6D,EAAS62D,EAChD,GAAC,uBAED,SAAiBA,GACb,IAAM6D,EAA0E,CAC5E7D,OAAQ0D,GACRE,UAAWF,GACXrD,cAAe,MAGnB,OAAc,MAAVL,IAEmB,kBAAZA,EACP6D,EAAUD,UAAY5D,EAES,MAAxBA,EAAOK,eACdt0C,GAAO2hC,eAA6C,kBAAtBsS,EAAO4D,UACjC,qCAAsC,YAAa5D,EAAO4D,WAC9D73C,GAAO2hC,eAAiD,kBAA1BsS,EAAOK,cACjC,wBAAyB,gBAAiB,cAE9CwD,EAAUD,UAAY5D,EAAO4D,UAC7BC,EAAUxD,cAAgBL,EAAOK,eAE1BL,EAAO4D,YACdC,EAAUD,UAAY5D,EAAO4D,WAGjCC,EAAU7D,OAAS6D,EAAUD,WAlBAC,CAqBjC,GAAC,oBAED,SAAc16D,EAAkB62D,GAC5B,IAAIG,EAAe,KACnB,OAAOh3D,EAAUA,EAAQn4C,KAAM,WAC3B,IAAK,YACDmvG,EAAO,oBACP,MACJ,IAAK,SACDA,EAAO,mBACP,MACJ,IAAK,UACDA,EAAO,oBACP,MACJ,IAAK,QACDA,EAAO,4BACP,MACJ,IAAK,WACDA,EAAO,2BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,kBACDA,EAAO,4BACP,MACJ,IAAK,WACDA,EAAO,6BACP,MACJ,IAAK,kBACDA,EAAO,4BACP,MACJ,QACIp0C,GAAOd,WAAW,sBAAuBvB,EAAOnnB,OAAO2oB,iBAAkB,CACrEC,SAAU,UACV7/D,MAAO69C,IAInB,IAAMmkD,EAA6B,CAC/BU,WAAW,EACXjtD,IAAM,WAAkBo/D,EAAO,OAASH,EAAO4D,UAC/CjW,iBAAkB,SAACwB,EAAiBpuD,GAIhC,OAHIi/D,EAAO4D,YAAcF,IACrBpR,KAEGhlG,QAAQC,SAAQ,EAC3B,GAQJ,OAL4B,MAAxByyG,EAAOK,gBACP/S,EAAWW,KAAO,GAClBX,EAAWtQ,SAAWgjB,EAAOK,eAG1B/S,CACX,KAAC,EA5FuB,CAAQyS,ICrCvB+D,GAAqB,qGAuF7B,OAvF6B,4BAQ9B,SAAK9pE,EAAgBjtC,GAAkB,WAC7BovC,EAAU,CACZnC,OAAQA,EACRjtC,OAAQA,EACR4nE,GAAK9wE,KAAKy5G,UACVM,QAAS,OAGa,MAAtB/5G,KAAKkgH,gBACLlgH,KAAKkgH,cAAgB,IAGzB,IAAMC,EAAuB,CAAE7nE,QAAAA,EAAS5uC,QAAS,KAAMglF,OAAQ,MAEzDuc,EAAU,IAAIxhG,SAAQ,SAACC,EAASglF,GAClCyxB,EAAgBz2G,QAAUA,EAC1By2G,EAAgBzxB,OAASA,CAC7B,IA6DA,OA3DA1uF,KAAKkgH,cAAczkH,KAAK0kH,GAEnBngH,KAAKogH,0BAENpgH,KAAKogH,wBAA0BlvB,YAAW,WAItC,IAAMmvB,EAAQ,EAAKH,cACnB,EAAKA,cAAgB,KACrB,EAAKE,wBAA0B,KAG/B,IAAM9nE,EAAU+nE,EAAM74G,KAAI,SAAC84G,GAAQ,OAAKA,EAAShoE,OAAO,IAQxD,OANA,EAAK8B,KAAK,QAAS,CACfi/D,OAAQ,eACR/gE,QAASszB,GAAStzB,GAClB2B,SAAU,IAGP8xD,GAAU,EAAKtC,WAAY90F,KAAKC,UAAU0jC,IAAU6yB,MAAK,SAACrsE,GAC7D,EAAKs7C,KAAK,QAAS,CACfi/D,OAAQ,WACR/gE,QAASA,EACTywD,SAAUjqG,EACVm7C,SAAU,IAKdomE,EAAMrpG,SAAQ,SAACmpG,EAAiB96G,GAC5B,IAAMw1C,EAAU/7C,EAAOuG,GACvB,GAAIw1C,EAAQ/gC,MAAO,CACf,IAAMA,EAAQ,IAAI5d,MAAM2+C,EAAQ/gC,MAAM1O,SAChC0O,EAAOlR,KAAOiyC,EAAQ/gC,MAAMlR,KAC5BkR,EAAOxc,KAAOu9C,EAAQ/gC,MAAMxc,KAClC6iH,EAAgBzxB,OAAO50E,QAEvBqmG,EAAgBz2G,QAAQmxC,EAAQ/7C,OAExC,GAEJ,IAAG,SAACgb,GACA,EAAKsgC,KAAK,QAAS,CACfi/D,OAAQ,WACRv/F,MAAOA,EACPw+B,QAASA,EACT2B,SAAU,IAGdomE,EAAMrpG,SAAQ,SAACmpG,GACXA,EAAgBzxB,OAAO50E,EAC3B,GACJ,GAEJ,GAAG,KAGAmxF,CACX,KAAC,EAvF6B,CAAQt0C,ICCpCuR,GAAS,IAAIrC,EAAOhzD,IAKb0tG,GAAkB,qGAkC1B,OAlC0B,sCAE3B,SAAiBpE,GAIb,OAHIA,GAA6B,kBAAZA,GACjBj0C,GAAOjC,mBAAmB,iBAAkB,SAAUk2C,GAEnDA,GARO,kBASlB,GAAC,oBAED,SAAc72D,EAAkB62D,GAC5Bj0C,GAAOr+D,KAAK,qFAEZ,IAAIyyG,EAAO,KACX,OAAQh3D,EAAQn4C,MACZ,IAAK,YACDmvG,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,UACDA,EAAO,uDACP,MACJ,IAAK,SACDA,EAAO,sDACP,MACJ,IAAK,QACDA,EAAO,qDACP,MACJ,QACGp0C,GAAOjC,mBAAmB,sBAAuB,UAAWvmC,UAAU,IAG7E,OAAQ48E,EAAO,WAAaH,CAChC,KAAC,EAlC0B,CAAQD,ICPjCh0C,GAAS,IAAIrC,EAAOhzD,IAIpB2tG,GAAuB,2BAGhBre,GAAe,qGAyEvB,OAzEuB,2CA2ExB,WACI,OAAQniG,KAAKygH,gBAAkBD,EACnC,IAAC,wBAxED,SAAiBrE,GACb,IAAM6D,EAA4F,CAC9FS,cAAe,KACfC,cAAc,EACdC,qBAAsB,MAqB1B,OAjBc,MAAVxE,EACA6D,EAAUS,cAAgBD,GAEC,kBAAZrE,EACf6D,EAAUS,cAAgBtE,EAEY,MAA/BA,EAAOwE,sBACdX,EAAUS,cAAgBtE,EAAOsE,cACjCT,EAAUW,qBAAuBxE,EAAOwE,sBAEjCxE,EAAOsE,cACdT,EAAUS,cAAgBtE,EAAOsE,cAGjCv4C,GAAOjC,mBAAmB,oCAAqC,SAAUk2C,GAGtE6D,CACX,GAAC,oBAED,SAAc16D,EAAkB62D,GAC5B,IAAIG,EAAe,KACnB,OAAQh3D,EAAUA,EAAQn4C,KAAO,WAC7B,IAAK,SACDmvG,EAAO,kCACP,MACJ,IAAK,YACDA,EAAO,mCACP,MACJ,IAAK,QACDA,EAAO,iCACP,MACJ,IAAK,QACDA,EAAO,oCACP,MACJ,IAAK,WACDA,EAAO,0CACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,IAAK,UACDA,EAAO,mCACP,MACJ,QACIp0C,GAAOd,WAAW,sBAAuBvB,EAAOnnB,OAAO2oB,iBAAkB,CACrEC,SAAU,UACV7/D,MAAO69C,IAInB,IAEMmkD,EAA6B,CAAEhB,QAAS,CAAC,EAAIvrD,IAFvC,WAAH,OAAgBo/D,EAAK,kBAAWH,EAAOsE,gBAQhD,OALmC,MAA/BtE,EAAOwE,uBACPlX,EAAWW,KAAO,GAClBX,EAAWtQ,SAAWgjB,EAAOwE,sBAG1BlX,CACX,KAAC,EAzEuB,CAAQyS,ICP9Bh0C,GAAS,IAAIrC,EAAOhzD,IAetB4mG,GAAU,EAMd,SAASmH,GAAuB3mE,EAA4B4mE,GACxD,IAAMC,EAAU,oBAEhB,OAAO,SAAS3qE,EAAgBjtC,GAAkB,WACxCovC,EAAU,CACZnC,OAAQA,EACRjtC,OAAQA,EACR4nE,GAAK2oC,KACLM,QAAS,OAGb,OAAO,IAAItwG,SAAQ,SAACC,EAASglF,GACzB,EAAKt0C,KAAK,QAAS,CACfi/D,OAAQ,UACRyH,QAAAA,EACAxoE,QAASszB,GAAStzB,GAClB2B,SAAU,IAGd4mE,EAASvoE,GAAS,SAACx+B,EAAOivF,GAEtB,GAAIjvF,EASA,OARA,EAAKsgC,KAAK,QAAS,CACfi/D,OAAQ,WACRyH,QAAAA,EACAhnG,MAAAA,EACAw+B,QAAAA,EACA2B,SAAU,IAGPy0C,EAAO50E,GAWlB,GARA,EAAKsgC,KAAK,QAAS,CACfi/D,OAAQ,WACRyH,QAAAA,EACAxoE,QAAAA,EACAywD,SAAAA,EACA9uD,SAAU,IAGV8uD,EAASjvF,MAAO,CAChB,IAAMA,EAAQ,IAAI5d,MAAM6sG,EAASjvF,MAAM1O,SAGvC,OAFM0O,EAAOlR,KAAOmgG,EAASjvF,MAAMlR,KAC7BkR,EAAOxc,KAAOyrG,EAASjvF,MAAMxc,KAC5BoxF,EAAO50E,GAGlBpQ,EAAQq/F,EAASjqG,OACrB,GACJ,GACJ,CACJ,CAwCO,IAAMiiH,GAAa,0CAItB,WAAY9mE,EAA+CqL,GAAoB,sBAC3D,MAAZrL,GACAiuB,GAAOjC,mBAAmB,mBAAoB,WAAYhsB,GAG9D,IAAI+xB,EAAe,KACfg1C,EAAqC,KACrCC,EAAgC,KA+BU,MA7BrB,oBAAdhnE,GACP+xB,EAAO,WACPg1C,EAAmB/mE,MAGnB+xB,EAAO/xB,EAASqiE,MAAQriE,EAAS+xB,MAAQ,KAC5B/xB,EAASinE,aAClBl1C,EAAO,YAGXi1C,EAAchnE,EAEVA,EAAS3B,SACI,KAAT0zB,IAAeA,EAAO,aAC1Bg1C,EAjEhB,SAA6B/mE,GACzB,OAAO,SAAS9D,EAAgBjtC,GAAkB,WAChC,MAAVA,IAAkBA,EAAS,IAE/B,IAAMovC,EAAU,CAAEnC,OAAAA,EAAQjtC,OAAAA,GAS1B,OAPAlJ,KAAKo6C,KAAK,QAAS,CACfi/D,OAAQ,UACRyH,QAAS,iBACTxoE,QAASszB,GAAStzB,GAClB2B,SAAUj6C,OAGPi6C,EAAS3B,QAAQA,GAAS6yB,MAAK,SAAC49B,GASnC,OARA,EAAK3uD,KAAK,QAAS,CACfi/D,OAAQ,WACRyH,QAAS,iBACTxoE,QAAAA,EACAywD,SAAAA,EACA9uD,SAAU,IAGP8uD,CAEX,IAAG,SAACjvF,GASA,MARA,EAAKsgC,KAAK,QAAS,CACfi/D,OAAQ,WACRyH,QAAS,iBACTxoE,QAAAA,EACAx+B,MAAAA,EACAmgC,SAAU,IAGRngC,CACV,GACJ,CACJ,CA6BmCqnG,CAAoBlnE,IAChCA,EAASmnE,UAChBJ,EAAmBJ,GAAuB3mE,EAAUA,EAASmnE,UAAUn8D,KAAKhL,IACrEA,EAAS2c,KAChBoqD,EAAmBJ,GAAuB3mE,EAAUA,EAAS2c,KAAK3R,KAAKhL,IAEvEiuB,GAAOjC,mBAAmB,uBAAwB,WAAYhsB,GAG7D+xB,IAAQA,EAAO,aAGxB,cAAMA,EAAM1mB,GAEZylB,IAAe,UAAM,mBAAoBi2C,GACzCj2C,IAAe,UAAM,WAAYk2C,GAAa,CAClD,CAIC,OAJA,4BAED,SAAK9qE,EAAgBjtC,GACjB,OAAOlJ,KAAKghH,iBAAiB7qE,EAAQjtC,EACzC,KAAC,EA/CqB,CAAQytD,IC/E5BuR,GAAS,IAAIrC,EAAOhzD,IAK1B,SAASwuG,GAAmB/7D,EAAsBojB,GAI9C,GAHe,MAAXpjB,IAAmBA,EAAU,aAGT,kBAAbA,EAAuB,CAI9B,IAAMj8C,EAAQi8C,EAAQj8C,MAAM,kBAC5B,GAAIA,EACA,OAAQA,EAAM,GAAG9H,eACb,IAAK,OAAQ,IAAK,QACd,OAAO,IAAIo1D,GAAgBrR,GAC/B,IAAK,KAAM,IAAK,MACZ,OAAO,IAAIs1D,GAAkBt1D,GACjC,QACI4iB,GAAOjC,mBAAmB,yBAA0B,UAAW3gB,IAK/E,IAAM7+C,EAAI42E,GAAW/3B,GAQrB,OAPK7+C,GAAMA,EAAEq8F,kBACT56B,GAAOd,WAAW,yCAA0CvB,EAAOnnB,OAAOw0D,cAAe,CACrFzrC,UAAW,qBACXniB,QAASA,IAIV7+C,EAAEq8F,iBAAiB,CACtBL,iBAAAA,GAEAR,gBAAAA,GACAM,aAAAA,GACAF,mBAAAA,GACAN,kBAAAA,GACAF,eAAAA,GACAlrC,gBAAAA,GACA4pD,kBAAAA,GACApe,eAAAA,GACA4e,aAAAA,GAEAnB,YAAAA,IACDl3C,EACP,CC1FO,ICQD44C,GAAa,IAAI3sC,OAAO,mBACxB4sC,GAAc,IAAI5sC,OAAO,qBACzB6sC,GAAa,IAAI7sC,OAAO,wBAMxBzM,GAAS,IAAIrC,EDhBI,kBCmBvB,SAAS47C,GAAMvsG,EAAczN,EAAYpM,GACrC,OAAO6Z,GACH,IAAK,UACD,OAAI7Z,EAAkB4tE,EAAQxhE,EAAO,IAC9BghE,EAAShhE,GACpB,IAAK,SACD,OAAO2oE,GAAY3oE,GACvB,IAAK,QACD,OAAOghE,EAAShhE,GACpB,IAAK,OAED,OADAA,EAASA,EAAQ,OAAQ,OACrBpM,EAAkB4tE,EAAQxhE,EAAO,IAC9BghE,EAAShhE,GAGxB,IAAI4B,EAAS6L,EAAK7L,MAAMk4G,IACxB,GAAIl4G,EAAO,CAEP,IAAIuM,EAAOvX,SAASgL,EAAM,IAAM,OAUhC,OARKA,EAAM,IAAMP,OAAO8M,KAAUvM,EAAM,IAAQuM,EAAO,IAAM,GAAe,IAATA,GAAcA,EAAO,MACpFsyD,GAAOjC,mBAAmB,sBAAuB,OAAQ/wD,GAGzD7Z,IAAWua,EAAO,KAIfqzD,EAFPxhE,EAAQ6zC,GAAU3+C,KAAK8K,GAAO6O,OAAOV,GAEfA,EAAO,GAIjC,GADAvM,EAAQ6L,EAAK7L,MAAMi4G,IACR,CACP,IAAM1rG,EAAOvX,SAASgL,EAAM,IAQ5B,OANIP,OAAO8M,KAAUvM,EAAM,IAAe,IAATuM,GAAcA,EAAO,KAClDsyD,GAAOjC,mBAAmB,qBAAsB,OAAQ/wD,GAExDuzD,EAAShhE,GAAOY,aAAeuN,GAC/BsyD,GAAOjC,mBAAmB,qBAAD,OAAuB/wD,GAAS,QAASzN,GAElEpM,EAAkBotE,GAAUhhE,EAhD1B,oEAgDyCkB,UAAU,EAAG,KACrDlB,EAIX,IADA4B,EAAQ6L,EAAK7L,MAAMm4G,MACNpmH,MAAMC,QAAQoM,GAAQ,CAC/B,IAAM6qE,EAAWjpE,EAAM,GACThL,SAASgL,EAAM,IAAMP,OAAOrB,EAAMjM,UACnCiM,EAAMjM,QACf0sE,GAAOjC,mBAAmB,4BAAD,OAA8B/wD,GAAS,QAASzN,GAE7E,IAAM3I,EAA4B,GAIlC,OAHA2I,EAAMuP,SAAQ,SAASvP,GACnB3I,EAAOrD,KAAKgmH,GAAMnvC,EAAU7qE,GAAO,GACvC,IACOvF,EAAOpD,GAGlB,OAAOopE,GAAOjC,mBAAmB,eAAgB,OAAQ/wD,EAC7D,CAIM,SAAU4oB,GAAKhnB,EAA8BlW,GAC3CkW,EAAMtb,QAAUoF,EAAOpF,QACvB0sE,GAAOjC,mBAAmB,qDAAsD,SAAUrlE,GAE9F,IAAM8gH,EAA2B,GAIjC,OAHA5qG,EAAME,SAAQ,SAAS9B,EAAM7P,GACzBq8G,EAAMjmH,KAAKgmH,GAAMvsG,EAAMtU,EAAOyE,IAClC,IACO8jE,EAAQjnE,EAAOw/G,GAC1B,CAEM,SAAUhgH,GAAUoV,EAA8BlW,GACpD,OAAO+gH,GAAc7jF,GAAKhnB,EAAOlW,GACrC,CAEM,SAAUkwC,GAAOh6B,EAA8BlW,GACjD,OAAOghH,GAAW9jF,GAAKhnB,EAAOlW,GAClC,CC7EA,SAASihH,GAAYvkH,EAAc00E,GAC1BA,IACDA,EAAO,SAASvqE,GAAiB,MAAO,CAAEpJ,SAASoJ,EAAO,IAAO,GAGrE,IAAIqX,EAAK,EAELhgB,EAAgB,CAAC,EAOrB,OANAxB,EAAKq0B,MAAM,KAAK3a,SAAQ,SAACs5D,GACrB,IAAIgH,EAAQhH,EAAK3+C,MAAM,KACvB7S,GAAMzgB,SAASi5E,EAAM,GAAI,IACzBx4E,EAAOggB,GAAMkzD,EAAKsF,EAAM,GAC5B,IAEOx4E,CACX,CAEA,SAASgjH,GAAiBxkH,GACtB,IAAI6iB,EAAK,EACT,OAAO7iB,EAAKq0B,MAAM,KAAKnqB,KAAI,SAACnL,GACxB,IAAIi7E,EAAQj7E,EAAEs1B,MAAM,KASpB,OARqB,IAAjB2lD,EAAM97E,OACN87E,EAAM,GAAK,IACS,KAAbA,EAAM,KACbA,EAAM,GAAK,KAKR,CAAE5uE,EAFAyX,EAAK9hB,SAASi5E,EAAM,GAAI,IAEjBnsD,EADhBhL,EAAK9hB,SAASi5E,EAAM,GAAI,IAE5B,GACJ,CAEA,SAASyqC,GAASt6G,EAAeu6G,GAE7B,IADA,IAAIljG,EAAK,EACAvjB,EAAI,EAAGA,EAAIymH,EAAOxmH,OAAQD,IAAK,CACpC,IAAI8pG,EAAQ2c,EAAOzmH,GAEnB,GAAIkM,IADJqX,GAAMumF,EAAM38F,IACOjB,GAASqX,EAAKumF,EAAMl6E,IAAO1jB,EAAQqX,IAAOumF,EAAM5nG,GAAK,KAAQ,EAAG,CAC/E,GAAI4nG,EAAMpkG,IAAsC,IAAjCokG,EAAMpkG,EAAEwH,QAAQhB,EAAQqX,GAAc,SACrD,OAAOumF,GAGf,OAAO,IACX,CAEA,IAAM4c,GAAmBH,GAAiB,g8CAGpCI,GAAkB,sDAAsDvwF,MAAM,KAAKnqB,KAAI,SAACnL,GAAC,OAAKgC,SAAShC,EAAG,GAAG,IAE7G8lH,GAAkC,CACpC,CAAEh3F,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,IACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,GAAIzJ,EAAG,CAAE,IAAMyH,EAAG,KAC9B,CAAEyiB,EAAG,GAAIzgB,EAAG,EAAGzJ,EAAG,CAAE,IAAMyH,EAAG,GAAIjL,EAAG,GACpC,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGzJ,EAAG,CAAE,EAAG,EAAG,GAAKyH,EAAG,GAAIjL,EAAG,GACzC,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGzJ,EAAG,CAAE,GAAI,GAAI,IAAMyH,EAAG,GAAIjL,EAAG,GAC5C,CAAE0tB,EAAG,GAAIzgB,EAAG,GAAIzJ,EAAG,CAAE,IAAMyH,EAAG,KAC9B,CAAEyiB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,IACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,IACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGzJ,EAAG,CAAE,IAAMyH,EAAG,GAAIjL,EAAG,GACpC,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,GAAIjL,EAAG,GACzB,CAAE0tB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,IACnB,CAAEyiB,EAAG,IAAKzgB,EAAG,EAAGhC,EAAG,KAAMjL,EAAG,GAC5B,CAAE0tB,EAAG,GAAIzgB,EAAG,EAAGhC,EAAG,IAAKjL,EAAG,GAC1B,CAAE0tB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,KACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,KACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,OACnB,CAAEyiB,EAAG,GAAIzgB,EAAG,GAAIhC,EAAG,MACnB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,OACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAMyH,EAAG,IAC1D,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,EAAG,EAAG,EAAG,IAAMyH,EAAG,IAC5C,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,EAAG,EAAG,GAAI,GAAI,GAAI,IAAMyH,EAAG,IACrD,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQhC,EAAG,IACxB,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,IAAMyH,EAAG,IACnC,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,IAAMyH,EAAG,IACnC,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,IAAMyH,EAAG,IACnC,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,IAAMyH,EAAG,IACnC,CAAEyiB,EAAG,GAAIzgB,GAAI,OAAQzJ,EAAG,CAAE,IAAMyH,EAAG,KAEjC05G,GAAoBP,GAAY,yfAChCQ,GAAoBR,GAAY,0dAChCS,GAAoBT,GAAY,03DA1GtC,SAAgBvkH,GACZ,GAAKA,EAAK9B,OAAS,IAAO,EAAK,MAAM,IAAIU,MAAM,YAE/C,IADA,IAAI4C,EAAS,GACJvD,EAAI,EAAGA,EAAI+B,EAAK9B,OAAQD,GAAK,EAClCuD,EAAOrD,KAAK4C,SAASf,EAAKqL,UAAUpN,EAAGA,EAAI,GAAI,KAEnD,OAAOuD,CACX,IAqGMyjH,GAAiBT,GAAiB,2LAkClC,SAAUU,GAAS/6G,GAKrB,GAAIA,EAAM4B,MAAM,kBAAoB5B,EAAMjM,QAAU,GAAM,OAAOiM,EAAMlG,cAGvE,IAvCaX,EAuCT6hH,EAAQ5xC,GAAiBppE,GAvChB7G,EAyCG6hH,EAAMj7G,KAAI,SAACoB,GAEvB,GAAIs5G,GAAgBz5G,QAAQG,IAAS,EAAK,MAAO,GACjD,GAAIA,GAAQ,OAAUA,GAAQ,MAAU,MAAO,GAG/C,IAAI85G,EApCN,SAA2BC,GAC7B,IAAItd,EAAQ0c,GAASY,EAAWR,IAChC,GAAI9c,EAAS,MAAO,CAAEsd,EAAYtd,EAAM36F,GAExC,IAAI+3G,EAAQL,GAAkBO,GAC9B,GAAIF,EAAS,OAAOA,EAEpB,IAAI14G,EAAQs4G,GAAkBM,GAC9B,OAAI54G,EAAgB,CAAE44G,EAAY54G,EAAM,IAE1Bu4G,GAAkBK,IAGzB,IACX,CAsB2BC,CAAiBh6G,GACpC,OAAI85G,GAGG,CAAE95G,EACb,IAXA65G,EAxCO7hH,EAAOjC,QAAO,SAACoqE,EAAOthE,GAEzB,OADAA,EAAMuP,SAAQ,SAACvP,GAAYshE,EAAMttE,KAAKgM,EAAQ,IACvCshE,CACX,GAAG,KAmDH05C,EAAQ5xC,GAAiBH,GAAc+xC,GAAQvzC,GAAyB+tB,OAGlEjmF,SAAQ,SAACpO,GACX,GA/BKm5G,GA+Ben5G,EA/BK25G,IAgCrB,MAAM,IAAIrmH,MAAM,iCAExB,IAGAumH,EAAMzrG,SAAQ,SAACpO,GACX,GA1DKm5G,GA0DgBn5G,EA1DIq5G,IA2DrB,MAAM,IAAI/lH,MAAM,iCAExB,IAGA,IAAIiR,EAAOujE,GAAc+xC,GAGzB,GAA6B,MAAzBt1G,EAAKxE,UAAU,EAAG,IAAuC,OAAzBwE,EAAKxE,UAAU,EAAG,IAAmD,MAApCwE,EAAKxE,UAAUwE,EAAK3R,OAAS,GAC9F,MAAM,IAAIU,MAAM,kBAGpB,OAAOiR,CACX,CCrMM,SAAU01G,GAAoBh1G,GAGhC,IAAMhI,EAAQuqE,GAAYviE,GAG1B,GAAIhI,EAAMrK,OAAS,GAAM,MAAM,IAAIU,MAAM,6CAGzC,OAAOitE,EAAQjnE,EAAO,CAAE2D,EAAO47F,KAAYtlG,MAAM,EAAG,IACxD,CAEM,SAAU2mH,GAAmBj9G,GAC/B,IAAMvI,EAAOmrE,EAAS5iE,GAGtB,GAAoB,KAAhBvI,EAAK9B,OAAiB,MAAM,IAAIU,MAAM,uCAC1C,GAAiB,IAAboB,EAAK,IAAa,MAAM,IAAIpB,MAAM,+CAItC,IADA,IAAIV,EAAS,GACe,IAArB8B,EAAK9B,EAAS,IAAYA,IAGjC,OAAOo1E,GAAatzE,EAAKnB,MAAM,EAAGX,GACtC,CCjCO,ICOD0sE,GAAS,IAAIrC,EDPI,eCSjBlZ,GAAQ,CACV,MACA,OACA,OACA,OACA,QACA,SACA,SAME,SAAUo2D,GAAQt7G,GACpB,IAAM6vE,EAAQxuE,OAAOrB,GAAOkqB,MAAM,MAE9B2lD,EAAM97E,OAAS,IAAM87E,EAAM,GAAGjuE,MAAM,eAAkBiuE,EAAM,KAAOA,EAAM,GAAGjuE,MAAM,aAA0B,MAAV5B,GAA2B,OAAVA,IACnHygE,GAAOjC,mBAAmB,gBAAiB,QAASx+D,GAIxD,IAAIgtF,EAAQnd,EAAM,GAEdh7D,EAAW,GAOf,IAN8B,MAA1Bm4E,EAAM9rF,UAAU,EAAG,KACnB2T,EAAW,IACXm4E,EAAQA,EAAM9rF,UAAU,IAIK,MAA1B8rF,EAAM9rF,UAAU,EAAG,IAAc8rF,EAAQA,EAAM9rF,UAAU,GAClD,KAAV8rF,IAAgBA,EAAQ,KAE5B,IAAIvyB,EAAS,GAEb,IADqB,IAAjBoV,EAAM97E,SAAgB0mE,EAAS,KAAOoV,EAAM,IAAM,MAC/CpV,EAAO1mE,OAAS,GAAmC,MAA9B0mE,EAAOA,EAAO1mE,OAAS,IAC/C0mE,EAASA,EAAOv5D,UAAU,EAAGu5D,EAAO1mE,OAAS,GAIjD,IADA,IAAMwnH,EAAY,GACXvuB,EAAMj5F,QAAQ,CACjB,GAAIi5F,EAAMj5F,QAAU,EAAG,CACnBwnH,EAAU99G,QAAQuvF,GAClB,MAEA,IAAMpvF,EAAQovF,EAAMj5F,OAAS,EAC7BwnH,EAAU99G,QAAQuvF,EAAM9rF,UAAUtD,IAClCovF,EAAQA,EAAM9rF,UAAU,EAAGtD,GAInC,OAAOiX,EAAW0mG,EAAU/0G,KAAK,KAAOi0D,CAC5C,CAEM,SAAU+gD,GAAYx7G,EAAqBy7G,GAC7C,GAAyB,kBAAdA,EAAwB,CAC/B,IAAM79G,EAAQsnD,GAAMlkD,QAAQy6G,IACb,IAAX79G,IAAgB69G,EAAW,EAAI79G,GAEvC,OAAOkvF,GAAY9sF,EAAoB,MAAZy7G,EAAoBA,EAAU,GAC7D,CAEM,SAAUC,GAAW17G,EAAey7G,GAItC,GAHsB,kBAAXz7G,GACPygE,GAAOjC,mBAAmB,yBAA0B,QAASx+D,GAExC,kBAAdy7G,EAAwB,CAC/B,IAAM79G,EAAQsnD,GAAMlkD,QAAQy6G,IACb,IAAX79G,IAAgB69G,EAAW,EAAI79G,GAEvC,OAAOqvF,GAAWjtF,EAAoB,MAAZy7G,EAAoBA,EAAU,GAC5D,CAEM,SAAUE,GAAYvuB,GACxB,OAAOouB,GAAYpuB,EAAK,GAC5B,CAEM,SAAUwuB,GAAWC,GACvB,OAAOH,GAAWG,EAAO,GAC7B,CCxFO,IAAMzwG,GAAU,eCmCjBq1D,GAAS,IAAIrC,EAAOhzD,IC7B1B,IACI,IAAM8pF,GAAahgF,OAEM,MAArBggF,GAAU4mB,UACV5mB,GAAU4mB,QAAUC,EAEX,CAAf,MAAO1pG,IAAQ,4DCVbza,EAAgBud,EAAQ,OACxBtb,EAAiBsb,EAAQ,OAO7B,SAAShX,EAAU6B,GACjB,IAAI7I,EAAI6I,EAER,GAAiB,kBAAN7I,EACT,MAAM,IAAI1C,MAAM,iFAAmF0C,EAAI,sBAOzG,OAJIA,EAAEpD,OAAS,IACboD,EAAI,IAAMA,GAGLA,CACT,CAOA,SAAS+G,EAASpK,GAGhB,MAAO,KAFGA,EAAEuC,SAAS,GAGvB,CA4KA8U,EAAOjV,QAAU,CACfoK,mBA1IF,SAA4BO,EAAUC,EAAQC,GAC5C,IAAgC,IAA5BpN,MAAMC,QAAQiN,GAChB,MAAM,IAAIpM,MAAM,oGAAyGoM,EAAW,KAEtI,IAA8B,IAA1BlN,MAAMC,QAAQkN,GAChB,MAAM,IAAIrM,MAAM,kGAAuGqM,EAAS,KAGlI,OAAOA,EAAOmkD,QAAQlkD,GAAS,OAAU,UAAS,SAAUf,GAC1D,OAAOa,EAASG,QAAQhB,IAAU,CACpC,GACF,EAgIEjB,YAvKF,SAAqBjL,GACnB,IAAI0C,EAAM0H,EAASpK,GAEnB,OAAO,IAAI4E,EAAOyF,EAAU3H,EAAI9B,MAAM,IAAK,MAC7C,EAoKE+L,cA7JF,SAAuB5I,GACrB,GAAmB,kBAARA,EACT,MAAM,IAAIpD,MAAM,oHAAyHoD,EAAM,MAGjJ,OAAOa,EAAOkI,WAAW/I,EAAK,OAChC,EAwJED,cAAeA,EACfiC,eAAgBA,EAChBsE,UAAWA,EACXD,SAAUA,EACVqC,UAzEF,SAAmBgB,GAEjB,IADA,IAAI/K,EAAM,GACD1C,EAAI,EAAGA,EAAIyN,EAAYxN,OAAQD,IAAK,CAE3C,IACIkL,EADOuC,EAAYC,WAAW1N,GACrBuC,SAAS,IACtBG,GAAOwI,EAAEjL,OAAS,EAAI,IAAMiL,EAAIA,CAClC,CAEA,MAAO,KAAOxI,CAChB,EAgEEgK,SAxFF,SAAkBe,GAGhB,MAAO,KAAOpD,EAFJ,IAAIzF,EAAO6I,EAAa,QAENlL,SAAS,QAAQoJ,QAAQ,WAAY,GACnE,EAqFEkB,QAlHF,SAAiBnK,GACf,IAAIqB,EAAM,GACN/D,EAAI,EACJmN,EAAIzK,EAAIzC,OAMZ,IAJ4B,OAAxByC,EAAI0K,UAAU,EAAG,KACnBpN,EAAI,GAGCA,EAAImN,EAAGnN,GAAK,EAAG,CACpB,IAAIqN,EAAOvK,SAASJ,EAAI4K,OAAOtN,EAAG,GAAI,IACtC+D,GAAOwJ,OAAOC,aAAaH,EAC7B,CAEA,OAAOtJ,CACT,EAoGEmkH,OAhIF,SAAgBxlH,GAGd,OAFkB,IAAIkC,EAAOyF,EAAUtE,EAAerD,GAAKiJ,QAAQ,WAAY,KAAM,OAElEpJ,SAAS,OAC9B,EA6HEqK,QAxDF,SAAiBe,EAAQC,EAAKC,GAC5B,IAAKhO,MAAMC,QAAQ6N,GACjB,MAAM,IAAIhN,MAAM,mFAAwFgN,EAAS,KAEnH,GAAmB,kBAARC,EACT,MAAM,IAAIjN,MAAM,iFAAsFiN,EAAM,MAK9G,IAFA,IAAIrK,EAAS,GAEJvD,EAAI,EAAGA,EAAI2N,EAAO1N,OAAQD,IAAK,CAEtC,IAAIkM,EAAQyB,EAAO3N,GAAG4N,GACtB,GAAIC,IAAe3B,EACjBA,EAAQ,QACH,GAAqB,kBAAVA,EAChB,MAAM,IAAIvL,MAAM,eAElB4C,EAAOrD,KAAKgM,EACd,CAEA,OAAO3I,CACT,EAmCEyH,YAzBF,SAAqBkB,EAAOjM,GAC1B,QAAqB,kBAAViM,IAAuBA,EAAM4B,MAAM,wBAI1C7N,GAAUiM,EAAMjM,SAAW,EAAI,EAAIA,EAKzC,sBCrMAoX,EAAOjV,QAAU,SAAuB2B,GACtC,GAAmB,kBAARA,EACT,MAAM,IAAIpD,MAAM,2EAA8EoD,EAAO,mCAGvG,MAA2B,OAApBA,EAAInD,MAAM,EAAG,EACtB,6BCZA,aASA,WACE,aAEA,IAAIunH,EAAc,wBAEdC,EAA2B,kBAAXhnG,OAChBhQ,EAAOg3G,EAAShnG,OAAS,CAAC,EAC1BhQ,EAAKi3G,oBACPD,GAAS,GAEX,IAAIE,GAAcF,GAA0B,kBAATt/G,MACpBsI,EAAKm3G,oBAAyC,kBAAZznD,GAAwBA,EAAQ0nD,UAAY1nD,EAAQ0nD,SAAS5zE,KAE5GxjC,EAAOiwF,EAAAA,EACEinB,IACTl3G,EAAOtI,MAET,IAAI2/G,GAAar3G,EAAKs3G,sBAAsDrxG,EAAOjV,QAC/EumH,EAAsCC,EAAAA,KACtCC,GAAgBz3G,EAAK03G,yBAAkD,qBAAhBp3G,YACvDq3G,EAAY,mBAAmB3yF,MAAM,IAErC4yF,EAAiB,CAAC,EAAG,KAAM,OAAQ,UAGnCC,EAAQ,CAAC,EAAG,EAAG,GAAI,IACnBC,EAAK,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAC7E,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAC1E,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAClE,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WACtE,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YACpEC,EAAO,CAAC,IAAK,IAAK,IAAK,KACvBC,EAAa,CAAC,IAAK,KACnBC,EAAe,CAAC,MAAO,SAAU,cAAe,QAAS,UACzDC,EAAiB,CACnB,IAAO,IACP,IAAO,MAGLl4G,EAAKm3G,oBAAuB1oH,MAAMC,UACpCD,MAAMC,QAAU,SAAUuoE,GACxB,MAA+C,mBAAxCv8D,OAAO+F,UAAUtP,SAAS8G,KAAKg/D,EACxC,IAGEwgD,IAAiBz3G,EAAKm4G,iCAAoC73G,YAAYC,SACxED,YAAYC,OAAS,SAAU02D,GAC7B,MAAsB,kBAARA,GAAoBA,EAAI78D,QAAU68D,EAAI78D,OAAOiV,cAAgB/O,WAC7E,GA+FF,IA5FA,IAAI83G,EAAqB,SAAUl6F,EAAMtY,EAASjH,GAChD,OAAO,SAAUF,GACf,OAAO,IAAIy1D,EAAOh2C,EAAMtY,EAASsY,GAAM0M,OAAOnsB,GAASE,IACzD,CACF,EAEI05G,EAA0B,SAAUn6F,EAAMtY,EAASjH,GACrD,OAAO,SAAUF,EAAS65G,GACxB,OAAO,IAAIpkD,EAAOh2C,EAAMtY,EAAS0yG,GAAY1tF,OAAOnsB,GAASE,IAC/D,CACF,EAEI45G,EAA2B,SAAUr6F,EAAMtY,EAASjH,GACtD,OAAO,SAAUF,EAAS65G,EAAYx+G,EAAGiE,GACvC,OAAOy6G,EAAQ,SAAWt6F,GAAM0M,OAAOnsB,EAAS65G,EAAYx+G,EAAGiE,GAAGY,IACpE,CACF,EAEI85G,EAAyB,SAAUv6F,EAAMtY,EAASjH,GACpD,OAAO,SAAUnC,EAAKiC,EAAS65G,EAAYv6G,GACzC,OAAOy6G,EAAQ,OAASt6F,GAAM0M,OAAOpuB,EAAKiC,EAAS65G,EAAYv6G,GAAGY,IACpE,CACF,EAEI+5G,EAAsB,SAAUlvE,EAAQmvE,EAAcz6F,EAAMtY,GAC9D,IAAK,IAAIhX,EAAI,EAAGA,EAAIqpH,EAAappH,SAAUD,EAAG,CAC5C,IAAI2Z,EAAO0vG,EAAarpH,GACxB46C,EAAOjhC,GAAQowG,EAAaz6F,EAAMtY,EAAS2C,EAC7C,CACA,OAAOihC,CACT,EAEImvE,EAAe,SAAUz6F,EAAMtY,GACjC,IAAI4jC,EAAS4uE,EAAmBl6F,EAAMtY,EAAS,OAO/C,OANA4jC,EAAOiV,OAAS,WACd,OAAO,IAAIyV,EAAOh2C,EAAMtY,EAASsY,EACnC,EACAsrB,EAAO5e,OAAS,SAAUnsB,GACxB,OAAO+qC,EAAOiV,SAAS7zB,OAAOnsB,EAChC,EACOi6G,EAAoBlvE,EAAQ4uE,EAAoBl6F,EAAMtY,EAC/D,EAyCIgzG,EAAa,CACf,CAAEp4G,KAAM,SAAUoF,QA/GC,CAAC,EAAG,IAAK,MAAO,UA+GQsY,KAAM65F,EAAMY,aAAcA,GACrE,CAAEn4G,KAAM,OAAQoF,QA/GJ,CAAC,EAAG,KAAM,OAAQ,WA+GIsY,KAAM65F,EAAMY,aAAcA,GAC5D,CAAEn4G,KAAM,QAASoF,QAnHC,CAAC,GAAI,KAAM,QAAS,WAmHGsY,KAAM85F,EAAYW,aA1CrC,SAAUz6F,EAAMtY,GACtC,IAAI4jC,EAAS6uE,EAAwBn6F,EAAMtY,EAAS,OAOpD,OANA4jC,EAAOiV,OAAS,SAAU65D,GACxB,OAAO,IAAIpkD,EAAOh2C,EAAMtY,EAAS0yG,EACnC,EACA9uE,EAAO5e,OAAS,SAAUnsB,EAAS65G,GACjC,OAAO9uE,EAAOiV,OAAO65D,GAAY1tF,OAAOnsB,EAC1C,EACOi6G,EAAoBlvE,EAAQ6uE,EAAyBn6F,EAAMtY,EACpE,GAkCE,CAAEpF,KAAM,SAAUoF,QAASgyG,EAAgB15F,KAAM85F,EAAYW,aAhCtC,SAAUz6F,EAAMtY,GACvC,IAAIoL,EAAIknG,EAAeh6F,GACnBsrB,EAAS+uE,EAAyBr6F,EAAMtY,EAAS,OAWrD,OAVA4jC,EAAOiV,OAAS,SAAU65D,EAAYx+G,EAAGiE,GACvC,OAAKjE,GAAMiE,EAGF,IAAIm2D,EAAOh2C,EAAMtY,EAAS0yG,GAAYO,QAAQ,CAAC/+G,EAAGiE,GAAIiT,GAFtDwnG,EAAQ,QAAUt6F,GAAMugC,OAAO65D,EAI1C,EACA9uE,EAAO5e,OAAS,SAAUnsB,EAAS65G,EAAYx+G,EAAGiE,GAChD,OAAOyrC,EAAOiV,OAAO65D,EAAYx+G,EAAGiE,GAAG6sB,OAAOnsB,EAChD,EACOi6G,EAAoBlvE,EAAQ+uE,EAA0Br6F,EAAMtY,EACrE,GAmBE,CAAEpF,KAAM,OAAQoF,QAASgyG,EAAgB15F,KAAM85F,EAAYW,aAjBtC,SAAUz6F,EAAMtY,GACrC,IAAIoL,EAAIknG,EAAeh6F,GACnBsrB,EAASivE,EAAuBv6F,EAAMtY,EAAS,OAOnD,OANA4jC,EAAOiV,OAAS,SAAUjiD,EAAK87G,EAAYv6G,GACzC,OAAO,IAAI+6G,EAAK56F,EAAMtY,EAAS0yG,GAAYO,QAAQ,CAAC,OAAQ96G,GAAIiT,GAAG6nG,QAAQ,CAACr8G,GAAMwU,EACpF,EACAw4B,EAAO5e,OAAS,SAAUpuB,EAAKiC,EAAS65G,EAAYv6G,GAClD,OAAOyrC,EAAOiV,OAAOjiD,EAAK87G,EAAYv6G,GAAG6sB,OAAOnsB,EAClD,EACOi6G,EAAoBlvE,EAAQivE,EAAwBv6F,EAAMtY,EACnE,IAUI4yG,EAAU,CAAC,EAAGO,EAAc,GAEvBnqH,EAAI,EAAGA,EAAIgqH,EAAW/pH,SAAUD,EAGvC,IAFA,IAAI2zD,EAAYq2D,EAAWhqH,GACvBsvB,EAAOqkC,EAAUrkC,KACZpsB,EAAI,EAAGA,EAAIosB,EAAKrvB,SAAUiD,EAAG,CACpC,IAAIknH,EAAaz2D,EAAU/hD,KAAO,IAAM0d,EAAKpsB,GAG7C,GAFAinH,EAAYjqH,KAAKkqH,GACjBR,EAAQQ,GAAcz2D,EAAUo2D,aAAaz6F,EAAKpsB,GAAIywD,EAAU38C,SACzC,SAAnB28C,EAAU/hD,KAAiB,CAC7B,IAAIy4G,EAAgB12D,EAAU/hD,KAAO0d,EAAKpsB,GAC1CinH,EAAYjqH,KAAKmqH,GACjBT,EAAQS,GAAiBT,EAAQQ,EACnC,CACF,CAGF,SAAS9kD,EAAOh2C,EAAMtY,EAAS0yG,GAC7BjlH,KAAK86B,OAAS,GACd96B,KAAK0K,EAAI,GACT1K,KAAKuS,QAAUA,EACfvS,KAAKilH,WAAaA,EAClBjlH,KAAK6lH,OAAQ,EACb7lH,KAAK8lH,WAAY,EACjB9lH,KAAKwQ,MAAQ,EACbxQ,KAAKhE,MAAQ,EACbgE,KAAK+lH,WAAc,MAAQl7F,GAAQ,IAAO,EAC1C7qB,KAAKmwG,UAAYnwG,KAAK+lH,YAAc,EACpC/lH,KAAKgmH,aAAef,GAAc,EAClCjlH,KAAKimH,YAA2B,GAAbhB,IAAoB,EAEvC,IAAK,IAAI1pH,EAAI,EAAGA,EAAI,KAAMA,EACxByE,KAAK0K,EAAEnP,GAAK,CAEhB,CAuQA,SAASkqH,EAAK56F,EAAMtY,EAAS0yG,GAC3BpkD,EAAOj8D,KAAK5E,KAAM6qB,EAAMtY,EAAS0yG,EACnC,CAvQApkD,EAAOzzD,UAAUmqB,OAAS,SAAUnsB,GAClC,GAAIpL,KAAK8lH,UACP,MAAM,IAAI5pH,MA/KO,2BAiLnB,IAAIgqH,EAAWhxG,SAAc9J,EAC7B,GAAa,WAAT8J,EAAmB,CACrB,GAAa,WAATA,EAWF,MAAM,IAAIhZ,MAAMwnH,GAVhB,GAAgB,OAAZt4G,EACF,MAAM,IAAIlP,MAAMwnH,GACX,GAAIU,GAAgBh5G,EAAQ4Q,cAAgB/O,YACjD7B,EAAU,IAAI1O,WAAW0O,QACpB,IAAKhQ,MAAMC,QAAQ+P,MACnBg5G,IAAiBn3G,YAAYC,OAAO9B,IACvC,MAAM,IAAIlP,MAAMwnH,GAMtBwC,GAAY,CACd,CAIA,IAHA,IACuD3qH,EAAGqN,EADtDkyB,EAAS96B,KAAK86B,OAAQq1E,EAAYnwG,KAAKmwG,UAAW30G,EAAS4P,EAAQ5P,OACrEuqH,EAAa/lH,KAAK+lH,WAAY1gH,EAAQ,EAAGqF,EAAI1K,KAAK0K,EAE7CrF,EAAQ7J,GAAQ,CACrB,GAAIwE,KAAK6lH,MAGP,IAFA7lH,KAAK6lH,OAAQ,EACb/qF,EAAO,GAAK96B,KAAKwQ,MACZjV,EAAI,EAAGA,EAAIwqH,EAAa,IAAKxqH,EAChCu/B,EAAOv/B,GAAK,EAGhB,GAAI2qH,EACF,IAAK3qH,EAAIyE,KAAKhE,MAAOqJ,EAAQ7J,GAAUD,EAAI40G,IAAa9qG,EACtDy1B,EAAOv/B,GAAK,IAAM6P,EAAQ/F,IAAUm/G,EAAY,EAANjpH,UAG5C,IAAKA,EAAIyE,KAAKhE,MAAOqJ,EAAQ7J,GAAUD,EAAI40G,IAAa9qG,GACtDuD,EAAOwC,EAAQnC,WAAW5D,IACf,IACTy1B,EAAOv/B,GAAK,IAAMqN,GAAQ47G,EAAY,EAANjpH,KACvBqN,EAAO,MAChBkyB,EAAOv/B,GAAK,KAAO,IAAQqN,GAAQ,IAAO47G,EAAY,EAANjpH,KAChDu/B,EAAOv/B,GAAK,KAAO,IAAe,GAAPqN,IAAiB47G,EAAY,EAANjpH,MACzCqN,EAAO,OAAUA,GAAQ,OAClCkyB,EAAOv/B,GAAK,KAAO,IAAQqN,GAAQ,KAAQ47G,EAAY,EAANjpH,KACjDu/B,EAAOv/B,GAAK,KAAO,IAASqN,GAAQ,EAAK,KAAU47G,EAAY,EAANjpH,KACzDu/B,EAAOv/B,GAAK,KAAO,IAAe,GAAPqN,IAAiB47G,EAAY,EAANjpH,OAElDqN,EAAO,QAAoB,KAAPA,IAAiB,GAAqC,KAA9BwC,EAAQnC,aAAa5D,IACjEy1B,EAAOv/B,GAAK,KAAO,IAAQqN,GAAQ,KAAQ47G,EAAY,EAANjpH,KACjDu/B,EAAOv/B,GAAK,KAAO,IAASqN,GAAQ,GAAM,KAAU47G,EAAY,EAANjpH,KAC1Du/B,EAAOv/B,GAAK,KAAO,IAASqN,GAAQ,EAAK,KAAU47G,EAAY,EAANjpH,KACzDu/B,EAAOv/B,GAAK,KAAO,IAAe,GAAPqN,IAAiB47G,EAAY,EAANjpH,MAKxD,GADAyE,KAAKmmH,cAAgB5qH,EACjBA,GAAK40G,EAAW,CAGlB,IAFAnwG,KAAKhE,MAAQT,EAAI40G,EACjBnwG,KAAKwQ,MAAQsqB,EAAOirF,GACfxqH,EAAI,EAAGA,EAAIwqH,IAAcxqH,EAC5BmP,EAAEnP,IAAMu/B,EAAOv/B,GAEjBg/B,EAAE7vB,GACF1K,KAAK6lH,OAAQ,CACf,MACE7lH,KAAKhE,MAAQT,CAEjB,CACA,OAAOyE,IACT,EAEA6gE,EAAOzzD,UAAUlS,OAAS,SAAUusB,EAAGvhB,GACrC,IAAImc,EAAQ,IAAJoF,EAAShhB,EAAI,EACjBZ,EAAQ,CAACwc,GAGb,IADAA,EAAQ,KADRoF,IAAS,GAEFpF,EAAI,GACTxc,EAAMX,QAAQmd,GAEdA,EAAQ,KADRoF,IAAS,KAEPhhB,EAQJ,OANIP,EACFL,EAAMpK,KAAKgL,GAEXZ,EAAMX,QAAQuB,GAEhBzG,KAAKu3B,OAAO1xB,GACLA,EAAMrK,MACf,EAEAqlE,EAAOzzD,UAAUg5G,aAAe,SAAU9mH,GACxC,IAAI4mH,EAAWhxG,SAAc5V,EAC7B,GAAa,WAAT4V,EAAmB,CACrB,GAAa,WAATA,EAWF,MAAM,IAAIhZ,MAAMwnH,GAVhB,GAAY,OAARpkH,EACF,MAAM,IAAIpD,MAAMwnH,GACX,GAAIU,GAAgB9kH,EAAI0c,cAAgB/O,YAC7C3N,EAAM,IAAI5C,WAAW4C,QAChB,IAAKlE,MAAMC,QAAQiE,MACnB8kH,IAAiBn3G,YAAYC,OAAO5N,IACvC,MAAM,IAAIpD,MAAMwnH,GAMtBwC,GAAY,CACd,CACA,IAAIrgH,EAAQ,EAAGrK,EAAS8D,EAAI9D,OAC5B,GAAI0qH,EACFrgH,EAAQrK,OAER,IAAK,IAAID,EAAI,EAAGA,EAAI+D,EAAI9D,SAAUD,EAAG,CACnC,IAAIqN,EAAOtJ,EAAI2J,WAAW1N,GACtBqN,EAAO,IACT/C,GAAS,EACA+C,EAAO,KAChB/C,GAAS,EACA+C,EAAO,OAAUA,GAAQ,MAClC/C,GAAS,GAET+C,EAAO,QAAoB,KAAPA,IAAiB,GAA6B,KAAtBtJ,EAAI2J,aAAa1N,IAC7DsK,GAAS,EAEb,CAIF,OAFAA,GAAS7F,KAAK9E,OAAe,EAAR2K,GACrB7F,KAAKu3B,OAAOj4B,GACLuG,CACT,EAEAg7D,EAAOzzD,UAAUo4G,QAAU,SAAUa,EAAM1oG,GAEzC,IADA,IAAI9X,EAAQ7F,KAAK9E,OAAOyiB,GACfpiB,EAAI,EAAGA,EAAI8qH,EAAK7qH,SAAUD,EACjCsK,GAAS7F,KAAKomH,aAAaC,EAAK9qH,IAElC,IAAI+qH,EAAe3oG,EAAI9X,EAAQ8X,EAC3B5a,EAAQ,GAGZ,OAFAA,EAAMvH,OAAS8qH,EACftmH,KAAKu3B,OAAOx0B,GACL/C,IACT,EAEA6gE,EAAOzzD,UAAUm5G,SAAW,WAC1B,IAAIvmH,KAAK8lH,UAAT,CAGA9lH,KAAK8lH,WAAY,EACjB,IAAIhrF,EAAS96B,KAAK86B,OAAQv/B,EAAIyE,KAAKmmH,cAAeJ,EAAa/lH,KAAK+lH,WAAYr7G,EAAI1K,KAAK0K,EAEzF,GADAowB,EAAOv/B,GAAK,IAAMyE,KAAKuS,QAAY,EAAJhX,GAC3ByE,KAAKmmH,gBAAkBnmH,KAAKmwG,UAE9B,IADAr1E,EAAO,GAAKA,EAAOirF,GACdxqH,EAAI,EAAGA,EAAIwqH,EAAa,IAAKxqH,EAChCu/B,EAAOv/B,GAAK,EAIhB,IADAu/B,EAAOirF,EAAa,IAAM,WACrBxqH,EAAI,EAAGA,EAAIwqH,IAAcxqH,EAC5BmP,EAAEnP,IAAMu/B,EAAOv/B,GAEjBg/B,EAAE7vB,EAdF,CAeF,EAEAm2D,EAAOzzD,UAAUtP,SAAW+iE,EAAOzzD,UAAUnP,IAAM,WACjD+B,KAAKumH,WAKL,IAHA,IAEc/1G,EAFVu1G,EAAa/lH,KAAK+lH,WAAYr7G,EAAI1K,KAAK0K,EAAGs7G,EAAehmH,KAAKgmH,aAChEC,EAAajmH,KAAKimH,WAAY1qH,EAAI,EAAGkD,EAAI,EACvCR,EAAM,GACHQ,EAAIunH,GAAc,CACvB,IAAKzqH,EAAI,EAAGA,EAAIwqH,GAActnH,EAAIunH,IAAgBzqH,IAAKkD,EACrD+R,EAAQ9F,EAAEnP,GACV0C,GAAOqmH,EAAW9zG,GAAS,EAAK,IAAQ8zG,EAAkB,GAAR9zG,GAChD8zG,EAAW9zG,GAAS,GAAM,IAAQ8zG,EAAW9zG,GAAS,EAAK,IAC3D8zG,EAAW9zG,GAAS,GAAM,IAAQ8zG,EAAW9zG,GAAS,GAAM,IAC5D8zG,EAAW9zG,GAAS,GAAM,IAAQ8zG,EAAW9zG,GAAS,GAAM,IAE5D/R,EAAIsnH,IAAe,IACrBxrF,EAAE7vB,GACFnP,EAAI,EAER,CAWA,OAVI0qH,IACFz1G,EAAQ9F,EAAEnP,GACV0C,GAAOqmH,EAAW9zG,GAAS,EAAK,IAAQ8zG,EAAkB,GAAR9zG,GAC9Cy1G,EAAa,IACfhoH,GAAOqmH,EAAW9zG,GAAS,GAAM,IAAQ8zG,EAAW9zG,GAAS,EAAK,KAEhEy1G,EAAa,IACfhoH,GAAOqmH,EAAW9zG,GAAS,GAAM,IAAQ8zG,EAAW9zG,GAAS,GAAM,MAGhEvS,CACT,EAEA4iE,EAAOzzD,UAAU47F,YAAc,WAC7BhpG,KAAKumH,WAEL,IAGIx/G,EAHAg/G,EAAa/lH,KAAK+lH,WAAYr7G,EAAI1K,KAAK0K,EAAGs7G,EAAehmH,KAAKgmH,aAChEC,EAAajmH,KAAKimH,WAAY1qH,EAAI,EAAGkD,EAAI,EACvCoH,EAAQ7F,KAAKilH,YAAc,EAG7Bl+G,EADEk/G,EACO,IAAIh5G,YAAa+4G,EAAe,GAAM,GAEtC,IAAI/4G,YAAYpH,GAG3B,IADA,IAAIrH,EAAQ,IAAI++D,YAAYx2D,GACrBtI,EAAIunH,GAAc,CACvB,IAAKzqH,EAAI,EAAGA,EAAIwqH,GAActnH,EAAIunH,IAAgBzqH,IAAKkD,EACrDD,EAAMC,GAAKiM,EAAEnP,GAEXkD,EAAIsnH,IAAe,GACrBxrF,EAAE7vB,EAEN,CAKA,OAJIu7G,IACFznH,EAAMjD,GAAKmP,EAAEnP,GACbwL,EAASA,EAAO5K,MAAM,EAAG0J,IAEpBkB,CACT,EAEA85D,EAAOzzD,UAAUrG,OAAS85D,EAAOzzD,UAAU47F,YAE3CnoC,EAAOzzD,UAAU6jC,OAAS4vB,EAAOzzD,UAAU5O,MAAQ,WACjDwB,KAAKumH,WAKL,IAHA,IAEgB9pH,EAAQ+T,EAFpBu1G,EAAa/lH,KAAK+lH,WAAYr7G,EAAI1K,KAAK0K,EAAGs7G,EAAehmH,KAAKgmH,aAChEC,EAAajmH,KAAKimH,WAAY1qH,EAAI,EAAGkD,EAAI,EACvCD,EAAQ,GACLC,EAAIunH,GAAc,CACvB,IAAKzqH,EAAI,EAAGA,EAAIwqH,GAActnH,EAAIunH,IAAgBzqH,IAAKkD,EACrDhC,EAASgC,GAAK,EACd+R,EAAQ9F,EAAEnP,GACViD,EAAM/B,GAAkB,IAAR+T,EAChBhS,EAAM/B,EAAS,GAAM+T,GAAS,EAAK,IACnChS,EAAM/B,EAAS,GAAM+T,GAAS,GAAM,IACpChS,EAAM/B,EAAS,GAAM+T,GAAS,GAAM,IAElC/R,EAAIsnH,IAAe,GACrBxrF,EAAE7vB,EAEN,CAYA,OAXIu7G,IACFxpH,EAASgC,GAAK,EACd+R,EAAQ9F,EAAEnP,GACViD,EAAM/B,GAAkB,IAAR+T,EACZy1G,EAAa,IACfznH,EAAM/B,EAAS,GAAM+T,GAAS,EAAK,KAEjCy1G,EAAa,IACfznH,EAAM/B,EAAS,GAAM+T,GAAS,GAAM,MAGjChS,CACT,EAMAinH,EAAKr4G,UAAY,IAAIyzD,EAErB4kD,EAAKr4G,UAAUm5G,SAAW,WAExB,OADAvmH,KAAK9E,OAAO8E,KAAKilH,YAAY,GACtBpkD,EAAOzzD,UAAUm5G,SAAS3hH,KAAK5E,KACxC,EAEA,IAAIu6B,EAAI,SAAU7vB,GAChB,IAAIygB,EAAGziB,EAAGjC,EAAG+/G,EAAIz6E,EAAIC,EAAIy6E,EAAIC,EAAIC,EAAIC,EAAIC,EAAIzgC,EAAI0gC,EAC/C1iG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI+T,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAK4sF,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKl+E,EAAKm+E,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKt/E,GAAKu/E,GAAKC,GAAKC,GAAKC,GAAKC,GAC7E,IAAKriH,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvB+/G,EAAK97G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCqhC,EAAKrhC,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCshC,EAAKthC,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC+7G,EAAK/7G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCg8G,EAAKh8G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCi8G,EAAKj8G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCk8G,EAAKl8G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCm8G,EAAKn8G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAItCygB,GAHAi7D,EAAK17E,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3BshC,GAAM,EAAMy6E,IAAO,IAC9B/9G,GAHAo+G,EAAKp8G,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3B+7G,GAAM,EAAMz6E,IAAO,IAC9BthC,EAAE,IAAMygB,EACRzgB,EAAE,IAAMhC,EACRgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTyiB,EAAIq7F,GAAOE,GAAM,EAAMC,IAAO,IAC9Bj+G,EAAIqjC,GAAO46E,GAAM,EAAMD,IAAO,IAC9Bh8G,EAAE,IAAMygB,EACRzgB,EAAE,IAAMhC,EACRgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTyiB,EAAI6gB,GAAO46E,GAAM,EAAMC,IAAO,IAC9Bn+G,EAAI+9G,GAAOI,GAAM,EAAMD,IAAO,IAC9Bl8G,EAAE,IAAMygB,EACRzgB,EAAE,IAAMhC,EACRgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTyiB,EAAIu7F,GAAOtgC,GAAM,EAAM0gC,IAAO,IAC9Bp+G,EAAIi+G,GAAOG,GAAM,EAAM1gC,IAAO,IAC9B17E,EAAE,IAAMygB,EACRzgB,EAAE,IAAMhC,EACRgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTyiB,EAAIy7F,GAAOJ,GAAM,EAAMz6E,IAAO,IAC9BrjC,EAAIm+G,GAAO96E,GAAM,EAAMy6E,IAAO,IAC9B97G,EAAE,IAAMygB,EACRzgB,EAAE,IAAMhC,EACRgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EACTgC,EAAE,KAAOygB,EACTzgB,EAAE,KAAOhC,EAET0b,EAAK1Z,EAAE,GACP6Z,EAAK7Z,EAAE,GACPo9G,EAAOp9G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCq9G,EAAOr9G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCwvB,EAAOxvB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCyvB,EAAOzvB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCi+G,GAAOj+G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCk+G,GAAOl+G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCg9G,EAAOh9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCi9G,EAAOj9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCy8G,EAAOz8G,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9B08G,EAAO18G,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9Bga,EAAMha,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCma,EAAMna,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCs9G,EAAOt9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCu9G,EAAOv9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCq8G,EAAOr8G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCs8G,EAAOt8G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCm+G,GAAOn+G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCo+G,GAAOp+G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC49G,GAAO59G,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/B69G,GAAO79G,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bw+B,EAAOx+B,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC28G,EAAO38G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCsa,EAAMta,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCya,EAAMza,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCw9G,EAAOx9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCy9G,EAAOz9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCu8G,EAAOv8G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCw8G,EAAOx8G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCovB,EAAOpvB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BqvB,EAAOrvB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/B89G,GAAO99G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC+9G,GAAO/9G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC48G,EAAO58G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC68G,EAAO78G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC4a,EAAM5a,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC+a,EAAM/a,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC09G,EAAO19G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC29G,GAAO39G,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCk9G,EAAOl9G,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/Bm9G,EAAOn9G,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BsvB,EAAOtvB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCuvB,EAAOvvB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCy+B,GAAOz+B,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCg+G,GAAOh+G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC88G,EAAO98G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC+8G,EAAO/8G,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCkb,EAAMlb,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCqb,EAAMrb,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAEhCA,EAAE,GAAK0Z,GAAOM,EAAKM,EACnBta,EAAE,GAAK6Z,GAAOM,EAAKM,EACnBza,EAAE,IAAMovB,GAAQE,EAAME,EACtBxvB,EAAE,IAAMqvB,GAAQE,EAAME,EACtBzvB,EAAE,IAAMy8G,GAAQj+E,EAAMo+E,EACtB58G,EAAE,IAAM08G,GAAQC,EAAME,EACtB78G,EAAE,IAAMk9G,GAAQE,EAAME,EACtBt9G,EAAE,IAAMm9G,GAAQE,EAAME,EACtBv9G,EAAE,IAAM49G,IAAQE,GAAMr/E,GACtBz+B,EAAE,IAAM69G,IAAQE,GAAMC,GACtBh+G,EAAE,GAAKga,GAAOM,EAAKM,EACnB5a,EAAE,GAAKma,GAAOM,EAAKM,EACnB/a,EAAE,IAAMsvB,GAAQE,EAAM6sF,EACtBr8G,EAAE,IAAMuvB,GAAQE,EAAM6sF,EACtBt8G,EAAE,IAAMw+B,GAAQo+E,EAAME,EACtB98G,EAAE,IAAM28G,GAAQE,EAAME,EACtB/8G,EAAE,IAAMo9G,GAAQE,EAAME,EACtBx9G,EAAE,IAAMq9G,GAAQE,EAAME,EACtBz9G,EAAE,IAAM89G,IAAQr/E,GAAMw/E,GACtBj+G,EAAE,IAAM+9G,IAAQC,GAAME,GACtBl+G,EAAE,GAAKsa,GAAOM,EAAKM,EACnBlb,EAAE,GAAKya,GAAOM,EAAKM,EACnBrb,EAAE,IAAMwvB,GAAQ6sF,EAAME,EACtBv8G,EAAE,IAAMyvB,GAAQ6sF,EAAME,EACtBx8G,EAAE,IAAM48G,GAAQE,EAAME,EACtBh9G,EAAE,IAAM68G,GAAQE,EAAME,EACtBj9G,EAAE,IAAMs9G,GAAQE,EAAME,EACtB19G,EAAE,IAAMu9G,GAAQE,EAAME,GACtB39G,EAAE,IAAMy+B,IAAQw/E,GAAME,GACtBn+G,EAAE,IAAMg+G,IAAQE,GAAME,GACtBp+G,EAAE,GAAK4a,GAAOM,EAAKxB,EACnB1Z,EAAE,GAAK+a,GAAOM,EAAKxB,EACnB7Z,EAAE,IAAMq8G,GAAQE,EAAMntF,EACtBpvB,EAAE,IAAMs8G,GAAQE,EAAMntF,EACtBrvB,EAAE,IAAM88G,GAAQE,EAAMP,EACtBz8G,EAAE,IAAM+8G,GAAQE,EAAMP,EACtB18G,EAAE,IAAMw9G,GAAQE,EAAMR,EACtBl9G,EAAE,IAAMy9G,GAAQE,GAAMR,EACtBn9G,EAAE,IAAMi+G,IAAQE,GAAMP,GACtB59G,EAAE,IAAMk+G,IAAQE,GAAMP,GACtB79G,EAAE,GAAKkb,GAAOxB,EAAKM,EACnBha,EAAE,GAAKqb,GAAOxB,EAAKM,EACnBna,EAAE,IAAMu8G,GAAQntF,EAAME,EACtBtvB,EAAE,IAAMw8G,GAAQntF,EAAME,EACtBvvB,EAAE,IAAMg9G,GAAQP,EAAMj+E,EACtBx+B,EAAE,IAAMi9G,GAAQP,EAAMC,EACtB38G,EAAE,IAAM09G,GAAQR,EAAME,EACtBp9G,EAAE,IAAM29G,IAAQR,EAAME,EACtBr9G,EAAE,IAAMm+G,IAAQP,GAAME,GACtB99G,EAAE,IAAMo+G,IAAQP,GAAME,GAEtB/9G,EAAE,IAAM+5G,EAAGh+G,GACXiE,EAAE,IAAM+5G,EAAGh+G,EAAI,EAEnB,EAEA,GAAIu9G,EACFpxG,EAAOjV,QAAUwnH,MACZ,CACL,IAAK5pH,EAAI,EAAGA,EAAImqH,EAAYlqH,SAAUD,EACpCoR,EAAK+4G,EAAYnqH,IAAM4pH,EAAQO,EAAYnqH,IAEzC2oH,SAGD,KAFDC,EAAAA,WACE,OAAOgB,CACR,gCAEL,CACD,CAtoBD,uCCPA,IAAI4D,EAAUnsG,EAAQ,OAGlBosG,EAAkBD,EAAQC,gBAE1BC,EAAcF,EAAQE,YAEtBC,EAAY,CAEhBA,iBAA6B,CAE3B,IAAM,EACN,SAAW,EACX,aAAe,EACf,OAAS,EAET,iBAAmB,EACnB,MAAQ,EACR,MAAQ,EAER,SAAW,EACX,MAAQ,EACR,SAAW,IAMTC,EAAaD,EAAUC,WAAa,CAAC,EAgCzC,SAASC,EAAkB5tD,EAAUkN,EAASz5C,EAAK7qB,EAAU2V,GAC3D,IAAIqtD,EAAasB,EAAQtB,WACrBiiD,EAAW3gD,EAAQ2gD,SACvB3gD,EAAQtB,YAAa,EACrBsB,EAAQ2gD,UAAW,EACnB,IAAIziH,EAAM5G,KAAKspH,eAAe9tD,EAAUzhD,EAAQ2uD,EAASz5C,GAOzD,OANAy5C,EAAQtB,WAAaA,EACrBsB,EAAQ2gD,SAAWA,GAEdziH,EAAIkgG,OAAS1iG,aAAoBmlH,UACpCnlH,EAASwC,GAEJA,EAAIkgG,KACb,CA+IA,SAAS0iB,EAAsBxgD,EAAQ7/D,GAGrC,GAAG9B,OAAOoP,eAAe7R,KAAKokE,EAAQ7/D,GAAM,OAAO6/D,EAAO7/D,GAE1D,GAAKA,KAAO6/D,EACZ,KAAQA,EAAS3hE,OAAOgkD,eAAe2d,IACrC,GAAG3hE,OAAOoiH,qBAAqB7kH,KAAKokE,EAAQ7/D,GAAM,OAAO6/D,EAAO7/D,EAEpE,CA+DA,SAASugH,EAAwBluD,EAAUzhD,EAAQ2uD,EAASz5C,EAAKoqD,EAAUv6E,GACzE,GAAIkB,KAAK8W,MAAMkyD,OAAOxN,MAClBzhD,EAAOL,iBAA8Cna,IAAhCwa,EAAOL,WAAW2/D,IAG3C,IAAoC,IAAhCt/D,EAAOE,qBACTnb,EAAO6qH,SAAS,CACdx8G,KAAM,uBACNm6D,SAAU+R,EACVjuE,QAAS,kDAAoDuJ,KAAKC,UAAUykE,SAEzE,CACL,IAAIp/D,EAAuBF,EAAOE,sBAAwB,CAAC,EAEjB,mBAA/ByuD,EAAQkhD,qBACjBlhD,EAAQkhD,oBAAoBpuD,EAAU6d,EAAUp/D,EAAsByuD,EAASz5C,GAGjF,IAAIroB,EAAM5G,KAAKspH,eAAe9tD,EAAS6d,GAAWp/D,EAAsByuD,EAASz5C,EAAI46F,UAAU5vG,EAAsBo/D,IAClHzyE,EAAI40D,WAAa18D,EAAO08D,SAAS6d,KAAWv6E,EAAO08D,SAAS6d,GAAYzyE,EAAI40D,UAC/E18D,EAAOgrH,aAAaljH,EACtB,CACF,CAhRAuiH,EAAWj0G,KAAO,SAAuBsmD,EAAUzhD,EAAQ2uD,EAASz5C,GAElE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDnY,EAAQ1b,MAAMC,QAAQ0e,EAAO7E,MAAQ6E,EAAO7E,KAAO,CAAC6E,EAAO7E,MAC/D,IAAK4B,EAAMtO,KAAKxI,KAAK+pH,SAAS9kE,KAAKjlD,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,IAAO,CACzE,IAAI+6F,EAAOlzG,EAAMtP,KAAI,SAAUnL,GAC7B,GAAIA,EAAJ,CACA,IAAIy0E,EAAKz0E,EAAE4tH,KAAO5tH,EAAEy0E,GACpB,OAAOA,EAAM,IAAMA,EAAK,IAAQz0E,EAAE,EAFrB,CAGf,IACAyC,EAAO6qH,SAAS,CACdx8G,KAAM,OACNm6D,SAAU0iD,EACV5+G,QAAS,uBAAyB4+G,GAEtC,CACA,OAAOlrH,CACT,EAyBAqqH,EAAWe,MAAQ,SAAwB1uD,EAAUzhD,EAAQ2uD,EAASz5C,GAEpE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDk7F,EAAQ,IAAInB,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAC3D,IAAK7zB,MAAMC,QAAQ0e,EAAOmwG,OACxB,MAAM,IAAIjB,EAAY,0BAExB,IAAKlvG,EAAOmwG,MAAM1hH,KAChB4gH,EAAkBnkE,KAChBjlD,KAAMw7D,EAAUkN,EAASz5C,GAAK,SAASroB,GAAKujH,EAAML,aAAaljH,EAAK,KAClE,CACJ,IAAIojH,EAAOjwG,EAAOmwG,MAAM1iH,KAAI,SAAUnL,EAAGd,GACvC,IAAIu1E,EAAKz0E,EAAE4tH,KAAO5tH,EAAEy0E,GACpB,OAAGA,EAAW,IAAMA,EAAK,IAClBz0E,EAAE+tH,OAASz1G,KAAKC,UAAUvY,EAAE+tH,QAAY/tH,EAAQ,MAAM,IAAMA,EAAQ,KAAI,KAAS,cAAcd,EAAE,GAC1G,IACImtE,EAAQ2hD,cACVvrH,EAAOgrH,aAAaK,GAEtBrrH,EAAO6qH,SAAS,CACdx8G,KAAM,QACNm6D,SAAU0iD,EACV5+G,QAAS,iBAAmB4+G,EAAK/7G,KAAK,MAE1C,CACA,OAAOnP,CACT,EAUAqqH,EAAWmB,MAAQ,SAAwB9uD,EAAUzhD,EAAQ2uD,EAASz5C,GAEpE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAKpgE,MAAMC,QAAQ0e,EAAOuwG,OACxB,MAAM,IAAIrB,EAAY,0BAExB,IAAInqH,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxD5qB,EAAOrE,KAcX,OAbA+Z,EAAOuwG,MAAMtzG,SAAQ,SAAS3a,EAAGd,GAC/B,IAAIurG,EAAQziG,EAAKilH,eAAe9tD,EAAUn/D,EAAGqsE,EAASz5C,GACtD,IAAI63E,EAAMA,MAAM,CACd,IACI7gG,EADK5J,EAAE4tH,KAAO5tH,EAAEy0E,IACHz0E,EAAE+tH,OAASz1G,KAAKC,UAAUvY,EAAE+tH,QAAY/tH,EAAQ,MAAM,IAAMA,EAAQ,KAAI,KAAS,cAAcd,EAAE,IAClHuD,EAAO6qH,SAAS,CACdx8G,KAAM,QACNm6D,SAAU,CAAEwJ,GAAI7qE,EAAKzK,OAAQsrG,EAAMpoD,OAAOljD,OAAQsrG,MAAOA,GACzD17F,QAAS,+BAAiCnF,EAAM,SAAW6gG,EAAMpoD,OAAOljD,OAAS,eAEnFsD,EAAOgrH,aAAahjB,EACtB,CACF,IACOhoG,CACT,EAUAqqH,EAAWoB,MAAQ,SAAwB/uD,EAAUzhD,EAAQ2uD,EAASz5C,GAEpE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAKpgE,MAAMC,QAAQ0e,EAAOwwG,OACxB,MAAM,IAAItB,EAAY,0BAExB,IAAInqH,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDk7F,EAAQ,IAAInB,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACvDy4C,EAAQ3tD,EAAOwwG,MAAMpiE,OACvBihE,EAAkBnkE,KAChBjlD,KAAMw7D,EAAUkN,EAASz5C,GAAK,SAASroB,GAAMujH,EAAML,aAAaljH,EAAK,KACnEpL,OACFwuH,EAAOjwG,EAAOwwG,MAAM/iH,KAAI,SAAUnL,EAAGd,GAEvC,OADSc,EAAE4tH,KAAO5tH,EAAEy0E,IACNz0E,EAAE+tH,OAASz1G,KAAKC,UAAUvY,EAAE+tH,QAAY/tH,EAAQ,MAAM,IAAMA,EAAQ,KAAI,KAAS,cAAcd,EAAE,GACjH,IAWA,OAVY,IAARmsE,IACEgB,EAAQ2hD,cACVvrH,EAAOgrH,aAAaK,GAEtBrrH,EAAO6qH,SAAS,CACdx8G,KAAM,QACNm6D,SAAU0iD,EACV5+G,QAAS,2BAA6B4+G,EAAK/7G,KAAK,QAG7CnP,CACT,EAUAqqH,EAAWqB,GAAK,SAAqBhvD,EAAUzhD,EAAQ2uD,EAASz5C,GAE9D,QAAiB1vB,IAAbi8D,EAAwB,OAAO,KACnC,IAAKutD,EAAQ0B,SAAS1wG,EAAOywG,IAAK,MAAM,IAAItuH,MAAM,wCAClD,IAEI0K,EAFA8jH,EAAUtB,EAAkBxkH,KAAK5E,KAAMw7D,EAAUkN,EAASz5C,EAAK,KAAMlV,EAAOywG,IAC5E1rH,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAE5D,GAAGy7F,EAAQ,CACT,QAAoBnrH,IAAhBwa,EAAOoxD,KAAoB,OAC/B,IAAK49C,EAAQ0B,SAAS1wG,EAAOoxD,MAAO,MAAM,IAAIjvE,MAAM,0CACpD0K,EAAM5G,KAAKspH,eAAe9tD,EAAUzhD,EAAOoxD,KAAMzC,EAASz5C,EAAI46F,UAAU9vG,EAAOoxD,OAC/ErsE,EAAOgrH,aAAaljH,EACtB,KAAK,CACH,QAAoBrH,IAAhBwa,EAAO4wG,KAAoB,OAC/B,IAAK5B,EAAQ0B,SAAS1wG,EAAO4wG,MAAO,MAAM,IAAIzuH,MAAM,0CACpD0K,EAAM5G,KAAKspH,eAAe9tD,EAAUzhD,EAAO4wG,KAAMjiD,EAASz5C,EAAI46F,UAAU9vG,EAAO4wG,OAC/E7rH,EAAOgrH,aAAaljH,EACtB,CACA,OAAO9H,CACT,EAqBAqqH,EAAWyB,cAAgB,SAAgCpvD,EAAUzhD,EAAQ2uD,EAASz5C,GACpF,GAAIjvB,KAAK8W,MAAMkyD,OAAOxN,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxD47F,OAAmCtrH,IAAvBwa,EAAO6wG,cAA4B7wG,EAAO6wG,cAAgB,CAAC,EAC3E,IAAI7B,EAAQ0B,SAASI,GAAY,MAAM,IAAI5B,EAAY,+DAEvD,IAAK,IAAI5vC,KAAY7d,EACnB,QAAiDj8D,IAA9CiqH,EAAsBhuD,EAAU6d,GAAwB,CACzD,IAAIzyE,EAAM5G,KAAKspH,eAAejwC,EAAUwxC,EAAWniD,EAASz5C,EAAI46F,UAAUgB,IAC1E/rH,EAAOgrH,aAAaljH,EACtB,CAGF,OAAO9H,CAZgC,CAazC,EAUAqqH,EAAWzvG,WAAa,SAA6B8hD,EAAUzhD,EAAQ2uD,EAASz5C,GAC9E,GAAIjvB,KAAK8W,MAAMkyD,OAAOxN,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDvV,EAAaK,EAAOL,YAAc,CAAC,EACvC,IAAK,IAAI2/D,KAAY3/D,EAAY,CAC/B,IAAImxG,EAAYnxG,EAAW2/D,GAC3B,QAAe95E,IAAZsrH,EAAH,CAEM,GAAe,OAAZA,EACP,MAAM,IAAI5B,EAAY,oDAEkB,mBAA/BvgD,EAAQkhD,qBACjBlhD,EAAQkhD,oBAAoBpuD,EAAU6d,EAAUwxC,EAAWniD,EAASz5C,GAEtE,IAAI67F,EAAOtB,EAAsBhuD,EAAU6d,GACvCzyE,EAAM5G,KAAKspH,eAAewB,EAAMD,EAAWniD,EAASz5C,EAAI46F,UAAUgB,EAAWxxC,IAC9EzyE,EAAI40D,WAAa18D,EAAO08D,SAAS6d,KAAWv6E,EAAO08D,SAAS6d,GAAYzyE,EAAI40D,UAC/E18D,EAAOgrH,aAAaljH,EAPpB,CAQF,CACA,OAAO9H,CAlBgC,CAmBzC,EAyCAqqH,EAAW4B,kBAAoB,SAAoCvvD,EAAUzhD,EAAQ2uD,EAASz5C,GAC5F,GAAIjvB,KAAK8W,MAAMkyD,OAAOxN,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxD87F,EAAoBhxG,EAAOgxG,mBAAqB,CAAC,EAErD,IAAK,IAAI1xC,KAAY7d,EAAU,CAC7B,IAAIt6D,GAAO,EACX,IAAK,IAAI8pH,KAAWD,EAAmB,CACrC,IAAIF,EAAYE,EAAkBC,GAClC,QAAezrH,IAAZsrH,EAAH,CAEM,GAAe,OAAZA,EACP,MAAM,IAAI5B,EAAY,2DAExB,IACE,IAAIgC,EAAS,IAAIt2C,OAAOq2C,EAAS,IAKnC,CAJE,MAAME,GAGND,EAAS,IAAIt2C,OAAOq2C,EACtB,CACA,GAAKC,EAAO/pH,KAAKm4E,GAAjB,CAGAn4E,GAAO,EAEmC,mBAA/BwnE,EAAQkhD,qBACjBlhD,EAAQkhD,oBAAoBpuD,EAAU6d,EAAUwxC,EAAWniD,EAASz5C,GAGtE,IAAIroB,EAAM5G,KAAKspH,eAAe9tD,EAAS6d,GAAWwxC,EAAWniD,EAASz5C,EAAI46F,UAAUgB,EAAWxxC,IAC5FzyE,EAAI40D,WAAa18D,EAAO08D,SAAS6d,KAAWv6E,EAAO08D,SAAS6d,GAAYzyE,EAAI40D,UAC/E18D,EAAOgrH,aAAaljH,EATpB,CAVA,CAoBF,CACI1F,GACFwoH,EAAuB9kH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,EAAKoqD,EAAUv6E,EAEhF,CAEA,OAAOA,CAtCgC,CAuCzC,EAUAqqH,EAAWlvG,qBAAuB,SAAuCuhD,EAAUzhD,EAAQ2uD,EAASz5C,GAClG,GAAIjvB,KAAK8W,MAAMkyD,OAAOxN,GAAtB,CAEA,GAAIzhD,EAAOgxG,kBACT,OAAO,KAET,IAAIjsH,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAC5D,IAAK,IAAIoqD,KAAY7d,EACnBkuD,EAAuB9kH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,EAAKoqD,EAAUv6E,GAE9E,OAAOA,CATgC,CAUzC,EAQAqqH,EAAWgC,cAAgB,SAAgC3vD,EAAUzhD,EAAQ2uD,EAASz5C,GACpF,GAAKjvB,KAAK8W,MAAMkyD,OAAOxN,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAS5D,OARW5nB,OAAOuQ,KAAK4jD,GACZhgE,QAAUue,EAAOoxG,eAC1BrsH,EAAO6qH,SAAS,CACdx8G,KAAM,gBACNm6D,SAAUvtD,EAAOoxG,cACjB//G,QAAS,4CAA8C2O,EAAOoxG,gBAG3DrsH,CAViC,CAW1C,EAQAqqH,EAAWiC,cAAgB,SAAgC5vD,EAAUzhD,EAAQ2uD,EAASz5C,GACpF,GAAKjvB,KAAK8W,MAAMkyD,OAAOxN,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAS5D,OARW5nB,OAAOuQ,KAAK4jD,GACZhgE,QAAUue,EAAOqxG,eAC1BtsH,EAAO6qH,SAAS,CACdx8G,KAAM,gBACNm6D,SAAUvtD,EAAOqxG,cACjBhgH,QAAS,4CAA8C2O,EAAOqxG,gBAG3DtsH,CAViC,CAW1C,EAUAqqH,EAAWjvG,MAAQ,SAAwBshD,EAAUzhD,EAAQ2uD,EAASz5C,GACpE,IAAI5qB,EAAOrE,KACX,GAAKA,KAAK8W,MAAMtY,MAAMg9D,SACHj8D,IAAfwa,EAAOG,MAAX,CACA,IAAIpb,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAsB5D,OArBAusC,EAAShwB,OAAM,SAAU/jC,EAAOlM,GAC9B,GAAGH,MAAMC,QAAQ0e,EAAOG,OACtB,IAAIA,OAA2B3a,IAAlBwa,EAAOG,MAAM3e,GAAiBwe,EAAOsxG,gBAAkBtxG,EAAOG,MAAM3e,QAE7E2e,EAAQH,EAAOG,MAErB,QAAc3a,IAAV2a,EACF,OAAO,EAET,IAAc,IAAVA,EAKF,OAJApb,EAAO6qH,SAAS,CACdx8G,KAAM,QACN/B,QAAS,mCAEJ,EAET,IAAIxE,EAAMvC,EAAKilH,eAAe7hH,EAAOyS,EAAOwuD,EAASz5C,EAAI46F,UAAU3vG,EAAO3e,IAG1E,OAFGqL,EAAI40D,WAAa18D,EAAO08D,SAASjgE,KAAIuD,EAAO08D,SAASjgE,GAAKqL,EAAI40D,UACjE18D,EAAOgrH,aAAaljH,IACb,CACT,IACO9H,CAvB6B,CAwBtC,EAUAqqH,EAAWmC,SAAW,SAA2B9vD,EAAUzhD,EAAQ2uD,EAASz5C,GAC1E,IAAI5qB,EAAOrE,KACX,GAAKA,KAAK8W,MAAMtY,MAAMg9D,SACAj8D,IAAlBwa,EAAOuxG,SAAX,CACA,IAAKvC,EAAQ0B,SAAS1wG,EAAOuxG,UAAW,MAAM,IAAIpvH,MAAM,8CACxD,IAAI4C,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAY5D,OAPW,IAJCusC,EAAShzD,MAAK,SAAUf,EAAOlM,GAEzC,OAA2B,IADjB8I,EAAKilH,eAAe7hH,EAAOsS,EAAOuxG,SAAU5iD,EAASz5C,EAAI46F,UAAU9vG,EAAOuxG,SAAU/vH,IACnFmjD,OAAOljD,MACpB,KAEEsD,EAAO6qH,SAAS,CACdx8G,KAAM,WACNm6D,SAAUvtD,EAAOuxG,SACjBlgH,QAAS,+CAGNtM,CAdgC,CAezC,EAQAqqH,EAAWoC,QAAU,SAA0B/vD,EAAUzhD,EAAQ2uD,EAASz5C,GACxE,GAAKjvB,KAAK8W,MAAMoF,OAAOs/C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAkB5D,OAjBIlV,EAAOyxG,mBAAgD,IAA5BzxG,EAAOyxG,iBAC/BhwD,EAAWzhD,EAAOwxG,SACrBzsH,EAAO6qH,SAAS,CACdx8G,KAAM,UACNm6D,SAAUvtD,EAAOwxG,QACjBngH,QAAS,wBAA0B2O,EAAOwxG,UAIzC/vD,GAAYzhD,EAAOwxG,SACtBzsH,EAAO6qH,SAAS,CACdx8G,KAAM,UACNm6D,SAAUvtD,EAAOwxG,QACjBngH,QAAS,oCAAsC2O,EAAOwxG,UAIrDzsH,CAnBiC,CAoB1C,EAQAqqH,EAAWsC,QAAU,SAA0BjwD,EAAUzhD,EAAQ2uD,EAASz5C,GACxE,GAAKjvB,KAAK8W,MAAMoF,OAAOs/C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAkB5D,OAjBIlV,EAAO2xG,mBAAgD,IAA5B3xG,EAAO2xG,iBAC/BlwD,EAAWzhD,EAAO0xG,SACrB3sH,EAAO6qH,SAAS,CACdx8G,KAAM,UACNm6D,SAAUvtD,EAAO0xG,QACjBrgH,QAAS,qBAAuB2O,EAAO0xG,UAItCjwD,GAAYzhD,EAAO0xG,SACtB3sH,EAAO6qH,SAAS,CACdx8G,KAAM,UACNm6D,SAAUvtD,EAAO0xG,QACjBrgH,QAAS,iCAAmC2O,EAAO0xG,UAIlD3sH,CAnBiC,CAoB1C,EAQAqqH,EAAWqC,iBAAmB,SAAmChwD,EAAUzhD,EAAQ2uD,EAASz5C,GAE1F,GAAsC,mBAA5BlV,EAAOyxG,kBACZxrH,KAAK8W,MAAMoF,OAAOs/C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAS5D,OARYusC,EAAWzhD,EAAOyxG,kBAE5B1sH,EAAO6qH,SAAS,CACdx8G,KAAM,mBACNm6D,SAAUvtD,EAAOyxG,iBACjBpgH,QAAS,iCAAmC2O,EAAOyxG,mBAGhD1sH,CAViC,CAW1C,EAQAqqH,EAAWuC,iBAAmB,SAAmClwD,EAAUzhD,EAAQ2uD,EAASz5C,GAE1F,GAAsC,mBAA5BlV,EAAO2xG,kBACZ1rH,KAAK8W,MAAMoF,OAAOs/C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAS5D,OARYusC,EAAWzhD,EAAO2xG,kBAE5B5sH,EAAO6qH,SAAS,CACdx8G,KAAM,mBACNm6D,SAAUvtD,EAAO2xG,iBACjBtgH,QAAS,8BAAgC2O,EAAO2xG,mBAG7C5sH,CAViC,CAW1C,EAUA,IAAI6sH,EAAiC,SAAyCnwD,EAAUzhD,EAAQ2uD,EAASz5C,EAAK28F,EAAgBvY,GAC5H,GAAKrzG,KAAK8W,MAAMoF,OAAOs/C,GAAvB,CAEA,IAAIqwD,EAAqB9xG,EAAO6xG,GAChC,GAA0B,GAAtBC,EACF,MAAM,IAAI5C,EAAY2C,EAAiB,mBAGzC,IAAI9sH,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAExD68F,EAAmB/C,EAAQgD,iBAAiBvwD,GAC5CwwD,EAAkBjD,EAAQgD,iBAAiBF,GAE3CI,EAAchvG,KAAKE,IAAI2uG,EAAmBE,GAC1C/nE,EAAahnC,KAAKrG,IAAI,GAAIq1G,GAU9B,OARIhvG,KAAK2M,MAAM4xC,EAAWvX,GAAchnC,KAAK2M,MAAMiiG,EAAqB5nE,KAAgB,GACtFnlD,EAAO6qH,SAAS,CACdx8G,KAAMy+G,EACNtkD,SAAWukD,EACXzgH,QAASioG,EAAe1+F,KAAKC,UAAUi3G,KAIpC/sH,CAvBiC,CAwB1C,EAwMA,SAASotH,EAAY7vH,EAAGd,EAAGqD,GACzB,IAAIH,EAAGjC,EAAMoC,EAAEpD,OACf,IAAKiD,EAAIlD,EAAI,EAAQkD,EAAIjC,EAAKiC,IAC5B,GAAIsqH,EAAQoD,kBAAkB9vH,EAAGuC,EAAEH,IACjC,OAAO,EAGX,OAAO,CACT,CAxMA0qH,EAAWiD,WAAa,SAA6B5wD,EAAUzhD,EAAQ2uD,EAASz5C,GAC9E,OAAO08F,EAA+B/mH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,EAAK,aAAc,uCACjG,EAQAk6F,EAAWkD,YAAc,SAA8B7wD,EAAUzhD,EAAQ2uD,EAASz5C,GAChF,OAAO08F,EAA+B/mH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,EAAK,cAAe,qCAClG,EAQAk6F,EAAWhvG,SAAW,SAA2BqhD,EAAUzhD,EAAQ2uD,EAASz5C,GAC1E,IAAInwB,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAkB5D,YAjBiB1vB,IAAbi8D,IAA8C,IAApBzhD,EAAOI,SAEnCrb,EAAO6qH,SAAS,CACdx8G,KAAM,WACN/B,QAAS,gBAEFpL,KAAK8W,MAAMkyD,OAAOxN,IAAapgE,MAAMC,QAAQ0e,EAAOI,WAC7DJ,EAAOI,SAASnD,SAAQ,SAASvQ,QACSlH,IAArCiqH,EAAsBhuD,EAAU/0D,IACjC3H,EAAO6qH,SAAS,CACdx8G,KAAM,WACNm6D,SAAU7gE,EACV2E,QAAS,qBAAuBuJ,KAAKC,UAAUnO,IAGrD,IAEK3H,CACT,EAQAqqH,EAAW6B,QAAU,SAA0BxvD,EAAUzhD,EAAQ2uD,EAASz5C,GACxE,GAAKjvB,KAAK8W,MAAMgG,OAAO0+C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxD+7F,EAAUjxG,EAAOixG,QACrB,IACE,IAAIC,EAAS,IAAIt2C,OAAOq2C,EAAS,IAKnC,CAJE,MAAME,GAGND,EAAS,IAAIt2C,OAAOq2C,EACtB,CAQA,OAPKxvD,EAASnyD,MAAM4hH,IAClBnsH,EAAO6qH,SAAS,CACdx8G,KAAM,UACNm6D,SAAUvtD,EAAOixG,QACjB5/G,QAAS,0BAA4BuJ,KAAKC,UAAUmF,EAAOixG,QAAQltH,cAGhEgB,CAjBiC,CAkB1C,EAuBAqqH,EAAWj0C,OAAS,SAAyB1Z,EAAUzhD,EAAQ2uD,EAASz5C,GACtE,QAAe1vB,IAAXi8D,EAAJ,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAQ5D,OAPKnwB,EAAOwtH,eAAkBvD,EAAQwD,SAAS/wD,EAAUzhD,EAAOm7D,OAAQl1E,OACtElB,EAAO6qH,SAAS,CACdx8G,KAAM,SACNm6D,SAAUvtD,EAAOm7D,OACjB9pE,QAAS,2BAA6BuJ,KAAKC,UAAUmF,EAAOm7D,QAAU,YAGnEp2E,CATyB,CAUlC,EAQAqqH,EAAWqD,UAAY,SAA4BhxD,EAAUzhD,EAAQ2uD,EAASz5C,GAC5E,GAAKjvB,KAAK8W,MAAMgG,OAAO0+C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDw9F,EAAMjxD,EAASnyD,MAAM,oBASzB,OARamyD,EAAShgE,QAAUixH,EAAMA,EAAIjxH,OAAS,IACnCue,EAAOyyG,WACrB1tH,EAAO6qH,SAAS,CACdx8G,KAAM,YACNm6D,SAAUvtD,EAAOyyG,UACjBphH,QAAS,mCAAqC2O,EAAOyyG,YAGlD1tH,CAXiC,CAY1C,EAQAqqH,EAAWniH,UAAY,SAA4Bw0D,EAAUzhD,EAAQ2uD,EAASz5C,GAC5E,GAAKjvB,KAAK8W,MAAMgG,OAAO0+C,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAExDw9F,EAAMjxD,EAASnyD,MAAM,oBASzB,OARamyD,EAAShgE,QAAUixH,EAAMA,EAAIjxH,OAAS,IACnCue,EAAO/S,WACrBlI,EAAO6qH,SAAS,CACdx8G,KAAM,YACNm6D,SAAUvtD,EAAO/S,UACjBoE,QAAS,mCAAqC2O,EAAO/S,YAGlDlI,CAZiC,CAa1C,EAQAqqH,EAAWuD,SAAW,SAA2BlxD,EAAUzhD,EAAQ2uD,EAASz5C,GAC1E,GAAKjvB,KAAK8W,MAAMtY,MAAMg9D,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAQ5D,OAPMusC,EAAShgE,QAAUue,EAAO2yG,UAC9B5tH,EAAO6qH,SAAS,CACdx8G,KAAM,WACNm6D,SAAUvtD,EAAO2yG,SACjBthH,QAAS,mCAAqC2O,EAAO2yG,WAGlD5tH,CATgC,CAUzC,EAQAqqH,EAAWwD,SAAW,SAA2BnxD,EAAUzhD,EAAQ2uD,EAASz5C,GAC1E,GAAKjvB,KAAK8W,MAAMtY,MAAMg9D,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAQ5D,OAPMusC,EAAShgE,QAAUue,EAAO4yG,UAC9B7tH,EAAO6qH,SAAS,CACdx8G,KAAM,WACNm6D,SAAUvtD,EAAO4yG,SACjBvhH,QAAS,mCAAqC2O,EAAO4yG,WAGlD7tH,CATgC,CAUzC,EAyBAqqH,EAAWyD,YAAc,SAA8BpxD,EAAUzhD,EAAQ2uD,EAASz5C,GAChF,IAAyB,IAArBlV,EAAO6yG,aACN5sH,KAAK8W,MAAMtY,MAAMg9D,GAAtB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAO5D,OANKusC,EAAShwB,MAAM0gF,IAClBptH,EAAO6qH,SAAS,CACdx8G,KAAM,cACN/B,QAAS,4BAGNtM,CARgC,CASzC,EAUAqqH,EAAW0D,aAAe,SAA+BrxD,EAAUzhD,EAAQ2uD,EAASz5C,GAClF,GAAKjvB,KAAK8W,MAAMkyD,OAAOxN,GAAvB,CACA,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAC5D,IAAK,IAAIoqD,KAAYt/D,EAAO8yG,aAC1B,QAA2BttH,IAAvBi8D,EAAS6d,GAAb,CAGA,IAAIyzC,EAAM/yG,EAAO8yG,aAAaxzC,GAC1B0zC,EAAe99F,EAAI46F,UAAUiD,EAAKzzC,GAItC,GAHkB,iBAAPyzC,IACTA,EAAM,CAACA,IAEL1xH,MAAMC,QAAQyxH,GAChBA,EAAI91G,SAAQ,SAAU8zG,QACGvrH,IAAnBi8D,EAASsvD,IACXhsH,EAAO6qH,SAAS,CAGdx8G,KAAM,eACNm6D,SAAUylD,EAAaC,aACvB5hH,QAAS,YAAc0/G,EAAO,2BAA6BiC,EAAaC,cAG9E,QACK,CACL,IAAIpmH,EAAM5G,KAAKspH,eAAe9tD,EAAUsxD,EAAKpkD,EAASqkD,GACnDjuH,EAAO08D,WAAa50D,EAAI40D,WAAU18D,EAAO08D,SAAW50D,EAAI40D,UACvD50D,GAAOA,EAAI83C,OAAOljD,SACpBsD,EAAO6qH,SAAS,CACdx8G,KAAM,eACNm6D,SAAUylD,EAAaC,aACvB5hH,QAAS,wCAA0C2hH,EAAaC,eAElEluH,EAAOgrH,aAAaljH,GAExB,CA7BA,CA+BF,OAAO9H,CApCiC,CAqC1C,EASAqqH,EAAiB,KAAI,SAAuB3tD,EAAUzhD,EAAQ2uD,EAASz5C,GACrE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAKpgE,MAAMC,QAAQ0e,EAAa,MAC9B,MAAM,IAAIkvG,EAAY,wBAAyBlvG,GAEjD,IAAIjb,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAQ5D,OAPKlV,EAAa,KAAEvR,KAAKugH,EAAQoD,kBAAkBlnE,KAAK,KAAMuW,KAC5D18D,EAAO6qH,SAAS,CACdx8G,KAAM,OACNm6D,SAAUvtD,EAAa,KACvB3O,QAAS,8BAAgC2O,EAAa,KAAEvS,IAAIsB,QAAQmF,KAAK,OAGtEnP,CACT,EASAqqH,EAAkB,MAAI,SAAuB3tD,EAAUzhD,EAAQ2uD,EAASz5C,GACtE,QAAiB1vB,IAAbi8D,EACF,OAAO,KAET,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAQ5D,OAPK85F,EAAQoD,kBAAkBpyG,EAAc,MAAGyhD,IAC9C18D,EAAO6qH,SAAS,CACdx8G,KAAM,QACNm6D,SAAUvtD,EAAc,MACxB3O,QAAS,6CAA+C2O,EAAc,QAGnEjb,CACT,EAUAqqH,EAAW8D,IAAM9D,EAAW+D,SAAW,SAAsB1xD,EAAUzhD,EAAQ2uD,EAASz5C,GACtF,IAAI5qB,EAAOrE,KACX,QAAcT,IAAXi8D,EAAsB,OAAO,KAChC,IAAI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GACxDk+F,EAAWpzG,EAAOkzG,KAAOlzG,EAAOmzG,SACpC,OAAIC,GACA/xH,MAAMC,QAAQ8xH,KAAWA,EAAS,CAACA,IACvCA,EAASn2G,SAAQ,SAAU9B,GACzB,GAAI7Q,EAAK0lH,SAASvuD,EAAUzhD,EAAQ2uD,EAASz5C,EAAK/Z,GAAO,CACvD,IACIk4G,EADKl4G,IAASA,EAAK+0G,KAAO/0G,EAAK47D,KACd57D,EACrBpW,EAAO6qH,SAAS,CACdx8G,KAAM,MACNm6D,SAAU8lD,EACVhiH,QAAS,yBAA2BgiH,GAExC,CACF,IACOtuH,GAbc,IAcvB,EAEA8T,EAAOjV,QAAUurH,sCC/8BjB,IAAImE,EAAMzwG,EAAQ,OAEd0wG,EAAkB3vH,EAAQ2vH,gBAAkB,SAA0BliH,EAASowD,EAAUzhD,EAAQiyD,EAAM7+D,EAAMm6D,GAY/G,GAXGlsE,MAAMC,QAAQ2wE,IACfhsE,KAAKgsE,KAAOA,EACZhsE,KAAKq5E,SAAWrN,EAAKrtE,QAAO,SAAS6pC,EAAKlwB,GACxC,OAAOkwB,EAAM+kF,EAAWj1G,EAC1B,GAAG,kBACa/Y,IAATysE,IACPhsE,KAAKq5E,SAAWrN,GAEd5gE,IACFpL,KAAKoL,QAAUA,GAEb2O,EAAQ,CACV,IAAI+2D,EAAK/2D,EAAOkwG,KAAOlwG,EAAO+2D,GAC9B9wE,KAAK+Z,OAAS+2D,GAAM/2D,CACtB,MACiBxa,IAAbi8D,IACFx7D,KAAKw7D,SAAWA,GAElBx7D,KAAKmN,KAAOA,EACZnN,KAAKsnE,SAAWA,EAChBtnE,KAAK+nG,MAAQ/nG,KAAKlC,UACpB,EAEAwvH,EAAgBlgH,UAAUtP,SAAW,WACnC,OAAOkC,KAAKq5E,SAAW,IAAMr5E,KAAKoL,OACpC,EAEA,IAAI49G,EAAkBrrH,EAAQqrH,gBAAkB,SAAyBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAClGjvB,KAAKw7D,SAAWA,EAChBx7D,KAAK+Z,OAASA,EACd/Z,KAAK0oE,QAAUA,EACf1oE,KAAKgsE,KAAO/8C,EAAI+8C,KAChBhsE,KAAKgtH,aAAe/9F,EAAI+9F,aACxBhtH,KAAK0+C,OAAS,GACd1+C,KAAKonE,WAAasB,GAAWA,EAAQtB,WACrCpnE,KAAKwtH,WAAa9kD,GAAWA,EAAQ8kD,WACrCxtH,KAAKqpH,SAAW3gD,GAAWA,EAAQ2gD,SACnCrpH,KAAKssH,cAAgB5jD,IAAqC,IAA1BA,EAAQ4jD,aAC1C,EA8BA,SAASmB,EAAYpxH,EAAEd,GACrB,OAAOA,EAAE,KAAKc,EAAEyB,WAAW,IAC7B,CAUA,SAAS4vH,EAAqB5uH,GACzB5C,MAAMyxH,mBACPzxH,MAAMyxH,kBAAkB3tH,KAAM0tH,GAEhC1tH,KAAKw7D,SAAW18D,EAAO08D,SACvBx7D,KAAK+Z,OAASjb,EAAOib,OACrB/Z,KAAK0oE,QAAU5pE,EAAO4pE,QACtB1oE,KAAK0+C,OAAS5/C,EAAO4/C,MACvB,CAhDAsqE,EAAgB57G,UAAUu8G,SAAW,SAAkBiE,GACrD,IAAIjpH,EACJ,GAAqB,iBAAVipH,EACTjpH,EAAM,IAAI2oH,EAAgBM,EAAQ5tH,KAAKw7D,SAAUx7D,KAAK+Z,OAAQ/Z,KAAKgsE,UAC9D,CACL,IAAK4hD,EAAQ,MAAM,IAAI1xH,MAAM,wBAC7B,IAAK0xH,EAAOxiH,QAAS,MAAM,IAAIlP,MAAM,yBACrC,IAAK0xH,EAAOzgH,KAAM,MAAM,IAAIjR,MAAM,0BAClCyI,EAAM,IAAI2oH,EAAgBM,EAAOxiH,QAASpL,KAAKw7D,SAAUx7D,KAAK+Z,OAAQ/Z,KAAKgsE,KAAM4hD,EAAOzgH,KAAMygH,EAAOtmD,SACvG,CAGA,GADAtnE,KAAK0+C,OAAOjjD,KAAKkJ,GACb3E,KAAKwtH,WACP,MAAM,IAAIE,EAAqB1tH,MAC3B,GAAGA,KAAKonE,WACZ,MAAMziE,EAER,OAAOA,CACT,EAEAqkH,EAAgB57G,UAAU08G,aAAe,SAAsBljH,GAC3C,iBAAPA,GAAoBA,GAAOA,EAAIinH,cACxC7tH,KAAK2pH,SAAS/iH,GACLA,GAAOA,EAAI83C,SACpB1+C,KAAK0+C,OAAS1+C,KAAK0+C,OAAOx8C,OAAO0E,EAAI83C,QAEzC,EAKAsqE,EAAgB57G,UAAUtP,SAAW,SAAkB8I,GACrD,OAAO5G,KAAK0+C,OAAOl3C,IAAIimH,GAAYx/G,KAAK,GAC1C,EAEA5G,OAAOiI,eAAe05G,EAAgB57G,UAAW,QAAS,CAAEtF,IAAK,WAC/D,OAAQ9H,KAAK0+C,OAAOljD,MACtB,IAEAoX,EAAOjV,QAAQ+vH,qBAAuBA,EAUtCA,EAAqBtgH,UAAY,IAAIlR,MACrCwxH,EAAqBtgH,UAAU4O,YAAc0xG,EAC7CA,EAAqBtgH,UAAUD,KAAO,mBAOtC,IAAI87G,EAActrH,EAAQsrH,YAAc,SAASA,EAAahjH,EAAK8T,GACjE/Z,KAAKoL,QAAUnF,EACfjG,KAAK+Z,OAASA,EACd7d,MAAM0I,KAAK5E,KAAMiG,GACjB/J,MAAMyxH,kBAAkB3tH,KAAMipH,EAChC,EACAA,EAAY77G,UAAY/F,OAAO+jD,OAAOlvD,MAAMkR,UAC1C,CACE4O,YAAa,CAACvU,MAAOwhH,EAAaphH,YAAY,GAC9CsF,KAAM,CAAC1F,MAAO,cAAeI,YAAY,KAG7C,IAAIimH,EAAgBnwH,EAAQmwH,cAAgB,SAAwB/zG,EAAQ2uD,EAASsD,EAAM7vD,EAAM4xG,GAC/F/tH,KAAK+Z,OAASA,EACd/Z,KAAK0oE,QAAUA,EACZttE,MAAMC,QAAQ2wE,IACfhsE,KAAKgsE,KAAOA,EACZhsE,KAAKgtH,aAAehhD,EAAKrtE,QAAO,SAAS6pC,EAAKlwB,GAC5C,OAAOkwB,EAAM+kF,EAAWj1G,EAC1B,GAAG,aAEHtY,KAAKgtH,aAAehhD,EAEtBhsE,KAAKmc,KAAOA,EACZnc,KAAK+tH,QAAUA,CACjB,EAEAD,EAAc1gH,UAAU1D,QAAU,SAAkBvE,GAClD,OAAOkoH,EAAI3jH,QAAQ1J,KAAKmc,KAAMhX,EAChC,EAEA2oH,EAAc1gH,UAAUy8G,UAAY,SAAmB9vG,EAAQi0G,GAC7D,IAAIhiD,OAAuBzsE,IAAfyuH,EAA4BhuH,KAAKgsE,KAAOhsE,KAAKgsE,KAAK9pE,OAAO,CAAC8rH,IAClEl9C,EAAK/2D,EAAOkwG,KAAOlwG,EAAO+2D,GAC1B30D,EAAOkxG,EAAI3jH,QAAQ1J,KAAKmc,KAAM20D,GAAI,IAClC7hD,EAAM,IAAI6+F,EAAc/zG,EAAQ/Z,KAAK0oE,QAASsD,EAAM7vD,EAAM9U,OAAO+jD,OAAOprD,KAAK+tH,UAIjF,OAHGj9C,IAAO7hD,EAAI8+F,QAAQ5xG,KACpB8S,EAAI8+F,QAAQ5xG,GAAQpC,GAEfkV,CACT,EAEA,IAAIg/F,EAAiBtwH,EAAQswH,eAAiB,CAE5C,YAAa,8JACb,KAAQ,2DACR,KAAQ,oDACR,SAAY,+GAIZ,MAAS,ySACT,YAAa,wiCAKb,aAAc,8FAEd,KAAQ,0jCAKR,IAAO,mCACP,gBAAiB,qxCACjB,IAAO,mCACP,gBAAiB,uwIACjB,KAAQ,kEAGR,eAAgB,6RAGhB,eAAgB,mDAChB,wBAAyB,6DAGzB,SAAY,gIACZ,YAAa,gIAEb,eAAgB,SAAU9yH,GACxB,MAAyB,kBAAVA,GAAuB46F,WAAW56F,KAAWkD,SAASlD,EAAO,MAAQmD,MAAMnD,EAC5F,EAGA,MAAS,SAAUA,GACjB,IAAI2D,GAAS,EACb,IACE,IAAI61E,OAAOx5E,EAGb,CAFE,MAAO8F,GACPnC,GAAS,CACX,CACA,OAAOA,CACT,EAIA,MAAS,+DAET,MAAS,6YACT,MAAS,6BACT,MAAS,cACT,aAAgB,kBAGlBmvH,EAAehD,OAASgD,EAAeC,MACvCD,EAAejD,QAAUiD,EAAeC,MACxCD,EAAeE,KAAOF,EAAe,cAErCtwH,EAAQ4uH,SAAW,SAAmBpxH,EAAO+5E,EAAQk5C,GACnD,GAAqB,kBAAVjzH,QAAiDoE,IAA3B0uH,EAAe/4C,GAAuB,CACrE,GAAI+4C,EAAe/4C,aAAmBP,OACpC,OAAOs5C,EAAe/4C,GAAQh0E,KAAK/F,GAErC,GAAsC,oBAA3B8yH,EAAe/4C,GACxB,OAAO+4C,EAAe/4C,GAAQ/5E,EAElC,MAAO,GAAIizH,GAAaA,EAAUC,eACa,oBAApCD,EAAUC,cAAcn5C,GACjC,OAAOk5C,EAAUC,cAAcn5C,GAAQ/5E,GAEzC,OAAO,CACT,EAEA,IAAIoyH,EAAa5vH,EAAQ4vH,WAAa,SAAqBpkH,GAKzD,OAJAA,EAAMA,EAAIrL,YAIDuL,MAAM,cAAiBF,EAAIE,MAAM,SAGtCF,EAAIE,MAAM,SACL,IAAMF,EAAM,IAEd,IAAMwL,KAAKC,UAAUzL,GAAO,IAL1B,IAAMA,CAMjB,EAiCA,SAASmlH,EAAYnpH,EAAQopH,EAAKttH,EAAG1F,GAClB,kBAAN0F,EACTstH,EAAIhzH,GAAKizH,EAAUrpH,EAAO5J,GAAI0F,IAEH,IAAvBkE,EAAOsD,QAAQxH,IACjBstH,EAAI9yH,KAAKwF,EAGf,CAEA,SAASwtH,EAASC,EAAKH,EAAKplH,GAC1BolH,EAAIplH,GAAOulH,EAAIvlH,EACjB,CAEA,SAASwlH,EAAsBxpH,EAAQupH,EAAKH,EAAKplH,GACvB,kBAAbulH,EAAIvlH,IAAsBulH,EAAIvlH,IAIlChE,EAAOgE,GAGVolH,EAAIplH,GAAOqlH,EAAUrpH,EAAOgE,GAAMulH,EAAIvlH,IANxColH,EAAIplH,GAAOulH,EAAIvlH,EASnB,CAEA,SAASqlH,EAAWrpH,EAAQupH,GAC1B,IAAIlwH,EAAQpD,MAAMC,QAAQqzH,GACtBH,EAAM/vH,GAAS,IAAM,CAAC,EAa1B,OAXIA,GACF2G,EAASA,GAAU,GACnBopH,EAAMA,EAAIrsH,OAAOiD,GACjBupH,EAAI13G,QAAQs3G,EAAWrpE,KAAK,KAAM9/C,EAAQopH,MAEtCppH,GAA4B,kBAAXA,GACnBkC,OAAOuQ,KAAKzS,GAAQ6R,QAAQy3G,EAAQxpE,KAAK,KAAM9/C,EAAQopH,IAEzDlnH,OAAOuQ,KAAK82G,GAAK13G,QAAQ23G,EAAqB1pE,KAAK,KAAM9/C,EAAQupH,EAAKH,KAGjEA,CACT,CAsBA,SAASK,EAAavyH,GACpB,MAAO,IAAIwyH,mBAAmBxyH,GAAG6K,QAAQ,KAAK,MAChD,CAlGAvJ,EAAQwuH,kBAAoB,SAASA,EAAmBvtH,EAAGigB,GACzD,UAAWjgB,WAAaigB,EACtB,OAAO,EAET,GAAIzjB,MAAMC,QAAQuD,GAChB,QAAKxD,MAAMC,QAAQwjB,KAGfjgB,EAAEpD,SAAWqjB,EAAErjB,QAGZoD,EAAE4sC,OAAM,SAAUnvC,EAAGd,GAC1B,OAAO4wH,EAAkBvtH,EAAErD,GAAIsjB,EAAEtjB,GACnC,KAEF,GAAiB,kBAANqD,EAAgB,CACzB,IAAKA,IAAMigB,EACT,OAAOjgB,IAAMigB,EAEf,IAAIiwG,EAAQznH,OAAOuQ,KAAKhZ,GACpBmwH,EAAQ1nH,OAAOuQ,KAAKiH,GACxB,OAAIiwG,EAAMtzH,SAAWuzH,EAAMvzH,QAGpBszH,EAAMtjF,OAAM,SAAUnvC,GAC3B,OAAO8vH,EAAkBvtH,EAAEvC,GAAIwiB,EAAExiB,GACnC,GACF,CACA,OAAOuC,IAAMigB,CACf,EA+CAjM,EAAOjV,QAAQ6wH,UAAYA,EAS3B7wH,EAAQqxH,cAAgB,SAAuB3sG,EAAG3X,GAGhD,IAFA,IACInD,EADA+S,EAAQ5P,EAAEinB,MAAM,KAAKx1B,MAAM,GAEI,iBAApBoL,EAAE+S,EAAMvQ,UAAsB,CAC3C,IAAItD,EAAIwoH,mBAAmB1nH,EAAEL,QAAQ,KAAK,KAAKA,QAAQ,MAAM,MAC7D,KAAMT,KAAK4b,GAAI,OACfA,EAAIA,EAAE5b,EACR,CACA,OAAO4b,CACT,EAUA1kB,EAAQuxH,WAAa,SAAuBtwH,GAG1C,OAAOA,EAAE4I,IAAIonH,GAAa3gH,KAAK,GACjC,EAUAtQ,EAAQouH,iBAAmB,SAA0B7vG,GAEnD,IAAIizG,EAAgB,EACpB,GAAI7wH,MAAM4d,GAAS,OAAOizG,EAEJ,kBAAXjzG,IACTA,EAAS9d,OAAO8d,IAGlB,IAAI5B,EAAQ4B,EAAOpe,WAAW6zB,MAAM,KACpC,GAAqB,IAAjBrX,EAAM9e,OAAc,CACtB,GAAoB,MAAhB8e,EAAM,GAAG,GACX,OAAO60G,EAEPA,EAAgB/wH,OAAOkc,EAAM,GAAGne,MAAM,GAE1C,CAEA,IAAIizH,EAAe90G,EAAM,GAAGqX,MAAM,KAKlC,OAJ4B,IAAxBy9F,EAAa5zH,SACf2zH,GAAiBC,EAAa,GAAG5zH,QAG5B2zH,CACT,EAEAxxH,EAAQ8sH,SAAW,SAAkB/uG,GACnC,MAAuB,kBAARA,GAAoBA,GAAwB,mBAARA,CACrD,sCClYA,IAAI2zG,EAAYz8G,EAAOjV,QAAQ0xH,UAAY,EAA3Bz8G,OAEhBA,EAAOjV,QAAQqrH,gBAAkB,EAAjCp2G,OAAAA,gBACAA,EAAOjV,QAAQ+vH,qBAAuB,EAAtC96G,OAAAA,qBACAA,EAAOjV,QAAQ2vH,gBAAkB,EAAjC16G,OAAAA,gBACAA,EAAOjV,QAAQsrH,YAAc,EAA7Br2G,OAAAA,YACAA,EAAOjV,QAAQ2xH,iBAAmB,EAAlC18G,OAAAA,iBACAA,EAAOjV,QAAQ4xH,KAAO,EAAtB38G,OAAAA,KAEAA,EAAOjV,QAAQoiF,SAAW,SAAUvkB,EAAUzhD,EAAQ2uD,GAEpD,OADQ,IAAI2mD,GACHtvC,SAASvkB,EAAUzhD,EAAQ2uD,EACtC,sCCZA,IAAI8mD,EAAS5yG,EAAQ,OACjBmsG,EAAUnsG,EAAQ,OAGtB,SAAS0yG,EAAiBh4B,EAAOm4B,GAC/BzvH,KAAK8wE,GAAKwmB,EACVt3F,KAAKyvH,IAAMA,CACb,CAJA78G,EAAOjV,QAAQ2xH,iBAAmBA,EAYlC18G,EAAOjV,QAAQ4xH,KAAO,SAAcpzG,EAAMpC,GACxC,SAAS21G,EAAWC,EAAS51G,GAC3B,GAAIA,GAAyB,iBAARA,EAErB,GAAGA,EAAO61G,KAAV,CACE,IAAIC,EAAcL,EAAO9lH,QAAQimH,EAAS51G,EAAO61G,MACjDH,EAAII,GAAeJ,EAAII,GAAeJ,EAAII,GAAa,EAAI,CAE7D,KAJA,CAKA,IAAI/+C,EAAK/2D,EAAOkwG,KAAOlwG,EAAO+2D,GAC1Bg/C,EAAUh/C,EAAK0+C,EAAO9lH,QAAQimH,EAAS7+C,GAAM6+C,EACjD,GAAIG,EAAS,CAGX,GADGA,EAAQrnH,QAAQ,KAAK,IAAGqnH,GAAW,KACnCx4B,EAAMw4B,GAAS,CAChB,IAAI/G,EAAQoD,kBAAkB70B,EAAMw4B,GAAU/1G,GAC5C,MAAM,IAAI7d,MAAM,WAAW4zH,EAAQ,8CAErC,OAAOx4B,EAAMw4B,EACf,CACAx4B,EAAMw4B,GAAW/1G,EAEa,KAA3B+1G,EAAQA,EAAQt0H,OAAO,KACxB87F,EAAMw4B,EAAQnnH,UAAU,EAAGmnH,EAAQt0H,OAAO,IAAMue,EAEpD,CACAg2G,EAAUD,EAAQ,SAAW10H,MAAMC,QAAQ0e,EAAOG,OAAOH,EAAOG,MAAM,CAACH,EAAOG,QAC9E61G,EAAUD,EAAQ,WAAa10H,MAAMC,QAAQ0e,EAAOi2G,SAASj2G,EAAOi2G,QAAQ,CAACj2G,EAAOi2G,UACpFN,EAAWI,EAAQ,mBAAoB/1G,EAAOsxG,iBAC9C4E,EAAWH,EAAQ,cAAe/1G,EAAOL,YACzCg2G,EAAWI,EAAQ,wBAAyB/1G,EAAOE,sBACnDg2G,EAAWH,EAAQ,eAAgB/1G,EAAOm2G,aAC1CD,EAAWH,EAAQ,qBAAsB/1G,EAAOgxG,mBAChDkF,EAAWH,EAAQ,gBAAiB/1G,EAAO8yG,cAC3CkD,EAAUD,EAAQ,YAAa/1G,EAAOmzG,UACtC6C,EAAUD,EAAQ,SAAU/1G,EAAOuwG,OACnCyF,EAAUD,EAAQ,SAAU/1G,EAAOmwG,OACnC6F,EAAUD,EAAQ,SAAU/1G,EAAOwwG,OACnCmF,EAAWI,EAAQ,OAAQ/1G,EAAOkzG,IA9BlC,CA+BF,CACA,SAAS8C,EAAUJ,EAAS5B,GAC1B,GAAI3yH,MAAMC,QAAQ0yH,GAClB,IAAI,IAAIxyH,EAAE,EAAGA,EAAEwyH,EAAQvyH,OAAQD,IAC7Bm0H,EAAWC,EAAQ,IAAIp0H,EAAGwyH,EAAQxyH,GAEtC,CACA,SAAS00H,EAAWN,EAAS5B,GAC3B,GAAIA,GAA2B,iBAATA,EACtB,IAAI,IAAIjlG,KAAKilG,EACX2B,EAAWC,EAAQ,IAAI7mG,EAAGilG,EAAQjlG,GAEtC,CAEA,IAAIwuE,EAAQ,CAAC,EACTm4B,EAAM,CAAC,EAEX,OADAC,EAAWvzG,EAAMpC,GACV,IAAIu1G,EAAiBh4B,EAAOm4B,EACrC,sCCxEA,IAAID,EAAS5yG,EAAQ,OAEjBssG,EAAYtsG,EAAQ,OACpBmsG,EAAUnsG,EAAQ,OAClB8yG,EAAa9yG,EAAAA,OAAAA,KACbosG,EAAkBD,EAAQC,gBAC1B0E,EAAuB3E,EAAQ2E,qBAC/BzE,EAAcF,EAAQE,YACtB6E,EAAgB/E,EAAQ+E,cASxBuB,EAAY,SAASA,IAGvBrvH,KAAKquH,cAAgBhnH,OAAO+jD,OAAOikE,EAAUjiH,UAAUihH,eACvDruH,KAAK+tH,QAAU,CAAC,EAChB/tH,KAAKmwH,eAAiB,GAGtBnwH,KAAK8W,MAAQzP,OAAO+jD,OAAOt0C,GAC3B9W,KAAKowH,WAAa/oH,OAAO+jD,OAAO89D,EAAUC,WAC5C,EAsHA,SAASkH,EAAct2G,GACrB,IAAI01G,EAAyB,kBAAX11G,EAAuBA,EAASA,EAAO61G,KACzD,MAAgB,iBAALH,GAAsBA,CAEnC,CAvHAJ,EAAUjiH,UAAUihH,cAAgB,CAAC,EAGrCgB,EAAUjiH,UAAU2gH,QAAU,KAC9BsB,EAAUjiH,UAAU0J,MAAQ,KAC5Bu4G,EAAUjiH,UAAUgjH,WAAa,KACjCf,EAAUjiH,UAAU+iH,eAAiB,KAQrCd,EAAUjiH,UAAUkjH,UAAY,SAAoBv2G,EAAQoC,GAC1D,IAAI9X,EAAOrE,KACX,IAAK+Z,EACH,OAAO,KAET,IAAIw1G,EAAOG,EAAWvzG,GAvCJ,IAuCyBpC,GACvCw2G,EAASp0G,GAAQpC,EAAOkwG,KAAOlwG,EAAO+2D,GAC1C,IAAI,IAAIu8C,KAAOkC,EAAKz+C,GAClB9wE,KAAK+tH,QAAQV,GAAOkC,EAAKz+C,GAAGu8C,GAE9B,IAAI,IAAIA,KAAOkC,EAAKE,IAElBzvH,KAAKmwH,eAAe10H,KAAK4xH,GAM3B,OAHArtH,KAAKmwH,eAAiBnwH,KAAKmwH,eAAehoE,QAAO,SAASklE,GACxD,MAAkC,qBAApBhpH,EAAK0pH,QAAQV,EAC7B,IACOrtH,KAAK+tH,QAAQwC,EACtB,EAEAlB,EAAUjiH,UAAUojH,kBAAoB,SAA2Bb,EAAS5B,GAC1E,GAAI3yH,MAAMC,QAAQ0yH,GAClB,IAAI,IAAIxyH,EAAE,EAAGA,EAAEwyH,EAAQvyH,OAAQD,IAC7ByE,KAAKywH,aAAad,EAAS5B,EAAQxyH,GAEvC,EAEA8zH,EAAUjiH,UAAUsjH,mBAAqB,SAA2Bf,EAAS5B,GAC3E,GAAIA,GAA2B,iBAATA,EACtB,IAAI,IAAIjlG,KAAKilG,EACX/tH,KAAKywH,aAAad,EAAS5B,EAAQjlG,GAEvC,EAQAumG,EAAUjiH,UAAUujH,WAAa,SAAqB5C,GACpD/tH,KAAK+tH,QAAUA,CACjB,EAMAsB,EAAUjiH,UAAUwjH,UAAY,SAAoBC,GAClD,OAAO7wH,KAAK+tH,QAAQ8C,EACtB,EAUAxB,EAAUjiH,UAAU2yE,SAAW,SAAmBvkB,EAAUzhD,EAAQ2uD,EAASz5C,GAC3E,GAAsB,mBAAXlV,GAA0C,kBAAXA,GAAmC,OAAXA,EAChE,MAAM,IAAIkvG,EAAY,gDAEnBvgD,IACHA,EAAU,CAAC,GAIb,IAkBI5pE,EAlBAgyE,EAAK/2D,EAAOkwG,KAAOlwG,EAAO+2D,GAC1B30D,EAAOqzG,EAAO9lH,QAAQg/D,EAAQvsD,MAzGhB,IAyGqC20D,GAAI,IAC3D,IAAI7hD,EAAI,EACNA,EAAM,IAAI6+F,EAAc/zG,EAAQ2uD,EAAS,GAAIvsD,EAAM9U,OAAO+jD,OAAOprD,KAAK+tH,WAC7DA,QAAQ5xG,KACf8S,EAAI8+F,QAAQ5xG,GAAQpC,GAEtB,IAAIu9E,EAAQo4B,EAAWvzG,EAAMpC,GAC7B,IAAI,IAAItT,KAAK6wF,EAAMxmB,GAAG,CACpB,IAAIggD,EAAMx5B,EAAMxmB,GAAGrqE,GACnBwoB,EAAI8+F,QAAQtnH,GAAKqqH,CACnB,CACF,CACA,GAAGpoD,EAAQvuD,eAAuB5a,IAAXi8D,EAGrB,OAFI18D,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,IACrD06F,SAAS,iCACT7qH,EAGT,KADIA,EAASkB,KAAKspH,eAAe9tD,EAAUzhD,EAAQ2uD,EAASz5C,IAE1D,MAAM,IAAI/yB,MAAM,oBACZ,GAAGwsE,EAAQ2gD,UAAYvqH,EAAO4/C,OAAOljD,OACzC,MAAM,IAAIkyH,EAAqB5uH,GAEjC,OAAOA,CACT,EAqBAuwH,EAAUjiH,UAAUk8G,eAAiB,SAAyB9tD,EAAUzhD,EAAQ2uD,EAASz5C,GACvF,IAAInwB,EAAS,IAAIkqH,EAAgBxtD,EAAUzhD,EAAQ2uD,EAASz5C,GAG5D,GAAmB,mBAATlV,GACI,IAATA,EAEDA,EAAS,CAAC,GACM,IAATA,IAEPA,EAAS,CAAC7E,KAAM,UAEd,IAAI6E,EAER,MAAM,IAAI7d,MAAM,uBAGlB,GAAI6d,EAAgB,QAClB,GAAI3e,MAAMC,QAAQ0e,EAAgB,SAAI,CACpC,IAAIg3G,EAAY,CAACh3G,OAAQA,EAAQkV,IAAKA,GACtClV,EAAgB,QAAE/C,QAAQhX,KAAKgxH,gBAAgB/rE,KAAKjlD,KAAM+wH,IAC1Dh3G,EAASg3G,EAAUh3G,OACnBg3G,EAAUh3G,OAAS,KACnBg3G,EAAU9hG,IAAM,KAChB8hG,EAAY,IACd,MACEh3G,EAASgvG,EAAQyF,UAAUz0G,EAAQ/Z,KAAKixH,aAAal3G,EAAgB,QAAGkV,IAK5E,IAAIiiG,EAAeb,EAAct2G,GACjC,GAAIm3G,EAAc,CAChB,IAAIjiC,EAAWjvF,KAAK0J,QAAQqQ,EAAQm3G,EAAcjiG,GAC9CkiG,EAAS,IAAIrD,EAAc7+B,EAAS47B,UAAWniD,EAASz5C,EAAI+8C,KAAMijB,EAASiiC,aAAcjiG,EAAI8+F,SACjG,OAAO/tH,KAAKspH,eAAe9tD,EAAUyzB,EAAS47B,UAAWniD,EAASyoD,EACpE,CAEA,IAAIC,EAAiB1oD,GAAWA,EAAQ0oD,gBAAkB,GAE1D,IAAK,IAAIjoH,KAAO4Q,EACd,IAAKmvG,EAAUmI,iBAAiBloH,IAAQioH,EAAe3oH,QAAQU,GAAO,EAAG,CACvE,IAAImoH,EAAe,KACflD,EAAYpuH,KAAKowH,WAAWjnH,GAChC,GAAIilH,EACFkD,EAAelD,EAAUxpH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,QAC1D,IAAuC,IAAnCy5C,EAAQ6oD,uBAEjB,MAAM,IAAItI,EAAY,0BAA4B9/G,EAAK4Q,GAErDu3G,GACFxyH,EAAOgrH,aAAawH,EAExB,CAGF,GAA8B,mBAAnB5oD,EAAQ8oD,QAAuB,CACxC,IAAI/pH,EAAQihE,EAAQ8oD,QAAQ5sH,KAAK5E,KAAMw7D,EAAUzhD,EAAQ2uD,EAASz5C,GAClEnwB,EAAO08D,SAAW/zD,CACpB,CACA,OAAO3I,CACT,EAQAuwH,EAAUjiH,UAAU4jH,gBAAkB,SAA0BD,EAAWrmH,GACzEqmH,EAAUh3G,OAASgvG,EAAQyF,UAAUuC,EAAUh3G,OAAQ/Z,KAAKixH,aAAavmH,EAAGqmH,EAAU9hG,KACxF,EAQAogG,EAAUjiH,UAAU6jH,aAAe,SAAuBl3G,EAAQkV,GAChE,IAAIwgG,EAAMY,EAAct2G,GACxB,OAAG01G,EACMzvH,KAAK0J,QAAQqQ,EAAQ01G,EAAKxgG,GAAK47F,UAEjC9wG,CACT,EAUAs1G,EAAUjiH,UAAU1D,QAAU,SAAkBqQ,EAAQm3G,EAAcjiG,GAGpE,GAFAiiG,EAAejiG,EAAIvlB,QAAQwnH,GAEvBjiG,EAAI8+F,QAAQmD,GACd,MAAO,CAACrG,UAAW57F,EAAI8+F,QAAQmD,GAAeA,aAAcA,GAG9D,IAAIthC,EAAS4/B,EAAOz6G,MAAMm8G,GACtBh5C,EAAW0X,GAAUA,EAAOnuF,KAC5BgwH,EAAWv5C,GAAYA,EAAS18E,QAAU01H,EAAaroH,OAAO,EAAGqoH,EAAa11H,OAAS08E,EAAS18E,QACpG,IAAKi2H,IAAaxiG,EAAI8+F,QAAQ0D,GAC5B,MAAM,IAAIxI,EAAY,mBAAqBiI,EAAe,IAAKn3G,GAEjE,IAAI8wG,EAAY9B,EAAQiG,cAAc//F,EAAI8+F,QAAQ0D,GAAWv5C,EAASrvE,OAAO,IAC7E,QAAetJ,IAAZsrH,EACD,MAAM,IAAI5B,EAAY,kBAAoB/wC,EAAW,gBAAkBu5C,EAAW,IAAK13G,GAEzF,MAAO,CAAC8wG,UAAWA,EAAWqG,aAAcA,EAC9C,EAYA7B,EAAUjiH,UAAU28G,SAAW,SAAuBvuD,EAAUzhD,EAAQ2uD,EAASz5C,EAAK/Z,GACpF,QAAU3V,IAAP2V,EAAH,CAEM,GAAU,OAAPA,EACP,MAAM,IAAI+zG,EAAY,qCAExB,GAA+B,mBAApBjpH,KAAK8W,MAAM5B,GACpB,OAAOlV,KAAK8W,MAAM5B,GAAMtQ,KAAK5E,KAAMw7D,GAErC,GAAItmD,GAAuB,iBAARA,EAAkB,CACnC,IAAItO,EAAM5G,KAAKspH,eAAe9tD,EAAUtmD,EAAMwzD,EAASz5C,GACvD,YAAe1vB,IAARqH,KAAuBA,GAAOA,EAAI83C,OAAOljD,OAClD,CAEA,OAAO,CATP,CAUF,EAEA,IAAIsb,EAAQu4G,EAAUjiH,UAAU0J,MAAQ,CAAC,EACzCA,EAAMgG,OAAS,SAAqB0+C,GAClC,MAA0B,iBAAZA,CAChB,EACA1kD,EAAMoF,OAAS,SAAqBs/C,GAElC,MAA0B,iBAAZA,GAAwBk2D,SAASl2D,EACjD,EACA1kD,EAAM1X,QAAU,SAAsBo8D,GACpC,MAA2B,iBAAZA,GAAyBA,EAAW,IAAM,CAC3D,EACA1kD,EAAM20D,QAAU,SAAsBjQ,GACpC,MAA0B,kBAAZA,CAChB,EACA1kD,EAAMtY,MAAQ,SAAoBg9D,GAChC,OAAOpgE,MAAMC,QAAQmgE,EACvB,EACA1kD,EAAY,KAAI,SAAmB0kD,GACjC,OAAoB,OAAbA,CACT,EACA1kD,EAAM66G,KAAO,SAAmBn2D,GAC9B,OAAOA,aAAoBiI,IAC7B,EACA3sD,EAAM86G,IAAM,SAAkBp2D,GAC5B,OAAO,CACT,EACA1kD,EAAMkyD,OAAS,SAAqBxN,GAElC,OAAOA,GAAiC,kBAAbA,IAA4BpgE,MAAMC,QAAQmgE,MAAgBA,aAAoBiI,KAC3G,EAEA7wD,EAAOjV,QAAU0xH,kCCrTjB,SAAS54G,EAAemtD,EAAKknD,GAC3B,OAAOzjH,OAAO+F,UAAUqJ,eAAe7R,KAAKg/D,EAAKknD,EACnD,CAEAl4G,EAAOjV,QAAU,SAASk0H,EAAIC,EAAKhjG,EAAI45C,GACrCopD,EAAMA,GAAO,IACbhjG,EAAKA,GAAM,IACX,IAAI80C,EAAM,CAAC,EAEX,GAAkB,kBAAPiuD,GAAiC,IAAdA,EAAGr2H,OAC/B,OAAOooE,EAGT,IAAIqnD,EAAS,MACb4G,EAAKA,EAAGlgG,MAAMmgG,GAEd,IAAIC,EAAU,IACVrpD,GAAsC,kBAApBA,EAAQqpD,UAC5BA,EAAUrpD,EAAQqpD,SAGpB,IAAIv1H,EAAMq1H,EAAGr2H,OAETu2H,EAAU,GAAKv1H,EAAMu1H,IACvBv1H,EAAMu1H,GAGR,IAAK,IAAIx2H,EAAI,EAAGA,EAAIiB,IAAOjB,EAAG,CAC5B,IAEIy2H,EAAMC,EAAM1qH,EAAGlL,EAFforB,EAAIoqG,EAAGt2H,GAAG2L,QAAQ+jH,EAAQ,OAC1BiH,EAAMzqG,EAAEhf,QAAQqmB,GAGhBojG,GAAO,GACTF,EAAOvqG,EAAE5e,OAAO,EAAGqpH,GACnBD,EAAOxqG,EAAE5e,OAAOqpH,EAAM,KAEtBF,EAAOvqG,EACPwqG,EAAO,IAGT1qH,EAAI0nH,mBAAmB+C,GACvB31H,EAAI4yH,mBAAmBgD,GAElBx7G,EAAemtD,EAAKr8D,GAEdnM,MAAMC,QAAQuoE,EAAIr8D,IAC3Bq8D,EAAIr8D,GAAG9L,KAAKY,GAEZunE,EAAIr8D,GAAK,CAACq8D,EAAIr8D,GAAIlL,GAJlBunE,EAAIr8D,GAAKlL,CAMb,CAEA,OAAOunE,CACT,kCCxDA,IAAIuuD,EAAqB,SAAS91H,GAChC,cAAeA,GACb,IAAK,SACH,OAAOA,EAET,IAAK,UACH,OAAOA,EAAI,OAAS,QAEtB,IAAK,SACH,OAAOq1H,SAASr1H,GAAKA,EAAI,GAE3B,QACE,MAAO,GAEb,EAEAuW,EAAOjV,QAAU,SAASimE,EAAKkuD,EAAKhjG,EAAI3hB,GAOtC,OANA2kH,EAAMA,GAAO,IACbhjG,EAAKA,GAAM,IACC,OAAR80C,IACFA,OAAMrkE,GAGW,kBAARqkE,EACFv8D,OAAOuQ,KAAKgsD,GAAKp8D,KAAI,SAASD,GACnC,IAAI6qH,EAAKvD,mBAAmBsD,EAAmB5qH,IAAMunB,EACrD,OAAI1zB,MAAMC,QAAQuoE,EAAIr8D,IACbq8D,EAAIr8D,GAAGC,KAAI,SAASnL,GACzB,OAAO+1H,EAAKvD,mBAAmBsD,EAAmB91H,GACpD,IAAG4R,KAAK6jH,GAEDM,EAAKvD,mBAAmBsD,EAAmBvuD,EAAIr8D,IAE1D,IAAG0G,KAAK6jH,GAIL3kH,EACE0hH,mBAAmBsD,EAAmBhlH,IAAS2hB,EAC/C+/F,mBAAmBsD,EAAmBvuD,IAF3B,EAGpB,sCC7DAjmE,EAAQX,OAASW,EAAQoX,MAAQ,EAAhBpX,OACjBA,EAAQzC,OAASyC,EAAQiX,UAAY,EAApBjX,wCCDjB,SAAUgP,GACN,IAAM0lH,EAAY,WAIlB,SAASvyD,EAAOv2C,GACZ,IAAM2T,EAAI,IAAIqgC,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,aAGnC7hC,EAAK,WAAYC,EAAK,WAAYC,EAAK,WAAYC,EAAK,WACxDC,EAAK,WAAYC,EAAK,WAAYC,EAAK,UAAYC,EAAK,WACtDte,EAAI,IAAI4/C,YAAY,IAE1B,SAASziC,EAAOhS,GAEZ,IADA,IAAIlL,EAAM,EAAGphB,EAAMssB,EAAEttB,OACdgB,GAAO,IAAI,CACd,IAAIoC,EAAI88B,EAAI7c,EAAI8c,EAAI5tB,EAAI6tB,EAAIn+B,EAAIo+B,EAAI56B,EAAI66B,EAAIvB,EAAIwB,EAAIh3B,EAAIi3B,EAAI7Q,EAAI8Q,EAAIvJ,OAAC,EAAEn3B,OAAC,EAAEkD,OAAC,EAAEk4B,OAAE,EAAEC,OAAE,EAEnF,IAAKr7B,EAAI,EAAGA,EAAI,GAAIA,IAChBkD,EAAImf,EAAQ,EAAFriB,EACVoiB,EAAEpiB,IAAc,IAAPutB,EAAErqB,KAAY,IAAiB,IAATqqB,EAAErqB,EAAE,KAAY,IACpC,IAATqqB,EAAErqB,EAAE,KAAY,EAAe,IAATqqB,EAAErqB,EAAE,GAGhC,IAAKlD,EAAI,GAAIA,EAAI,GAAIA,IAEjBo7B,IADAjE,EAAI/U,EAAEpiB,EAAE,MACG,GAAOm3B,GAAI,KAAaA,IAAI,GAAOA,GAAI,IAAYA,IAAI,GAGlEkE,IADAlE,EAAI/U,EAAEpiB,EAAE,OACG,EAAMm3B,GAAI,KAAYA,IAAI,GAAOA,GAAI,IAAYA,IAAI,EAEhE/U,EAAEpiB,IAAQo7B,EAAKhZ,EAAEpiB,EAAE,GAAM,IAAOq7B,EAAKjZ,EAAEpiB,EAAE,IAAO,GAAM,EAG1D,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChBo7B,KAAW11B,IAAI,EAAMA,GAAI,KAAYA,IAAI,GAAOA,GAAI,KACzCA,IAAI,GAAOA,GAAI,KAAcA,EAAIs5B,GAAOt5B,EAAI8D,GAAO,IACtDomB,GAAM+R,EAAE3hC,GAAKoiB,EAAEpiB,GAAM,GAAM,GAAM,EAEzCq7B,IAASh4B,IAAI,EAAMA,GAAI,KAAYA,IAAI,GAAOA,GAAI,KACzCA,IAAI,GAAOA,GAAI,MAAcA,EAAIigB,EAAMjgB,EAAImP,EAAM8Q,EAAI9Q,GAAO,EAErEod,EAAIpmB,EACJA,EAAIw1B,EACJA,EAAIt5B,EACJA,EAAKxD,EAAIk5B,EAAM,EACfl5B,EAAIsQ,EACJA,EAAI8Q,EACJA,EAAIjgB,EACJA,EAAK+3B,EAAKC,EAAM,EAGpB8E,EAAMA,EAAK98B,EAAK,EAChB+8B,EAAMA,EAAK9c,EAAK,EAChB+c,EAAMA,EAAK7tB,EAAK,EAChB8tB,EAAMA,EAAKp+B,EAAK,EAChBq+B,EAAMA,EAAK76B,EAAK,EAChB86B,EAAMA,EAAKxB,EAAK,EAChByB,EAAMA,EAAKj3B,EAAK,EAChBk3B,EAAMA,EAAK9Q,EAAK,EAEhBvN,GAAO,GACPphB,GAAO,EACX,CACJ,CAEAs+B,EAAOvR,GAEP,IAAIhuB,EAAG+2H,EAAY/oG,EAAE/tB,OAAS,GAC9B+2H,EAAYhpG,EAAE/tB,OAAS,UAAc,EACrCg3H,EAAWjpG,EAAE/tB,QAAU,EACvBi3H,EAAYH,EAAY,GAAM,GAAK,IACnCxpG,EAAIS,EAAEptB,MAAMotB,EAAE/tB,OAAS82H,EAAW/oG,EAAE/tB,QAGpC,IADAstB,EAAErtB,KAAK,KACFF,EAAI+2H,EAAY,EAAG/2H,EAAIk3H,EAAUl3H,IAAOutB,EAAErtB,KAAK,GAYpD,OAXAqtB,EAAErtB,KAAM82H,IAAa,GAAM,KAC3BzpG,EAAErtB,KAAM82H,IAAa,GAAM,KAC3BzpG,EAAErtB,KAAM82H,IAAa,EAAM,KAC3BzpG,EAAErtB,KAAM82H,IAAa,EAAM,KAC3BzpG,EAAErtB,KAAM+2H,IAAa,GAAM,KAC3B1pG,EAAErtB,KAAM+2H,IAAa,GAAM,KAC3B1pG,EAAErtB,KAAM+2H,IAAa,EAAM,KAC3B1pG,EAAErtB,KAAM+2H,IAAa,EAAM,KAE3B13F,EAAOhS,GAEA,CACF4S,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IACvEC,IAAO,GAAM,IAAOA,IAAO,GAAM,IAAOA,IAAO,EAAK,IAAOA,IAAO,EAAK,IAEhF,CAEA,SAASy2F,EAA2Bv5B,EAAUn3F,EAAM8gE,GAEhDq2B,EAAYA,EAAS39F,QAAU,GAAM29F,EAAWr5B,EAAOq5B,GAEvD,IAII59F,EAJEo3H,EAAW,GAAK3wH,EAAKxG,OAAS,EAC9B2uH,EAAQ,IAAI/uH,MAAMu3H,GAClBC,EAAW,IAAIx3H,MAAM,IAGvBy3H,EAAK,GAGT,IAAKt3H,EAAI,EAAGA,EAAI,GAAIA,IAAO4uH,EAAM5uH,GAAK,GACtC,IAAKA,EAAI,EAAGA,EAAI49F,EAAS39F,OAAQD,IAAO4uH,EAAM5uH,IAAM49F,EAAS59F,GAC7D,IAAKA,EAAI,EAAGA,EAAIyG,EAAKxG,OAAQD,IAAO4uH,EAAM,GAAK5uH,GAAKyG,EAAKzG,GACzD,IAAKA,EAAIo3H,EAAW,EAAGp3H,EAAIo3H,EAAUp3H,IAAO4uH,EAAM5uH,GAAK,EAGvD,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKq3H,EAASr3H,GAAK,GACvC,IAAKA,EAAI,EAAGA,EAAI49F,EAAS39F,OAAQD,IAAKq3H,EAASr3H,IAAM49F,EAAS59F,GAG9D,SAASu3H,IACL,IAAK,IAAIv3H,EAAIo3H,EAAW,EAAGp3H,GAAKo3H,EAAW,EAAGp3H,IAAK,CAE/C,GADA4uH,EAAM5uH,KACF4uH,EAAM5uH,IAAM,IAAM,OACtB4uH,EAAM5uH,GAAK,CACf,CACJ,CAGA,KAAOunE,GAAS,IACZgwD,IACAD,EAAKA,EAAG3wH,OAAO49D,EAAO8yD,EAAS1wH,OAAO49D,EAAOqqD,MAC7CrnD,GAAS,GAOb,OALIA,EAAQ,IACRgwD,IACAD,EAAKA,EAAG3wH,OAAO49D,EAAO8yD,EAAS1wH,OAAO49D,EAAOqqD,KAAShuH,MAAM,EAAG2mE,KAG5D+vD,CACX,CAIA,SAASE,EAAgBC,EAAIC,EAAIxoH,EAAGgd,EAAGyrG,GACnC,IAAI33H,EAGJ,IADA43H,EAAUH,EAAkB,IAAb,EAAIvoH,EAAI,GAASyoH,EAAI,EAAG,IAClC33H,EAAI,EAAGA,EAAI,EAAIkP,EAAGlP,IACnB63H,EAASJ,EAAQ,GAAJz3H,EAAQ23H,EAAI,IACzBG,EAAUH,EAAIzrG,GACd0rG,EAAUD,EAAI,EAAGF,EAAIC,EAAU,GAAJ13H,EAAS,IAGxC,IAAKA,EAAI,EAAGA,EAAIkP,EAAGlP,IACf43H,EAAUH,EAAIC,EAAU,EAAJ13H,EAAS,GAAIy3H,EAAS,GAAJz3H,EAAS,IAGnD,IAAKA,EAAI,EAAGA,EAAIkP,EAAGlP,IACf43H,EAAUH,EAAIC,EAAmB,IAAT,EAAJ13H,EAAQ,GAASy3H,EAAc,IAATz3H,EAAIkP,GAAS,GAE/D,CAEA,SAASy/B,EAAEtrC,EAAGigB,GACV,OAAQjgB,GAAKigB,EAAMjgB,IAAO,GAAKigB,CACnC,CAEA,SAASw0G,EAAUlmG,EAAG1F,GAClB0rG,EAAUhmG,EAAG,EAAG1F,EAAG,EAAG,IAEtB,IAAK,IAAIlsB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBksB,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAE,IAAK,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAE,KAAOyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAE,KAAOyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAE,IAAK,GAC1BA,EAAE,KAAOyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAG,GAAI,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAG,IAAMyiB,EAAEziB,EAAG,GAAKA,EAAE,IAAK,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAG,GAAKA,EAAG,GAAI,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,GAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,IAC1BA,EAAE,KAAOyiB,EAAEziB,EAAE,IAAMA,EAAE,IAAK,IAG9B,IAAK,IAAIlsB,EAAI,EAAGA,EAAI,KAAMA,EACtB4xB,EAAE5xB,IAAMksB,EAAElsB,EAElB,CAGA,SAAS63H,EAAS9kH,EAAGC,EAAI8e,EAAG7wB,GACxB,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAKjB,IACrB8xB,EAAE9xB,IAAM+S,EAAEC,EAAKhT,EAEvB,CAEA,SAAS43H,EAAUzE,EAAK4E,EAAQl1G,EAAMu7E,EAASn+F,GAC3C,KAAOA,KACH4iB,EAAKu7E,KAAa+0B,EAAI4E,IAE9B,CAEA,SAASC,EAAelxG,GACpB,IAAKA,GAA0B,kBAAdA,EAAE7mB,OAAwB,OAAO,EAElD,IAAK,IAAID,EAAI,EAAGA,EAAI8mB,EAAE7mB,OAAQD,IAAK,CAC/B,IAAMc,EAAIgmB,EAAE9mB,GACZ,GAAkB,kBAAPc,GAAmBA,EAAI,GAAKA,EAAI,GAAKA,GAAK,IACjD,OAAO,CAEf,CAEA,OAAO,CACX,CAEA,SAASm3H,EAAc/rH,EAAO0F,GAC1B,GAAsB,kBAAX1F,GAAwBA,EAAQ,EAAM,MAAM,IAAIvL,MAAM,WAAaiR,GAC9E,OAAO1F,CACX,CAIA,SAASgsH,EAAQt6B,EAAUn3F,EAAM+lB,EAAGtd,EAAGqe,EAAGg6C,EAAO1+D,GAQ7C,GANA2jB,EAAIyrG,EAAczrG,EAAG,KACrBtd,EAAI+oH,EAAc/oH,EAAG,KACrBqe,EAAI0qG,EAAc1qG,EAAG,KAErBg6C,EAAQ0wD,EAAc1wD,EAAO,SAEnB,IAAN/6C,GAA6B,KAAjBA,EAAKA,EAAI,GAAa,MAAM,IAAI7rB,MAAM,wBAEtD,GAAI6rB,EAAIsqG,EAAY,IAAM5nH,EAAK,MAAM,IAAIvO,MAAM,eAC/C,GAAIuO,EAAI4nH,EAAY,IAAMvpG,EAAK,MAAM,IAAI5sB,MAAM,eAE/C,IAAKq3H,EAAep6B,GAChB,MAAM,IAAIj9F,MAAM,uCAIpB,GAFAi9F,EAAW/9F,MAAMgS,UAAUjR,MAAMyI,KAAKu0F,IAEjCo6B,EAAevxH,GAChB,MAAM,IAAI9F,MAAM,mCAEpB8F,EAAO5G,MAAMgS,UAAUjR,MAAMyI,KAAK5C,GAIlC,IAFA,IAAI6c,EAAI6zG,EAA2Bv5B,EAAUn3F,EAAU,IAAJ8mB,EAAUre,GACvD0iB,EAAI,IAAIowC,YAAgB,GAAJz0C,EAASre,GAC1BlP,EAAI,EAAGA,EAAI4xB,EAAE3xB,OAAQD,IAAK,CAC/B,IAAMkD,EAAQ,EAAJlD,EACV4xB,EAAE5xB,IAAkB,IAAXsjB,EAAEpgB,EAAI,KAAc,IACT,IAAXogB,EAAEpgB,EAAI,KAAc,IACT,IAAXogB,EAAEpgB,EAAI,KAAc,GACT,IAAXogB,EAAEpgB,EAAI,KAAc,CACjC,CAEA,IAkBYi1H,EACRC,EAnBEC,EAAK,IAAIr2D,YAAY,GAAK9yD,GAC1Bm6B,EAAI,IAAI24B,YAAY,GAAK9yD,EAAIsd,GAE7BkrG,EAAK,GAAKxoH,EAGVgd,EAAI,IAAI81C,YAAY,IACpB21D,EAAK,IAAI31D,YAAY,IAErBs2D,EAAW/qG,EAAIf,EAAI,EACrB+rG,EAAY,EACZC,EAAgB,KAGhBC,GAAO,EAGPt8E,EAAQ,EACRu8E,EAAK,EAIHC,EAAQ9vH,EAAW/F,SAAS,IAAOoM,GAAI,WAGvCw4D,EAAqC,qBAAlBkxD,aAAiCA,aAAejjC,WAInEkjC,EAAkB,SAAlBA,IACF,GAAIJ,EACA,OAAO5vH,EAAS,IAAIlI,MAAM,aAAc43H,EAAYD,GAGxD,IAAIQ,EAEJ,OAAQ38E,GACJ,KAAK,EAIDy7E,EAAUhmG,EAFVwmG,EAAU,GAALM,EAAUxpH,EAEEmpH,EAAI,EAAGX,GAExBv7E,EAAQ,EACRg8E,EAAK,EAIT,KAAK,GAGDW,EAAQtsG,EAAI2rG,GACAQ,IAASG,EAAQH,GAC7B,IAAK,IAAI34H,EAAI,EAAGA,EAAI84H,EAAO94H,IACvB43H,EAAUS,EAAI,EAAGhvF,GAAI8uF,EAAKn4H,GAAK03H,EAAIA,GACnCF,EAAgBa,EAAIX,EAAIxoH,EAAGgd,EAAGyrG,GAOlC,GAHAQ,GAAMW,EACNP,GAAaO,EAETjwH,EAAU,CAEV,IAAMkwH,EAAYj2H,SAAS,IAAOy1H,EAAYD,GAC9C,GAAIS,IAAcP,EAAe,CAE7B,GADAC,EAAO5vH,EAAS,KAAM0vH,EAAYD,GACtB,MACZE,EAAgBO,CACpB,CACJ,CAEA,GAAIZ,EAAK3rG,EAAK,MAEd2rG,EAAK,EACLh8E,EAAQ,EAIZ,KAAK,GAGD28E,EAAQtsG,EAAI2rG,GACAQ,IAASG,EAAQH,GAC7B,IAAK,IAAI34H,EAAI,EAAGA,EAAI84H,EAAO94H,IAAK,CAC5B,IACMkD,EAAIm1H,EADmB,IAAb,EAAInpH,EAAI,IACAsd,EAAI,EAC5BqrG,EAASxuF,EAAGnmC,EAAIw0H,EAAIW,EAAIX,GACxBF,EAAgBa,EAAIX,EAAIxoH,EAAGgd,EAAGyrG,EAClC,CAOA,GAJAQ,GAAMW,EACNP,GAAaO,EAGTjwH,EAAU,CACV,IAAMkwH,EAAYj2H,SAAS,IAAOy1H,EAAYD,GAC9C,GAAIS,IAAcP,EAAe,CAE7B,GADAC,EAAO5vH,EAAS,KAAM0vH,EAAYD,GACtB,MACZE,EAAgBO,CACpB,CACJ,CAEA,GAAIZ,EAAK3rG,EAAK,MAMd,GAJAorG,EAAUS,EAAI,EAAGzmG,EAAGwmG,EAAIV,KAGxBgB,EACSnrG,EAAG,CACR4uB,EAAQ,EACR,KACJ,CAEA74B,EAAI,GACJ,IAAK,IAAItjB,EAAI,EAAGA,EAAI4xB,EAAE3xB,OAAQD,IAC1BsjB,EAAEpjB,KAAM0xB,EAAE5xB,IAAO,EAAK,KACtBsjB,EAAEpjB,KAAM0xB,EAAE5xB,IAAO,EAAK,KACtBsjB,EAAEpjB,KAAM0xB,EAAE5xB,IAAM,GAAM,KACtBsjB,EAAEpjB,KAAM0xB,EAAE5xB,IAAM,GAAM,KAG1B,IAAMilG,EAAakyB,EAA2Bv5B,EAAUt6E,EAAGikD,GAM3D,OAHI1+D,GAAYA,EAAS,KAAM,EAAKo8F,GAG7BA,EAIXp8F,GAAY6+D,EAASmxD,EAC7B,EAGA,IAAKhwH,EACD,OAAa,CACT,IAAMo8F,EAAa4zB,IACnB,QAAkB70H,GAAdihG,EAA2B,OAAOA,CAC1C,CAIJ4zB,GACJ,CAEA,IAAMG,EAAM,CACR70B,OAAQ,SAASvG,EAAUn3F,EAAM+lB,EAAGtd,EAAGqe,EAAGg6C,EAAO67B,GAC7C,OAAO,IAAIl1F,SAAQ,SAASC,EAASglF,GACjC,IAAI8lC,EAAe,EACf71B,GAAoBA,EAAiB,GACzC80B,EAAQt6B,EAAUn3F,EAAM+lB,EAAGtd,EAAGqe,EAAGg6C,GAAO,SAAShpD,EAAO26G,EAAUtrH,GAC9D,GAAI2Q,EACA40E,EAAO50E,QACJ,GAAI3Q,EACHw1F,GAAqC,IAAjB61B,GACpB71B,EAAiB,GAErBj1F,EAAQ,IAAIhN,WAAWyM,SACpB,GAAIw1F,GAAoB81B,IAAaD,EAExC,OADAA,EAAeC,EACR91B,EAAiB81B,EAEhC,GACJ,GACJ,EACAC,WAAY,SAASv7B,EAAUn3F,EAAM+lB,EAAGtd,EAAGqe,EAAGg6C,GAC1C,OAAO,IAAIpmE,WAAW+2H,EAAQt6B,EAAUn3F,EAAM+lB,EAAGtd,EAAGqe,EAAGg6C,GAC3D,GAKDlwD,EAAOjV,QAAU42H,CAmBvB,CAreD,0BCFA,IAAIl1H,EAAgBud,EAAQ,OAO5BhK,EAAOjV,QAAU,SAAwB2B,GACvC,MAAmB,kBAARA,EACFA,EAGFD,EAAcC,GAAOA,EAAInD,MAAM,GAAKmD,CAC7C,gDCXC,SAASqN,EAAM4tB,GACd,aACqC3nB,EAAOjV,QAASiV,EAAOjV,QAAU48B,KAC7D5tB,EAAKsG,OAEZtG,EAAKsG,KAAO,CAAC,GAFKtG,EAAKsG,KAAK0hH,KAAOp6F,IAKtC,CARA,CAQCv6B,MAAM,WACN,aAEA,IAAI20H,EAAO,CAAC,EAEZ,SAASC,EAAelqH,GACtB,IAAM,uFAAuFxJ,KAAKwJ,GAChG,MAAM,IAAInM,UAAU,mBAExB,CA2DA,OAzDAo2H,EAAKphH,WAAa,SAAS7I,GACzB,GAAiB,kBAANA,EAAgB,MAAM,IAAInM,UAAU,mBAC/C,IAAIhD,EAAGkC,EAAIo3H,SAAShG,mBAAmBnkH,IAAKmU,EAAI,IAAIniB,WAAWe,EAAEjC,QACjE,IAAKD,EAAI,EAAGA,EAAIkC,EAAEjC,OAAQD,IAAKsjB,EAAEtjB,GAAKkC,EAAEwL,WAAW1N,GACnD,OAAOsjB,CACT,EAEA81G,EAAKtgH,WAAa,SAASxV,GACzB,IAAItD,EAAGmP,EAAI,GACX,IAAKnP,EAAI,EAAGA,EAAIsD,EAAIrD,OAAQD,IAAKmP,EAAEjP,KAAKqN,OAAOC,aAAalK,EAAItD,KAChE,OAAO0zH,mBAAmB6F,OAAOpqH,EAAEuD,KAAK,KAC1C,EAEoB,qBAATm2F,KAGkB,qBAAhBjkG,EAAOxD,MAEhBg4H,EAAK/gH,aAAe,SAAU/U,GAC1B,OAAOsB,EAAOxD,KAAKkC,GAAKf,SAAS,SACrC,EAEA62H,EAAKthH,aAAe,SAAU3I,GAE5B,OADAkqH,EAAelqH,GACR,IAAIhO,WAAWtB,MAAMgS,UAAUjR,MAAMyI,KAAKzE,EAAOxD,KAAK+N,EAAG,UAAW,GAC7E,IAIAiqH,EAAK/gH,aAAe,SAAU/U,GAC5B,OAAQ,IAAIsB,EAAOtB,GAAMf,SAAS,SACpC,EAEA62H,EAAKthH,aAAe,SAAS3I,GAE3B,OADAkqH,EAAelqH,GACR,IAAIhO,WAAWtB,MAAMgS,UAAUjR,MAAMyI,KAAK,IAAIzE,EAAOuK,EAAG,UAAW,GAC5E,IAMFiqH,EAAK/gH,aAAe,SAAS/U,GAC3B,IAAItD,EAAGmP,EAAI,GAAIlO,EAAMqC,EAAIrD,OACzB,IAAKD,EAAI,EAAGA,EAAIiB,EAAKjB,IAAKmP,EAAEjP,KAAKqN,OAAOC,aAAalK,EAAItD,KACzD,OAAO8oG,KAAK35F,EAAEuD,KAAK,IACrB,EAEA0mH,EAAKthH,aAAe,SAAS3I,GAC3BkqH,EAAelqH,GACf,IAAInP,EAAGkC,EAAI2mG,KAAK15F,GAAImU,EAAI,IAAIniB,WAAWe,EAAEjC,QACzC,IAAKD,EAAI,EAAGA,EAAIkC,EAAEjC,OAAQD,IAAKsjB,EAAEtjB,GAAKkC,EAAEwL,WAAW1N,GACnD,OAAOsjB,CACT,GAIK81G,CAET,2BChFA,iBACE,SAAShoH,GAGsChP,GAC9CA,EAAQo3H,SACoCniH,GAC5CA,EAAOmiH,SAHT,IAIIC,EAA8B,iBAAVp4B,EAAAA,GAAsBA,EAAAA,EAE7Co4B,EAAWp4B,SAAWo4B,GACtBA,EAAWr4G,SAAWq4G,GACtBA,EAAW3wH,KAUZ,IAAI4wH,EAGJC,EAAS,WAGT/4G,EAAO,GAUPg5G,EAAgB,QAChBC,EAAgB,eAChBC,EAAkB,4BAGlB32E,EAAS,CACR,SAAY,kDACZ,YAAa,iDACb,gBAAiB,iBAKlB3mB,EAAQ9a,KAAK8a,MACbu9F,EAAqBxsH,OAAOC,aAa5B,SAAS+Q,EAAM5E,GACd,MAAMqgH,WAAW72E,EAAOxpC,GACzB,CAUA,SAAS1N,EAAIhJ,EAAOgG,GAGnB,IAFA,IAAIhJ,EAASgD,EAAMhD,OACfsD,EAAS,GACNtD,KACNsD,EAAOtD,GAAUgJ,EAAGhG,EAAMhD,IAE3B,OAAOsD,CACR,CAYA,SAAS02H,EAAU14G,EAAQtY,GAC1B,IAAI8V,EAAQwC,EAAO6U,MAAM,KACrB7yB,EAAS,GAWb,OAVIwb,EAAM9e,OAAS,IAGlBsD,EAASwb,EAAM,GAAK,IACpBwC,EAASxC,EAAM,IAMTxb,EADO0I,GAFdsV,EAASA,EAAO5V,QAAQmuH,EAAiB,MACrB1jG,MAAM,KACAntB,GAAIyJ,KAAK,IAEpC,CAeA,SAASwnH,EAAW34G,GAMnB,IALA,IAGIrV,EACAiuH,EAJAp6H,EAAS,GACTqW,EAAU,EACVnW,EAASshB,EAAOthB,OAGbmW,EAAUnW,IAChBiM,EAAQqV,EAAO7T,WAAW0I,OACb,OAAUlK,GAAS,OAAUkK,EAAUnW,EAG3B,QAAX,OADbk6H,EAAQ54G,EAAO7T,WAAW0I,OAEzBrW,EAAOG,OAAe,KAARgM,IAAkB,KAAe,KAARiuH,GAAiB,QAIxDp6H,EAAOG,KAAKgM,GACZkK,KAGDrW,EAAOG,KAAKgM,GAGd,OAAOnM,CACR,CAUA,SAASq6H,EAAWn3H,GACnB,OAAOgJ,EAAIhJ,GAAO,SAASiJ,GAC1B,IAAInM,EAAS,GAOb,OANImM,EAAQ,QAEXnM,GAAUg6H,GADV7tH,GAAS,SAC8B,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElBnM,GAAUg6H,EAAmB7tH,EAE9B,IAAGwG,KAAK,GACT,CAmCA,SAAS2nH,EAAaC,EAAOC,GAG5B,OAAOD,EAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARC,IAAc,EACzD,CAOA,SAASC,EAAM/nG,EAAOgoG,EAAWC,GAChC,IAAI1uH,EAAI,EAGR,IAFAymB,EAAQioG,EAAYl+F,EAAM/J,EA1LpB,KA0LoCA,GAAS,EACnDA,GAAS+J,EAAM/J,EAAQgoG,GACOhoG,EAAQkoG,IAA2B3uH,GAAK4U,EACrE6R,EAAQ+J,EAAM/J,EA3KA7R,IA6Kf,OAAO4b,EAAMxwB,EAAI,GAAsBymB,GAASA,EAhM1C,IAiMP,CASA,SAAShxB,EAAO7B,GAEf,IAEIyjB,EAIAu3G,EACA13H,EACA4G,EACA+wH,EACAz4G,EACApW,EACAsuH,EACA7lH,EAEAqmH,EArEiB5lD,EAsDjBn1E,EAAS,GACTg7H,EAAcn7H,EAAMK,OAEpBD,EAAI,EACJkL,EA7MM,IA8MN8vH,EA/MS,GAoOb,KALAJ,EAAQh7H,EAAMga,YA7NH,MA8NC,IACXghH,EAAQ,GAGJ13H,EAAI,EAAGA,EAAI03H,IAAS13H,EAEpBtD,EAAM8N,WAAWxK,IAAM,KAC1Bqb,EAAM,aAEPxe,EAAOG,KAAKN,EAAM8N,WAAWxK,IAM9B,IAAK4G,EAAQ8wH,EAAQ,EAAIA,EAAQ,EAAI,EAAG9wH,EAAQixH,GAAwC,CAOvF,IAAKF,EAAO76H,EAAGoiB,EAAI,EAAGpW,EAAI4U,EAErB9W,GAASixH,GACZx8G,EAAM,mBAGP+7G,GAxGmBplD,EAwGEt1E,EAAM8N,WAAW5D,MAvGxB,GAAK,GACborE,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEbt0D,IAgGQA,GAAQ05G,EAAQ99F,GAAOm9F,EAAS35H,GAAKoiB,KACjD7D,EAAM,YAGPve,GAAKs6H,EAAQl4G,IAGTk4G,GAFJ7lH,EAAIzI,GAAKgvH,EAvQL,EAuQoBhvH,GAAKgvH,EAtQzB,MAsQ8ChvH,EAAIgvH,IAbHhvH,GAAK4U,EAoBpDwB,EAAIoa,EAAMm9F,GADdmB,EAAal6G,EAAOnM,KAEnB8J,EAAM,YAGP6D,GAAK04G,EAKNE,EAAOR,EAAMx6H,EAAI66H,EADjBx3G,EAAMtjB,EAAOE,OAAS,EACc,GAAR46H,GAIxBr+F,EAAMx8B,EAAIqjB,GAAOs2G,EAASzuH,GAC7BqT,EAAM,YAGPrT,GAAKsxB,EAAMx8B,EAAIqjB,GACfrjB,GAAKqjB,EAGLtjB,EAAOiK,OAAOhK,IAAK,EAAGkL,EAEvB,CAEA,OAAOkvH,EAAWr6H,EACnB,CASA,SAASJ,EAAOC,GACf,IAAIsL,EACAunB,EACAwoG,EACAC,EACAF,EACA93H,EACA8qB,EACA1J,EACAtY,EACAyI,EACA0mH,EAGAJ,EAEAK,EACAN,EACAO,EANAt7H,EAAS,GAoBb,IARAg7H,GAHAn7H,EAAQs6H,EAAWt6H,IAGCK,OAGpBiL,EAvUU,IAwUVunB,EAAQ,EACRuoG,EA1Ua,GA6UR93H,EAAI,EAAGA,EAAI63H,IAAe73H,GAC9Bi4H,EAAev7H,EAAMsD,IACF,KAClBnD,EAAOG,KAAK65H,EAAmBoB,IAejC,IAXAF,EAAiBC,EAAcn7H,EAAOE,OAMlCi7H,GACHn7H,EAAOG,KAzVG,KA6VJ+6H,EAAiBF,GAAa,CAIpC,IAAK/sG,EAAI2rG,EAAQz2H,EAAI,EAAGA,EAAI63H,IAAe73H,GAC1Ci4H,EAAev7H,EAAMsD,KACDgI,GAAKiwH,EAAentG,IACvCA,EAAImtG,GAcN,IAPIntG,EAAI9iB,EAAIsxB,GAAOm9F,EAASlnG,IAD5B2oG,EAAwBH,EAAiB,KAExC18G,EAAM,YAGPkU,IAAUzE,EAAI9iB,GAAKkwH,EACnBlwH,EAAI8iB,EAEC9qB,EAAI,EAAGA,EAAI63H,IAAe73H,EAO9B,IANAi4H,EAAev7H,EAAMsD,IAEFgI,KAAOunB,EAAQknG,GACjCp7G,EAAM,YAGH48G,GAAgBjwH,EAAG,CAEtB,IAAKoZ,EAAImO,EAAOzmB,EAAI4U,IAEf0D,GADJ7P,EAAIzI,GAAKgvH,EAlYP,EAkYsBhvH,GAAKgvH,EAjY3B,MAiYgDhvH,EAAIgvH,IADThvH,GAAK4U,EAKlDy6G,EAAU/2G,EAAI7P,EACdqmH,EAAal6G,EAAOnM,EACpB1U,EAAOG,KACN65H,EAAmBM,EAAa5lH,EAAI4mH,EAAUP,EAAY,KAE3Dx2G,EAAIkY,EAAM6+F,EAAUP,GAGrB/6H,EAAOG,KAAK65H,EAAmBM,EAAa/1G,EAAG,KAC/C02G,EAAOR,EAAM/nG,EAAO2oG,EAAuBH,GAAkBC,GAC7DzoG,EAAQ,IACNwoG,CACH,GAGCxoG,IACAvnB,CAEH,CACA,OAAOnL,EAAO2S,KAAK,GACpB,CA2CAgnH,EAAW,CAMV,QAAW,QAQX,KAAQ,CACP,OAAUQ,EACV,OAAUE,GAEX,OAAU34H,EACV,OAAU9B,EACV,QA/BD,SAAiBC,GAChB,OAAOq6H,EAAUr6H,GAAO,SAAS2hB,GAChC,OAAOs4G,EAAcl0H,KAAK4b,GACvB,OAAS5hB,EAAO4hB,GAChBA,CACJ,GACD,EA0BC,UAnDD,SAAmB3hB,GAClB,OAAOq6H,EAAUr6H,GAAO,SAAS2hB,GAChC,OAAOq4G,EAAcj0H,KAAK4b,GACvB9f,EAAO8f,EAAO3gB,MAAM,GAAGoF,eACvBub,CACJ,GACD,QA0DE,KAFDqnG,EAAAA,WACC,OAAO8Q,CACP,+BAaF,CAhhBC,uCCsBF,IAAIA,EAAWr4G,EAAQ,OACnB+3G,EAAO/3G,EAAQ,OASnB,SAASi6G,IACP72H,KAAK82H,SAAW,KAChB92H,KAAK+2H,QAAU,KACf/2H,KAAKg3H,KAAO,KACZh3H,KAAKs8G,KAAO,KACZt8G,KAAKi3H,KAAO,KACZj3H,KAAKk3H,SAAW,KAChBl3H,KAAKyB,KAAO,KACZzB,KAAKm3H,OAAS,KACdn3H,KAAK88G,MAAQ,KACb98G,KAAKo3H,SAAW,KAChBp3H,KAAKgsE,KAAO,KACZhsE,KAAKwoG,KAAO,IACd,CApBA7qG,EAAQoX,MAAQsiH,EAChB15H,EAAQ+L,QA0ZR,SAAoBivF,EAAQ2+B,GAC1B,OAAOD,EAAS1+B,GAAQ,GAAO,GAAMjvF,QAAQ4tH,EAC/C,EA3ZA35H,EAAQ45H,cAiaR,SAA0B5+B,EAAQ2+B,GAChC,OAAK3+B,EACE0+B,EAAS1+B,GAAQ,GAAO,GAAM4+B,cAAcD,GAD/BA,CAEtB,EAnaA35H,EAAQu3E,OAsVR,SAAmBtR,GAKb+wD,EAAK6C,SAAS5zD,KAAMA,EAAMyzD,EAASzzD,IACvC,OAAMA,aAAeizD,EACdjzD,EAAIsR,SADuB2hD,EAAIzpH,UAAU8nE,OAAOtwE,KAAKg/D,EAE9D,EA5VAjmE,EAAQk5H,IAAMA,EAqBd,IAAIY,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAOpBC,EAAS,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,KAAK11H,OAHhC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,OAM/C21H,EAAa,CAAC,KAAM31H,OAAO01H,GAK3BE,EAAe,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK51H,OAAO21H,GAChDE,EAAkB,CAAC,IAAK,IAAK,KAE7BC,EAAsB,yBACtBC,EAAoB,+BAEpBC,EAAiB,CACf,YAAc,EACd,eAAe,GAGjBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAEXC,EAAcz7G,EAAQ,OAE1B,SAASy6G,EAASn6E,EAAKo7E,EAAkBC,GACvC,GAAIr7E,GAAOy3E,EAAK6D,SAASt7E,IAAQA,aAAe25E,EAAK,OAAO35E,EAE5D,IAAIxqB,EAAI,IAAImkG,EAEZ,OADAnkG,EAAE3d,MAAMmoC,EAAKo7E,EAAkBC,GACxB7lG,CACT,CAEAmkG,EAAIzpH,UAAU2H,MAAQ,SAASmoC,EAAKo7E,EAAkBC,GACpD,IAAK5D,EAAK6C,SAASt6E,GACjB,MAAM,IAAI3+C,UAAU,gDAAkD2+C,GAMxE,IAAIu7E,EAAav7E,EAAIz0C,QAAQ,KACzBiwH,GACqB,IAAhBD,GAAqBA,EAAav7E,EAAIz0C,QAAQ,KAAQ,IAAM,IACjEkwH,EAASz7E,EAAIvrB,MAAM+mG,GAEvBC,EAAO,GAAKA,EAAO,GAAGzxH,QADL,MACyB,KAG1C,IAAI0xH,EAFJ17E,EAAMy7E,EAAO1qH,KAAKyqH,GAQlB,GAFAE,EAAOA,EAAKviD,QAEPkiD,GAA+C,IAA1Br7E,EAAIvrB,MAAM,KAAKn2B,OAAc,CAErD,IAAIq9H,EAAalB,EAAkBpiH,KAAKqjH,GACxC,GAAIC,EAeF,OAdA74H,KAAKgsE,KAAO4sD,EACZ54H,KAAKwoG,KAAOowB,EACZ54H,KAAKo3H,SAAWyB,EAAW,GACvBA,EAAW,IACb74H,KAAKm3H,OAAS0B,EAAW,GAEvB74H,KAAK88G,MADHwb,EACWD,EAAYtjH,MAAM/U,KAAKm3H,OAAOtuH,OAAO,IAErC7I,KAAKm3H,OAAOtuH,OAAO,IAEzByvH,IACTt4H,KAAKm3H,OAAS,GACdn3H,KAAK88G,MAAQ,CAAC,GAET98G,IAEX,CAEA,IAAI84H,EAAQrB,EAAgBliH,KAAKqjH,GACjC,GAAIE,EAAO,CAET,IAAIC,GADJD,EAAQA,EAAM,IACSv3H,cACvBvB,KAAK82H,SAAWiC,EAChBH,EAAOA,EAAK/vH,OAAOiwH,EAAMt9H,OAC3B,CAMA,GAAI+8H,GAAqBO,GAASF,EAAKvvH,MAAM,wBAAyB,CACpE,IAAI0tH,EAAgC,OAAtB6B,EAAK/vH,OAAO,EAAG,IACzBkuH,GAAa+B,GAASX,EAAiBW,KACzCF,EAAOA,EAAK/vH,OAAO,GACnB7I,KAAK+2H,SAAU,EAEnB,CAEA,IAAKoB,EAAiBW,KACjB/B,GAAY+B,IAAUV,EAAgBU,IAAU,CAmBnD,IADA,IASI9B,EAAMgC,EATNC,GAAW,EACN19H,EAAI,EAAGA,EAAIw8H,EAAgBv8H,OAAQD,IAAK,EAElC,KADT29H,EAAMN,EAAKnwH,QAAQsvH,EAAgBx8H,QACP,IAAb09H,GAAkBC,EAAMD,KACzCA,EAAUC,EACd,EAgBgB,KATdF,GAFe,IAAbC,EAEOL,EAAKzjH,YAAY,KAIjByjH,EAAKzjH,YAAY,IAAK8jH,MAM/BjC,EAAO4B,EAAKz8H,MAAM,EAAG68H,GACrBJ,EAAOA,EAAKz8H,MAAM68H,EAAS,GAC3Bh5H,KAAKg3H,KAAO/H,mBAAmB+H,IAIjCiC,GAAW,EACX,IAAS19H,EAAI,EAAGA,EAAIu8H,EAAat8H,OAAQD,IAAK,CAC5C,IAAI29H,GACS,KADTA,EAAMN,EAAKnwH,QAAQqvH,EAAav8H,QACJ,IAAb09H,GAAkBC,EAAMD,KACzCA,EAAUC,EACd,EAEiB,IAAbD,IACFA,EAAUL,EAAKp9H,QAEjBwE,KAAKs8G,KAAOsc,EAAKz8H,MAAM,EAAG88H,GAC1BL,EAAOA,EAAKz8H,MAAM88H,GAGlBj5H,KAAKm5H,YAILn5H,KAAKk3H,SAAWl3H,KAAKk3H,UAAY,GAIjC,IAAIkC,EAAoC,MAArBp5H,KAAKk3H,SAAS,IACe,MAA5Cl3H,KAAKk3H,SAASl3H,KAAKk3H,SAAS17H,OAAS,GAGzC,IAAK49H,EAEH,IADA,IAAIC,EAAYr5H,KAAKk3H,SAASvlG,MAAM,MACpBjpB,GAAPnN,EAAI,EAAO89H,EAAU79H,QAAQD,EAAImN,EAAGnN,IAAK,CAChD,IAAI+9H,EAAOD,EAAU99H,GACrB,GAAK+9H,IACAA,EAAKjwH,MAAM2uH,GAAsB,CAEpC,IADA,IAAIuB,EAAU,GACL96H,EAAI,EAAG8I,EAAI+xH,EAAK99H,OAAQiD,EAAI8I,EAAG9I,IAClC66H,EAAKrwH,WAAWxK,GAAK,IAIvB86H,GAAW,IAEXA,GAAWD,EAAK76H,GAIpB,IAAK86H,EAAQlwH,MAAM2uH,GAAsB,CACvC,IAAIwB,EAAaH,EAAUl9H,MAAM,EAAGZ,GAChCk+H,EAAUJ,EAAUl9H,MAAMZ,EAAI,GAC9BumB,EAAMw3G,EAAKjwH,MAAM4uH,GACjBn2G,IACF03G,EAAW/9H,KAAKqmB,EAAI,IACpB23G,EAAQv0H,QAAQ4c,EAAI,KAElB23G,EAAQj+H,SACVo9H,EAAO,IAAMa,EAAQxrH,KAAK,KAAO2qH,GAEnC54H,KAAKk3H,SAAWsC,EAAWvrH,KAAK,KAChC,KACF,CACF,CACF,CAGEjO,KAAKk3H,SAAS17H,OAjND,IAkNfwE,KAAKk3H,SAAW,GAGhBl3H,KAAKk3H,SAAWl3H,KAAKk3H,SAAS31H,cAG3B63H,IAKHp5H,KAAKk3H,SAAWjC,EAASyE,QAAQ15H,KAAKk3H,WAGxC,IAAIpuG,EAAI9oB,KAAKi3H,KAAO,IAAMj3H,KAAKi3H,KAAO,GAClC9rG,EAAInrB,KAAKk3H,UAAY,GACzBl3H,KAAKs8G,KAAOnxF,EAAIrC,EAChB9oB,KAAKwoG,MAAQxoG,KAAKs8G,KAId8c,IACFp5H,KAAKk3H,SAAWl3H,KAAKk3H,SAASruH,OAAO,EAAG7I,KAAKk3H,SAAS17H,OAAS,GAC/C,MAAZo9H,EAAK,KACPA,EAAO,IAAMA,GAGnB,CAIA,IAAKV,EAAea,GAKlB,IAASx9H,EAAI,EAAGmN,EAAImvH,EAAWr8H,OAAQD,EAAImN,EAAGnN,IAAK,CACjD,IAAIo+H,EAAK9B,EAAWt8H,GACpB,IAA0B,IAAtBq9H,EAAKnwH,QAAQkxH,GAAjB,CAEA,IAAIC,EAAM/K,mBAAmB8K,GACzBC,IAAQD,IACVC,EAAM9E,OAAO6E,IAEff,EAAOA,EAAKjnG,MAAMgoG,GAAI1rH,KAAK2rH,EALjB,CAMZ,CAKF,IAAIn4H,EAAOm3H,EAAKnwH,QAAQ,MACV,IAAVhH,IAEFzB,KAAKyB,KAAOm3H,EAAK/vH,OAAOpH,GACxBm3H,EAAOA,EAAKz8H,MAAM,EAAGsF,IAEvB,IAAIo4H,EAAKjB,EAAKnwH,QAAQ,KAoBtB,IAnBY,IAARoxH,GACF75H,KAAKm3H,OAASyB,EAAK/vH,OAAOgxH,GAC1B75H,KAAK88G,MAAQ8b,EAAK/vH,OAAOgxH,EAAK,GAC1BvB,IACFt4H,KAAK88G,MAAQub,EAAYtjH,MAAM/U,KAAK88G,QAEtC8b,EAAOA,EAAKz8H,MAAM,EAAG09H,IACZvB,IAETt4H,KAAKm3H,OAAS,GACdn3H,KAAK88G,MAAQ,CAAC,GAEZ8b,IAAM54H,KAAKo3H,SAAWwB,GACtBR,EAAgBW,IAChB/4H,KAAKk3H,WAAal3H,KAAKo3H,WACzBp3H,KAAKo3H,SAAW,KAIdp3H,KAAKo3H,UAAYp3H,KAAKm3H,OAAQ,CAC5BruG,EAAI9oB,KAAKo3H,UAAY,GAAzB,IACI1sH,EAAI1K,KAAKm3H,QAAU,GACvBn3H,KAAKgsE,KAAOljD,EAAIpe,CAClB,CAIA,OADA1K,KAAKwoG,KAAOxoG,KAAKk1E,SACVl1E,IACT,EAaA62H,EAAIzpH,UAAU8nE,OAAS,WACrB,IAAI8hD,EAAOh3H,KAAKg3H,MAAQ,GACpBA,IAEFA,GADAA,EAAOnI,mBAAmBmI,IACd9vH,QAAQ,OAAQ,KAC5B8vH,GAAQ,KAGV,IAAIF,EAAW92H,KAAK82H,UAAY,GAC5BM,EAAWp3H,KAAKo3H,UAAY,GAC5B31H,EAAOzB,KAAKyB,MAAQ,GACpB66G,GAAO,EACPQ,EAAQ,GAER98G,KAAKs8G,KACPA,EAAO0a,EAAOh3H,KAAKs8G,KACVt8G,KAAKk3H,WACd5a,EAAO0a,IAAwC,IAAhCh3H,KAAKk3H,SAASzuH,QAAQ,KACjCzI,KAAKk3H,SACL,IAAMl3H,KAAKk3H,SAAW,KACtBl3H,KAAKi3H,OACP3a,GAAQ,IAAMt8G,KAAKi3H,OAInBj3H,KAAK88G,OACL6X,EAAK6D,SAASx4H,KAAK88G,QACnBz1G,OAAOuQ,KAAK5X,KAAK88G,OAAOthH,SAC1BshH,EAAQub,EAAYzjH,UAAU5U,KAAK88G,QAGrC,IAAIqa,EAASn3H,KAAKm3H,QAAWra,GAAU,IAAMA,GAAW,GAsBxD,OApBIga,GAAoC,MAAxBA,EAASjuH,QAAQ,KAAYiuH,GAAY,KAIrD92H,KAAK+2H,WACHD,GAAYsB,EAAgBtB,MAAuB,IAATxa,GAC9CA,EAAO,MAAQA,GAAQ,IACnB8a,GAAmC,MAAvBA,EAAS/+D,OAAO,KAAY++D,EAAW,IAAMA,IACnD9a,IACVA,EAAO,IAGL76G,GAA2B,MAAnBA,EAAK42D,OAAO,KAAY52D,EAAO,IAAMA,GAC7C01H,GAA+B,MAArBA,EAAO9+D,OAAO,KAAY8+D,EAAS,IAAMA,GAOhDL,EAAWxa,GALlB8a,EAAWA,EAASlwH,QAAQ,SAAS,SAASmC,GAC5C,OAAOwlH,mBAAmBxlH,EAC5B,MACA8tH,EAASA,EAAOjwH,QAAQ,IAAK,QAEgBzF,CAC/C,EAMAo1H,EAAIzpH,UAAU1D,QAAU,SAAS4tH,GAC/B,OAAOt3H,KAAKu3H,cAAcF,EAASC,GAAU,GAAO,IAAOpiD,QAC7D,EAOA2hD,EAAIzpH,UAAUmqH,cAAgB,SAASD,GACrC,GAAI3C,EAAK6C,SAASF,GAAW,CAC3B,IAAIwC,EAAM,IAAIjD,EACdiD,EAAI/kH,MAAMuiH,GAAU,GAAO,GAC3BA,EAAWwC,CACb,CAIA,IAFA,IAAIh7H,EAAS,IAAI+3H,EACbkD,EAAQ1yH,OAAOuQ,KAAK5X,MACf6P,EAAK,EAAGA,EAAKkqH,EAAMv+H,OAAQqU,IAAM,CACxC,IAAImqH,EAAOD,EAAMlqH,GACjB/Q,EAAOk7H,GAAQh6H,KAAKg6H,EACtB,CAOA,GAHAl7H,EAAO2C,KAAO61H,EAAS71H,KAGD,KAAlB61H,EAAS9uB,KAEX,OADA1pG,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,EAIT,GAAIw4H,EAASP,UAAYO,EAASR,SAAU,CAG1C,IADA,IAAImD,EAAQ5yH,OAAOuQ,KAAK0/G,GACf4C,EAAK,EAAGA,EAAKD,EAAMz+H,OAAQ0+H,IAAM,CACxC,IAAIC,EAAOF,EAAMC,GACJ,aAATC,IACFr7H,EAAOq7H,GAAQ7C,EAAS6C,GAC5B,CASA,OANI/B,EAAgBt5H,EAAOg4H,WACvBh4H,EAAOo4H,WAAap4H,EAAOs4H,WAC7Bt4H,EAAOktE,KAAOltE,EAAOs4H,SAAW,KAGlCt4H,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,CACT,CAEA,GAAIw4H,EAASR,UAAYQ,EAASR,WAAah4H,EAAOg4H,SAAU,CAS9D,IAAKsB,EAAgBd,EAASR,UAAW,CAEvC,IADA,IAAIl/G,EAAOvQ,OAAOuQ,KAAK0/G,GACdj7H,EAAI,EAAGA,EAAIub,EAAKpc,OAAQa,IAAK,CACpC,IAAIkL,EAAIqQ,EAAKvb,GACbyC,EAAOyI,GAAK+vH,EAAS/vH,EACvB,CAEA,OADAzI,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,CACT,CAGA,GADAA,EAAOg4H,SAAWQ,EAASR,SACtBQ,EAAShb,MAAS6b,EAAiBb,EAASR,UAS/Ch4H,EAAOs4H,SAAWE,EAASF,aAT+B,CAE1D,IADA,IAAIgD,GAAW9C,EAASF,UAAY,IAAIzlG,MAAM,KACvCyoG,EAAQ5+H,UAAY87H,EAAShb,KAAO8d,EAAQrwH,WAC9CutH,EAAShb,OAAMgb,EAAShb,KAAO,IAC/Bgb,EAASJ,WAAUI,EAASJ,SAAW,IACzB,KAAfkD,EAAQ,IAAWA,EAAQl1H,QAAQ,IACnCk1H,EAAQ5+H,OAAS,GAAG4+H,EAAQl1H,QAAQ,IACxCpG,EAAOs4H,SAAWgD,EAAQnsH,KAAK,IACjC,CAUA,GAPAnP,EAAOq4H,OAASG,EAASH,OACzBr4H,EAAOg+G,MAAQwa,EAASxa,MACxBh+G,EAAOw9G,KAAOgb,EAAShb,MAAQ,GAC/Bx9G,EAAOk4H,KAAOM,EAASN,KACvBl4H,EAAOo4H,SAAWI,EAASJ,UAAYI,EAAShb,KAChDx9G,EAAOm4H,KAAOK,EAASL,KAEnBn4H,EAAOs4H,UAAYt4H,EAAOq4H,OAAQ,CACpC,IAAIruG,EAAIhqB,EAAOs4H,UAAY,GACvB1sH,EAAI5L,EAAOq4H,QAAU,GACzBr4H,EAAOktE,KAAOljD,EAAIpe,CACpB,CAGA,OAFA5L,EAAOi4H,QAAUj4H,EAAOi4H,SAAWO,EAASP,QAC5Cj4H,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,CACT,CAEA,IAAIu7H,EAAev7H,EAAOs4H,UAA0C,MAA9Bt4H,EAAOs4H,SAAS/+D,OAAO,GACzDiiE,EACIhD,EAAShb,MACTgb,EAASF,UAA4C,MAAhCE,EAASF,SAAS/+D,OAAO,GAElDkiE,EAAcD,GAAYD,GACXv7H,EAAOw9G,MAAQgb,EAASF,SACvCoD,EAAgBD,EAChBE,EAAU37H,EAAOs4H,UAAYt4H,EAAOs4H,SAASzlG,MAAM,MAAQ,GAE3D+oG,GADAN,EAAU9C,EAASF,UAAYE,EAASF,SAASzlG,MAAM,MAAQ,GACnD7yB,EAAOg4H,WAAasB,EAAgBt5H,EAAOg4H,WA2B3D,GApBI4D,IACF57H,EAAOo4H,SAAW,GAClBp4H,EAAOm4H,KAAO,KACVn4H,EAAOw9G,OACU,KAAfme,EAAQ,GAAWA,EAAQ,GAAK37H,EAAOw9G,KACtCme,EAAQv1H,QAAQpG,EAAOw9G,OAE9Bx9G,EAAOw9G,KAAO,GACVgb,EAASR,WACXQ,EAASJ,SAAW,KACpBI,EAASL,KAAO,KACZK,EAAShb,OACQ,KAAf8d,EAAQ,GAAWA,EAAQ,GAAK9C,EAAShb,KACxC8d,EAAQl1H,QAAQoyH,EAAShb,OAEhCgb,EAAShb,KAAO,MAElBie,EAAaA,IAA8B,KAAfH,EAAQ,IAA4B,KAAfK,EAAQ,KAGvDH,EAEFx7H,EAAOw9G,KAAQgb,EAAShb,MAA0B,KAAlBgb,EAAShb,KAC3Bgb,EAAShb,KAAOx9G,EAAOw9G,KACrCx9G,EAAOo4H,SAAYI,EAASJ,UAAkC,KAAtBI,EAASJ,SAC/BI,EAASJ,SAAWp4H,EAAOo4H,SAC7Cp4H,EAAOq4H,OAASG,EAASH,OACzBr4H,EAAOg+G,MAAQwa,EAASxa,MACxB2d,EAAUL,OAEL,GAAIA,EAAQ5+H,OAGZi/H,IAASA,EAAU,IACxBA,EAAQt/C,MACRs/C,EAAUA,EAAQv4H,OAAOk4H,GACzBt7H,EAAOq4H,OAASG,EAASH,OACzBr4H,EAAOg+G,MAAQwa,EAASxa,WACnB,IAAK6X,EAAKgG,kBAAkBrD,EAASH,QAAS,CAInD,GAAIuD,EACF57H,EAAOo4H,SAAWp4H,EAAOw9G,KAAOme,EAAQ1wH,SAIpC6wH,KAAa97H,EAAOw9G,MAAQx9G,EAAOw9G,KAAK7zG,QAAQ,KAAO,IAC1C3J,EAAOw9G,KAAK3qF,MAAM,QAEjC7yB,EAAOk4H,KAAO4D,EAAW7wH,QACzBjL,EAAOw9G,KAAOx9G,EAAOo4H,SAAW0D,EAAW7wH,SAW/C,OARAjL,EAAOq4H,OAASG,EAASH,OACzBr4H,EAAOg+G,MAAQwa,EAASxa,MAEnB6X,EAAKkG,OAAO/7H,EAAOs4H,WAAczC,EAAKkG,OAAO/7H,EAAOq4H,UACvDr4H,EAAOktE,MAAQltE,EAAOs4H,SAAWt4H,EAAOs4H,SAAW,KACpCt4H,EAAOq4H,OAASr4H,EAAOq4H,OAAS,KAEjDr4H,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,CACT,CAEA,IAAK27H,EAAQj/H,OAWX,OARAsD,EAAOs4H,SAAW,KAEdt4H,EAAOq4H,OACTr4H,EAAOktE,KAAO,IAAMltE,EAAOq4H,OAE3Br4H,EAAOktE,KAAO,KAEhBltE,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,EAcT,IARA,IAAIqpG,EAAOsyB,EAAQt+H,OAAO,GAAG,GACzB2+H,GACCh8H,EAAOw9G,MAAQgb,EAAShb,MAAQme,EAAQj/H,OAAS,KACxC,MAAT2sG,GAAyB,OAATA,IAA2B,KAATA,EAInC4yB,EAAK,EACAx/H,EAAIk/H,EAAQj/H,OAAQD,GAAK,EAAGA,IAEtB,OADb4sG,EAAOsyB,EAAQl/H,IAEbk/H,EAAQl1H,OAAOhK,EAAG,GACA,OAAT4sG,GACTsyB,EAAQl1H,OAAOhK,EAAG,GAClBw/H,KACSA,IACTN,EAAQl1H,OAAOhK,EAAG,GAClBw/H,KAKJ,IAAKR,IAAeC,EAClB,KAAOO,IAAMA,EACXN,EAAQv1H,QAAQ,OAIhBq1H,GAA6B,KAAfE,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGpiE,OAAO,IACpCoiE,EAAQv1H,QAAQ,IAGd41H,GAAsD,MAAjCL,EAAQxsH,KAAK,KAAKpF,QAAQ,IACjD4xH,EAAQh/H,KAAK,IAGf,IAUMm/H,EAVFI,EAA4B,KAAfP,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGpiE,OAAO,GAGjCqiE,IACF57H,EAAOo4H,SAAWp4H,EAAOw9G,KAAO0e,EAAa,GACbP,EAAQj/H,OAASi/H,EAAQ1wH,QAAU,IAI/D6wH,KAAa97H,EAAOw9G,MAAQx9G,EAAOw9G,KAAK7zG,QAAQ,KAAO,IAC1C3J,EAAOw9G,KAAK3qF,MAAM,QAEjC7yB,EAAOk4H,KAAO4D,EAAW7wH,QACzBjL,EAAOw9G,KAAOx9G,EAAOo4H,SAAW0D,EAAW7wH,UAyB/C,OArBAwwH,EAAaA,GAAez7H,EAAOw9G,MAAQme,EAAQj/H,UAEhCw/H,GACjBP,EAAQv1H,QAAQ,IAGbu1H,EAAQj/H,OAIXsD,EAAOs4H,SAAWqD,EAAQxsH,KAAK,MAH/BnP,EAAOs4H,SAAW,KAClBt4H,EAAOktE,KAAO,MAMX2oD,EAAKkG,OAAO/7H,EAAOs4H,WAAczC,EAAKkG,OAAO/7H,EAAOq4H,UACvDr4H,EAAOktE,MAAQltE,EAAOs4H,SAAWt4H,EAAOs4H,SAAW,KACpCt4H,EAAOq4H,OAASr4H,EAAOq4H,OAAS,KAEjDr4H,EAAOk4H,KAAOM,EAASN,MAAQl4H,EAAOk4H,KACtCl4H,EAAOi4H,QAAUj4H,EAAOi4H,SAAWO,EAASP,QAC5Cj4H,EAAO0pG,KAAO1pG,EAAOo2E,SACdp2E,CACT,EAEA+3H,EAAIzpH,UAAU+rH,UAAY,WACxB,IAAI7c,EAAOt8G,KAAKs8G,KACZ2a,EAAOS,EAAYniH,KAAK+mG,GACxB2a,IAEW,OADbA,EAAOA,EAAK,MAEVj3H,KAAKi3H,KAAOA,EAAKpuH,OAAO,IAE1ByzG,EAAOA,EAAKzzG,OAAO,EAAGyzG,EAAK9gH,OAASy7H,EAAKz7H,SAEvC8gH,IAAMt8G,KAAKk3H,SAAW5a,EAC5B,kCCztBA1pG,EAAOjV,QAAU,CACf65H,SAAU,SAASxqH,GACjB,MAAuB,kBAATA,CAChB,EACAwrH,SAAU,SAASxrH,GACjB,MAAuB,kBAATA,GAA6B,OAARA,CACrC,EACA6tH,OAAQ,SAAS7tH,GACf,OAAe,OAARA,CACT,EACA2tH,kBAAmB,SAAS3tH,GAC1B,OAAc,MAAPA,CACT,0BCdF,IAAIiuH,EAAmB,EAAQ,OAI/BroH,EAAOjV,QAHP,SAA4BkB,GAC1B,GAAIzD,MAAMC,QAAQwD,GAAM,OAAOo8H,EAAiBp8H,EAClD,EACqC+T,EAAOjV,QAAQymE,YAAa,EAAMxxD,EAAOjV,QAAiB,QAAIiV,EAAOjV,2BCD1GiV,EAAOjV,QAHP,SAA0BwtF,GACxB,GAAsB,qBAAX+vC,QAAmD,MAAzB/vC,EAAK+vC,OAAOC,WAA2C,MAAtBhwC,EAAK,cAAuB,OAAO/vF,MAAMuB,KAAKwuF,EACtH,EACmCv4E,EAAOjV,QAAQymE,YAAa,EAAMxxD,EAAOjV,QAAiB,QAAIiV,EAAOjV,2BCAxGiV,EAAOjV,QAHP,WACE,MAAM,IAAIY,UAAU,uIACtB,EACqCqU,EAAOjV,QAAQymE,YAAa,EAAMxxD,EAAOjV,QAAiB,QAAIiV,EAAOjV,+BCH1G,IAAI2R,EAAiB,EAAQ,OAC7B,SAAS8rH,EAAQpyD,EAAQqyD,GACvB,IAAIzjH,EAAOvQ,OAAOuQ,KAAKoxD,GACvB,GAAI3hE,OAAOi0H,sBAAuB,CAChC,IAAIl2B,EAAU/9F,OAAOi0H,sBAAsBtyD,GAC3CqyD,IAAmBj2B,EAAUA,EAAQj9C,QAAO,SAAUozE,GACpD,OAAOl0H,OAAOm0H,yBAAyBxyD,EAAQuyD,GAAK1zH,UACtD,KAAK+P,EAAKnc,KAAK09D,MAAMvhD,EAAMwtF,EAC7B,CACA,OAAOxtF,CACT,CAYAhF,EAAOjV,QAXP,SAAwBwH,GACtB,IAAK,IAAI5J,EAAI,EAAGA,EAAImkC,UAAUlkC,OAAQD,IAAK,CACzC,IAAIo9F,EAAS,MAAQj5D,UAAUnkC,GAAKmkC,UAAUnkC,GAAK,CAAC,EACpDA,EAAI,EAAI6/H,EAAQ/zH,OAAOsxF,IAAS,GAAI3hF,SAAQ,SAAU7N,GACpDmG,EAAenK,EAAQgE,EAAKwvF,EAAOxvF,GACrC,IAAK9B,OAAOo0H,0BAA4Bp0H,OAAOq0H,iBAAiBv2H,EAAQkC,OAAOo0H,0BAA0B9iC,IAAWyiC,EAAQ/zH,OAAOsxF,IAAS3hF,SAAQ,SAAU7N,GAC5J9B,OAAOiI,eAAenK,EAAQgE,EAAK9B,OAAOm0H,yBAAyB7iC,EAAQxvF,GAC7E,GACF,CACA,OAAOhE,CACT,EACiCyN,EAAOjV,QAAQymE,YAAa,EAAMxxD,EAAOjV,QAAiB,QAAIiV,EAAOjV,6BCtBtG,IAAIg+H,EAAoB,EAAQ,OAC5BC,EAAkB,EAAQ,OAC1BC,EAA6B,EAAQ,OACrCC,EAAoB,EAAQ,OAIhClpH,EAAOjV,QAHP,SAA4BkB,GAC1B,OAAO88H,EAAkB98H,IAAQ+8H,EAAgB/8H,IAAQg9H,EAA2Bh9H,IAAQi9H,GAC9F,EACqClpH,EAAOjV,QAAQymE,YAAa,EAAMxxD,EAAOjV,QAAiB,QAAIiV,EAAOjV,iyGCsC1G,SAASw7D,EAAM30D,GAAa,2BAANL,EAAI,iCAAJA,EAAI,kBACtB,OAAO,sCAAI43H,EAAQ,yBAARA,EAAQ,uBAAKv3H,EAAE,aAAIL,EAAI,OAAI43H,GAAS,CACnD,CAEA,SAASC,EAAex3H,GACpB,OAAO,WAAiC,2BAApBL,EAAI,yBAAJA,EAAI,gBACpB,IAAIC,EAAWD,EAAKg3E,MACpB,OAAO32E,EAAGI,KAAK5E,KAAMmE,EAAMC,EAC/B,CACJ,CAIA,IAAI63H,EAA8C,oBAAnBC,gBAAiCA,eAC5DC,EAA0C,oBAAjBhI,cAA+BA,aACxDiI,EAAiC,kBAAZ//D,GAAoD,oBAArBA,EAAQ4G,SAEhE,SAASo5D,EAAS73H,GACd0sF,WAAW1sF,EAAI,EACnB,CAEA,SAAS80E,EAAKgjD,GACV,OAAO,SAAC93H,GAAE,2BAAKL,EAAI,iCAAJA,EAAI,yBAAKm4H,GAAM,kBAAM93H,EAAE,aAAIL,EAAK,GAAC,CACpD,CAcA,IAAIo4H,EAAiBjjD,EAVjB2iD,EACSC,eACFC,EACEhI,aACFiI,EACE//D,EAAQ4G,SAERo5D,GA6Db,SAASG,EAASxqD,GACd,OAAIyqD,EAAQzqD,GACD,WAAiC,2BAApB7tE,EAAI,yBAAJA,EAAI,gBACpB,IAAMC,EAAWD,EAAKg3E,MAChB8vB,EAAUj5B,EAAK7Y,MAAMn5D,KAAMmE,GACjC,OAAOu4H,EAAczxB,EAAS7mG,EAClC,EAGG43H,GAAc,SAAU73H,EAAMC,GACjC,IAAItF,EACJ,IACIA,EAASkzE,EAAK7Y,MAAMn5D,KAAMmE,EAG9B,CAFE,MAAOlD,GACL,OAAOmD,EAASnD,EACpB,CAEA,GAAInC,GAAiC,oBAAhBA,EAAOqsE,KACxB,OAAOuxD,EAAc59H,EAAQsF,GAE7BA,EAAS,KAAMtF,EAEvB,GACJ,CAEA,SAAS49H,EAAczxB,EAAS7mG,GAC5B,OAAO6mG,EAAQ9/B,MAAK,SAAA1jE,GAChBk1H,EAAev4H,EAAU,KAAMqD,EACnC,IAAG,SAAA9C,GACCg4H,EAAev4H,EAAUO,GAAOA,EAAIyG,QAAUzG,EAAM,IAAIzI,MAAMyI,GAClE,GACJ,CAEA,SAASg4H,EAAev4H,EAAU0V,EAAOrS,GACrC,IACIrD,EAAS0V,EAAOrS,EAGpB,CAFE,MAAO9C,GACL43H,GAAe,SAAAt7H,GAAO,MAAMA,CAAE,GAAG0D,EACrC,CACJ,CAEA,SAAS83H,EAAQj4H,GACb,MAAkC,kBAA3BA,EAAG02H,OAAO0B,YACrB,CAUA,SAASC,EAAUC,GACf,GAAuB,oBAAZA,EAAwB,MAAM,IAAI5gI,MAAM,uBACnD,OAAOugI,EAAQK,GAAWN,EAASM,GAAWA,CAClD,CAIA,SAASC,EAAUD,GAAiC,IAAxBE,EAAQ,UAAH,6CAAGF,EAAQthI,OACxC,IAAKwhI,EAAO,MAAM,IAAI9gI,MAAM,sBAC5B,SAAS+gI,IAAoB,kCAAN94H,EAAI,yBAAJA,EAAI,gBACvB,MAA+B,oBAApBA,EAAK64H,EAAQ,GACbF,EAAQ3jE,MAAMn5D,KAAMmE,GAGxB,IAAIsF,SAAQ,SAACC,EAASglF,GACzBvqF,EAAK64H,EAAQ,GAAK,SAACr4H,GACf,GAAIA,EAAK,OAAO+pF,EAAO/pF,GAAI,2BADJu4H,EAAM,iCAANA,EAAM,kBAE7BxzH,EAAQwzH,EAAO1hI,OAAS,EAAI0hI,EAASA,EAAO,GAChD,EACAJ,EAAQ3jE,MAAM,EAAMh1D,EACxB,GACJ,CAEA,OAAO84H,CACX,CAEA,SAASE,EAAWC,GAChB,OAAO,SAAmBC,GAAkB,2BAAVtB,EAAQ,iCAARA,EAAQ,kBACtC,IAAMuB,EAAKP,GAAS,SAAU34H,GAC1B,IAAIm5H,EAAOv9H,KACX,OAAOo9H,EAAOC,GAAK,SAAC74H,EAAI++D,GACpBs5D,EAAUr4H,GAAI20D,MAAMokE,EAAMxB,EAAS75H,OAAOqhE,GAC9C,GAAGn/D,EACP,IACA,OAAOk5H,CACX,CACJ,CAEA,SAASE,EAAUJ,EAAQv+H,EAAK4+H,EAAUr5H,GACtCvF,EAAMA,GAAO,GACb,IAAIsa,EAAU,GACVxH,EAAU,EACV+rH,EAAYb,EAAUY,GAE1B,OAAOL,EAAOv+H,GAAK,SAAC4I,EAAOuiB,EAAG2zG,GAC1B,IAAIt4H,EAAQsM,IACZ+rH,EAAUj2H,GAAO,SAAC9C,EAAKtI,GACnB8c,EAAQ9T,GAAShJ,EACjBshI,EAAOh5H,EACX,GACJ,IAAG,SAAAA,GACCP,EAASO,EAAKwU,EAClB,GACJ,CAEA,SAASykH,EAAYn2H,GACjB,OAAOA,GACqB,kBAAjBA,EAAMjM,QACbiM,EAAMjM,QAAU,GAChBiM,EAAMjM,OAAS,IAAM,CAC7B,CAIA,IAAMqiI,EAAY,CAAC,EAEnB,SAAS9sC,EAAKvsF,GACV,SAASs5H,IACL,GAAW,OAAPt5H,EAAJ,CACA,IAAIu5H,EAASv5H,EACbA,EAAK,KAAK,2BAHOL,EAAI,yBAAJA,EAAI,gBAIrB45H,EAAO5kE,MAAMn5D,KAAMmE,EAHI,CAI3B,CAEA,OADAkD,OAAOkmC,OAAOuwF,EAASt5H,GAChBs5H,CACX,CAsCA,SAASE,EAAeC,GACpB,GAAIL,EAAYK,GACZ,OAlCR,SAA6BA,GACzB,IAAI1iI,GAAK,EACLiB,EAAMyhI,EAAKziI,OACf,OAAO,WACH,QAASD,EAAIiB,EAAM,CAACiL,MAAOw2H,EAAK1iI,GAAI4N,IAAK5N,GAAK,IAClD,CACJ,CA4Be2iI,CAAoBD,GAG/B,IAAI9C,EAzCR,SAAsB8C,GAClB,OAAOA,EAAK/C,OAAOC,WAAa8C,EAAK/C,OAAOC,WAChD,CAuCmBgD,CAAYF,GAC3B,OAAO9C,EA9BX,SAA8BA,GAC1B,IAAI5/H,GAAK,EACT,OAAO,WACH,IAAI+c,EAAO6iH,EAASz2H,OACpB,OAAI4T,EAAK04E,KACE,MACXz1F,IACO,CAACkM,MAAO6Q,EAAK7Q,MAAO0B,IAAK5N,GACpC,CACJ,CAqBsB6iI,CAAqBjD,GAnB3C,SAA8Bv3D,GAC1B,IAAIy6D,EAAQz6D,EAAMv8D,OAAOuQ,KAAKgsD,GAAO,GACjCroE,GAAK,EACLiB,EAAM6hI,EAAM7iI,OAChB,OAAO,SAASkJ,IACZ,IAAIyE,EAAMk1H,IAAQ9iI,GAClB,MAAY,cAAR4N,EACOzE,IAEJnJ,EAAIiB,EAAM,CAACiL,MAAOm8D,EAAIz6D,GAAMA,IAAAA,GAAO,IAC9C,CACJ,CAQuDm1H,CAAqBL,EAC5E,CAEA,SAASM,EAAS/5H,GACd,OAAO,WACH,GAAW,OAAPA,EAAa,MAAM,IAAItI,MAAM,gCACjC,IAAI6hI,EAASv5H,EACbA,EAAK,KAAK,2BAHML,EAAI,yBAAJA,EAAI,gBAIpB45H,EAAO5kE,MAAMn5D,KAAMmE,EACvB,CACJ,CAGA,SAASq6H,EAAiBC,EAAWvK,EAAOuJ,EAAUr5H,GAClD,IAAI4sF,GAAO,EACP0tC,GAAW,EACXC,GAAW,EACXC,EAAU,EACV1M,EAAM,EAEV,SAAS2M,IAEDD,GAAW1K,GAASyK,GAAY3tC,IAEpC2tC,GAAW,EACXF,EAAU/5H,OAAOymE,MAAK,YAA6B,IAA3B1jE,EAAK,EAALA,MAAaq3H,EAAQ,EAAd9tC,KAE3B,IAAI0tC,IAAY1tC,EAAhB,CAEA,GADA2tC,GAAW,EACPG,EAMA,OALA9tC,GAAO,OACH4tC,GAAW,GAEXx6H,EAAS,OAIjBw6H,IACAnB,EAASh2H,EAAOyqH,EAAK6M,GACrB7M,IACA2M,GAb4B,CAchC,IAAGtiD,MAAMyiD,GACb,CAEA,SAASD,EAAiBp6H,EAAK7F,GAG3B,GADA8/H,GAAW,GACPF,EACJ,OAAI/5H,EAAYq6H,EAAYr6H,IAEhB,IAARA,GACAqsF,GAAO,OACP0tC,GAAW,IAIX5/H,IAAW++H,GAAc7sC,GAAQ4tC,GAAW,GAC5C5tC,GAAO,EAEA5sF,EAAS,YAEpBy6H,GACJ,CAEA,SAASG,EAAYr6H,GACb+5H,IACJC,GAAW,EACX3tC,GAAO,EACP5sF,EAASO,GACb,CAEAk6H,GACJ,CAEA,IAAII,EAAc,SAAC/K,GACf,OAAO,SAACtwD,EAAK65D,EAAUr5H,GAEnB,GADAA,EAAW2sF,EAAK3sF,GACZ8vH,GAAS,EACT,MAAM,IAAIqB,WAAW,2CAEzB,IAAK3xD,EACD,OAAOx/D,EAAS,MAEpB,GAjN8B,mBAiNTw/D,EAjNfs3D,OAAO0B,aAkNT,OAAO4B,EAAiB56D,EAAKswD,EAAOuJ,EAAUr5H,GAElD,GAjNR,SAAyBw/D,GACrB,MAA4C,oBAA9BA,EAAIs3D,OAAOgE,cAC7B,CA+MYC,CAAgBv7D,GAChB,OAAO46D,EAAiB56D,EAAIs3D,OAAOgE,iBAAkBhL,EAAOuJ,EAAUr5H,GAE1E,IAAIg7H,EAAWpB,EAAep6D,GAC1BotB,GAAO,EACP0tC,GAAW,EACXE,EAAU,EACVS,GAAU,EAEd,SAASN,EAAiBp6H,EAAK8C,GAC3B,IAAIi3H,EAEJ,GADAE,GAAW,EACPj6H,EACAqsF,GAAO,EACP5sF,EAASO,QAER,IAAY,IAARA,EACLqsF,GAAO,EACP0tC,GAAW,MAEV,IAAIj3H,IAAUo2H,GAAc7sC,GAAQ4tC,GAAW,EAEhD,OADA5tC,GAAO,EACA5sF,EAAS,MAEVi7H,GACNR,GACJ,CACJ,CAEA,SAASA,IAEL,IADAQ,GAAU,EACHT,EAAU1K,IAAUljC,GAAM,CAC7B,IAAIhoC,EAAOo2E,IACX,GAAa,OAATp2E,EAKA,OAJAgoC,GAAO,OACH4tC,GAAW,GACXx6H,EAAS,OAIjBw6H,GAAW,EACXnB,EAASz0E,EAAKvhD,MAAOuhD,EAAK7/C,IAAKo1H,EAASQ,GAC5C,CACAM,GAAU,CACd,CAEAR,GACJ,CACJ,EA2BA,IAAIS,EAAgBvC,GAJpB,SAAuBkB,EAAM/J,EAAOuJ,EAAUr5H,GAC1C,OAAO66H,EAAY/K,EAAZ+K,CAAmBhB,EAAMpB,EAAUY,GAAWr5H,EACzD,GAE4C,GAG5C,SAASm7H,EAAgBtB,EAAMR,EAAUr5H,GACrCA,EAAW2sF,EAAK3sF,GACZ,IAAAiB,EAAQ,EACRm6H,EAAY,EACXhkI,EAAUyiI,EAAVziI,OACDkjI,GAAW,EAKf,SAASe,EAAiB96H,EAAK8C,IACf,IAAR9C,IACA+5H,GAAW,IAEE,IAAbA,IACA/5H,EACAP,EAASO,KACC66H,IAAchkI,GAAWiM,IAAUo2H,GAC7Cz5H,EAAS,MAEjB,CAEA,IAhBe,IAAX5I,GACA4I,EAAS,MAeNiB,EAAQ7J,EAAQ6J,IACnBo4H,EAASQ,EAAK54H,GAAQA,EAAOk5H,EAASkB,GAE9C,CAGA,SAASC,EAAezB,EAAMR,EAAUr5H,GACpC,OAAOk7H,EAAcrB,EAAMttE,IAAU8sE,EAAUr5H,EACnD,CAoHA,IAAIu7H,EAAW5C,GALf,SAAgBkB,EAAMR,EAAUr5H,GAE5B,OAD2Bw5H,EAAYK,GAAQsB,EAAkBG,GACrCzB,EAAMpB,EAAUY,GAAWr5H,EAC3D,GAEgC,GA0HhC,IAAIw7H,EAAQ7C,GAHZ,SAAckB,EAAMR,EAAUr5H,GAC1B,OAAOo5H,EAAUmC,EAAU1B,EAAMR,EAAUr5H,EAC/C,GAC0B,GAyCtBy7H,EAAc1C,EAAUyC,GAuB5B,IAAIE,EAAiB/C,GAHrB,SAAsBkB,EAAMR,EAAUr5H,GAClC,OAAOk7H,EAAcrB,EAAM,EAAGR,EAAUr5H,EAC5C,GAC4C,GAwB5C,IAAI27H,EAAchD,GAHlB,SAAoBkB,EAAMR,EAAUr5H,GAChC,OAAOo5H,EAAUsC,EAAgB7B,EAAMR,EAAUr5H,EACrD,GACsC,GAqBlC47H,EAAkB7C,EAAU4C,GAE1BE,EAAiB/E,OAAO,mBAE9B,SAASgF,IACL,IAAIx2H,EAASglF,EACb,SAAStqF,EAAUO,GACf,GAAIA,EAAK,OAAO+pF,EAAO/pF,GAAI,2BADJR,EAAI,iCAAJA,EAAI,kBAE3BuF,EAAQvF,EAAK3I,OAAS,EAAI2I,EAAOA,EAAK,GAC1C,CAOA,OALAC,EAAS67H,GAAkB,IAAIx2H,SAAQ,SAAC7C,EAAKu5H,GACzCz2H,EAAU9C,EACV8nF,EAASyxC,CACb,IAEO/7H,CACX,CAmJA,SAASg8H,EAAKC,EAAOC,EAAal8H,GACH,kBAAhBk8H,IAEPl8H,EAAWk8H,EACXA,EAAc,MAElBl8H,EAAW2sF,EAAK3sF,GAAY87H,KAC5B,IAAIK,EAAWl5H,OAAOuQ,KAAKyoH,GAAO7kI,OAClC,IAAK+kI,EACD,OAAOn8H,EAAS,MAEfk8H,IACDA,EAAcC,GAGlB,IAAIpnH,EAAU,CAAC,EACXqnH,EAAe,EACf9B,GAAW,EACX+B,GAAW,EAEXn8H,EAAY+C,OAAO+jD,OAAO,MAE1Bs1E,EAAa,GAGbC,EAAe,GAEfC,EAAwB,CAAC,EAuC7B,SAASC,EAAY13H,EAAK23H,GACtBJ,EAAWjlI,MAAK,kBA+BpB,SAAiB0N,EAAK23H,GAClB,GAAIL,EAAU,OAEd,IAAIM,EAAexC,GAAS,SAAC55H,GAAmB,2BAAX7F,EAAM,iCAANA,EAAM,kBAEvC,GADA0hI,KACY,IAAR77H,EAAJ,CAIA,GAAI7F,EAAOtD,OAAS,EAAG,OACRsD,EAAVA,GAAgB,YAAV,EACX,CACA,GAAI6F,EAAK,CACL,IAAIq8H,EAAc,CAAC,EAOnB,GANA35H,OAAOuQ,KAAKuB,GAASnC,SAAQ,SAAAmjH,GACzB6G,EAAY7G,GAAQhhH,EAAQghH,EAChC,IACA6G,EAAY73H,GAAOrK,EACnB2hI,GAAW,EACXn8H,EAAY+C,OAAO+jD,OAAO,MACtBszE,EAAU,OACdt6H,EAASO,EAAKq8H,EAClB,MACI7nH,EAAQhQ,GAAOrK,EACfmiI,EAAa93H,EAhBjB,MAFIu1H,GAAW,CAoBnB,IAEA8B,IACA,IAAIU,EAASrE,EAAUiE,EAAKA,EAAKtlI,OAAS,IACtCslI,EAAKtlI,OAAS,EACd0lI,EAAO/nH,EAAS4nH,GAEhBG,EAAOH,EAEf,CAlE0BI,CAAQh4H,EAAK23H,EAAK,GAC5C,CAEA,SAASM,IACL,IAAI1C,EAAJ,CACA,GAA0B,IAAtBgC,EAAWllI,QAAiC,IAAjBglI,EAC3B,OAAOp8H,EAAS,KAAM+U,GAE1B,KAAMunH,EAAWllI,QAAUglI,EAAeF,GAAa,CACzCI,EAAW32H,OACrBypF,EACJ,CAPoB,CASxB,CAWA,SAASytC,EAAaI,IACE/8H,EAAU+8H,IAAa,IAC7BrqH,SAAQ,SAAAxS,GAAE,OAAIA,GAAI,IAChC48H,GACJ,CA+DA,SAASE,EAAcD,GACnB,IAAIviI,EAAS,GAOb,OANAuI,OAAOuQ,KAAKyoH,GAAOrpH,SAAQ,SAAA7N,GACvB,IAAM23H,EAAOT,EAAMl3H,GACf/N,MAAMC,QAAQylI,IAASA,EAAKr4H,QAAQ44H,IAAa,GACjDviI,EAAOrD,KAAK0N,EAEpB,IACOrK,CACX,CAEA,OA5IAuI,OAAOuQ,KAAKyoH,GAAOrpH,SAAQ,SAAA7N,GACvB,IAAI23H,EAAOT,EAAMl3H,GACjB,IAAK/N,MAAMC,QAAQylI,GAIf,OAFAD,EAAY13H,EAAK,CAAC23H,SAClBH,EAAallI,KAAK0N,GAItB,IAAI0jH,EAAeiU,EAAK3kI,MAAM,EAAG2kI,EAAKtlI,OAAS,GAC3C+lI,EAAwB1U,EAAarxH,OACzC,GAA8B,IAA1B+lI,EAGA,OAFAV,EAAY13H,EAAK23H,QACjBH,EAAallI,KAAK0N,GAGtBy3H,EAAsBz3H,GAAOo4H,EAE7B1U,EAAa71G,SAAQ,SAAAwqH,GACjB,IAAKnB,EAAMmB,GACP,MAAM,IAAItlI,MAAM,oBAAsBiN,EAClC,oCACAq4H,EAAiB,QACjB3U,EAAa5+G,KAAK,QA8BlC,SAAqBozH,EAAU78H,GAC3B,IAAIi9H,EAAgBn9H,EAAU+8H,GACzBI,IACDA,EAAgBn9H,EAAU+8H,GAAY,IAG1CI,EAAchmI,KAAK+I,EACvB,CAnCQsuF,CAAY0uC,GAAgB,WAEM,MAD9BD,GAEIV,EAAY13H,EAAK23H,EAEzB,GACJ,GACJ,IA0EA,WAII,IACInvH,EAAU,EACd,KAAOgvH,EAAanlI,QAEhBmW,IACA2vH,EAFcX,EAAaxlD,OAEAnkE,SAAQ,SAAA0qH,GACY,MAArCd,EAAsBc,IACxBf,EAAallI,KAAKimI,EAE1B,IAGJ,GAAI/vH,IAAY4uH,EACZ,MAAM,IAAIrkI,MACN,gEAGZ,CA7FAylI,GACAP,IAyGOh9H,EAAS67H,EACpB,CAEA,IAAI2B,EAAU,gEACVC,EAAgB,8CAChBC,EAAe,IACfC,EAAS,eA8Hb,SAASC,EAAW3B,EAAOj8H,GACvB,IAAI69H,EAAW,CAAC,EAqChB,OAnCA56H,OAAOuQ,KAAKyoH,GAAOrpH,SAAQ,SAAA7N,GACvB,IACID,EADAg4H,EAASb,EAAMl3H,GAEf+4H,EAAYzF,EAAQyE,GACpBiB,GACED,GAA+B,IAAlBhB,EAAO1lI,QACrB0mI,GAA+B,IAAlBhB,EAAO1lI,OAEzB,GAAIJ,MAAMC,QAAQ6lI,GACdh4H,GAAS,OAAIg4H,GACbA,EAASh4H,EAAOiyE,MAEhB8mD,EAAS94H,GAAOD,EAAOhH,OAAOgH,EAAO1N,OAAS,EAAI4mI,EAAUlB,QACzD,GAAIiB,EAEPF,EAAS94H,GAAO+3H,MACb,CAEH,GADAh4H,EArHZ,SAAqB8oE,GACjB,IAAM08C,EA5BV,SAAuB5xG,GAInB,IAHA,IAAIojC,EAAW,GACX76C,EAAQ,EACRg9H,EAAkBvlH,EAAOrU,QAAQ,MAC9BpD,EAAQyX,EAAOthB,QAClB,GAAsB,MAAlBshB,EAAOzX,IAAsC,MAApByX,EAAOzX,EAAM,GAAY,CAElD,IAAIi9H,EAAWxlH,EAAOrU,QAAQ,KAAMpD,GACpCA,GAAuB,IAAdi9H,EAAmBxlH,EAAOthB,OAAS8mI,CAChD,MAAO,IAA0B,IAArBD,GAA8C,MAAlBvlH,EAAOzX,IAAwC,MAApByX,EAAOzX,EAAM,GAAa,CAEzF,IAAIi9H,EAAWxlH,EAAOrU,QAAQ,KAAMpD,IAClB,IAAdi9H,GACAj9H,EAAQi9H,EAAW,EACnBD,EAAkBvlH,EAAOrU,QAAQ,KAAMpD,KAEvC66C,GAAYpjC,EAAOzX,GACnBA,IAER,MACI66C,GAAYpjC,EAAOzX,GACnBA,IAGR,OAAO66C,CACX,CAGgBqiF,CAAcvwD,EAAKl0E,YAC3BuL,EAAQqlH,EAAIrlH,MAAMu4H,GAItB,GAHKv4H,IACDA,EAAQqlH,EAAIrlH,MAAMw4H,KAEjBx4H,EAAO,MAAM,IAAInN,MAAM,gDAAkDwyH,GAC9E,MAAerlH,EACf,OADoB,YAAT,GAENnC,QAAQ,MAAO,IACfyqB,MAAMmwG,GACNt6H,KAAI,SAACwF,GAAG,OAAKA,EAAI9F,QAAQ66H,EAAQ,IAAI1rD,MAAM,GACpD,CAyGqBF,CAAY+qD,GACE,IAAlBA,EAAO1lI,SAAiB0mI,GAAgC,IAAlBh5H,EAAO1N,OAC9C,MAAM,IAAIU,MAAM,0DAIfgmI,GAAWh5H,EAAOiyE,MAEvB8mD,EAAS94H,GAAOD,EAAOhH,OAAOkgI,EAClC,CAEA,SAASA,EAAQjpH,EAASqpH,GACtB,IAAIC,EAAUv5H,EAAO1B,KAAI,SAAA2F,GAAI,OAAIgM,EAAQhM,EAAK,IAC9Cs1H,EAAQhnI,KAAK+mI,GACb3F,EAAUqE,GAAO,qBAAIuB,GACzB,CACJ,IAEOrC,EAAK6B,EAAU79H,EAC1B,CAKA,IACMs+H,EAAG,YACL,cAAc,eACV1iI,KAAK2iI,KAAO3iI,KAAK4iI,KAAO,KACxB5iI,KAAKxE,OAAS,CAClB,CA4EC,OA5EA,kCAED,SAAW20C,GAQP,OAPIA,EAAKpe,KAAMoe,EAAKpe,KAAKrtB,KAAOyrC,EAAKzrC,KAChC1E,KAAK2iI,KAAOxyF,EAAKzrC,KAClByrC,EAAKzrC,KAAMyrC,EAAKzrC,KAAKqtB,KAAOoe,EAAKpe,KAChC/xB,KAAK4iI,KAAOzyF,EAAKpe,KAEtBoe,EAAKpe,KAAOoe,EAAKzrC,KAAO,KACxB1E,KAAKxE,QAAU,EACR20C,CACX,GAAC,mBAED,WACI,KAAMnwC,KAAK2iI,MAAM3iI,KAAK+J,QACtB,OAAO/J,IACX,GAAC,yBAED,SAAYmwC,EAAMulC,GACdA,EAAQ3jD,KAAOoe,EACfulC,EAAQhxE,KAAOyrC,EAAKzrC,KAChByrC,EAAKzrC,KAAMyrC,EAAKzrC,KAAKqtB,KAAO2jD,EAC3B11E,KAAK4iI,KAAOltD,EACjBvlC,EAAKzrC,KAAOgxE,EACZ11E,KAAKxE,QAAU,CACnB,GAAC,0BAED,SAAa20C,EAAMulC,GACfA,EAAQ3jD,KAAOoe,EAAKpe,KACpB2jD,EAAQhxE,KAAOyrC,EACXA,EAAKpe,KAAMoe,EAAKpe,KAAKrtB,KAAOgxE,EAC3B11E,KAAK2iI,KAAOjtD,EACjBvlC,EAAKpe,KAAO2jD,EACZ11E,KAAKxE,QAAU,CACnB,GAAC,qBAED,SAAQ20C,GACAnwC,KAAK2iI,KAAM3iI,KAAK6iI,aAAa7iI,KAAK2iI,KAAMxyF,GACvC2yF,EAAW9iI,KAAMmwC,EAC1B,GAAC,kBAED,SAAKA,GACGnwC,KAAK4iI,KAAM5iI,KAAK+iI,YAAY/iI,KAAK4iI,KAAMzyF,GACtC2yF,EAAW9iI,KAAMmwC,EAC1B,GAAC,mBAED,WACI,OAAOnwC,KAAK2iI,MAAQ3iI,KAAKgjI,WAAWhjI,KAAK2iI,KAC7C,GAAC,iBAED,WACI,OAAO3iI,KAAK4iI,MAAQ5iI,KAAKgjI,WAAWhjI,KAAK4iI,KAC7C,GAAC,qBAED,WACI,OAAO,OAAI5iI,KACf,GAAC,6BAED,yFACQiX,EAAMjX,KAAK2iI,KAAI,WACZ1rH,EAAK,CAAF,eACN,OADM,SACAA,EAAI3Z,KAAI,OACd2Z,EAAMA,EAAIvS,KAAK,+DAEtB,oBAED,SAAQu+H,GAEJ,IADA,IAAIC,EAAOljI,KAAK2iI,KACVO,GAAM,CACR,IAAKx+H,EAAQw+H,EAARx+H,KACDu+H,EAAOC,IACPljI,KAAKgjI,WAAWE,GAEpBA,EAAOx+H,CACX,CACA,OAAO1E,IACX,KAAC,EAhFI,CA8DHk7H,OAAOC,UAqBb,SAAS2H,EAAWK,EAAKhzF,GACrBgzF,EAAI3nI,OAAS,EACb2nI,EAAIR,KAAOQ,EAAIP,KAAOzyF,CAC1B,CAEA,SAASizF,EAAMC,EAAQ/C,EAAazlF,GAAS,MACzC,GAAmB,MAAfylF,EACAA,EAAc,OAEb,GAAmB,IAAhBA,EACJ,MAAM,IAAI/K,WAAW,gCAGzB,IAAI+N,EAAUzG,EAAUwG,GACpBE,EAAa,EACbC,EAAc,GACZ5pD,EAAS,CACX9/D,MAAO,GACP2pH,MAAO,GACPC,UAAW,GACXC,YAAa,GACbC,MAAO,IAeX,SAAShmH,EAAK1Z,EAAO2/H,GACjB,OAAK3/H,EACA2/H,OACLjqD,EAAO11E,GAAS01E,EAAO11E,GAAOikD,QAAO,SAAA27E,GAAE,OAAIA,IAAOD,CAAO,KADpCjqD,EAAO11E,GAAS,GADlBmD,OAAOuQ,KAAKgiE,GAAQ5iE,SAAQ,SAAA8sH,GAAE,OAAIlqD,EAAOkqD,GAAM,EAAE,GAGxE,CAEA,SAASC,EAAS7/H,GAAgB,2BAANC,EAAI,iCAAJA,EAAI,kBAC5By1E,EAAO11E,GAAO8S,SAAQ,SAAA6sH,GAAO,OAAIA,EAAO,aAAI1/H,EAAK,GACrD,CAEA,IAAI6/H,GAAsB,EAC1B,SAASC,EAAQ3mI,EAAM4mI,EAAeC,EAAe//H,GACjD,GAAgB,MAAZA,GAAwC,oBAAbA,EAC3B,MAAM,IAAIlI,MAAM,oCAIpB,IAAI0K,EAAKu5H,EACT,SAASD,EAAiBv7H,GAGtB,GAAIA,EAAK,OAAOw/H,EAAgBhE,EAAIx7H,GAAOiC,IAAK,2BAHlBzC,EAAI,iCAAJA,EAAI,kBAIlC,GAAIA,EAAK3I,QAAU,EAAG,OAAOoL,EAAIzC,EAAK,IACtCyC,EAAIzC,EACR,CATA0b,EAAEukH,SAAU,EAWZ,IAAI9rH,EAAOuH,EAAEwkH,gBACT/mI,EACA6mI,EAAgBjE,EACX97H,GAAY87H,GAiBrB,GAdIgE,EACArkH,EAAEykH,OAAOp/H,QAAQoT,GAEjBuH,EAAEykH,OAAO7oI,KAAK6c,GAGb0rH,IACDA,GAAsB,EACtBzH,GAAe,WACXyH,GAAsB,EACtBnkH,EAAEw8C,SACN,KAGA8nE,IAAkB//H,EAClB,OAAO,IAAIqF,SAAQ,SAACC,EAASglF,GACzB9nF,EAAM8C,EACNy2H,EAAMzxC,CACV,GAER,CAEA,SAAS61C,EAAUlE,GACf,OAAO,SAAU17H,GACb4+H,GAAc,EAAE,2BADKp/H,EAAI,iCAAJA,EAAI,kBAGzB,IAAK,IAAI5I,EAAI,EAAGmN,EAAI23H,EAAM7kI,OAAQD,EAAImN,EAAGnN,IAAK,OACtCulI,EAAOT,EAAM9kI,GAEb8J,EAAQm+H,EAAY/6H,QAAQq4H,GAClB,IAAVz7H,EACAm+H,EAAYz5H,QACL1E,EAAQ,GACfm+H,EAAYj+H,OAAOF,EAAO,IAG9B,EAAAy7H,GAAK18H,SAAQ,SAACO,GAAG,OAAKR,IAEX,MAAPQ,GACAo/H,EAAQ,QAASp/H,EAAKm8H,EAAKxjI,KAEnC,CAEIimI,GAAe1jH,EAAEygH,YAAczgH,EAAE9Y,QACjCg9H,EAAQ,eAGRlkH,EAAE2kH,QACFT,EAAQ,SAEZlkH,EAAEw8C,SACN,CACJ,CAEA,SAASooE,EAAYnnI,GACjB,QAAoB,IAAhBA,EAAK9B,SAAgBqkB,EAAE2kH,UAEvBjI,GAAe,kBAAMwH,EAAQ,QAAQ,KAC9B,EAGf,CAEA,IAAMW,EAAc,SAACv3H,GAAI,OAAK,SAAC02H,GAC3B,IAAKA,EACD,OAAO,IAAIp6H,SAAQ,SAACC,EAASglF,IAzGrC,SAAexqF,EAAO2/H,GAKlBjqD,EAAO11E,GAAOzI,MAJU,SAAlBkpI,IACF/mH,EAAI1Z,EAAOygI,GACXd,EAAO,uBACX,GAEJ,CAoGY9yC,CAAK5jF,GAAM,SAACxI,EAAKrH,GACb,GAAIqH,EAAK,OAAO+pF,EAAO/pF,GACvB+E,EAAQpM,EACZ,GACJ,IAEJsgB,EAAIzQ,GApHR,SAAajJ,EAAO2/H,GAChBjqD,EAAO11E,GAAOzI,KAAKooI,EACvB,CAmHI5+H,CAAGkI,EAAM02H,EAEb,CAAC,EAEGe,GAAe,EACf/kH,GAAC,GACDykH,OAAQ,IAAI5B,EACZ2B,gBAAe,SAAE/mI,EAAM8G,GACnB,MAAO,CACH9G,KAAAA,EACA8G,SAAAA,EAER,IAAC,SACC82H,OAAOC,UAAQ,kGACb,uBAAOt7G,EAAEykH,OAAOpJ,OAAOC,YAAW,2EAEtCmF,IAAW,mBACXzlF,IAAO,kBACCylF,EAAc,IAAC,oBACd,IAAK,mBACN,IAAK,0BACPhjI,EAAM8G,GACR,GAAIhJ,MAAMC,QAAQiC,GAAO,CACrB,GAAImnI,EAAYnnI,GAAO,OACvB,OAAOA,EAAKkK,KAAI,SAAAq9H,GAAK,OAAIZ,EAAQY,GAAO,GAAO,EAAOzgI,EAAS,GACnE,CACA,OAAO6/H,EAAQ3mI,GAAM,GAAO,EAAO8G,EACvC,KAAC,+BACU9G,EAAM8G,GACb,GAAIhJ,MAAMC,QAAQiC,GAAO,CACrB,GAAImnI,EAAYnnI,GAAO,OACvB,OAAOA,EAAKkK,KAAI,SAAAq9H,GAAK,OAAIZ,EAAQY,GAAO,GAAO,EAAMzgI,EAAS,GAClE,CACA,OAAO6/H,EAAQ3mI,GAAM,GAAO,EAAM8G,EACtC,KAAC,4BAEGwZ,IACAiC,EAAEykH,OAAOV,OACb,KAAC,6BACQtmI,EAAM8G,GACX,GAAIhJ,MAAMC,QAAQiC,GAAO,CACrB,GAAImnI,EAAYnnI,GAAO,OACvB,OAAOA,EAAKkK,KAAI,SAAAq9H,GAAK,OAAIZ,EAAQY,GAAO,GAAM,EAAOzgI,EAAS,GAClE,CACA,OAAO6/H,EAAQ3mI,GAAM,GAAM,EAAO8G,EACtC,KAAC,kCACa9G,EAAM8G,GAChB,GAAIhJ,MAAMC,QAAQiC,GAAO,CACrB,GAAImnI,EAAYnnI,GAAO,OACvB,OAAOA,EAAKkK,KAAI,SAAAq9H,GAAK,OAAIZ,EAAQY,GAAO,GAAM,EAAMzgI,EAAS,GACjE,CACA,OAAO6/H,EAAQ3mI,GAAM,GAAM,EAAM8G,EACrC,KAAC,4BACO6+H,GACJpjH,EAAEykH,OAAOQ,OAAO7B,EACpB,KAAC,+BAIG,IAAI2B,EAAJ,CAIA,IADAA,GAAe,GACR/kH,EAAEklH,QAAUxB,EAAa1jH,EAAEygH,aAAezgH,EAAEykH,OAAO9oI,QAAO,CAC7D,IAAI6kI,EAAQ,GAAI/iI,EAAO,GACnBoL,EAAImX,EAAEykH,OAAO9oI,OACbqkB,EAAEg7B,UAASnyC,EAAIuU,KAAKC,IAAIxU,EAAGmX,EAAEg7B,UACjC,IAAK,IAAIt/C,EAAI,EAAGA,EAAImN,EAAGnN,IAAK,CACxB,IAAI40C,EAAOtwB,EAAEykH,OAAOv6H,QACpBs2H,EAAM5kI,KAAK00C,GACXqzF,EAAY/nI,KAAK00C,GACjB7yC,EAAK7B,KAAK00C,EAAK7yC,KACnB,CAEAimI,GAAc,EAEU,IAApB1jH,EAAEykH,OAAO9oI,QACTuoI,EAAQ,SAGRR,IAAe1jH,EAAEygH,aACjByD,EAAQ,aAGZ,IAAIxgE,EAAKg7D,EAASgG,EAAUlE,IAC5BiD,EAAQhmI,EAAMimE,EAClB,CACAqhE,GAAe,CA1Bf,CA2BJ,KAAC,8BAEG,OAAO/kH,EAAEykH,OAAO9oI,MACpB,KAAC,+BAEG,OAAO+nI,CACX,KAAC,mCAEG,OAAOC,CACX,KAAC,4BAEG,OAAO3jH,EAAEykH,OAAO9oI,OAAS+nI,IAAe,CAC5C,KAAC,6BAEG1jH,EAAEklH,QAAS,CACf,KAAC,+BAEoB,IAAbllH,EAAEklH,SACNllH,EAAEklH,QAAS,EACXxI,EAAe18G,EAAEw8C,SACrB,IAAC,GAyBL,OAtBAh1D,OAAOq0H,iBAAiB77G,EAAG,CACvB6jH,UAAW,CACP59D,UAAU,EACVr+D,MAAOi9H,EAAY,cAEvBf,YAAa,CACT79D,UAAU,EACVr+D,MAAOi9H,EAAY,gBAEvBd,MAAO,CACH99D,UAAU,EACVr+D,MAAOi9H,EAAY,UAEvBjB,MAAO,CACH39D,UAAU,EACVr+D,MAAOi9H,EAAY,UAEvB5qH,MAAO,CACHgsD,UAAU,EACVr+D,MAAOi9H,EAAY,YAGpB7kH,CACX,CAgDA,SAASmlH,EAAM3B,EAAQxoF,GACnB,OAAOuoF,EAAMC,EAAQ,EAAGxoF,EAC5B,CAwDA,SAASoqF,GAAQ5B,EAAQ/C,EAAazlF,GAClC,OAAOuoF,EAAMC,EAAQ/C,EAAazlF,EACtC,CAiIA,IAAIqqF,GAAWnI,GAVf,SAAgBkB,EAAMkH,EAAM1H,EAAUr5H,GAClCA,EAAW2sF,EAAK3sF,GAChB,IAAIs5H,EAAYb,EAAUY,GAC1B,OAAOqC,EAAe7B,GAAM,SAACx2G,EAAGlsB,EAAGoiI,GAC/BD,EAAUyH,EAAM19G,GAAG,SAAC9iB,EAAKtI,GACrB8oI,EAAO9oI,EACPshI,EAAOh5H,EACX,GACJ,IAAG,SAAAA,GAAG,OAAIP,EAASO,EAAKwgI,EAAK,GACjC,GACgC,GAwChC,SAAS7qB,KAAkB,2BAAX3gC,EAAS,yBAATA,EAAS,gBACrB,IAAIyrD,EAAazrD,EAAUnyE,IAAIq1H,GAC/B,OAAO,WACa,IAAhB,IAAIU,EAAOv9H,KAAK,mBADAmE,EAAI,yBAAJA,EAAI,gBAGpB,IAAIo/D,EAAKp/D,EAAKA,EAAK3I,OAAS,GAc5B,MAbiB,mBAAN+nE,EACPp/D,EAAKg3E,MAEL5X,EAAK28D,IAGTgF,GAASE,EAAYjhI,GAAM,SAACkhI,EAAS7gI,EAAIm5H,GACrCn5H,EAAG20D,MAAMokE,EAAM8H,EAAQnjI,QAAO,SAACyC,GAAqB,2BAAb2gI,EAAQ,iCAARA,EAAQ,kBAC3C3H,EAAOh5H,EAAK2gI,EAChB,IACJ,IACA,SAAC3gI,EAAKwU,GAAO,OAAKoqD,EAAE,cAAC5+D,GAAG,eAAKwU,IAAQ,IAE9BoqD,EAAG08D,EACd,CACJ,CAwCA,SAASsF,KAAiB,2BAANphI,EAAI,yBAAJA,EAAI,gBACpB,OAAOm2G,GAAG,qBAAIn2G,EAAKqkD,WACvB,CAyBA,IAAIg9E,GAAazI,GAHjB,SAAmBkB,EAAM/J,EAAOuJ,EAAUr5H,GACtC,OAAOo5H,EAAUyB,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EACzD,GACoC,GAwCpC,IAAIqhI,GAAgB1I,GAlBpB,SAAqBkB,EAAM/J,EAAOuJ,EAAUr5H,GACxC,IAAIs5H,EAAYb,EAAUY,GAC1B,OAAO+H,GAAWvH,EAAM/J,GAAO,SAACx4G,EAAKiiH,GACjCD,EAAUhiH,GAAK,SAAC/W,GACZ,GAAIA,EAAK,OAAOg5H,EAAOh5H,GAAK,2BADRR,EAAI,iCAAJA,EAAI,kBAExB,OAAOw5H,EAAOh5H,EAAKR,EACvB,GACJ,IAAG,SAACQ,EAAK+gI,GAEL,IADA,IAAI5mI,EAAS,GACJvD,EAAI,EAAGA,EAAImqI,EAAWlqI,OAAQD,IAAK,CACrB,MAAnB,GAAImqI,EAAWnqI,GACXuD,GAAS,EAAAA,GAAOoD,OAAM,gBAAIwjI,EAAWnqI,IAE7C,CAEA,OAAO6I,EAASO,EAAK7F,EACzB,GACJ,GAC0C,GAmG1C,IAAI6mI,GAAW5I,GAHf,SAAgBkB,EAAMR,EAAUr5H,GAC5B,OAAOqhI,GAAcxH,EAAMttE,IAAU8sE,EAAUr5H,EACnD,GACgC,GAyBhC,IAAIwhI,GAAiB7I,GAHrB,SAAsBkB,EAAMR,EAAUr5H,GAClC,OAAOqhI,GAAcxH,EAAM,EAAGR,EAAUr5H,EAC5C,GAC4C,GA4C5C,SAASozE,KAAkB,2BAANrzE,EAAI,yBAAJA,EAAI,gBACrB,OAAO,WAAwC,2BAA3B0hI,EAAW,yBAAXA,EAAW,gBAC3B,IAAIzhI,EAAWyhI,EAAY1qD,MAC3B,OAAO/2E,EAAQ,cAAC,MAAI,OAAKD,GAC7B,CACJ,CAEA,SAAS2hI,GAAc/2C,EAAO4pB,GAC1B,OAAO,SAACykB,EAAQv+H,EAAK6+H,EAAWn6D,GAC5B,IACIwiE,EADAC,GAAa,EAEXvI,EAAWZ,EAAUa,GAC3BN,EAAOv+H,GAAK,SAAC4I,EAAOuiB,EAAG5lB,GACnBq5H,EAASh2H,GAAO,SAAC9C,EAAK7F,GAClB,OAAI6F,IAAe,IAARA,EAAsBP,EAASO,GAEtCoqF,EAAMjwF,KAAYinI,GAClBC,GAAa,EACbD,EAAaptB,GAAU,EAAMlxG,GACtBrD,EAAS,KAAMy5H,SAE1Bz5H,GACJ,GACJ,IAAG,SAAAO,GACC,GAAIA,EAAK,OAAO4+D,EAAG5+D,GACnB4+D,EAAG,KAAMyiE,EAAaD,EAAaptB,GAAU,GACjD,GACJ,CACJ,CA4EA,IAAIstB,GAAWlJ,GAHf,SAAgBkB,EAAMR,EAAUr5H,GAC5B,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAIA,CAAI,IAAE,SAACv0D,EAAK0R,GAAI,OAAKA,CAAI,GAA/CwtH,CAAiDnG,EAAU1B,EAAMR,EAAUr5H,EACtF,GACgC,GA4BhC,IAAI8hI,GAAgBnJ,GAHpB,SAAqBkB,EAAM/J,EAAOuJ,EAAUr5H,GACxC,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAIA,CAAI,IAAE,SAACv0D,EAAK0R,GAAI,OAAKA,CAAI,GAA/CwtH,CAAiD7G,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EAChG,GAC0C,GA2B1C,IAAI+hI,GAAiBpJ,GAJrB,SAAsBkB,EAAMR,EAAUr5H,GAClC,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAIA,CAAI,IAAE,SAACv0D,EAAK0R,GAAI,OAAKA,CAAI,GAA/CwtH,CAAiD7G,EAAY,GAAIhB,EAAMR,EAAUr5H,EAC5F,GAE4C,GAE5C,SAASgiI,GAAYj5H,GACjB,OAAO,SAAC3I,GAAE,2BAAKL,EAAI,iCAAJA,EAAI,yBAAK04H,EAAUr4H,GAAG,aAAIL,EAAI,QAAE,SAACQ,GAE5C,GAAuB,kBAAZiF,QAEP,GAAIjF,EAEIiF,QAAQkQ,OACRlQ,QAAQkQ,MAAMnV,QAEf,GAAIiF,QAAQuD,GAAO,4BATsBk5H,EAAU,iCAAVA,EAAU,kBAUtDA,EAAWrvH,SAAQ,SAAAyQ,GAAC,OAAI7d,QAAQuD,GAAMsa,EAAE,GAC5C,CAER,IAAE,CACN,CA+BA,IAAI6+G,GAAMF,GAAY,OAgDtB,IAAIG,GAAaxJ,GAvBjB,SAAkBU,EAAUv8H,EAAMkD,GAC9BA,EAAWm6H,EAASn6H,GACpB,IAEI+U,EAFAqtH,EAAM3J,EAAUY,GAChBgJ,EAAQ5J,EAAU37H,GAGtB,SAASwD,EAAKC,GACV,GAAIA,EAAK,OAAOP,EAASO,GACzB,IAAY,IAARA,EAAJ,CAA0B,2BAFRR,EAAI,iCAAJA,EAAI,kBAGtBgV,EAAUhV,EACVsiI,EAAK,aAAItiI,EAAI,QAAE4qF,IAFU,CAG7B,CAEA,SAASA,EAAMpqF,EAAK+hI,GAChB,OAAI/hI,EAAYP,EAASO,IACb,IAARA,EACC+hI,OACLF,EAAI9hI,GADeN,EAAQ,cAAC,MAAI,eAAK+U,UADrC,CAGJ,CAEA,OAAO41E,EAAM,MAAM,EACvB,GAEoC,GAuBpC,SAAS43C,GAAQlJ,EAAUv8H,EAAMkD,GAC7B,IAAMqiI,EAAQ5J,EAAU37H,GACxB,OAAOqlI,GAAW9I,GAAU,WAAa,2BAATt5H,EAAI,yBAAJA,EAAI,gBAChC,IAAMo/D,EAAKp/D,EAAKg3E,MAChBsrD,EAAK,aAAItiI,EAAI,QAAE,SAACQ,EAAK+hI,GAAK,OAAKnjE,EAAI5+D,GAAM+hI,EAAM,IACnD,GAAGtiI,EACP,CAEA,SAASwiI,GAAcnJ,GACnB,OAAO,SAACh2H,EAAOpC,EAAOjB,GAAQ,OAAKq5H,EAASh2H,EAAOrD,EAAS,CAChE,CAyGA,IAAIyiI,GAAO9J,GAJX,SAAmBkB,EAAMR,EAAUr5H,GAC/B,OAAOu7H,EAAS1B,EAAM2I,GAAc/J,EAAUY,IAAYr5H,EAC9D,GAE+B,GA0B/B,IAAI0iI,GAAc/J,GAHlB,SAAqBkB,EAAM/J,EAAOuJ,EAAUr5H,GACxC,OAAO66H,EAAY/K,EAAZ+K,CAAmBhB,EAAM2I,GAAc/J,EAAUY,IAAYr5H,EACxE,GACwC,GA4BxC,IAAI2iI,GAAehK,GAHnB,SAAoBkB,EAAMR,EAAUr5H,GAChC,OAAO0iI,GAAY7I,EAAM,EAAGR,EAAUr5H,EAC1C,GACwC,GAqCxC,SAAS4iI,GAAYxiI,GACjB,OAAIi4H,EAAQj4H,GAAYA,EACjB,WAAiC,2BAApBL,EAAI,yBAAJA,EAAI,gBACpB,IAAIC,EAAWD,EAAKg3E,MAChB8rD,GAAO,EACX9iI,EAAK1I,MAAK,WAAkB,2BAAdyrI,EAAS,yBAATA,EAAS,gBACfD,EACA1K,GAAe,kBAAMn4H,EAAQ,aAAI8iI,EAAU,IAE3C9iI,EAAQ,aAAI8iI,EAEpB,IACA1iI,EAAG20D,MAAMn5D,KAAMmE,GACf8iI,GAAO,CACX,CACJ,CAmGA,IAAIE,GAAUpK,GAHd,SAAekB,EAAMR,EAAUr5H,GAC3B,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAKA,CAAI,IAAE,SAAAv0D,GAAG,OAAKA,CAAG,GAAxCk/H,CAA0CnG,EAAU1B,EAAMR,EAAUr5H,EAC/E,GAC8B,GA0B9B,IAAIgjI,GAAerK,GAHnB,SAAoBkB,EAAM/J,EAAOuJ,EAAUr5H,GACvC,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAKA,CAAI,IAAE,SAAAv0D,GAAG,OAAKA,CAAG,GAAxCk/H,CAA0C7G,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EACzF,GACwC,GAyBxC,IAAIijI,GAAgBtK,GAHpB,SAAqBkB,EAAMR,EAAUr5H,GACjC,OAAO0hI,IAAc,SAAA3qE,GAAI,OAAKA,CAAI,IAAE,SAAAv0D,GAAG,OAAKA,CAAG,GAAxCk/H,CAA0ChG,EAAgB7B,EAAMR,EAAUr5H,EACrF,GAC0C,GAE1C,SAASkjI,GAAYlK,EAAQv+H,EAAK4+H,EAAUr5H,GACxC,IAAImjI,EAAc,IAAInsI,MAAMyD,EAAIrD,QAChC4hI,EAAOv+H,GAAK,SAAC4oB,EAAGpiB,EAAOs4H,GACnBF,EAASh2G,GAAG,SAAC9iB,EAAKtI,GACdkrI,EAAYliI,KAAWhJ,EACvBshI,EAAOh5H,EACX,GACJ,IAAG,SAAAA,GACC,GAAIA,EAAK,OAAOP,EAASO,GAEzB,IADA,IAAIwU,EAAU,GACL5d,EAAI,EAAGA,EAAIsD,EAAIrD,OAAQD,IACxBgsI,EAAYhsI,IAAI4d,EAAQ1d,KAAKoD,EAAItD,IAEzC6I,EAAS,KAAM+U,EACnB,GACJ,CAEA,SAASquH,GAAcpK,EAAQa,EAAMR,EAAUr5H,GAC3C,IAAI+U,EAAU,GACdikH,EAAOa,GAAM,SAACx2G,EAAGpiB,EAAOs4H,GACpBF,EAASh2G,GAAG,SAAC9iB,EAAKtI,GACd,GAAIsI,EAAK,OAAOg5H,EAAOh5H,GACnBtI,GACA8c,EAAQ1d,KAAK,CAAC4J,MAAAA,EAAOoC,MAAOggB,IAEhCk2G,EAAOh5H,EACX,GACJ,IAAG,SAAAA,GACC,GAAIA,EAAK,OAAOP,EAASO,GACzBP,EAAS,KAAM+U,EACVD,MAAK,SAACta,EAAGigB,GAAC,OAAKjgB,EAAEyG,MAAQwZ,EAAExZ,KAAK,IAChCmC,KAAI,SAAAnL,GAAC,OAAIA,EAAEoL,KAAK,IACzB,GACJ,CAEA,SAASggI,GAAQrK,EAAQa,EAAMR,EAAUr5H,GAErC,OADaw5H,EAAYK,GAAQqJ,GAAcE,IACjCpK,EAAQa,EAAMpB,EAAUY,GAAWr5H,EACrD,CAyEA,IAAIsjI,GAAW3K,GAHf,SAAiBkB,EAAMR,EAAUr5H,GAC7B,OAAOqjI,GAAQ9H,EAAU1B,EAAMR,EAAUr5H,EAC7C,GACgC,GAyBhC,IAAIujI,GAAgB5K,GAHpB,SAAsBkB,EAAM/J,EAAOuJ,EAAUr5H,GACzC,OAAOqjI,GAAQxI,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EACvD,GAC0C,GAuB1C,IAAIwjI,GAAiB7K,GAHrB,SAAuBkB,EAAMR,EAAUr5H,GACnC,OAAOqjI,GAAQ3H,EAAgB7B,EAAMR,EAAUr5H,EACnD,GAC4C,GA4C5C,IAAIyjI,GAAY9K,GAXhB,SAAiBv4H,EAAIsjI,GACjB,IAAI92C,EAAOutC,EAASuJ,GAChBhH,EAAOjE,EAAUmK,GAAYxiI,IAOjC,OALA,SAASE,EAAKC,GACV,GAAIA,EAAK,OAAOqsF,EAAKrsF,IACT,IAARA,GACJm8H,EAAKp8H,EACT,CACOA,EACX,GACkC,GAmDlC,IAAIqjI,GAAiBhL,GA7BrB,SAAsBkB,EAAM/J,EAAOuJ,EAAUr5H,GACzC,IAAIs5H,EAAYb,EAAUY,GAC1B,OAAO+H,GAAWvH,EAAM/J,GAAO,SAACx4G,EAAKiiH,GACjCD,EAAUhiH,GAAK,SAAC/W,EAAKwE,GACjB,OAAIxE,EAAYg5H,EAAOh5H,GAChBg5H,EAAOh5H,EAAK,CAACwE,IAAAA,EAAKuS,IAAAA,GAC7B,GACJ,IAAG,SAAC/W,EAAK+gI,GAKL,IAJA,IAAI5mI,EAAS,CAAC,EAET2X,EAAkBpP,OAAO+F,UAAzBqJ,eAEIlb,EAAI,EAAGA,EAAImqI,EAAWlqI,OAAQD,IACnC,GAAImqI,EAAWnqI,GAAI,CACf,IAAK4N,EAAOu8H,EAAWnqI,GAAlB4N,IACAuS,EAAOgqH,EAAWnqI,GAAlBmgB,IAEDjF,EAAe7R,KAAK9F,EAAQqK,GAC5BrK,EAAOqK,GAAK1N,KAAKigB,GAEjB5c,EAAOqK,GAAO,CAACuS,EAEvB,CAGJ,OAAOtX,EAASO,EAAK7F,EACzB,GACJ,GAE4C,GA6F5C,SAASkpI,GAAS/J,EAAMR,EAAUr5H,GAC9B,OAAO2jI,GAAe9J,EAAMttE,IAAU8sE,EAAUr5H,EACpD,CAqBA,SAAS6jI,GAAehK,EAAMR,EAAUr5H,GACpC,OAAO2jI,GAAe9J,EAAM,EAAGR,EAAUr5H,EAC7C,CA6BA,IAAIs1C,GAAM0sF,GAAY,OAqCtB,IAAI8B,GAAmBnL,GAbvB,SAAwBn5D,EAAKswD,EAAOuJ,EAAUr5H,GAC1CA,EAAW2sF,EAAK3sF,GAChB,IAAI+jI,EAAS,CAAC,EACVzK,EAAYb,EAAUY,GAC1B,OAAOwB,EAAY/K,EAAZ+K,CAAmBr7D,GAAK,SAACloD,EAAKvS,EAAKzE,GACtCg5H,EAAUhiH,EAAKvS,GAAK,SAACxE,EAAK7F,GACtB,GAAI6F,EAAK,OAAOD,EAAKC,GACrBwjI,EAAOh/H,GAAOrK,EACd4F,EAAKC,EACT,GACJ,IAAG,SAAAA,GAAG,OAAIP,EAASO,EAAKwjI,EAAO,GACnC,GAEgD,GAyIhD,SAASC,GAAUxkE,EAAK65D,EAAUr5H,GAC9B,OAAO8jI,GAAiBtkE,EAAKjT,IAAU8sE,EAAUr5H,EACrD,CAsBA,SAASikI,GAAgBzkE,EAAK65D,EAAUr5H,GACpC,OAAO8jI,GAAiBtkE,EAAK,EAAG65D,EAAUr5H,EAC9C,CA0CA,SAASkkI,GAAQ9jI,GAAqB,IAAjB+jI,EAAS,UAAH,6CAAG,SAAAlsI,GAAC,OAAIA,CAAC,EAC5B8oI,EAAO99H,OAAO+jD,OAAO,MACrBo9E,EAASnhI,OAAO+jD,OAAO,MACvBo7E,EAAM3J,EAAUr4H,GAChBikI,EAAWzM,GAAc,SAAC73H,EAAMC,GAChC,IAAI+E,EAAMo/H,EAAM,qBAAIpkI,IAChBgF,KAAOg8H,EACP5I,GAAe,kBAAMn4H,EAAQ,cAAC,MAAI,eAAK+gI,EAAKh8H,KAAK,IAC1CA,KAAOq/H,EACdA,EAAOr/H,GAAK1N,KAAK2I,IAEjBokI,EAAOr/H,GAAO,CAAC/E,GACfoiI,EAAG,qBAAIriI,GAAI,QAAE,SAACQ,GAAuB,2BAAf0hI,EAAU,iCAAVA,EAAU,kBAEvB1hI,IACDwgI,EAAKh8H,GAAOk9H,GAEhB,IAAIxmH,EAAI2oH,EAAOr/H,UACRq/H,EAAOr/H,GACd,IAAK,IAAI5N,EAAI,EAAGmN,EAAImX,EAAErkB,OAAQD,EAAImN,EAAGnN,IACjCskB,EAAEtkB,GAAE,MAAJskB,EAAC,CAAIlb,GAAG,OAAK0hI,GAErB,KAER,IAGA,OAFAoC,EAAStD,KAAOA,EAChBsD,EAASC,WAAalkI,EACfikI,CACX,CA6CA,IAAIxlE,GAAWqW,EARX8iD,EACW//D,EAAQ4G,SACZk5D,EACIhI,aAEAkI,GAKXsM,GAAW5L,GAAS,SAACK,EAAQiD,EAAOj8H,GACpC,IAAI+U,EAAUykH,EAAYyC,GAAS,GAAK,CAAC,EAEzCjD,EAAOiD,GAAO,SAACS,EAAM33H,EAAKq5H,GACtB3F,EAAUiE,EAAVjE,EAAgB,SAACl4H,GAAmB,2BAAX7F,EAAM,iCAANA,EAAM,kBAC3B,GAAIA,EAAOtD,OAAS,EAAG,OACRsD,EAAM,eAAhBA,EAAM,IACX,CACAqa,EAAQhQ,GAAOrK,EACf0jI,EAAO79H,EACX,GACJ,IAAG,SAAAA,GAAG,OAAIP,EAASO,EAAKwU,EAAQ,GACpC,GAAG,GAiKH,SAASyvH,GAAWvI,EAAOj8H,GACvB,OAAOukI,GAAShJ,EAAUU,EAAOj8H,EACrC,CAsBA,SAASykI,GAAcxI,EAAOnM,EAAO9vH,GACjC,OAAOukI,GAAS1J,EAAY/K,GAAQmM,EAAOj8H,EAC/C,CAgJA,SAAS0kI,GAASzF,EAAQ/C,GACtB,IAAIgD,EAAUzG,EAAUwG,GACxB,OAAOD,GAAM,SAAClpH,EAAOqpD,GACjB+/D,EAAQppH,EAAM,GAAIqpD,EACtB,GAAG+8D,EAAa,EACpB,CAGA,IACMyI,GAAI,YACN,cAAc,eACV/oI,KAAKgpI,KAAO,GACZhpI,KAAKipI,UAAY7qI,OAAO8qI,gBAC5B,CAyFC,OAzFA,4BAED,WACI,OAAOlpI,KAAKgpI,KAAKxtI,MACrB,GAAC,mBAED,WAEI,OADAwE,KAAKgpI,KAAO,GACLhpI,IACX,GAAC,oBAED,SAAOqF,GAGH,IAFA,IAAIyjB,EAEGzjB,EAAQ,GAAK8jI,GAAQnpI,KAAKgpI,KAAK3jI,GAAQrF,KAAKgpI,KAAKlgH,EAAE6sD,GAAOtwE,MAAU,CACvE,IAAI2K,EAAIhQ,KAAKgpI,KAAK3jI,GAClBrF,KAAKgpI,KAAK3jI,GAASrF,KAAKgpI,KAAKlgH,GAC7B9oB,KAAKgpI,KAAKlgH,GAAK9Y,EAEf3K,EAAQyjB,CACZ,CACJ,GAAC,sBAED,SAASzjB,GAGL,IAFA,IAAIqD,GAEIA,EAmEE,GAnEQrD,GAmEX,IAnEqBrF,KAAKgpI,KAAKxtI,SAC9BkN,EAAE,EAAI1I,KAAKgpI,KAAKxtI,QAAU2tI,GAAQnpI,KAAKgpI,KAAKtgI,EAAE,GAAI1I,KAAKgpI,KAAKtgI,MAC5DA,GAAM,IAGNygI,GAAQnpI,KAAKgpI,KAAK3jI,GAAQrF,KAAKgpI,KAAKtgI,MALE,CAS1C,IAAIsH,EAAIhQ,KAAKgpI,KAAK3jI,GAClBrF,KAAKgpI,KAAK3jI,GAASrF,KAAKgpI,KAAKtgI,GAC7B1I,KAAKgpI,KAAKtgI,GAAKsH,EAEf3K,EAAQqD,CACZ,CACJ,GAAC,kBAED,SAAKynC,GACDA,EAAK84F,YAAcjpI,KAAKipI,UACxBjpI,KAAKgpI,KAAKvtI,KAAK00C,GACfnwC,KAAKopI,OAAOppI,KAAKgpI,KAAKxtI,OAAO,EACjC,GAAC,qBAED,SAAQ20C,GACJ,OAAOnwC,KAAKgpI,KAAKvtI,KAAK00C,EAC1B,GAAC,mBAED,WACI,IAAKk5F,GAAL,OAAYrpI,KAAKgpI,KAAI,GAAb,GAMR,OAJAhpI,KAAKgpI,KAAK,GAAKhpI,KAAKgpI,KAAKhpI,KAAKgpI,KAAKxtI,OAAO,GAC1CwE,KAAKgpI,KAAK7tD,MACVn7E,KAAKspI,SAAS,GAEPD,CACX,GAAC,qBAED,WACI,OAAO,OAAIrpI,KACf,GAAC,6BAED,yFACazE,EAAI,EAAC,YAAEA,EAAIyE,KAAKgpI,KAAKxtI,QAAM,gBAChC,OADgC,SAC1BwE,KAAKgpI,KAAKztI,GAAG+B,KAAI,OADW/B,IAAG,+DAG5C,oBAED,SAAQ0nI,GAEJ,IADA,IAAIxkI,EAAI,EACClD,EAAI,EAAGA,EAAIyE,KAAKgpI,KAAKxtI,OAAQD,IAC7B0nI,EAAOjjI,KAAKgpI,KAAKztI,MAClByE,KAAKgpI,KAAKvqI,GAAKuB,KAAKgpI,KAAKztI,GACzBkD,KAIRuB,KAAKgpI,KAAKzjI,OAAO9G,GAEjB,IAAK,IAAIlD,EAAIo6E,GAAO31E,KAAKgpI,KAAKxtI,OAAO,GAAID,GAAK,EAAGA,IAC7CyE,KAAKspI,SAAS/tI,GAGlB,OAAOyE,IACX,KAAC,EA7FK,CAuEJk7H,OAAOC,UA6Bb,SAASxlD,GAAOp6E,GACZ,OAASA,EAAE,GAAI,GAAG,CACtB,CAEA,SAAS4tI,GAAQ1hH,EAAGC,GAChB,OAAID,EAAE63F,WAAa53F,EAAE43F,SACV73F,EAAE63F,SAAW53F,EAAE43F,SAGf73F,EAAEwhH,UAAYvhH,EAAEuhH,SAE/B,CA2BA,SAASM,GAAclG,EAAQ/C,GAE3B,IAAIzgH,EAAIipH,GAAQzF,EAAQ/C,GAGpB7kI,EAEAokB,EAFApkB,KACA+tI,EACA3pH,EADA2pH,UAYJ,SAASC,EAAgBpJ,EAAO/gB,GAC5B,OAAKlkH,MAAMC,QAAQglI,GAGZA,EAAM74H,KAAI,SAAAlK,GAAU,MAAO,CAACA,KAAAA,EAAMgiH,SAAAA,EAAW,IAFzC,CAAChiH,KAAM+iI,EAAO/gB,SAAAA,EAG7B,CAeA,OA7BAz/F,EAAEykH,OAAS,IAAIyE,GACflpH,EAAEwkH,gBAAkB,WAAmBjgI,GACnC,MAAO,CACH9G,KAFkB,EAAJA,KAGdgiH,SAH4B,EAARA,SAIpBl7G,SAAAA,EAER,EAUAyb,EAAEpkB,KAAO,SAAS6B,GAA8B,IAAxBgiH,EAAW,UAAH,6CAAG,EAAGl7G,EAAQ,uCAC1C,OAAO3I,EAAKguI,EAAgBnsI,EAAMgiH,GAAWl7G,EACjD,EAEAyb,EAAE2pH,UAAY,SAASlsI,GAA8B,IAAxBgiH,EAAW,UAAH,6CAAG,EAAGl7G,EAAQ,uCAC/C,OAAOolI,EAAUC,EAAgBnsI,EAAMgiH,GAAWl7G,EACtD,SAGOyb,EAAE3a,eACF2a,EAAE6pH,aAEF7pH,CACX,CA+CA,IAAI8pH,GAAS5M,GATb,SAAcsD,EAAOj8H,GAEjB,GADAA,EAAW2sF,EAAK3sF,IACXhJ,MAAMC,QAAQglI,GAAQ,OAAOj8H,EAAS,IAAI7F,UAAU,yDACzD,IAAK8hI,EAAM7kI,OAAQ,OAAO4I,IAC1B,IAAK,IAAI7I,EAAI,EAAGmN,EAAI23H,EAAM7kI,OAAQD,EAAImN,EAAGnN,IACrCshI,EAAUwD,EAAM9kI,GAAhBshI,CAAoBz4H,EAE5B,GAE4B,GAyB5B,SAASqjC,GAAajpC,EAAO2mI,EAAM1H,EAAUr5H,GACzC,IAAIwlI,GAAW,OAAIprI,GAAOgqD,UAC1B,OAAO08E,GAAS0E,EAAUzE,EAAM1H,EAAUr5H,EAC9C,CAyCA,SAASylI,GAAQrlI,GACb,IAAIgiI,EAAM3J,EAAUr4H,GACpB,OAAOw3H,GAAc,SAAmB73H,EAAM2lI,GAgB1C,OAfA3lI,EAAK1I,MAAK,SAACqe,GACP,IAAIiwH,EAAS,CAAC,EACVjwH,IACAiwH,EAAOjwH,MAAQA,GAClB,2BAJgBojH,EAAM,iCAANA,EAAM,kBAKvB,GAAIA,EAAO1hI,OAAS,EAAE,CAClB,IAAIiM,EAAQy1H,EACRA,EAAO1hI,QAAU,IAChBiM,EAASy1H,EAAM,IAEpB6M,EAAOtiI,MAAQA,CACnB,CACAqiI,EAAgB,KAAMC,EAC1B,IAEOvD,EAAIrtE,MAAMn5D,KAAMmE,EAC3B,GACJ,CAqEA,SAAS6lI,GAAW3J,GAAO,IACnBlnH,EADmB,OAUvB,OARI/d,MAAMC,QAAQglI,GACdlnH,EAAUknH,EAAM74H,IAAIqiI,KAEpB1wH,EAAU,CAAC,EACX9R,OAAOuQ,KAAKyoH,GAAOrpH,SAAQ,SAAA7N,GACvBgQ,EAAQhQ,GAAO0gI,GAAQjlI,KAAK,EAAMy7H,EAAMl3H,GAC5C,KAEGgQ,CACX,CAEA,SAASu1E,GAAO0uC,EAAQv+H,EAAK6+H,EAAWt5H,GACpC,IAAMq5H,EAAWZ,EAAUa,GAC3B,OAAO+J,GAAQrK,EAAQv+H,GAAK,SAAC4I,EAAO87D,GAChCk6D,EAASh2H,GAAO,SAAC9C,EAAKtI,GAClBknE,EAAG5+D,GAAMtI,EACb,GACJ,GAAG+H,EACP,CAmEA,IAAI6lI,GAAWlN,GAHf,SAAmBkB,EAAMR,EAAUr5H,GAC/B,OAAOsqF,GAAOixC,EAAU1B,EAAMR,EAAUr5H,EAC5C,GACkC,GAyBlC,IAAI8lI,GAAgBnN,GAHpB,SAAsBkB,EAAM/J,EAAOuJ,EAAUr5H,GACzC,OAAOsqF,GAAOuwC,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EACtD,GAC0C,GAuB1C,IAAI+lI,GAAiBpN,GAHrB,SAAuBkB,EAAMR,EAAUr5H,GACnC,OAAOsqF,GAAOoxC,EAAgB7B,EAAMR,EAAUr5H,EAClD,GAC4C,GAE5C,SAASgmI,GAAW3iI,GAChB,OAAO,WACH,OAAOA,CACX,CACJ,CA0FA,SAAS4iI,GAAM/8F,EAAMwzF,EAAM18H,GACvB,IAAIskE,EAAU,CACVzsB,MALc,EAMdquF,aAAcF,GALG,IAgBrB,GARI1qG,UAAUlkC,OAAS,GAAqB,oBAAT8xC,GAC/BlpC,EAAW08H,GAAQZ,IACnBY,EAAOxzF,IAEPi9F,GAAW7hE,EAASp7B,GACpBlpC,EAAWA,GAAY87H,KAGP,oBAATY,EACP,MAAM,IAAI5kI,MAAM,qCAGpB,IAAIsuI,EAAQ3N,EAAUiE,GAElBx1B,EAAU,EACd,SAASm/B,IACLD,GAAM,SAAC7lI,GACH,IAAY,IAARA,EACJ,GAAIA,GAAO2mG,IAAY5iC,EAAQzsB,QACI,mBAAvBysB,EAAQgiE,aACZhiE,EAAQgiE,YAAY/lI,IACxBusF,WAAWu5C,EAAc/hE,EAAQ4hE,aAAah/B,EAAU,QACrD,4BANInnG,EAAI,iCAAJA,EAAI,kBAOXC,EAAQ,cAACO,GAAG,OAAKR,GACrB,CACJ,GACJ,CAGA,OADAsmI,IACOrmI,EAAS67H,EACpB,CAEA,SAASsK,GAAWv9G,EAAKhd,GACrB,GAAiB,kBAANA,EACPgd,EAAIivB,OAASjsC,EAAEisC,OA3CD,EA6CdjvB,EAAIs9G,aAAqC,oBAAft6H,EAAEm8F,SACxBn8F,EAAEm8F,SACFi+B,IAAYp6H,EAAEm8F,UA9CD,GAgDjBn/E,EAAI09G,YAAc16H,EAAE06H,gBACjB,IAAiB,kBAAN16H,GAA+B,kBAANA,EAGvC,MAAM,IAAI9T,MAAM,qCAFhB8wB,EAAIivB,OAASjsC,GAnDC,CAsDlB,CACJ,CA+BA,SAAS26H,GAAWr9F,EAAMwzF,GACjBA,IACDA,EAAOxzF,EACPA,EAAO,MAEX,IAAI0vF,EAAS1vF,GAAQA,EAAK0vF,OAAU8D,EAAKtlI,OACrCihI,EAAQqE,KACR9D,GAAS,GAEb,IAAIwN,EAAQ3N,EAAUiE,GACtB,OAAO9E,GAAc,SAAC73H,EAAMC,GAKxB,SAAS88H,EAAO39D,GACZinE,EAAK,qBAAIrmI,GAAI,QAAEo/D,IACnB,CAKA,OAXIp/D,EAAK3I,OAASwhI,EAAQ,GAAiB,MAAZ54H,KAC3BD,EAAK1I,KAAK2I,GACVA,EAAW87H,KAMX5yF,EAAM+8F,GAAM/8F,EAAM4zF,EAAQ98H,GACzBimI,GAAMnJ,EAAQ98H,GAEZA,EAAS67H,EACpB,GACJ,CAuKA,SAAS2K,GAAOvK,EAAOj8H,GACnB,OAAOukI,GAAS7I,EAAgBO,EAAOj8H,EAC3C,CAsGA,IAAIymI,GAAS9N,GAHb,SAAckB,EAAMR,EAAUr5H,GAC1B,OAAO0hI,GAAcp5E,SAAS,SAAA9lD,GAAG,OAAIA,CAAG,GAAjCk/H,CAAmCnG,EAAU1B,EAAMR,EAAUr5H,EACxE,GAC4B,GA2B5B,IAAI0mI,GAAc/N,GAHlB,SAAmBkB,EAAM/J,EAAOuJ,EAAUr5H,GACtC,OAAO0hI,GAAcp5E,SAAS,SAAA9lD,GAAG,OAAIA,CAAG,GAAjCk/H,CAAmC7G,EAAY/K,GAAQ+J,EAAMR,EAAUr5H,EAClF,GACsC,GA0BtC,IAAI2mI,GAAehO,GAHnB,SAAoBkB,EAAMR,EAAUr5H,GAChC,OAAO0hI,GAAcp5E,SAAS,SAAA9lD,GAAG,OAAIA,CAAG,GAAjCk/H,CAAmChG,EAAgB7B,EAAMR,EAAUr5H,EAC9E,GACwC,GAyKxC,IAAI4mI,GAAWjO,GAjBf,SAAiBkB,EAAMR,EAAUr5H,GAC7B,IAAIs5H,EAAYb,EAAUY,GAC1B,OAAOmC,EAAM3B,GAAM,SAACx2G,EAAGk2G,GACnBD,EAAUj2G,GAAG,SAAC9iB,EAAKsmI,GACf,GAAItmI,EAAK,OAAOg5H,EAAOh5H,GACvBg5H,EAAOh5H,EAAK,CAAC8C,MAAOggB,EAAGwjH,SAAAA,GAC3B,GACJ,IAAG,SAACtmI,EAAKwU,GACL,GAAIxU,EAAK,OAAOP,EAASO,GACzBP,EAAS,KAAM+U,EAAQD,KAAKgyH,GAAY1jI,KAAI,SAAAnL,GAAC,OAAIA,EAAEoL,KAAK,IAC5D,IAEA,SAASyjI,EAAW9tH,EAAMlX,GACtB,IAAItH,EAAIwe,EAAK6tH,SAAUpsH,EAAI3Y,EAAM+kI,SACjC,OAAOrsI,EAAIigB,GAAK,EAAIjgB,EAAIigB,EAAI,EAAI,CACpC,CACJ,GACgC,GA2ChC,SAASqrF,GAAQ4yB,EAASqO,EAAchmE,GACpC,IAAI3gE,EAAKq4H,EAAUC,GAEnB,OAAOd,GAAc,SAAC73H,EAAMC,GACxB,IACI4mG,EADAogC,GAAW,EAcfjnI,EAAK1I,MAAK,WACD2vI,IACDhnI,EAAQ,wBACRgnG,aAAaJ,GAErB,IAGAA,EAAQ9Z,YAnBR,WACI,IAAI/jF,EAAO2vH,EAAQ3vH,MAAQ,YACvB2M,EAAS,IAAI5d,MAAM,sBAAwBiR,EAAO,gBACtD2M,EAAMlR,KAAO,YACTu8D,IACArrD,EAAMqrD,KAAOA,GAEjBimE,GAAW,EACXhnI,EAAS0V,EACb,GAUoCqxH,GACpC3mI,EAAE,qBAAIL,GACV,GACJ,CA2BA,SAASknI,GAAW3jE,EAAOwsD,EAAOuJ,EAAUr5H,GACxC,IAAIs5H,EAAYb,EAAUY,GAC1B,OAAO+H,GA3BX,SAAe5vH,GAEX,IADA,IAAI9W,EAAS1D,MAAMwa,GACZA,KACH9W,EAAO8W,GAAQA,EAEnB,OAAO9W,CACX,CAqBsBumG,CAAM39B,GAAQwsD,EAAOwJ,EAAWt5H,EACtD,CAmCA,SAAS63C,GAAOx1C,EAAGg3H,EAAUr5H,GACzB,OAAOinI,GAAW5kI,EAAGkqD,IAAU8sE,EAAUr5H,EAC7C,CAiBA,SAASknI,GAAa7kI,EAAGg3H,EAAUr5H,GAC/B,OAAOinI,GAAW5kI,EAAG,EAAGg3H,EAAUr5H,EACtC,CAyIA,SAASokB,GAAWy1G,EAAMsN,EAAa9N,EAAUr5H,GACzCs7B,UAAUlkC,QAAU,GAA4B,oBAAhB+vI,IAChCnnI,EAAWq5H,EACXA,EAAW8N,EACXA,EAAcnwI,MAAMC,QAAQ4iI,GAAQ,GAAK,CAAC,GAE9C75H,EAAW2sF,EAAK3sF,GAAY87H,KAC5B,IAAIxC,EAAYb,EAAUY,GAK1B,OAHAkC,EAAS1B,GAAM,SAAC5hI,EAAGkL,EAAGg8D,GAClBm6D,EAAU6N,EAAalvI,EAAGkL,EAAGg8D,EACjC,IAAG,SAAA5+D,GAAG,OAAIP,EAASO,EAAK4mI,EAAY,IAC7BnnI,EAAS67H,EACpB,CA0DA,IAAIuL,GAAYzO,GAlBhB,SAAiBsD,EAAOj8H,GACpB,IACItF,EADAgb,EAAQ,KAEZ,OAAOitH,GAAa1G,GAAO,SAACS,EAAM0B,GAC9B3F,EAAUiE,EAAVjE,EAAgB,SAACl4H,GACb,IAAY,IAARA,EAAe,OAAO69H,EAAO79H,GAAK,2BADjBR,EAAI,iCAAJA,EAAI,kBAIpBrF,EADDqF,EAAK3I,OAAS,EACH2I,EAAI,GAENA,EAEb2V,EAAQnV,EACR69H,EAAO79H,EAAM,KAAO,CAAC,EACzB,GACJ,IAAG,kBAAMP,EAAS0V,EAAOhb,EAAO,GACpC,IAiBA,SAAS2sI,GAAUjnI,GACf,OAAO,WACH,OAAQA,EAAGkkI,YAAclkI,GAAE,uBAC/B,CACJ,CA0DA,IAAIknI,GAAW3O,GAtBf,SAAgB77H,EAAMu8H,EAAUr5H,GAC5BA,EAAWm6H,EAASn6H,GACpB,IAAIoiI,EAAM3J,EAAUY,GAChBgJ,EAAQ5J,EAAU37H,GAClBiY,EAAU,GAEd,SAASzU,EAAKC,GACV,GAAIA,EAAK,OAAOP,EAASO,GAAK,2BADZi0H,EAAI,iCAAJA,EAAI,kBAEtBz/G,EAAUy/G,GACE,IAARj0H,GACJ8hI,EAAM13C,EACV,CAEA,SAASA,EAAMpqF,EAAK+hI,GAChB,OAAI/hI,EAAYP,EAASO,IACb,IAARA,EACC+hI,OACLF,EAAI9hI,GADeN,EAAQ,cAAC,MAAI,eAAK+U,UADrC,CAGJ,CAEA,OAAOstH,EAAM13C,EACjB,GACgC,GAyChC,SAAS48C,GAAMzqI,EAAMu8H,EAAUr5H,GAC3B,IAAMqiI,EAAQ5J,EAAU37H,GACxB,OAAOwqI,IAAS,SAACnoE,GAAE,OAAKkjE,GAAM,SAAC9hI,EAAK+hI,GAAK,OAAKnjE,EAAI5+D,GAAM+hI,EAAM,GAAC,GAAEjJ,EAAUr5H,EAC/E,CAiFA,IAAIwnI,GAAc7O,GAtBlB,SAAoBsD,EAAOj8H,GAEvB,GADAA,EAAW2sF,EAAK3sF,IACXhJ,MAAMC,QAAQglI,GAAQ,OAAOj8H,EAAS,IAAIlI,MAAM,8DACrD,IAAKmkI,EAAM7kI,OAAQ,OAAO4I,IAC1B,IAAIynI,EAAY,EAEhB,SAASC,EAAS3nI,GACH04H,EAAUwD,EAAMwL,MACvB,qBAAI1nI,GAAI,QAAEo6H,EAAS75H,KAC3B,CAEA,SAASA,EAAKC,GACV,IAAY,IAARA,EAAJ,CAAyB,2BADPR,EAAI,iCAAJA,EAAI,kBAEtB,GAAIQ,GAAOknI,IAAcxL,EAAM7kI,OAC3B,OAAO4I,EAAQ,cAACO,GAAG,OAAKR,IAE5B2nI,EAAS3nI,EAJgB,CAK7B,CAEA2nI,EAAS,GACb,IA2CIzmI,GAAQ,CACR8zD,MAAAA,EACAgkE,UAAW0C,EACXG,gBAAAA,EACAxD,SAAAA,EACA4D,KAAAA,EACA4B,WAAAA,EACAgD,MAAAA,EACA+G,WAAY9G,GACZM,QAAAA,GACArjI,OAAQyjI,GACRqG,YAAavG,GACbwG,aAAcrG,GACdpuD,SAAAA,GACA00D,OAAQjG,GACRkG,YAAajG,GACbkG,aAAcjG,GACdG,IAAAA,GACAK,QAAAA,GACA0F,SAAU9F,GACVM,KAAAA,GACAyF,UAAWxF,GACXyF,OAAQ5M,EACRV,YAAaK,EACbkN,aAAc1M,EACdr7H,WAAYsiI,GACZC,YAAAA,GACAx7F,MAAO27F,GACPsF,WAAYrF,GACZsF,YAAarF,GACbl/E,OAAQu/E,GACRiF,YAAahF,GACbiF,aAAchF,GACdiF,QAAShF,GACTG,QAAAA,GACA8E,aAAc/E,GACdE,cAAAA,GACAvuF,IAAAA,GACAlyC,IAAKo4H,EACLmN,SAAUvH,GACVwH,UAAWjN,EACXqI,UAAAA,GACA6E,eAAgB/E,GAChBG,gBAAAA,GACAC,QAAAA,GACArlE,SAAAA,GACA0lE,SAAUC,GACVC,cAAAA,GACAU,cAAAA,GACAnG,MAAO0F,GACPh9B,KAAM69B,GACNhrI,OAAQumI,GACRz9F,YAAAA,GACAoiG,QAAAA,GACAG,WAAAA,GACAt7C,OAAQu7C,GACRiD,YAAahD,GACbiD,aAAchD,GACdE,MAAAA,GACAM,UAAAA,GACArwB,IAAAA,GACAswB,OAAAA,GACAzW,aAAcoI,EACd/zH,KAAMqiI,GACNuC,UAAWtC,GACXuC,WAAYtC,GACZuC,OAAQtC,GACR9gC,QAAAA,GACAjuD,MAAAA,GACAovF,WAAAA,GACAC,YAAAA,GACA9iH,UAAAA,GACA+kH,QAAS/B,GACTC,UAAAA,GACAE,MAAAA,GACA6B,UAAW5B,GACX6B,OAAQ/B,GAGRtgE,IAAK+7D,GACLuG,SAAUtG,GACVuG,UAAWtG,GACXzV,IAAKiZ,GACL+C,SAAU9C,GACV+C,UAAW9C,GACX3gF,KAAM67E,GACN6H,UAAW5H,GACX6H,WAAY5H,GACZ6H,QAASrI,GACTsI,aAAcxI,GACdyI,cAAetI,GACf5uH,QAAS6vH,GACTsH,cAAepH,GACfqH,aAActH,GACduH,UAAW1O,EACX2O,gBAAiBxO,EACjByO,eAAgBjP,EAChBkP,OAAQtJ,GACRuJ,MAAOvJ,GACPwJ,MAAOjnG,GACPknG,OAAQjH,GACRkH,YAAajH,GACbkH,aAAcjH,GACdkH,SAAUtS,EACVuS,OAAQrD,GACRsD,SAAUzI,IAGd","sources":["../node_modules/@ethereumjs/rlp/src/index.ts","../node_modules/@ethereumjs/util/src/account.ts","../node_modules/@ethereumjs/util/src/address.ts","../node_modules/@ethereumjs/util/src/asyncEventEmitter.ts","../node_modules/@ethereumjs/util/src/bytes.ts","../node_modules/@ethereumjs/util/src/constants.ts","../node_modules/@ethereumjs/util/src/helpers.ts","../node_modules/@ethereumjs/util/src/index.ts","../node_modules/@ethereumjs/util/src/internal.ts","../node_modules/@ethereumjs/util/src/lock.ts","../node_modules/@ethereumjs/util/src/signature.ts","../node_modules/@ethereumjs/util/src/types.ts","../node_modules/@ethereumjs/util/src/withdrawal.ts","../node_modules/@ethersproject/json-wallets/node_modules/aes-js/index.js","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/ethereumjs-abi-utils.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../node_modules/@metamask/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","../node_modules/@noble/secp256k1/lib/index.js","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/common.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/enums.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/utils.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/fromRpc.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/util.ts","../node_modules/bech32/index.js","../node_modules/crc-32/crc32.js","../node_modules/ethereum-cryptography/keccak.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/_assert.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/_sha2.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/_u64.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/hmac.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/sha256.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/sha3.js","../node_modules/ethereum-cryptography/node_modules/@noble/hashes/utils.js","../node_modules/ethereum-cryptography/secp256k1.js","../node_modules/ethereum-cryptography/utils.js","../node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/@ethersproject/properties/src.ts/_version.ts","../node_modules/@ethersproject/properties/src.ts/index.ts","../node_modules/@ethersproject/abi/src.ts/_version.ts","../node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts","../node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/@ethersproject/abi/src.ts/coders/address.ts","../node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts","../node_modules/@ethersproject/abi/src.ts/coders/array.ts","../node_modules/@ethersproject/abi/src.ts/coders/boolean.ts","../node_modules/@ethersproject/abi/src.ts/coders/bytes.ts","../node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts","../node_modules/@ethersproject/abi/src.ts/coders/null.ts","../node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/@ethersproject/abi/src.ts/coders/number.ts","../node_modules/@ethersproject/abi/src.ts/coders/string.ts","../node_modules/@ethersproject/abi/src.ts/coders/tuple.ts","../node_modules/@ethersproject/abi/src.ts/fragments.ts","../node_modules/@ethersproject/abi/src.ts/abi-coder.ts","../node_modules/@ethersproject/abi/src.ts/interface.ts","../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/contracts/src.ts/_version.ts","../node_modules/@ethersproject/contracts/src.ts/index.ts","../node_modules/@ethersproject/bignumber/src.ts/fixednumber.ts","../node_modules/@ethersproject/hash/src.ts/message.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/sha2/src.ts/types.ts","../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts","../node_modules/@ethersproject/wordlists/src.ts/_version.ts","../node_modules/@ethersproject/wordlists/src.ts/wordlist.ts","../node_modules/@ethersproject/wordlists/src.ts/lang-en.ts","../node_modules/@ethersproject/wordlists/src.ts/browser-wordlists.ts","../node_modules/@ethersproject/hdnode/src.ts/index.ts","../node_modules/@ethersproject/hdnode/src.ts/_version.ts","../node_modules/@ethersproject/random/src.ts/_version.ts","../node_modules/@ethersproject/random/src.ts/browser-random.ts","../node_modules/@ethersproject/json-wallets/src.ts/utils.ts","../node_modules/@ethersproject/json-wallets/src.ts/_version.ts","../node_modules/@ethersproject/json-wallets/src.ts/keystore.ts","../node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts","../node_modules/@ethersproject/json-wallets/src.ts/inspect.ts","../node_modules/@ethersproject/json-wallets/src.ts/index.ts","../node_modules/@ethersproject/wallet/src.ts/_version.ts","../node_modules/@ethersproject/wallet/src.ts/index.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@ethersproject/constants/src.ts/strings.ts","../node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../node_modules/@ethersproject/random/src.ts/shuffle.ts","../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/@ethersproject/solidity/src.ts/_version.ts","../node_modules/@ethersproject/solidity/src.ts/index.ts","../node_modules/@ethersproject/strings/src.ts/idna.ts","../node_modules/@ethersproject/strings/src.ts/bytes32.ts","../node_modules/@ethersproject/units/src.ts/_version.ts","../node_modules/@ethersproject/units/src.ts/index.ts","../node_modules/ethers/src.ts/_version.ts","../node_modules/ethers/src.ts/ethers.ts","../node_modules/ethers/src.ts/index.ts","../node_modules/ethjs-util/lib/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/js-sha3/src/sha3.js","../node_modules/jsonschema/lib/attribute.js","../node_modules/jsonschema/lib/helpers.js","../node_modules/jsonschema/lib/index.js","../node_modules/jsonschema/lib/scan.js","../node_modules/jsonschema/lib/validator.js","../node_modules/querystring/decode.js","../node_modules/querystring/encode.js","../node_modules/querystring/index.js","../node_modules/scrypt-js/scrypt.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/url/node_modules/punycode/punycode.js","../node_modules/url/url.js","../node_modules/url/util.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/async/dist/async.mjs"],"sourcesContent":["export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://eth.wiki/en/fundamentals/rlp\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    for (let i = 0; i < input.length; i++) {\n      output.push(encode(input[i]))\n    }\n    const buf = concatBytes(...output)\n    return concatBytes(encodeLength(buf.length, 192), buf)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n","import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { Point, utils } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      Point.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    Point.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(Point.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(Point.fromPrivateKey(privateKey).toRawBytes(false).slice(1))\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(Point.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account RLP to a normal account RLP\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n","import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { eachSeries } from 'async'\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n\n    eachSeries(\n      listeners.slice(),\n      function (fn: any, next) {\n        let err\n\n        // Support synchronous functions\n        if (fn.length < 2) {\n          try {\n            fn.call(self, data)\n          } catch (e: any) {\n            err = e\n          }\n\n          return next(err)\n        }\n\n        // Async\n        fn.call(self, data, next)\n      },\n      callback\n    )\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n","import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n","import { Buffer } from 'buffer'\nimport { CURVE } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n */\nexport const MAX_INTEGER_BIGINT = BigInt(2) ** BigInt(256) - BigInt(1)\n\nexport const SECP256K1_ORDER = CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n","import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { recoverPublicKey, signSync } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const [signature, recovery] = signSync(msgHash, privateKey, { recovered: true, der: false })\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(recovery + 27)\n      : BigInt(recovery + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const senderPubKey = recoverPublicKey(msgHash, signature, Number(recovery))\n  return Buffer.from(senderPubKey.slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n","import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n","import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in wei 32 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\n\nimport {\n  toBuffer,\n  setLengthRight,\n  setLengthLeft,\n  isHexPrefixed,\n  zeros,\n} from '@ethereumjs/util';\nimport { stripHexPrefix } from 'ethjs-util';\nimport BN from 'bn.js';\nimport { normalize } from './utils';\n\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nexport function solidityPack(types: string[], values: any[]) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  const ret = [];\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    ret.push(solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n}\n\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type) {\n  return type.lastIndexOf(']') === type.length - 1;\n}\n\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type) {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n}\n\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type) {\n  return parseInt(/^\\D+(\\d+)$/u.exec(type)[1], 10);\n}\n\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nexport function parseNumber(arg) {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg)) {\n      return new BN(stripHexPrefix(arg), 16);\n    }\n    return new BN(arg, 10);\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg;\n  }\n  throw new Error('Argument is not a number');\n}\n\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  let size, num;\n  if (isArray(type)) {\n    const subType = type.replace(/\\[.*?\\]/u, '');\n    if (!isArray(subType)) {\n      const arraySize = parseTypeArray(type);\n      if (\n        arraySize !== 'dynamic' &&\n        arraySize !== 0 &&\n        value.length > arraySize\n      ) {\n        throw new Error(`Elements exceed array size: ${arraySize}`);\n      }\n    }\n    const arrayValues = value.map(function (v) {\n      return solidityHexValue(subType, v, 256);\n    });\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value;\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8');\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8;\n    const padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n  } else if (type === 'address') {\n    let bytesize = 20;\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n    return setLengthLeft(toBuffer(value), bytesize);\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof value === 'number') {\n      value = normalize(value);\n    }\n    return setLengthRight(toBuffer(value), size);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    num = parseNumber(value);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    num = parseNumber(value);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  }\n  // FIXME: support all other types\n  throw new Error(`Unsupported or invalid type: ${type}`);\n}\n\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name) {\n  if (name.startsWith('int[')) {\n    return `int256${name.slice(3)}`;\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return `uint256${name.slice(4)}`;\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return `fixed128x128${name.slice(5)}`;\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return `ufixed128x128${name.slice(6)}`;\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n  return name;\n}\n\n/**\n * @param types\n * @param values\n */\nexport function rawEncode(types, values) {\n  const output = [];\n  const data = [];\n\n  let headLength = 0;\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      const size: number | 'dynamic' = parseTypeArray(type);\n      // eslint-disable-next-line no-negated-condition\n      if (size !== 'dynamic') {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    const cur = encodeSingle(type, value);\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(type, arg) {\n  let size, num, ret, i;\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    size = parseTypeArray(type);\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error(`Elements exceed array size: ${size}`);\n    }\n    ret = [];\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    for (i in arg) {\n      if (Object.prototype.hasOwnProperty.call(arg, i)) {\n        ret.push(encodeSingle(type, arg[i]));\n      }\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', arg.length);\n      ret.unshift(length);\n    }\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg);\n\n    ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, zeros(32 - (arg.length % 32))]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof arg === 'number') {\n      arg = normalize(arg);\n    }\n    return setLengthRight(toBuffer(arg), 32);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type);\n\n    num = parseNumber(arg);\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))),\n    );\n  }\n\n  throw new Error(`Unsupported or invalid type: ${type}`);\n}\n\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (\n    type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic'\n  );\n}\n\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type) {\n  const tmp = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n  return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import { isHexString } from 'ethjs-util';\nimport {\n  arrToBufArr,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n} from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { rawEncode, solidityPack } from './ethereumjs-abi-utils';\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n  numberToBuffer,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else if (isHexString(value)) {\n      const prepend = value.length % 2 ? '0' : '';\n      value = Buffer.from(prepend + value.slice(2), 'hex');\n    } else {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else {\n      value = Buffer.from(value ?? '', 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          rawEncode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return arrToBufArr(keccak256(encodeData(primaryType, data, types, version)));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(Buffer.concat(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      solidityPack(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(\n            solidityPack(new Array(typedData.length).fill('string'), schema),\n          ),\n          keccak256(solidityPack(types, data)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nexport function numberToBuffer(num: number) {\n  const hexVal = num.toString(16);\n  const prepend = hexVal.length % 2 ? '0' : '';\n  return Buffer.from(prepend + hexVal, 'hex');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","\"use strict\";\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexports.CURVE = CURVE;\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof exports.utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = exports.utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = exports.utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await exports.utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await exports.utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await exports.utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = exports.utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, exports.utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(exports.utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(exports.utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = normalizePrivateKey(tweak);\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = normalizePrivateKey(tweak);\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return exports.utils.hashToPrivateKey(exports.utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof exports.utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = exports.utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId,\n              chainName: displayName,\n              rpcUrls: [rpcTarget],\n              blockExplorerUrls: [currentChainConfig.blockExplorer],\n              nativeCurrency: {\n                name: currentChainConfig.tickerName,\n                symbol: currentChainConfig.ticker,\n                decimals: currentChainConfig.decimals || 18,\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [\n          {\n            chainId: chainConfig.chainId,\n            chainName: displayName,\n            rpcUrls: [rpcTarget],\n            blockExplorerUrls: [chainConfig.blockExplorer],\n            nativeCurrency: {\n              name: chainConfig.tickerName,\n              symbol: chainConfig.ticker,\n              decimals: chainConfig.decimals || 18,\n            },\n          },\n        ],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { stripHexPrefix } from \"@ethereumjs/util\";\nimport BigNumber from \"bignumber.js\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { isValidAddress } from \"@ethereumjs/util\";\nimport { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport { privateToAddress, stripHexPrefix } from \"@ethereumjs/util\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { BigNumber } from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { Common, Hardfork } from \"@ethereumjs/common\";\nimport { addHexPrefix, stripHexPrefix } from \"@ethereumjs/util\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 18,\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, genesisHash, hardfork } to futher configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as thats the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n    const currHf = hfs[hfIndex]\n\n    const nextHf = hfs\n      .slice(hfIndex + 1)\n      .find(\n        (hf) =>\n          hf.name !== Hardfork.Merge &&\n          ((hf.block !== null && hf.block !== currHf.block) ||\n            (hf.timestamp !== undefined && hf.timestamp !== currHf.timestamp))\n      )\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const { block, ttd } = hf\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof block === 'number' &&\n        block !== 0 &&\n        block !== prevBlock &&\n        (ttd === null || ttd === undefined)\n      ) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (typeof block === 'number') {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (data === null || (data?.block === null && data?.ttd === undefined)) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        typeof hf.block !== 'undefined' &&\n        (hf.block !== null || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n","export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n","export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n","export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n}\n","export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n","import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const { name, config, difficulty, mixHash, gasLimit, coinbase, baseFeePerGas } = json\n  let { extraData, timestamp, nonce } = json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params: any = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block: forkMap[forkMapRev[nameBlock]].isTimestamp === true ? null : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true ? config[nameBlock] : undefined,\n    }))\n    .filter(\n      (fork) => (fork.block !== null && fork.block !== undefined) || fork.timestamp !== undefined\n    )\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // If any of the genesis block require merge, then we need merge just right after genesis\n    const isMergeJustPostGenesis: boolean = params.hardforks\n      .filter((hf: ConfigHardfork) => hf.block === 0)\n      .reduce(\n        (acc: boolean, hf: ConfigHardfork) => acc || forkMap[hf.name]?.postMerge === true,\n        false\n      )\n\n    // Merge hardfork has to be placed before first non-zero block hardfork that is dependent\n    // on merge or first non zero block hardfork if any of genesis hardforks require merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) =>\n        (isMergeJustPostGenesis || forkMap[hf.name]?.postMerge === true) &&\n        (hf.block > 0 || (hf.timestamp ?? 0) > 0)\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig)\n    } else {\n      params.hardforks.push(mergeConfig)\n    }\n  }\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n","import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  MAX_INTEGER,\n  MAX_UINT64,\n  SECP256K1_ORDER_DIV_2,\n  bufferToBigInt,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n  unpadBuffer,\n} from '@ethereumjs/util'\n\nimport { Capability } from './types'\n\nimport type {\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Buffer\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bufferToBigInt(toBuffer(type)))\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = bufferToBigInt(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bufferToBigInt(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bufferToBigInt(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bufferToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bufferToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bufferToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  protected _validateYParity() {\n    const { v } = this\n    if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n   * Reasoning: https://ethereum.stackexchange.com/a/55728\n   */\n  protected _validateHighS() {\n    const { s } = this\n    if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BigInt(0)\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: bigint, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bufferToBigInt(toBuffer(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(serialized.slice(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBuffer(this.maxFeePerGas),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized.slice(1))))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bufferToBigInt(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  txParams.v = toType(txParams.v, TypeOutput.BigInt)\n\n  return txParams\n}\n","export { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport { AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { Transaction } from './legacyTransaction'\nexport { TransactionFactory } from './transactionFactory'\nexport * from './types'\n","import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { Capability } from './types'\nimport { checkMaxInitCodeSize } from './util'\n\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized))) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bufferToBigInt(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainId()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { bufArrToArr } from '@ethereumjs/util'\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = Buffer.from(RLP.encode(bufArrToArr(message))) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BigInt(2) + BigInt(8)\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BigInt(2)\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { bufferToBigInt, toBuffer } from '@ethereumjs/util'\nimport { ethers } from 'ethers'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { normalizeTxParams } from './fromRpc'\nimport { Transaction } from './legacyTransaction'\n\nimport type {\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n  TxData,\n  TxOptions,\n  TypedTransaction,\n} from './types'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = Number(bufferToBigInt(toBuffer(txData.type)))\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - An Ethers JsonRPCProvider\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromEthersProvider(\n    provider: string | ethers.providers.JsonRpcProvider,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov =\n      typeof provider === 'string' ? new ethers.providers.JsonRpcProvider(provider) : provider\n    const txData = await prov.send('eth_getTransactionByHash', [txHash])\n    const normedTx = normalizeTxParams(txData)\n    return TransactionFactory.fromTxData(normedTx, txOptions)\n  }\n}\n","import type { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport type { Transaction } from './legacyTransaction'\nimport type { Common } from '@ethereumjs/common'\nimport type { AddressLike, BigIntLike, BufferLike, PrefixedHexString } from '@ethereumjs/util'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n}\n","import { bufferToHex, setLengthLeft, toBuffer } from '@ethereumjs/util'\n\nimport { isAccessList } from './types'\n\nimport type { AccessList, AccessListBuffer, AccessListItem } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.schnorr = exports.Signature = exports.Point = exports.CURVE = exports.utils = exports.getSharedSecret = exports.recoverPublicKey = exports.verify = exports.signSync = exports.sign = exports.getPublicKey = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp256k1_1 = require(\"@noble/secp256k1\");\nvar secp256k1_2 = require(\"@noble/secp256k1\");\nObject.defineProperty(exports, \"getPublicKey\", { enumerable: true, get: function () { return secp256k1_2.getPublicKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return secp256k1_2.sign; } });\nObject.defineProperty(exports, \"signSync\", { enumerable: true, get: function () { return secp256k1_2.signSync; } });\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return secp256k1_2.verify; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return secp256k1_2.recoverPublicKey; } });\nObject.defineProperty(exports, \"getSharedSecret\", { enumerable: true, get: function () { return secp256k1_2.getSharedSecret; } });\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return secp256k1_2.utils; } });\nObject.defineProperty(exports, \"CURVE\", { enumerable: true, get: function () { return secp256k1_2.CURVE; } });\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return secp256k1_2.Point; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return secp256k1_2.Signature; } });\nObject.defineProperty(exports, \"schnorr\", { enumerable: true, get: function () { return secp256k1_2.schnorr; } });\n// Enable sync API for noble-secp256k1\nsecp256k1_1.utils.hmacSha256Sync = (key, ...messages) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    messages.forEach(msg => h.update(msg));\n    return h.digest();\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","export const version = \"bignumber/5.7.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"properties/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"abi/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"rlp/5.7.0\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"address/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"strings/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment | string, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = (<EventFragment>eventFragment).inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","export const version = \"transactions/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"contracts/5.7.0\";\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter | string, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","export const version = \"hash/5.7.0\";\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export const version = \"sha2/5.7.0\";\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","export const version = \"wordlists/5.7.0\";\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","export const version = \"hdnode/5.7.0\";\n","export const version = \"random/5.7.0\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","export const version = \"json-wallets/5.7.0\";\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","export const version = \"wallet/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\", \"sepolia\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n    sepolia: {\n        chainId: 11155111,\n        name: \"sepolia\",\n        _defaultProvider: ethDefaultProvider(\"sepolia\")\n    },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode('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'));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","export const version = \"web/5.7.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": (dataMatch[1] || \"text/plain\")},\n                body: (dataMatch[2] ? base64Decode(dataMatch[3]): unpercent(dataMatch[3]))\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"providers/5.7.2\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        switch (blockTag) {\n            case \"earliest\": return \"0x0\";\n            case \"latest\": case \"pending\": case \"safe\": case \"finalized\":\n                return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // This is the first filter for this event, so we want to\n                        // restrict events to events that happened no earlier than now\n                        if (event._lastBlockNumber === -2) {\n                            event._lastBlockNumber = blockNumber - 1;\n                        }\n\n                        // Filter from the last *known* event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild, since it is quite\n                        // likely there just haven't been any events to move the lastBlockNumber.\n                        const minFromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        if (minFromBlock > filter.fromBlock) { filter.fromBlock = minFromBlock; }\n\n                        if (filter.fromBlock < 0) { filter.fromBlock = 0; }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                    logger.throwError(\"user rejected transaction\", Logger.errors.ACTION_REJECTED, {\n                        action: \"sendTransaction\",\n                        transaction: tx\n                    });\n                }\n\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n        try {\n            return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"signMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        try {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_legacySignMessage\",\n                    from: address,\n                    messageData: message\n                });\n            }\n            throw error;\n        }\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        try {\n            return await this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        } catch (error) {\n            if (typeof(error.message) === \"string\" && error.message.match(/user denied/i)) {\n                logger.throwError(\"user rejected signing\", Logger.errors.ACTION_REJECTED, {\n                    action: \"_signTypedData\",\n                    from: address,\n                    messageData: { domain: populated.domain, types, value: populated.value }\n                });\n            }\n            throw error;\n        }\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: ((...args: Array<any>) => any) | null;\n    onmessage: ((...args: Array<any>) => any) | null;\n    onerror: ((...args: Array<any>) => any) | null;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arb-goerli.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-goerli\":\n                host = \"opt-goerli.g.alchemy.com/v2/\"\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || typeof(result.message) !== \"string\" || !result.message.match(/^OK/)) {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string | null;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || null);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"maticmum\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            if (method === \"call\" && params.blockTag) {\n                return provider[method](params.transaction, params.blockTag);\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"sepolia\":\n                host = \"sepolia.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-goerli\":\n                host = \"optimism-goerli.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-goerli\":\n                host = \"arbitrum-goerli.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","export const version = \"solidity/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","export const version = \"units/5.7.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n","export const version = \"ethers/5.7.2\";\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport type { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","\"use strict\";\n\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\n\nimport * as ethers from \"./ethers\";\n\ntry {\n    const anyGlobal = (window as any);\n\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n} catch (error) { }\n\nexport { ethers };\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    TypedDataDomain,\n    TypedDataField,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n} from \"./ethers\";\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n","'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n","'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n","\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n","'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dev.json is a file containing a valid json object config for dev environment\n * // dev.json is a file containing a valid json object config for test environment\n * // prod.json is a file containing a valid json object config for prod environment\n * // invalid.json is a file with a malformed json object\n *\n * let configs = {}; //global variable\n * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n *\n * // asynchronous function that reads a json file and parses the contents as json object\n * function parseFile(file, key, callback) {\n *     fs.readFile(file, \"utf8\", function(err, data) {\n *         if (err) return calback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }\n *\n * // Using callbacks\n * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *     } else {\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *         // JSON parse error exception\n *     } else {\n *         console.log(configs);\n *     }\n * });\n *\n * // Using Promises\n * async.forEachOf(validConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n *     // configs is now a map of JSON data, e.g.\n *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n * }).catch( err => {\n *     console.error(err);\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n * }).catch( err => {\n *     console.error(err);\n *     // JSON parse error exception\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * //Error handing\n * async () => {\n *     try {\n *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n *         console.log(configs);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // JSON parse error exception\n *     }\n * }\n *\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callbacks\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.map(fileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(results);\n *     }\n * });\n *\n * // Using Promises\n * async.map(fileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now an array of the file size in bytes for each file, e.g.\n *     // [ 1000, 2000, 3000]\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.map(fileList, getFileSizeInBytes);\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * //Using Callbacks\n * async.auto({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     if (err) {\n *         console.log('err = ', err);\n *     }\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * });\n *\n * //Using Promises\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }).then(results => {\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * }).catch(err => {\n *     console.log('err = ', err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.auto({\n *             get_data: function(callback) {\n *                 // async code to get some data\n *                 callback(null, 'data', 'converted to array');\n *             },\n *             make_folder: function(callback) {\n *                 // async code to create a directory to store a file in\n *                 // this is run at the same time as getting the data\n *                 callback(null, 'folder');\n *             },\n *             write_file: ['get_data', 'make_folder', function(results, callback) {\n *                 // once there is some data and the directory exists,\n *                 // write the data to a file in the directory\n *                 callback(null, 'filename');\n *             }],\n *             email_link: ['write_file', function(results, callback) {\n *                 // once the file is written let's email a link to it...\n *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *             }]\n *         });\n *         console.log('results = ', results);\n *         // results = {\n *         //     get_data: ['data', 'converted to array']\n *         //     make_folder; 'folder',\n *         //     write_file: 'filename'\n *         //     email_link: { file: 'filename', email: 'user@example.com' }\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\n\nfunction stripComments(string) {\n    let stripped = '';\n    let index = 0;\n    let endBlockComment = string.indexOf('*/');\n    while (index < string.length) {\n        if (string[index] === '/' && string[index+1] === '/') {\n            // inline comment\n            let endIndex = string.indexOf('\\n', index);\n            index = (endIndex === -1) ? string.length : endIndex;\n        } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n            // block comment\n            let endIndex = string.indexOf('*/', index);\n            if (endIndex !== -1) {\n                index = endIndex + 2;\n                endBlockComment = string.indexOf('*/', index);\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        } else {\n            stripped += string[index];\n            index++;\n        }\n    }\n    return stripped;\n}\n\nfunction parseParams(func) {\n    const src = stripComments(func.toString());\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = q._createTaskItem(\n            data,\n            rejectOnError ? promiseCallback :\n                (callback || promiseCallback)\n        );\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        _createTaskItem (data, callback) {\n            return {\n                data,\n                callback\n            };\n        },\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * let directoryList = ['dir1','dir2','dir3'];\n * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n *\n * // Using callbacks\n * async.concat(directoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *    }\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *        // [ Error: ENOENT: no such file or directory ]\n *        // since dir4 does not exist\n *    } else {\n *        console.log(results);\n *    }\n * });\n *\n * // Using Promises\n * async.concat(directoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n * }).catch(err => {\n *      console.log(err);\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n * }).catch(err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4 does not exist\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.concat(directoryList, fs.readdir);\n *         console.log(results);\n *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *     } catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n *         console.log(results);\n *     } catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4 does not exist\n *     }\n * }\n *\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        /* istanbul ignore else */\n        if (typeof console === 'object') {\n            /* istanbul ignore else */\n            if (err) {\n                /* istanbul ignore else */\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) { /* istanbul ignore else */\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n *\n * // asynchronous function that deletes a file\n * const deleteFile = function(file, callback) {\n *     fs.unlink(file, callback);\n * };\n *\n * // Using callbacks\n * async.each(fileList, deleteFile, function(err) {\n *     if( err ) {\n *         console.log(err);\n *     } else {\n *         console.log('All files have been deleted successfully');\n *     }\n * });\n *\n * // Error Handling\n * async.each(withMissingFileList, deleteFile, function(err){\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using Promises\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         await async.each(files, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         await async.each(withMissingFileList, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4/file2.txt does not exist\n *         // dir1/file1.txt could have been deleted\n *     }\n * }\n *\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.every(fileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * });\n *\n * async.every(withMissingFileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * });\n *\n * // Using Promises\n * async.every(fileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.every(withMissingFileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.every(fileList, fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.every(withMissingFileList, fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since NOT every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.filter(files, fileExists, function(err, results) {\n *    if(err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *        // results is now an array of the existing files\n *    }\n * });\n *\n * // Using Promises\n * async.filter(files, fileExists)\n * .then(results => {\n *     console.log(results);\n *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *     // results is now an array of the existing files\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.filter(files, fileExists);\n *         console.log(results);\n *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *         // results is now an array of the existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const files = ['dir1/file1.txt','dir2','dir4']\n *\n * // asynchronous function that detects file type as none, file, or directory\n * function detectFile(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(null, 'none');\n *         }\n *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n *     });\n * }\n *\n * //Using callbacks\n * async.groupBy(files, detectFile, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *\t       console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n * });\n *\n * // Using Promises\n * async.groupBy(files, detectFile)\n * .then( result => {\n *     console.log(result);\n *     // {\n *     //     file: [ 'dir1/file1.txt' ],\n *     //     none: [ 'dir4' ],\n *     //     directory: [ 'dir2']\n *     // }\n *     // result is object containing the files grouped by type\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.groupBy(files, detectFile);\n *         console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file3.txt'\n * };\n *\n * const withMissingFileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file4.txt'\n * };\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, key, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n * });\n *\n * // Error handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.mapValues(fileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // result is now a map of file size in bytes for each file, e.g.\n *     // {\n *     //     f1: 1000,\n *     //     f2: 2000,\n *     //     f3: 3000\n *     // }\n * }).catch (err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch (err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/* istanbul ignore file */\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n *\n * //Using Callbacks\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.parallel([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two'] even though\n *         // the second function had a shorter timeout.\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction parallel$1(tasks, callback) {\n    return parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = async.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are three\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * `pushAsync(task, priority, [callback])` - the same as `priorityQueue.push`,\n *   except this returns a promise that rejects if an error occurs.\n * * The `unshift` and `unshiftAsync` methods were removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    var {\n        push,\n        pushAsync\n    } = q;\n\n    q._tasks = new Heap();\n    q._createTaskItem = ({data, priority}, callback) => {\n        return {\n            data,\n            priority,\n            callback\n        };\n    };\n\n    function createDataItems(tasks, priority) {\n        if (!Array.isArray(tasks)) {\n            return {data: tasks, priority};\n        }\n        return tasks.map(data => { return {data, priority}; });\n    }\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback) {\n        return push(createDataItems(data, priority), callback);\n    };\n\n    q.pushAsync = function(data, priority = 0, callback) {\n        return pushAsync(createDataItems(data, priority), callback);\n    };\n\n    // Remove unshift functions\n    delete q.unshift;\n    delete q.unshiftAsync;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.reject(fileList, fileExists, function(err, results) {\n *    // [ 'dir3/file6.txt' ]\n *    // results now equals an array of the non-existing files\n * });\n *\n * // Using Promises\n * async.reject(fileList, fileExists)\n * .then( results => {\n *     console.log(results);\n *     // [ 'dir3/file6.txt' ]\n *     // results now equals an array of the non-existing files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.reject(fileList, fileExists);\n *         console.log(results);\n *         // [ 'dir3/file6.txt' ]\n *         // results now equals an array of the non-existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n *\n * //Using Callbacks\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * });\n *\n * // an example using objects instead of arrays\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.series([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction series(tasks, callback) {\n    return parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * // bigfile.txt is a file that is 251100 bytes in size\n * // mediumfile.txt is a file that is 11000 bytes in size\n * // smallfile.txt is a file that is 121 bytes in size\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) return callback(getFileSizeErr);\n *         callback(null, fileSize);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // descending order\n * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) {\n *             return callback(getFileSizeErr);\n *         }\n *         callback(null, fileSize * -1);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n *         }\n *     }\n * );\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *             // [ Error: ENOENT: no such file or directory ]\n *         } else {\n *             console.log(results);\n *         }\n *     }\n * );\n *\n * // Using Promises\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now the original array of files sorted by\n *     // file size (ascending by default), e.g.\n *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *         // results is now the original array of files sorted by\n *         // file size (ascending by default), e.g.\n *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * // Error handling\n * async () => {\n *     try {\n *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileList, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileList, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let result = await async.transform(fileList, transformFileSize);\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileMap, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileMap, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.transform(fileMap, transformFileSize);\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5); },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * let finished = false\n * async.until(function test(cb) {\n *     cb(null, finished)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         finished = !!body.next\n *         next(err)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel: parallel$1,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel$1 as parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n"],"names":["encode","input","Array","isArray","output","i","length","push","buf","concatBytes","encodeLength","inputBuf","toBytes","safeSlice","start","end","Error","slice","decodeLength","v","parseHexByte","bytesToHex","len","offset","Uint8Array","from","hexLength","numberToHex","firstByte","hexToBytes","decode","stream","inputBytes","decoded","_decode","remainder","data","llength","innerRemainder","d","totalLength","exports","cachedHexes","_v","toString","padStart","uint8a","hex","hexByte","byte","Number","parseInt","isNaN","TypeError","array","j","arrays","reduce","a","arr","result","pad","set","utf8ToBytes","utf","TextEncoder","integer","isHexPrefixed","str","undefined","_0n","BigInt","Account","nonce","balance","storageRoot","constants_1","codeHash","this","_validate","bigIntToUnpaddedBuffer","Buffer","rlp_1","bufArrToArr","raw","equals","accountData","bufferToBigInt","toBuffer","serialized","values","arrToBufArr","fromValuesArray","hexAddress","assertIsString","e","test","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","hash","keccak256","ret","toUpperCase","isValidAddress","toChecksumAddress","assertIsBuffer","salt","initCode","concat","privateKey","secp256k1_1","isValidPrivateKey","publicKey","sanitize","fromHex","pubKey","toRawBytes","fromPrivateKey","publicToAddress","privateToPublic","addr","zeros","bufferToHex","accountBodyFromSlim","body","zeroAddress","emptyUint8Arr","couldBeSlim","accountBody","Address","zero","rangeMin","rangeMax","isBuffer","pubToAddress","privateToAddress","generateAddress","bigIntToBuffer","generateAddress2","AsyncEventEmitter","event","args","callback","self","listeners","_events","fn","eachSeries","next","err","call","listenerCount","listener","g","removeListener","on","unshift","target","beforeOrAfter","index","add","splice","maxListeners","events_1","isSafeInteger","intToHex","padToEven","bytes","allocUnsafe","fill","setLength","msg","right","copy","stripZeros","first","assertIsArray","isHexString","intToBuffer","n","toArray","num","res","asIntN","asUintN","buffer","maxLength","bufferStr","replace","ba","baToJSON","Object","entries","k","map","value","unpadBuffer","buffer_1","__exportStar","enumerable","get","arrayContainsArray","fromAscii","fromUtf8","getBinarySize","getKeys","toAscii","byteLength","superset","subset","some","indexOf","l","substring","code","substr","String","fromCharCode","stringValue","charCodeAt","params","key","allowEmpty","match","Lock","permits","promiseResolverQueue","Promise","resolve","resolver","console","warn","nextResolver","shift","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","signSync","recovered","der","signature","r","s","setLengthLeft","senderPubKey","recoverPublicKey","ss","sig","bufferToInt","homesteadOrLater","rBigInt","sBigInt","message","TypeOutput","outputType","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","Withdrawal","validatorIndex","amount","toBufferArray","bigIntToHex","withdrawalData","indexData","validatorIndexData","addressData","amountData","toType","types_1","address_1","withdrawalArray","fromWithdrawalData","withdrawal","alloc","root","checkInt","checkInts","arrayish","coerceArray","arg","ArrayBuffer","isView","name","prototype","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","text","encodeURI","c","fromBytes","join","convertHex","Hex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","t","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","utf8","padding","pkcs7","padder","strip","_arrayTest","module","version","isNullish","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","encryptedData","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","modVal","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","type","lastIndexOf","parseTypeArray","tmp","parseTypeN","exec","parseNumber","bn_js_1","solidityHexValue","bitsize","size","subType","arraySize","arrayValues","bytesize","startsWith","normalize","setLengthRight","bitLength","toArrayLike","toTwos","elementaryName","encodeSingle","hasOwnProperty","parseTypeNxM","mul","pow","isDynamic","types","headLength","forEach","cur","concatSig","getPublicKeyFor","messageHash","hashPersonalMessage","legacyToBuffer","ecsign","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","includes","encodeField","V3","V4","encodeData","numberToBuffer","prepend","parsedType","typeValuePairs","item","rawEncode","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","has","hashStruct","encodedHashType","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","solidityPack","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","rSig","fromSigned","sSig","vSig","rStr","toUnsigned","sStr","vStr","addHexPrefix","sigParams","fromRpcSig","ecrecover","hexVal","assert","val","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","require","parseHex4Bits","string","lowerBound","parseBase","Math","min","max","left","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","clone","_expand","_normSign","inspect","groupSizes","groupBases","smallMulTo","out","b","lo","carry","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","toJSON","ArrayType","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D2","X","Y","I","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","pack25519","neq25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b10","b11","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","f","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","th","tl","wh","Int32Array","wl","pos","crypto_hash","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","verify","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","crypto","msCrypto","getRandomValues","schnorr","getSharedSecret","getPublicKey","Signature","Point","CURVE","nodeCrypto","_1n","_2n","_3n","_8n","POW_2_256","P","Gx","Gy","beta","weistrass","USE_ENDOMORPHISM","JacobianPoint","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","S1","S2","E","F","X3","H","double","ZERO","HH","HHH","V","negate","scalar","P0","normalizeScalar","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","W","windows","points","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","windowSize","maxNumber","shiftBy","wbits","pr","cached","point","fake","wNAF","f1p","f2p","invZ","invert","iz1","iz2","iz3","ax","ay","zz","toInv","nums","scratch","inverted","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","WeakMap","isCompressed","toHex","numTo32bStr","isValidFieldElement","multiply","Q","aP","multiplyUnsafe","bQ","sum","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","pow2","b22","b44","b88","b176","b220","b223","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","truncateHash","normalizeSignature","R","u1","u2","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","isUint8a","hexToNumber","rBytesLeft","parseDERSignature","fromDER","every","hexes","numTo32b","power","modulo","divNearest","POW_2_128","c1","c2","HmacDrbg","hmacSha256","hmacSha256Sync","hmac","hmacSync","incr","kmdToSig","kBytes","normalizePublicKey","fromCompact","isPub","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","seedArgs","finalizeSig","recSig","opts","assign","canonical","normalizeS","hashed","toCompactRawBytes","privKey","drbg","reseed","generate","fromSignature","privateA","publicB","reseedSync","generateSync","vopts","strict","finalizeSchnorrChallenge","ch","hasEvenY","sinv","SchnorrSignature","initSchnorrSigArgs","auxRand","rand","px","toRawX","initSchnorrNonce","t0h","finalizeSchnorrNonce","k0h","k0","finalizeSchnorrSig","taggedHash","TAGS","aux","challenge","schnorrVerify","initSchnorrVerify","finalizeSchnorrVerify","schnorrVerifySync","taggedHashSync","isValid","verifySync","_setWindowSize","node","web","TAGGED_HASH_PREFIXES","privateAdd","tweak","privateNegate","pointAddScalar","pointMultiply","hashToPrivateKey","bytesLength","randomPrivateKey","sha256","messages","subtle","digest","createHash","importKey","ckey","createHmac","sha256Sync","tag","tagP","tagH","precompute","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","_context","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","_lookupAccounts","_context2","_lookupDefaultAccount","_context3","_sendTransaction","_context4","txParams","_signTransaction","_context5","_ethSign","_context6","extraParams","msgParams","_signTypedData","_context7","_signTypedDataV","_context8","_signTypedDataV2","_context9","_personalSign","_context10","firstParam","secondParam","warning","_encryptionPublicKey","_context11","_decryptMessage","_context12","_fetchPrivateKey","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_getPrivateKey","_processTransaction","sendTransaction","_processSignTransaction","signTransaction","_processEthSignMessage","signMessage","_processPersonalMessage","signPersonalMessage","_processTypedMessage","signTypedData","WalletConnectProvider","_inherits","config","state","_classCallCheck","_this","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","_createClass","_enable","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_switchChain","addChain","_ref2$addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","chainName","rpcUrls","blockExplorerUrls","blockExplorer","nativeCurrency","tickerName","symbol","ticker","decimals","log","configure","lookupNetwork","WalletInitializationError","_get","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","emit","getProviderHandlers","ethMiddleware","engine","JRPCEngine","_createJsonRpcClient","providerFromEngine","updateProviderEngineProxy","_ref3","payload","_this2","_payload$params$","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_fetchEip1159GasEstimates","url","estimates","normalizedEstimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_fetchLegacyGasPriceEstimates","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_typeof","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","errors","_data$domain","signTx","_signTx","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","common","unsignedEthTx","TransactionFactory","signedTx","serialize","getProviderEngineProxy","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","finalChainId","_processTypedMessageV","_processTypedMessageV2","_processEncryptionPublicKey","getEncryptionPublicKey","stripped","buff","bnToHex","inputBn","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_this$chainConfig","hardfork","Hardfork","customChainParams","networkId","defaultHardfork","Common","clonedTxParams","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gas","getDefaultGasLimit","defaultGasLimit","gasLimit","getDefaultGasFees","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","_fetchEthGasPriceEstimate","_getEIP1559Compatibility","latestBlock","supportsEIP1559","baseFeePerGas","_fetchGasFeeEstimateData","isLegacyGasAPICompatible","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","_yield$this$fetchGasF","_gasFeeEstimates$medi","_yield$this$fetchEthG","txMeta","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","to","txCategory","transactionCategory","determineTransactionCategory","_yield$this$determine","analyzeGasUsage","_yield$this$analyzeGa","addGasBuffer","EthereumPrivateKeyProvider","_super","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","_lookupNetwork","network","chainSwitchHandlers","switchChain","_addNewChain","chainParams","_req$params","_updateChain","_req$params2","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref2","_updateAccount","accountParams","_req$params3","wallet_updateAccount","createAccountMiddleware","_eips","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","enums_1","Merge","HARDFORK_CHANGES","hardforks","hf","hardforks_1","_hardfork","setHardfork","eips","setEIPs","_getChainParams","param","existing","blockNumber","td","timestamp","util_1","hfs","filter","ttd","mergeIndex","findIndex","hfIndex","reverse","hfStartIndex","getHardforkByBlockNumber","eip","eips_1","minHF","gteHardfork","requiredEIPs","elem","isActivatedEIP","topic","paramByEIP","paramByHardfork","hfChanges","hfEIPs","valueEIP","eipParams","hfBlock","hardforkBlock","hardforkIsActiveOnBlock","hardfork1","hardfork2","posHf1","posHf2","hardforkGteHardfork","_getHardfork","currHf","nextHf","find","nextHfBlock","nextHardforkBlock","genesisHash","hfBuffer","prevBlock","hfBlockBuffer","inputBuffer","forkhash","forkHash","_calcForkHash","resArray","genesis","bootstrapNodes","dnsNetworks","consensusAlgorithm","create","getPrototypeOf","removeAllListeners","chainParamsOrName","baseChain","standardChainParams","PolygonMainnet","custom","PolygonMumbai","ArbitrumRinkebyTestnet","ArbitrumOne","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","genesisJson","mergeForkIdPostMerge","genesisParams","parseGethGenesis","setForkHashes","initializedChains","_getInitializedChains","Boolean","names","chains","mainnet","ropsten","rinkeby","goerli","sepolia","Chain","ConsensusType","ConsensusAlgorithm","CustomChain","chainstart","homestead","dao","tangerineWhistle","spuriousDragon","byzantium","constantinople","petersburg","istanbul","muirGlacier","berlin","london","shanghai","arrowGlacier","grayGlacier","mergeForkIdTransition","merge","formatNonce","json","difficulty","mixHash","coinbase","extraData","genesisTimestamp","eip155Block","eip158Block","consensus","clique","algorithm","period","blockperiodseconds","epoch","epochlength","ethash","forkMap","Homestead","Dao","TangerineWhistle","SpuriousDragon","Byzantium","Constantinople","Petersburg","Istanbul","MuirGlacier","London","MergeForkIdTransition","postMerge","Shanghai","isTimestamp","forkMapRev","configHardforkNames","nameBlock","fork","Infinity","Chainstart","terminalTotalDifficulty","mergeConfig","isMergeJustPostGenesis","postMergeIndex","parseGethParams","BaseTransaction","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","_type","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","capability","stringError","getBaseFee","isSigned","verifySignature","_errorMsg","txFee","fee","getDataFee","toCreationAddress","txCreationFee","txDataZero","txDataNonZero","cost","dataLength","getSenderPublicKey","hackApplied","supports","EIP155ReplayProtection","getMessageToSign","_processSignature","chainIdBigInt","isSupportedChainId","cannotEqual","postfix","txDataKeys","TRANSACTION_TYPE_BUFFER","FeeMarketEIP1559Transaction","accessList","_getCommon","accessListData","util_2","getAccessListData","AccessListJSON","verifyAccessList","baseTransaction_1","_validateNotArray","_validateYParity","_validateHighS","checkMaxInitCodeSize","freeze","getDataFeeEIP2930","isFrozen","baseFee","prio","maxBase","inclusionFeePerGas","hashMessage","getMessageToVerifySignature","fromTxData","accessListJSON","getAccessListJSON","errorStr","_getSharedErrorPostfix","validateNoLeadingZeroes","AccessListEIP2930Transaction","emptyAccessList","_txParams","Transaction","meetsEIP155","chainIdDoubled","_validateTxV","_getMessageToSign","numSub","txType","legacyTransaction_1","eip2930Transaction_1","eip1559Transaction_1","EIP","fromSerializedTx","fromSerializedData","prov","ethers_1","providers","JsonRpcProvider","send","normedTx","normalizeTxParams","isAccessListBuffer","firstItem","Capability","maxInitCodeSize","AccessLists","bufferAccessList","isAccessList","newAccessList","addressBuffer","storageItems","storageKeys","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","slot","accessListStorageKeyCost","accessListAddressCost","slots","ALPHABET","ALPHABET_MAP","charAt","polymodStep","pre","prefixChk","__decode","LIMIT","lowered","uppered","wordChars","convert","inBits","outBits","maxV","decodeUnsafe","apply","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","factory","CRC32","T0","table","signed_crc_table","TT","T","slice_by_16_tables","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","DO_NOT_EXPORT_CRC","keccak512","keccak384","keccak224","sha3_1","utils_1","wrapHash","keccak_224","keccak_256","keccak_384","keccak_512","bool","lengths","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","SHA2","_assert_js_1","utils_js_1","padOffset","isLE","view","createView","default","take","process","dataView","roundClean","byteOffset","setBigUint64","_32n","_u32_max","setUint32","oview","digestInto","destroy","Hash","toBig","fromBig","U32_MASK64","le","lst","Ah","Uint32Array","Al","Bh","Bl","u64","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","HMAC","_key","iHash","oHash","_cloneInto","_sha2_js_1","Maj","SHA256_K","IV","SHA256_W","SHA256","G","getUint32","W15","W2","s0","rotr","s1","wrapConstructor","shake256","shake128","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_u64_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","idx1","idx0","B0","B1","Th","Tl","curH","curL","suffix","enableXOF","posOut","state32","u32","keccak","bufferOut","writeInto","xofInto","gen","genShake","wrapConstructorWithOpts","dkLen","checkOpts","asyncLoop","nextTick","u8","crypto_1","DataView","iters","tick","cb","ts","Date","now","defaults","obj","hashConstructor","hashC","hashCons","hmac_1","sha256_1","secp256k1_2","__importDefault","__esModule","equalsBytes","bytesToUtf8","assertBytes","assertBool","_assert_1","utils_2","TextDecoder","sliced","webCrypto","nodeRequire","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","form","_checkNormalize","HEX","Logger","writable","logLevel","level","throwArgumentError","_log","levels","DEBUG","INFO","WARNING","makeError","UNKNOWN_ERROR","messageDetails","reason","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","logger","isHexable","toHexString","addSlice","isBytesLike","isBytes","isInteger","arrayify","options","checkSafeUint53","allowMissingPrefix","hexPad","objects","accum","object","zeroPad","HexCharacters","hexlify","hexDataLength","hexDataSlice","endOffset","hexConcat","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","_vs","recoveryParam","yParityAndS","compact","vs","recId","joinSignature","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","constructorGuard","_hex","_isBigNumber","toBN","throwFault","isNegative","anyValue","defineReadOnly","getStatic","resolveProperties","promises","then","all","checkProperties","shallowCopy","opaque","bigint","boolean","_isFrozen","_deepCopy","deepCopy","Description","checkResultErrors","checkErrors","path","childPath","Coder","localName","dynamic","Writer","_data","_dataLength","_padding","writer","_writeData","paddingOffset","BUFFER_OVERRUN","_getValue","Reader","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","_peekBytes","readBytes","sha3","arrayifyInteger","unarrayifyInteger","_encode","child","_decodeChildren","childOffset","consumed","lengthLength","getChecksumAddress","chars","expanded","ibanLookup","safeDigits","log10","LN10","ibanChecksum","checksum","getAddress","isAddress","getIcapAddress","base36","getContractAddress","transaction","getCreate2Address","initCodeHash","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","Utf8ErrorFuncs","ignore","OVERLONG","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","checkNormalize","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","id","AddressCoder","_throwError","writeValue","reader","readValue","AnonymousCoder","coder","defaultValue","coders","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","baseType","uniqueNames","ArrayCoder","defaultChild","checkArgumentCount","BooleanCoder","DynamicBytesCoder","writeBytes","BytesCoder","FixedBytesCoder","NullCoder","NegativeOne","Zero","One","Two","WeiPerEther","MaxUint256","MinInt256","MaxInt256","NumberCoder","signed","maxUintValue","bounds","StringCoder","TupleCoder","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","populate","FormatTypes","sighash","minimal","full","paramTypeArray","RegExp","ParamType","arrayLength","arrayChildren","fromObject","components","_isParamType","format","indexed","comp","allowIndexed","fromString","isParamType","verifyType","originalParam","newNode","parent","allowType","allowParams","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","depth","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","anonymous","inputs","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","comps","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","isFunctionFragment","returns","checkForbidden","fragment","isErrorFragment","regexIdentifier","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getWriter","_getReader","defaultAbiCoder","LogDescription","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","wrapAccessError","property","wrap","Interface","fragments","bucket","deploy","functions","events","abi","nameOrSignatureOrSighash","getSighash","matching","nameOrSignatureOrTopic","topichash","getEventTopic","getFunction","getError","eventFragment","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","topics","encodeTopic","pop","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","decodeEventLog","hexData","errorFragment","_isInterface","ForkEvent","_isForkEvent","Provider","checkAbstract","getBlock","getGasPrice","catch","lastBaseFeePerGas","eventName","_isProvider","allowedTransactionKeys","forwardErrors","Signer","blockTag","_checkProvider","getBalance","getTransactionCount","checkTransaction","estimateGas","populateTransaction","getNetwork","getFeeData","resolveName","__awaiter","hasEip1559","feeData","getChainId","_isSigner","VoidSigner","_fail","equal","zero2","enc","minAssert","minUtils","getNAF","naf","getJSF","jsf","m8","m14","m24","cachedProperty","computer","parseBytes","intFromLE","BaseCurve","conf","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","validate","_fixedNafMul","doubles","_getDoubles","step","nafW","repr","jpoint","mixedAdd","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","decodePoint","pointFromX","encodeCompressed","getX","getY","_getBeta","_hasDoubles","dbl","configurable","ShortCurve","Base","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","y1","y2","len1","_endoSplit","v1","v2","p1","p2","q1","q2","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","zinv","zinv2","pz2","s2","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","require$$0","short","require$$1","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","entropy","entropyEnc","nonceEnc","pers","persEnc","_update","_hmac","kmac","addEnc","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","derive","_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","LN2","slen","toDER","backHalf","EC","nh","keyFromPrivate","keyFromPublic","genKeyPair","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","recoverPubKey","isSecondKey","rInv","getKeyRecoveryParam","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","p0","digestBytes","otherKey","otherKeyPair","computePublicKey","_isSigningKey","rs","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","transactionFields","numeric","computeAddress","recoverAddress","formatNumber","accessSetify","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","fields","RLP","_serializeEip2930","fieldInfo","_serialize","transactionType","_parseEipSignature","recid","rawTransaction","_parse","_parseEip2930","_parseEip1559","customData","ccipReadEnabled","nameOrPromise","resolveAddresses","paramType","reject","contract","overrides","signer","override","check","resolvedAddress","resolved","interface","encodeFunctionData","intrinsic","roValue","leftovers","addContractWait","wait","confirmations","receipt","logs","parsed","parseLog","eventSignature","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","decodeFunctionResult","buildDefault","txRequest","buildSend","getEventTag","RunningEvent","_listeners","once","done","argsCopy","setTimeout","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","isSigner","isProvider","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","buildPopulate","buildEstimate","signatures","_deployedPromise","getCode","contractAddress","deployed","runningEvent","_runningEvents","_normalizeRunningEvent","_wrappedEmits","_checkRunningEvents","prepareEvent","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","isInterface","isIndexed","Contract","ContractFactory","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","evm","getInterface","getMultiplier","formatFixed","fraction","whole","parseFixed","wholeValue","fractionValue","wei","FixedFormat","_multiplier","FixedNumber","_value","_isFixedNumber","_checkFormat","fromValue","hasFraction","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","divUnsafe","parseFloat","isBigNumber","isBigNumberish","fixedFormat","decimal","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","hexPadRight","SupportedAlgorithm","TypedDataEncoder","links","parents","subtypes","primaryTypes","checkCircular","found","subtype","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","_visit","domainFields","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","BaseX","alphabet","_alphabetMap","source","digits","_leader","Base58","ripemd160","sha512","computeHmac","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","DK","block1","U","destPos","Wordlist","locale","mnemonic","wordlist","getWord","getWordIndex","lang","loadWords","langEn","register","wordlists","en","MasterSecret","HardenedBit","getUpperMask","bytes32","base58check","getWordlist","defaultPath","HDNode","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","IL","IR","ki","Ki","_addPoint","srcMnemonic","phrase","fingerprint","_derive","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","mnemonicToSeed","extendedKey","NFKD","entropyBits","checksumMask","indices","remainingBits","checksumBits","isValidMnemonic","getAccountPath","anyGlobal","global","getGlobal","looseArrayify","zpad","getPassword","NFKC","searchPath","currentChild","matchingChild","uuidV4","hasMnemonic","KeystoreAccount","_isKeystoreAccount","_getAccount","aes","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","fromMnemonic","derivePath","pbkdf2Sync","passwordBytes","prfFunc","_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","prf","CrowdsaleAccount","_isCrowdsaleAccount","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","isCrowdsaleWallet","isKeystoreWallet","getJsonWalletAddress","decryptJsonWallet","decryptCrowdsale","scrypt","decryptKeystore","decryptJsonWalletSync","decryptKeystoreSync","Wallet","isSigningKey","_mnemonic","_signingKey","signDigest","_TypedDataEncoder","populated","client","uuidRandom","uuid","derivedKey","macPrefix","cipher","cipherparams","kdfparams","dklen","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","encryptKeystore","verifyMessage","verifyTypedData","AddressZero","HashZero","EtherSymbol","ethDefaultProvider","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","ensAddress","_defaultProvider","classicMordor","networks","unspecified","morden","testnet","kovan","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","textData","atob","btoa","flat","flatDeep","read_compressed_payload","read_payload","u16","symbol_count","skip","pos_payload","read_width","read_buffer","read_bit","FULL","QRTR","MASK","symbols","range","decode_arithmetic","read_ascending","read_deltas","read_member_array","vX","vN","read_counts","read_transposed","read_linear_table","dx","dy","read_zero_terminated_array","ys","j_dy","read_replacement_table","VALID","IGNORED","MAPPED","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","read","branches","valid","fe0f","save","read_emoji_trie","explode_cp","filter_fe0f","cps","cp","ens_normalize_post_check","label","ens_normalize","emoji_filter","emoji","consume_emoji_reversed","fromCodePoint","eaten","saved","stack","Zeros","checkComponent","ensNameSplit","last","isValidName","namehash","dnsEncode","getUrl","href","headers","skipFetchSetup","credentials","redirect","fetchOptions","fetch","response","arrayBuffer","statusCode","status","statusMessage","statusText","staller","duration","bodyify","_fetchData","connection","processFunc","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","allowInsecureAuthentication","authorization","base64Encode","reData","dataMatch","base64Decode","SERVER_ERROR","requestBody","requestMethod","flatHeaders","runningTimeout","timer","promise","TIMEOUT","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","random","serverError","throttleRetry","race","fetchJson","updated","poll","ceiling","interval","retryLimit","oncePoll","onceBlock","Formatter","formats","getDefaultFormats","allowNull","transactionIndex","uint256","creates","transactionRequest","receiptLog","arrayOf","logIndex","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","parentHash","miner","transactions","blockWithTransactions","transactionResponse","filterLog","removed","allowFalsish","author","_difficulty","_block","parseTransaction","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","serializeTopics","isForkEvent","getTime","PollableEvents","Event","_lastBlockNumber","_inflight","coinInfos","p2pkh","p2sh","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","Resolver","formatter","_supportsEip2544","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","bech32","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","tokenOwner","metadataUrl","metadata","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","defaultFormatter","nextPollId","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","NETWORK_ERROR","urls","errorMessages","errorMessage","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","previousBlockNumber","eventBlockNumber","runner","minFromBlock","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","mined","getBlockWithTransactions","ti","waitForTransaction","cancelled","replacement","_wrapTransaction","unref","_getBlockTag","position","expectedHash","returnedHash","confirms","signedTransaction","hexTx","redirects","txSender","urlsOffset","urlsLength","urlsData","callbackSelector","ccipReadFetch","ccipResult","_call","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","currentName","_getResolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","errorGas","spelunk","requireData","checkError","responseText","getResult","getLowerCase","JsonRpcSigner","addressOrIndex","UncheckedJsonRpcSigner","_index","fromAddress","estimate","hexlifyTransaction","ACTION_REJECTED","action","sendUncheckedTransaction","messageData","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","onerror","close","StaticJsonRpcProvider","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getHost","projectSecret","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","weight","getProcessFunc","configs","_highestBlockNumber","tally","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","inflightWeight","backend","waiting","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationId","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","regexBytes","regexNumber","regexArray","_pack","tight","hashKeccak256","hashSha256","createTable","createRangeTable","matchMap","ranges","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","codesTableB2","codepoint","_nameprepTableB2","formatBytes32String","parseBytes32String","commify","formatted","formatUnits","unitName","parseUnits","formatEther","parseEther","ether","_ethers","ethers","toUtf8","INPUT_ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","versions","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","define","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","methodName","newMethodName","reset","finalized","blockCount","outputBlocks","extraBytes","notString","lastByteIndex","encodeString","strs","paddingBytes","finalize","c0","c3","c4","c5","c6","c7","c9","b16","b17","b18","b19","b20","b21","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b45","b46","b47","b48","b49","helpers","ValidatorResult","SchemaError","attribute","validators","testSchemaNoThrow","throwAll","validateSchema","Function","getEnumerableProperty","propertyIsEnumerable","testAdditionalProperty","addError","preValidateProperty","makeChild","importErrors","testType","list","$id","anyOf","inner","title","nestedErrors","allOf","oneOf","if","isSchema","ifValid","else","propertyNames","subschema","prop","patternProperties","pattern","regexp","_e","minProperties","maxProperties","additionalItems","contains","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validateMultipleOfOrDivisbleBy","validationType","validationArgument","instanceDecimals","getDecimalPlaces","divisorDecimals","maxDecimals","testArrays","deepCompareStrict","multipleOf","divisibleBy","disableFormat","isFormat","minLength","hsp","minItems","maxItems","uniqueItems","dependencies","dep","childContext","propertyPath","not","disallow","notTypes","schemaId","uri","ValidationError","makeSuffix","throwFirst","stringizer","ValidatorResultError","captureStackTrace","detail","validatorType","SchemaContext","schemas","propertyName","FORMAT_REGEXPS","regex","ipv4","validator","customFormats","deepMerger","dst","deepMerge","copyist","src","copyistWithDeepMerge","pathEncoder","encodeURIComponent","aKeys","bKeys","objectGetPath","decodeURIComponent","encodePath","decimalPlaces","decimalParts","Validator","SchemaScanResult","scan","urilib","ref","scanSchema","baseuri","$ref","resolvedUri","ourBase","scanArray","extends","scanObject","definitions","unresolvedRefs","attributes","shouldResolve","addSchema","ourUri","addSubSchemaArray","addSubSchema","addSubSchemaObject","setSchemas","getSchema","urn","sch","schemaobj","schemaTraverser","superResolve","switchSchema","subctx","skipAttributes","ignoreProperties","validatorErr","allowUnknownAttributes","rewrite","document","isFinite","date","any","qs","sep","maxKeys","kstr","vstr","idx","stringifyPrimitive","ks","MAX_VALUE","bytesLeft","bitLenHi","bitLenLo","numZeros","PBKDF2_HMAC_SHA256_OneIter","innerLen","outerKey","dk","incrementCounter","blockmix_salsa8","BY","Yi","_X","arraycopy","blockxor","salsa20_8","srcPos","checkBufferish","ensureInteger","_scrypt","i1","Bi","XY","totalOps","currentOp","lastPercent10","stop","i0","limit","setImmediate","incrementalSMix","steps","percent10","lib","lastProgress","progress","syncScrypt","util","validateBase64","unescape","escape","nodeType","freeGlobal","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","stringFromCharCode","RangeError","mapDomain","ucs2decode","extra","ucs2encode","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","Url","protocol","slashes","auth","port","hostname","search","pathname","urlParse","relative","resolveObject","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","hostlessProtocol","slashedProtocol","querystring","parseQueryString","slashesDenoteHost","isObject","queryIndex","splitter","uSplit","rest","simplePath","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","toASCII","ae","esc","qm","rel","tkeys","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","isNullOrUndefined","authInHost","isNull","hasTrailingSlash","up","isAbsolute","arrayLikeToArray","Symbol","iterator","ownKeys","enumerableOnly","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","callArgs","initialParams","hasQueueMicrotask","queueMicrotask","hasSetImmediate","hasNextTick","fallback","defer","setImmediate$1","asyncify","isAsync","handlePromise","invokeCallback","toStringTag","wrapAsync","asyncFn","awaitify","arity","awaitable","cbArgs","applyEach","eachfn","fns","go","that","_asyncMap","iteratee","_iteratee","iterCb","isArrayLike","breakLoop","wrapper","callFn","createIterator","coll","createArrayIterator","getIterator","createES2015Iterator","okeys","createObjectIterator","onlyOnce","asyncEachOfLimit","generator","canceled","awaiting","running","replenish","iterDone","iterateeCallback","handleError","eachOfLimit","asyncIterator","isAsyncIterable","nextElem","looping","eachOfLimit$2","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","eachOf$1","map$1","applyEach$1","eachOfSeries$1","mapSeries$1","applyEachSeries","PROMISE_SYMBOL","promiseCallback","rej","auto","tasks","concurrency","numTasks","runningTasks","hasError","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","taskComplete","taskFn","runTask","processQueue","taskName","getDependents","remainingDependencies","dependencyName","taskListeners","dependent","checkForDeadlocks","FN_ARGS","ARROW_FN_ARGS","FN_ARG_SPLIT","FN_ARG","autoInject","newTasks","fnIsAsync","hasNoDeps","newTask","endBlockComment","endIndex","stripComments","taskCb","newArgs","DLL","head","tail","insertBefore","setInitial","insertAfter","removeLink","testFn","curr","dll","queue","worker","_worker","numRunning","workersList","drain","saturated","unsaturated","empty","handler","ev","trigger","processingScheduled","_insert","insertAtFront","rejectOnError","started","_createTaskItem","_tasks","_createCB","idle","_maybeDrain","eventMethod","handleAndRemove","isProcessing","datum","remove","paused","cargo","cargo$1","reduce$1","memo","_functions","newargs","nextargs","compose","mapLimit$1","concatLimit$1","mapResults","concat$1","concatSeries$1","ignoredArgs","_createTester","testResult","testPassed","detect$1","detectLimit$1","detectSeries$1","consoleFunc","resultArgs","dir","doWhilst$1","_fn","_test","truth","doUntil","_withoutIndex","each","eachLimit$2","eachSeries$1","ensureAsync","sync","innerArgs","every$1","everyLimit$1","everySeries$1","filterArray","truthValues","filterGeneric","_filter","filter$1","filterLimit$1","filterSeries$1","forever$1","errback","groupByLimit$1","groupBy","groupBySeries","mapValuesLimit$1","newObj","mapValues","mapValuesSeries","memoize","hasher","queues","memoized","unmemoized","parallel","parallel$1","parallelLimit","queue$1","Heap","heap","pushCount","MIN_SAFE_INTEGER","smaller","percUp","top","percDown","priorityQueue","pushAsync","createDataItems","unshiftAsync","race$1","reversed","reflect","reflectCallback","retVal","reflectAll","reject$2","rejectLimit$1","rejectSeries$1","constant$1","retry","intervalFunc","parseTimes","_task","retryAttempt","errorFilter","retryable","series","some$1","someLimit$1","someSeries$1","sortBy$1","criteria","comparator","milliseconds","timedOut","timesLimit","timesSeries","accumulator","tryEach$1","unmemoize","whilst$1","until","waterfall$1","taskIndex","nextTask","cargoQueue","concatLimit","concatSeries","detect","detectLimit","detectSeries","doWhilst","eachLimit","eachOf","eachOfSeries","everyLimit","everySeries","filterLimit","filterSeries","forever","groupByLimit","mapLimit","mapSeries","mapValuesLimit","rejectLimit","rejectSeries","someLimit","someSeries","sortBy","tryEach","waterfall","whilst","allLimit","allSeries","anyLimit","anySeries","findLimit","findSeries","flatMap","flatMapLimit","flatMapSeries","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","during","doDuring"],"sourceRoot":""}